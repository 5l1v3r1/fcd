// file autogenerated by interpiler
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-variable"
#include <llvm/IR/Constants.h>
#include "x86.h"

x86::x86(llvm::LLVMContext& context, llvm::Module& module)
	: context(context), module(module), function(nullptr), builder(context)
{
	make_types();
	make_globals();
}

void x86::make_types()
{
	types.resize(60);
	using namespace llvm;
	types[0] = IntegerType::get(context, 64);
	StructType* struct_1 = StructType::create(context, "struct.x86_config");
	types[1] = struct_1;
	struct_types["struct.x86_config"] = struct_1;
	types[2] = IntegerType::get(context, 32);
	ArrayRef<Type*> struct_type_params_1 = { types[0], types[2], types[2], types[2], };
	struct_1->setBody(struct_type_params_1, false);
	types[3] = PointerType::get(types[1], 0);
	StructType* struct_4 = StructType::create(context, "struct.x86_regs");
	types[4] = struct_4;
	struct_types["struct.x86_regs"] = struct_4;
	StructType* struct_5 = StructType::create(context, "union.x86_qword_reg");
	types[5] = struct_5;
	struct_types["union.x86_qword_reg"] = struct_5;
	ArrayRef<Type*> struct_type_params_5 = { types[0], };
	struct_5->setBody(struct_type_params_5, false);
	StructType* struct_6 = StructType::create(context, "union.x86_mm_reg");
	types[6] = struct_6;
	struct_types["union.x86_mm_reg"] = struct_6;
	types[7] = Type::getDoubleTy(context);
	types[8] = ArrayType::get(types[7], 8);
	ArrayRef<Type*> struct_type_params_6 = { types[8], };
	struct_6->setBody(struct_type_params_6, false);
	ArrayRef<Type*> struct_type_params_4 = { types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[5], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], types[6], };
	struct_4->setBody(struct_type_params_4, false);
	types[9] = PointerType::get(types[4], 0);
	StructType* struct_10 = StructType::create(context, "struct.x86_flags_reg");
	types[10] = struct_10;
	struct_types["struct.x86_flags_reg"] = struct_10;
	types[11] = IntegerType::get(context, 8);
	ArrayRef<Type*> struct_type_params_10 = { types[11], types[11], types[11], types[11], types[11], types[11], };
	struct_10->setBody(struct_type_params_10, false);
	types[12] = PointerType::get(types[10], 0);
	StructType* struct_13 = StructType::create(context, "struct.cs_x86");
	types[13] = struct_13;
	struct_types["struct.cs_x86"] = struct_13;
	types[14] = ArrayType::get(types[11], 4);
	StructType* struct_15 = StructType::create(context, "struct.cs_x86_op");
	types[15] = struct_15;
	struct_types["struct.cs_x86_op"] = struct_15;
	StructType* struct_16 = StructType::create(context, "union.anon");
	types[16] = struct_16;
	struct_types["union.anon"] = struct_16;
	StructType* struct_17 = StructType::create(context, "struct.x86_op_mem");
	types[17] = struct_17;
	struct_types["struct.x86_op_mem"] = struct_17;
	ArrayRef<Type*> struct_type_params_17 = { types[2], types[2], types[2], types[2], types[0], };
	struct_17->setBody(struct_type_params_17, false);
	ArrayRef<Type*> struct_type_params_16 = { types[17], };
	struct_16->setBody(struct_type_params_16, false);
	ArrayRef<Type*> struct_type_params_15 = { types[2], types[16], types[11], types[2], types[11], };
	struct_15->setBody(struct_type_params_15, false);
	types[18] = ArrayType::get(types[15], 8);
	ArrayRef<Type*> struct_type_params_13 = { types[14], types[14], types[11], types[11], types[11], types[11], types[2], types[2], types[11], types[2], types[2], types[2], types[11], types[2], types[11], types[18], };
	struct_13->setBody(struct_type_params_13, false);
	types[19] = PointerType::get(types[13], 0);
	types[20] = PointerType::get(types[11], 0);
	ArrayRef<Type*> func_type_params_21 = { types[9], types[20], };
	types[21] = Type::getVoidTy(context);
	types[22] = FunctionType::get(types[21], func_type_params_21, false);
	StructType* struct_23 = StructType::create(context, "struct.x86_reg_info");
	types[23] = struct_23;
	struct_types["struct.x86_reg_info"] = struct_23;
	StructType* struct_24 = StructType::create(context, "union.anon.8");
	types[24] = struct_24;
	struct_types["union.anon.8"] = struct_24;
	StructType* struct_25 = StructType::create(context, "struct.x86_reg_selector");
	types[25] = struct_25;
	struct_types["struct.x86_reg_selector"] = struct_25;
	ArrayRef<Type*> struct_type_params_25 = { types[0], types[0], types[0], types[0], };
	struct_25->setBody(struct_type_params_25, false);
	ArrayRef<Type*> struct_type_params_24 = { types[25], };
	struct_24->setBody(struct_type_params_24, false);
	ArrayRef<Type*> struct_type_params_23 = { types[24], types[0], types[2], };
	struct_23->setBody(struct_type_params_23, false);
	types[26] = ArrayType::get(types[23], 234);
	types[27] = PointerType::get(types[0], 0);
	types[28] = PointerType::get(types[2], 0);
	types[29] = IntegerType::get(context, 16);
	types[30] = PointerType::get(types[29], 0);
	ArrayRef<Type*> func_type_params_31 = { types[20], };
	types[31] = FunctionType::get(types[21], func_type_params_31, false);
	types[32] = ArrayType::get(types[11], 45);
	ArrayRef<Type*> func_type_params_33 = { types[0], types[0], };
	types[33] = FunctionType::get(types[0], func_type_params_33, false);
	types[34] = ArrayType::get(types[11], 54);
	types[35] = ArrayType::get(types[11], 49);
	ArrayRef<Type*> func_type_params_36 = { types[0], types[0], };
	StructType* struct_36 = StructType::create(context);
	types[36] = struct_36;
	types[37] = IntegerType::get(context, 1);
	ArrayRef<Type*> struct_type_params_36 = { types[0], types[37], };
	struct_36->setBody(struct_type_params_36, false);
	types[38] = FunctionType::get(types[36], func_type_params_36, false);
	types[39] = ArrayType::get(types[11], 25);
	ArrayRef<Type*> func_type_params_40 = { types[0], };
	types[40] = FunctionType::get(types[0], func_type_params_40, false);
	ArrayRef<Type*> func_type_params_41 = { types[0], types[0], types[0], };
	types[41] = FunctionType::get(types[21], func_type_params_41, false);
	types[42] = ArrayType::get(types[11], 56);
	types[43] = ArrayType::get(types[11], 5);
	types[44] = ArrayType::get(types[11], 6);
	types[45] = ArrayType::get(types[11], 9);
	types[46] = ArrayType::get(types[11], 7);
	types[47] = ArrayType::get(types[11], 11);
	types[48] = ArrayType::get(types[11], 16);
	types[49] = ArrayType::get(types[11], 8);
	types[50] = ArrayType::get(types[11], 3);
	ArrayRef<Type*> func_type_params_51 = { types[3], types[9], types[0], };
	types[51] = FunctionType::get(types[21], func_type_params_51, false);
	types[52] = ArrayType::get(types[11], 10);
	types[53] = ArrayType::get(types[11], 44);
	types[54] = ArrayType::get(types[11], 12);
	ArrayRef<Type*> func_type_params_55 = { types[3], types[9], };
	types[55] = FunctionType::get(types[21], func_type_params_55, false);
	types[56] = ArrayType::get(types[11], 17);
	types[57] = ArrayType::get(types[11], 15);
	types[58] = ArrayType::get(types[11], 13);
	types[59] = ArrayType::get(types[11], 14);
}

void x86::make_globals()
{
	globals.resize(1257);
	using namespace llvm;
	globals[0] = Function::Create(cast<FunctionType>(types[22]), GlobalValue::ExternalLinkage, "x86_unimplemented", &module);
	Constant* var1_string = ConstantDataArray::getString(context, "aaa", true);
	GlobalVariable* cv1 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var1_string, ".str", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1->setUnnamedAddr(true);
	globals[1] = cv1;
	
	Constant* var2_string = ConstantDataArray::getString(context, "aad", true);
	GlobalVariable* cv2 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var2_string, ".str1", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv2->setUnnamedAddr(true);
	globals[2] = cv2;
	
	Constant* var3_string = ConstantDataArray::getString(context, "aam", true);
	GlobalVariable* cv3 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var3_string, ".str2", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv3->setUnnamedAddr(true);
	globals[3] = cv3;
	
	Constant* var4_string = ConstantDataArray::getString(context, "aas", true);
	GlobalVariable* cv4 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var4_string, ".str3", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv4->setUnnamedAddr(true);
	globals[4] = cv4;
	
	Constant* var5_item0_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item0_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item0_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item0_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item0_item0_item0_elems { var5_item0_item0_item0_item0_int, var5_item0_item0_item0_item1_int, var5_item0_item0_item0_item2_int, var5_item0_item0_item0_item3_int, };
	Constant* var5_item0_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item0_item0_item0_elems);
	ArrayRef<Constant*> var5_item0_item0_elems { var5_item0_item0_item0_struct, };
	Constant* var5_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item0_item0_elems);
	Constant* var5_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item0_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item0_elems { var5_item0_item0_struct, var5_item0_item1_int, var5_item0_item2_int, };
	Constant* var5_item0_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item0_elems);
	Constant* var5_item1_item0_item0_item0_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item1_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item1_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item1_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item1_item0_item0_elems { var5_item1_item0_item0_item0_int, var5_item1_item0_item0_item1_int, var5_item1_item0_item0_item2_int, var5_item1_item0_item0_item3_int, };
	Constant* var5_item1_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item1_item0_item0_elems);
	ArrayRef<Constant*> var5_item1_item0_elems { var5_item1_item0_item0_struct, };
	Constant* var5_item1_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item1_item0_elems);
	Constant* var5_item1_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item1_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item1_elems { var5_item1_item0_struct, var5_item1_item1_int, var5_item1_item2_int, };
	Constant* var5_item1_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item1_elems);
	Constant* var5_item2_item0_item0_item0_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item2_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item2_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item2_item0_item0_item3_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Constant*> var5_item2_item0_item0_elems { var5_item2_item0_item0_item0_int, var5_item2_item0_item0_item1_int, var5_item2_item0_item0_item2_int, var5_item2_item0_item0_item3_int, };
	Constant* var5_item2_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item2_item0_item0_elems);
	ArrayRef<Constant*> var5_item2_item0_elems { var5_item2_item0_item0_struct, };
	Constant* var5_item2_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item2_item0_elems);
	Constant* var5_item2_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item2_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item2_elems { var5_item2_item0_struct, var5_item2_item1_int, var5_item2_item2_int, };
	Constant* var5_item2_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item2_elems);
	Constant* var5_item3_item0_item0_item0_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item3_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item3_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item3_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item3_item0_item0_elems { var5_item3_item0_item0_item0_int, var5_item3_item0_item0_item1_int, var5_item3_item0_item0_item2_int, var5_item3_item0_item0_item3_int, };
	Constant* var5_item3_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item3_item0_item0_elems);
	ArrayRef<Constant*> var5_item3_item0_elems { var5_item3_item0_item0_struct, };
	Constant* var5_item3_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item3_item0_elems);
	Constant* var5_item3_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item3_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item3_elems { var5_item3_item0_struct, var5_item3_item1_int, var5_item3_item2_int, };
	Constant* var5_item3_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item3_elems);
	Constant* var5_item4_item0_item0_item0_int = ConstantInt::get(types[0], 16u);
	Constant* var5_item4_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item4_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item4_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item4_item0_item0_elems { var5_item4_item0_item0_item0_int, var5_item4_item0_item0_item1_int, var5_item4_item0_item0_item2_int, var5_item4_item0_item0_item3_int, };
	Constant* var5_item4_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item4_item0_item0_elems);
	ArrayRef<Constant*> var5_item4_item0_elems { var5_item4_item0_item0_struct, };
	Constant* var5_item4_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item4_item0_elems);
	Constant* var5_item4_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item4_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item4_elems { var5_item4_item0_struct, var5_item4_item1_int, var5_item4_item2_int, };
	Constant* var5_item4_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item4_elems);
	Constant* var5_item5_item0_item0_item0_int = ConstantInt::get(types[0], 16u);
	Constant* var5_item5_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item5_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item5_item0_item0_item3_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Constant*> var5_item5_item0_item0_elems { var5_item5_item0_item0_item0_int, var5_item5_item0_item0_item1_int, var5_item5_item0_item0_item2_int, var5_item5_item0_item0_item3_int, };
	Constant* var5_item5_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item5_item0_item0_elems);
	ArrayRef<Constant*> var5_item5_item0_elems { var5_item5_item0_item0_struct, };
	Constant* var5_item5_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item5_item0_elems);
	Constant* var5_item5_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item5_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item5_elems { var5_item5_item0_struct, var5_item5_item1_int, var5_item5_item2_int, };
	Constant* var5_item5_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item5_elems);
	Constant* var5_item6_item0_item0_item0_int = ConstantInt::get(types[0], 56u);
	Constant* var5_item6_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item6_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item6_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item6_item0_item0_elems { var5_item6_item0_item0_item0_int, var5_item6_item0_item0_item1_int, var5_item6_item0_item0_item2_int, var5_item6_item0_item0_item3_int, };
	Constant* var5_item6_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item6_item0_item0_elems);
	ArrayRef<Constant*> var5_item6_item0_elems { var5_item6_item0_item0_struct, };
	Constant* var5_item6_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item6_item0_elems);
	Constant* var5_item6_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item6_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item6_elems { var5_item6_item0_struct, var5_item6_item1_int, var5_item6_item2_int, };
	Constant* var5_item6_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item6_elems);
	Constant* var5_item7_item0_item0_item0_int = ConstantInt::get(types[0], 56u);
	Constant* var5_item7_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item7_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item7_item0_item0_item3_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Constant*> var5_item7_item0_item0_elems { var5_item7_item0_item0_item0_int, var5_item7_item0_item0_item1_int, var5_item7_item0_item0_item2_int, var5_item7_item0_item0_item3_int, };
	Constant* var5_item7_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item7_item0_item0_elems);
	ArrayRef<Constant*> var5_item7_item0_elems { var5_item7_item0_item0_struct, };
	Constant* var5_item7_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item7_item0_elems);
	Constant* var5_item7_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item7_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item7_elems { var5_item7_item0_struct, var5_item7_item1_int, var5_item7_item2_int, };
	Constant* var5_item7_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item7_elems);
	Constant* var5_item8_item0_item0_item0_int = ConstantInt::get(types[0], 16u);
	Constant* var5_item8_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item8_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item8_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item8_item0_item0_elems { var5_item8_item0_item0_item0_int, var5_item8_item0_item0_item1_int, var5_item8_item0_item0_item2_int, var5_item8_item0_item0_item3_int, };
	Constant* var5_item8_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item8_item0_item0_elems);
	ArrayRef<Constant*> var5_item8_item0_elems { var5_item8_item0_item0_struct, };
	Constant* var5_item8_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item8_item0_elems);
	Constant* var5_item8_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item8_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item8_elems { var5_item8_item0_struct, var5_item8_item1_int, var5_item8_item2_int, };
	Constant* var5_item8_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item8_elems);
	Constant* var5_item9_item0_item0_item0_int = ConstantInt::get(types[0], 24u);
	Constant* var5_item9_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item9_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item9_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item9_item0_item0_elems { var5_item9_item0_item0_item0_int, var5_item9_item0_item0_item1_int, var5_item9_item0_item0_item2_int, var5_item9_item0_item0_item3_int, };
	Constant* var5_item9_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item9_item0_item0_elems);
	ArrayRef<Constant*> var5_item9_item0_elems { var5_item9_item0_item0_struct, };
	Constant* var5_item9_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item9_item0_elems);
	Constant* var5_item9_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item9_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item9_elems { var5_item9_item0_struct, var5_item9_item1_int, var5_item9_item2_int, };
	Constant* var5_item9_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item9_elems);
	Constant* var5_item10_item0_item0_item0_int = ConstantInt::get(types[0], 24u);
	Constant* var5_item10_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item10_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item10_item0_item0_item3_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Constant*> var5_item10_item0_item0_elems { var5_item10_item0_item0_item0_int, var5_item10_item0_item0_item1_int, var5_item10_item0_item0_item2_int, var5_item10_item0_item0_item3_int, };
	Constant* var5_item10_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item10_item0_item0_elems);
	ArrayRef<Constant*> var5_item10_item0_elems { var5_item10_item0_item0_struct, };
	Constant* var5_item10_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item10_item0_elems);
	Constant* var5_item10_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item10_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item10_elems { var5_item10_item0_struct, var5_item10_item1_int, var5_item10_item2_int, };
	Constant* var5_item10_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item10_elems);
	Constant* var5_item11_item0_item0_item0_int = ConstantInt::get(types[0], 144u);
	Constant* var5_item11_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item11_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item11_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item11_item0_item0_elems { var5_item11_item0_item0_item0_int, var5_item11_item0_item0_item1_int, var5_item11_item0_item0_item2_int, var5_item11_item0_item0_item3_int, };
	Constant* var5_item11_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item11_item0_item0_elems);
	ArrayRef<Constant*> var5_item11_item0_elems { var5_item11_item0_item0_struct, };
	Constant* var5_item11_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item11_item0_elems);
	Constant* var5_item11_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item11_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item11_elems { var5_item11_item0_struct, var5_item11_item1_int, var5_item11_item2_int, };
	Constant* var5_item11_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item11_elems);
	Constant* var5_item12_item0_item0_item0_int = ConstantInt::get(types[0], 24u);
	Constant* var5_item12_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item12_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item12_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item12_item0_item0_elems { var5_item12_item0_item0_item0_int, var5_item12_item0_item0_item1_int, var5_item12_item0_item0_item2_int, var5_item12_item0_item0_item3_int, };
	Constant* var5_item12_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item12_item0_item0_elems);
	ArrayRef<Constant*> var5_item12_item0_elems { var5_item12_item0_item0_struct, };
	Constant* var5_item12_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item12_item0_elems);
	Constant* var5_item12_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item12_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item12_elems { var5_item12_item0_struct, var5_item12_item1_int, var5_item12_item2_int, };
	Constant* var5_item12_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item12_elems);
	Constant* var5_item13_item0_item0_item0_int = ConstantInt::get(types[0], 32u);
	Constant* var5_item13_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item13_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item13_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item13_item0_item0_elems { var5_item13_item0_item0_item0_int, var5_item13_item0_item0_item1_int, var5_item13_item0_item0_item2_int, var5_item13_item0_item0_item3_int, };
	Constant* var5_item13_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item13_item0_item0_elems);
	ArrayRef<Constant*> var5_item13_item0_elems { var5_item13_item0_item0_struct, };
	Constant* var5_item13_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item13_item0_elems);
	Constant* var5_item13_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item13_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item13_elems { var5_item13_item0_struct, var5_item13_item1_int, var5_item13_item2_int, };
	Constant* var5_item13_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item13_elems);
	Constant* var5_item14_item0_item0_item0_int = ConstantInt::get(types[0], 48u);
	Constant* var5_item14_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item14_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item14_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item14_item0_item0_elems { var5_item14_item0_item0_item0_int, var5_item14_item0_item0_item1_int, var5_item14_item0_item0_item2_int, var5_item14_item0_item0_item3_int, };
	Constant* var5_item14_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item14_item0_item0_elems);
	ArrayRef<Constant*> var5_item14_item0_elems { var5_item14_item0_item0_struct, };
	Constant* var5_item14_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item14_item0_elems);
	Constant* var5_item14_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item14_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item14_elems { var5_item14_item0_struct, var5_item14_item1_int, var5_item14_item2_int, };
	Constant* var5_item14_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item14_elems);
	Constant* var5_item15_item0_item0_item0_int = ConstantInt::get(types[0], 48u);
	Constant* var5_item15_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item15_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item15_item0_item0_item3_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Constant*> var5_item15_item0_item0_elems { var5_item15_item0_item0_item0_int, var5_item15_item0_item0_item1_int, var5_item15_item0_item0_item2_int, var5_item15_item0_item0_item3_int, };
	Constant* var5_item15_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item15_item0_item0_elems);
	ArrayRef<Constant*> var5_item15_item0_elems { var5_item15_item0_item0_struct, };
	Constant* var5_item15_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item15_item0_elems);
	Constant* var5_item15_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item15_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item15_elems { var5_item15_item0_struct, var5_item15_item1_int, var5_item15_item2_int, };
	Constant* var5_item15_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item15_elems);
	Constant* var5_item16_item0_item0_item0_int = ConstantInt::get(types[0], 32u);
	Constant* var5_item16_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item16_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item16_item0_item0_item3_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Constant*> var5_item16_item0_item0_elems { var5_item16_item0_item0_item0_int, var5_item16_item0_item0_item1_int, var5_item16_item0_item0_item2_int, var5_item16_item0_item0_item3_int, };
	Constant* var5_item16_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item16_item0_item0_elems);
	ArrayRef<Constant*> var5_item16_item0_elems { var5_item16_item0_item0_struct, };
	Constant* var5_item16_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item16_item0_elems);
	Constant* var5_item16_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item16_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item16_elems { var5_item16_item0_struct, var5_item16_item1_int, var5_item16_item2_int, };
	Constant* var5_item16_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item16_elems);
	Constant* var5_item17_item0_item0_item0_int = ConstantInt::get(types[0], 152u);
	Constant* var5_item17_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item17_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item17_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item17_item0_item0_elems { var5_item17_item0_item0_item0_int, var5_item17_item0_item0_item1_int, var5_item17_item0_item0_item2_int, var5_item17_item0_item0_item3_int, };
	Constant* var5_item17_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item17_item0_item0_elems);
	ArrayRef<Constant*> var5_item17_item0_elems { var5_item17_item0_item0_struct, };
	Constant* var5_item17_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item17_item0_elems);
	Constant* var5_item17_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item17_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item17_elems { var5_item17_item0_struct, var5_item17_item1_int, var5_item17_item2_int, };
	Constant* var5_item17_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item17_elems);
	Constant* var5_item18_item0_item0_item0_int = ConstantInt::get(types[0], 32u);
	Constant* var5_item18_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item18_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item18_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item18_item0_item0_elems { var5_item18_item0_item0_item0_int, var5_item18_item0_item0_item1_int, var5_item18_item0_item0_item2_int, var5_item18_item0_item0_item3_int, };
	Constant* var5_item18_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item18_item0_item0_elems);
	ArrayRef<Constant*> var5_item18_item0_elems { var5_item18_item0_item0_struct, };
	Constant* var5_item18_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item18_item0_elems);
	Constant* var5_item18_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item18_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item18_elems { var5_item18_item0_struct, var5_item18_item1_int, var5_item18_item2_int, };
	Constant* var5_item18_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item18_elems);
	Constant* var5_item19_item0_item0_item0_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item19_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item19_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item19_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item19_item0_item0_elems { var5_item19_item0_item0_item0_int, var5_item19_item0_item0_item1_int, var5_item19_item0_item0_item2_int, var5_item19_item0_item0_item3_int, };
	Constant* var5_item19_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item19_item0_item0_elems);
	ArrayRef<Constant*> var5_item19_item0_elems { var5_item19_item0_item0_struct, };
	Constant* var5_item19_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item19_item0_elems);
	Constant* var5_item19_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item19_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item19_elems { var5_item19_item0_struct, var5_item19_item1_int, var5_item19_item2_int, };
	Constant* var5_item19_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item19_elems);
	Constant* var5_item20_item0_item0_item0_int = ConstantInt::get(types[0], 56u);
	Constant* var5_item20_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item20_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item20_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item20_item0_item0_elems { var5_item20_item0_item0_item0_int, var5_item20_item0_item0_item1_int, var5_item20_item0_item0_item2_int, var5_item20_item0_item0_item3_int, };
	Constant* var5_item20_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item20_item0_item0_elems);
	ArrayRef<Constant*> var5_item20_item0_elems { var5_item20_item0_item0_struct, };
	Constant* var5_item20_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item20_item0_elems);
	Constant* var5_item20_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item20_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item20_elems { var5_item20_item0_struct, var5_item20_item1_int, var5_item20_item2_int, };
	Constant* var5_item20_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item20_elems);
	Constant* var5_item21_item0_item0_item0_int = ConstantInt::get(types[0], 16u);
	Constant* var5_item21_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item21_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item21_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item21_item0_item0_elems { var5_item21_item0_item0_item0_int, var5_item21_item0_item0_item1_int, var5_item21_item0_item0_item2_int, var5_item21_item0_item0_item3_int, };
	Constant* var5_item21_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item21_item0_item0_elems);
	ArrayRef<Constant*> var5_item21_item0_elems { var5_item21_item0_item0_struct, };
	Constant* var5_item21_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item21_item0_elems);
	Constant* var5_item21_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item21_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item21_elems { var5_item21_item0_struct, var5_item21_item1_int, var5_item21_item2_int, };
	Constant* var5_item21_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item21_elems);
	Constant* var5_item22_item0_item0_item0_int = ConstantInt::get(types[0], 24u);
	Constant* var5_item22_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item22_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item22_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item22_item0_item0_elems { var5_item22_item0_item0_item0_int, var5_item22_item0_item0_item1_int, var5_item22_item0_item0_item2_int, var5_item22_item0_item0_item3_int, };
	Constant* var5_item22_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item22_item0_item0_elems);
	ArrayRef<Constant*> var5_item22_item0_elems { var5_item22_item0_item0_struct, };
	Constant* var5_item22_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item22_item0_elems);
	Constant* var5_item22_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item22_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item22_elems { var5_item22_item0_struct, var5_item22_item1_int, var5_item22_item2_int, };
	Constant* var5_item22_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item22_elems);
	Constant* var5_item23_item0_item0_item0_int = ConstantInt::get(types[0], 48u);
	Constant* var5_item23_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item23_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item23_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item23_item0_item0_elems { var5_item23_item0_item0_item0_int, var5_item23_item0_item0_item1_int, var5_item23_item0_item0_item2_int, var5_item23_item0_item0_item3_int, };
	Constant* var5_item23_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item23_item0_item0_elems);
	ArrayRef<Constant*> var5_item23_item0_elems { var5_item23_item0_item0_struct, };
	Constant* var5_item23_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item23_item0_elems);
	Constant* var5_item23_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item23_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item23_elems { var5_item23_item0_struct, var5_item23_item1_int, var5_item23_item2_int, };
	Constant* var5_item23_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item23_elems);
	Constant* var5_item24_item0_item0_item0_int = ConstantInt::get(types[0], 32u);
	Constant* var5_item24_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item24_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item24_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item24_item0_item0_elems { var5_item24_item0_item0_item0_int, var5_item24_item0_item0_item1_int, var5_item24_item0_item0_item2_int, var5_item24_item0_item0_item3_int, };
	Constant* var5_item24_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item24_item0_item0_elems);
	ArrayRef<Constant*> var5_item24_item0_elems { var5_item24_item0_item0_struct, };
	Constant* var5_item24_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item24_item0_elems);
	Constant* var5_item24_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item24_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item24_elems { var5_item24_item0_struct, var5_item24_item1_int, var5_item24_item2_int, };
	Constant* var5_item24_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item24_elems);
	Constant* var5_item25_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item25_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item25_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item25_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item25_item0_item0_elems { var5_item25_item0_item0_item0_int, var5_item25_item0_item0_item1_int, var5_item25_item0_item0_item2_int, var5_item25_item0_item0_item3_int, };
	Constant* var5_item25_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item25_item0_item0_elems);
	ArrayRef<Constant*> var5_item25_item0_elems { var5_item25_item0_item0_struct, };
	Constant* var5_item25_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item25_item0_elems);
	Constant* var5_item25_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item25_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item25_elems { var5_item25_item0_struct, var5_item25_item1_int, var5_item25_item2_int, };
	Constant* var5_item25_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item25_elems);
	Constant* var5_item26_item0_item0_item0_int = ConstantInt::get(types[0], 72u);
	Constant* var5_item26_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item26_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item26_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item26_item0_item0_elems { var5_item26_item0_item0_item0_int, var5_item26_item0_item0_item1_int, var5_item26_item0_item0_item2_int, var5_item26_item0_item0_item3_int, };
	Constant* var5_item26_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item26_item0_item0_elems);
	ArrayRef<Constant*> var5_item26_item0_elems { var5_item26_item0_item0_struct, };
	Constant* var5_item26_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item26_item0_elems);
	Constant* var5_item26_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item26_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item26_elems { var5_item26_item0_struct, var5_item26_item1_int, var5_item26_item2_int, };
	Constant* var5_item26_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item26_elems);
	Constant* var5_item27_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item27_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item27_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item27_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item27_item0_item0_elems { var5_item27_item0_item0_item0_int, var5_item27_item0_item0_item1_int, var5_item27_item0_item0_item2_int, var5_item27_item0_item0_item3_int, };
	Constant* var5_item27_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item27_item0_item0_elems);
	ArrayRef<Constant*> var5_item27_item0_elems { var5_item27_item0_item0_struct, };
	Constant* var5_item27_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item27_item0_elems);
	Constant* var5_item27_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item27_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item27_elems { var5_item27_item0_struct, var5_item27_item1_int, var5_item27_item2_int, };
	Constant* var5_item27_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item27_elems);
	Constant* var5_item28_item0_item0_item0_int = ConstantInt::get(types[0], 160u);
	Constant* var5_item28_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item28_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item28_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item28_item0_item0_elems { var5_item28_item0_item0_item0_int, var5_item28_item0_item0_item1_int, var5_item28_item0_item0_item2_int, var5_item28_item0_item0_item3_int, };
	Constant* var5_item28_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item28_item0_item0_elems);
	ArrayRef<Constant*> var5_item28_item0_elems { var5_item28_item0_item0_struct, };
	Constant* var5_item28_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item28_item0_elems);
	Constant* var5_item28_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item28_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item28_elems { var5_item28_item0_struct, var5_item28_item1_int, var5_item28_item2_int, };
	Constant* var5_item28_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item28_elems);
	Constant* var5_item29_item0_item0_item0_int = ConstantInt::get(types[0], 40u);
	Constant* var5_item29_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item29_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item29_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item29_item0_item0_elems { var5_item29_item0_item0_item0_int, var5_item29_item0_item0_item1_int, var5_item29_item0_item0_item2_int, var5_item29_item0_item0_item3_int, };
	Constant* var5_item29_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item29_item0_item0_elems);
	ArrayRef<Constant*> var5_item29_item0_elems { var5_item29_item0_item0_struct, };
	Constant* var5_item29_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item29_item0_elems);
	Constant* var5_item29_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item29_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item29_elems { var5_item29_item0_struct, var5_item29_item1_int, var5_item29_item2_int, };
	Constant* var5_item29_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item29_elems);
	Constant* var5_item30_item0_item0_item0_int = ConstantInt::get(types[0], 64u);
	Constant* var5_item30_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item30_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item30_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item30_item0_item0_elems { var5_item30_item0_item0_item0_int, var5_item30_item0_item0_item1_int, var5_item30_item0_item0_item2_int, var5_item30_item0_item0_item3_int, };
	Constant* var5_item30_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item30_item0_item0_elems);
	ArrayRef<Constant*> var5_item30_item0_elems { var5_item30_item0_item0_struct, };
	Constant* var5_item30_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item30_item0_elems);
	Constant* var5_item30_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item30_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item30_elems { var5_item30_item0_struct, var5_item30_item1_int, var5_item30_item2_int, };
	Constant* var5_item30_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item30_elems);
	Constant* var5_item31_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item31_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item31_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item31_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item31_item0_item0_elems { var5_item31_item0_item0_item0_int, var5_item31_item0_item0_item1_int, var5_item31_item0_item0_item2_int, var5_item31_item0_item0_item3_int, };
	Constant* var5_item31_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item31_item0_item0_elems);
	ArrayRef<Constant*> var5_item31_item0_elems { var5_item31_item0_item0_struct, };
	Constant* var5_item31_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item31_item0_elems);
	Constant* var5_item31_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item31_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item31_elems { var5_item31_item0_struct, var5_item31_item1_int, var5_item31_item2_int, };
	Constant* var5_item31_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item31_elems);
	Constant* var5_item32_item0_item0_item0_int = ConstantInt::get(types[0], 168u);
	Constant* var5_item32_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item32_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item32_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item32_item0_item0_elems { var5_item32_item0_item0_item0_int, var5_item32_item0_item0_item1_int, var5_item32_item0_item0_item2_int, var5_item32_item0_item0_item3_int, };
	Constant* var5_item32_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item32_item0_item0_elems);
	ArrayRef<Constant*> var5_item32_item0_elems { var5_item32_item0_item0_struct, };
	Constant* var5_item32_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item32_item0_elems);
	Constant* var5_item32_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item32_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item32_elems { var5_item32_item0_struct, var5_item32_item1_int, var5_item32_item2_int, };
	Constant* var5_item32_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item32_elems);
	Constant* var5_item33_item0_item0_item0_int = ConstantInt::get(types[0], 176u);
	Constant* var5_item33_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item33_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item33_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item33_item0_item0_elems { var5_item33_item0_item0_item0_int, var5_item33_item0_item0_item1_int, var5_item33_item0_item0_item2_int, var5_item33_item0_item0_item3_int, };
	Constant* var5_item33_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item33_item0_item0_elems);
	ArrayRef<Constant*> var5_item33_item0_elems { var5_item33_item0_item0_struct, };
	Constant* var5_item33_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item33_item0_elems);
	Constant* var5_item33_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item33_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item33_elems { var5_item33_item0_struct, var5_item33_item1_int, var5_item33_item2_int, };
	Constant* var5_item33_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item33_elems);
	Constant* var5_item34_item0_item0_item0_int = ConstantInt::get(types[0], 72u);
	Constant* var5_item34_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item34_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item34_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item34_item0_item0_elems { var5_item34_item0_item0_item0_int, var5_item34_item0_item0_item1_int, var5_item34_item0_item0_item2_int, var5_item34_item0_item0_item3_int, };
	Constant* var5_item34_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item34_item0_item0_elems);
	ArrayRef<Constant*> var5_item34_item0_elems { var5_item34_item0_item0_struct, };
	Constant* var5_item34_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item34_item0_elems);
	Constant* var5_item34_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item34_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item34_elems { var5_item34_item0_struct, var5_item34_item1_int, var5_item34_item2_int, };
	Constant* var5_item34_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item34_elems);
	Constant* var5_item35_item0_item0_item0_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item35_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item35_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item35_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item35_item0_item0_elems { var5_item35_item0_item0_item0_int, var5_item35_item0_item0_item1_int, var5_item35_item0_item0_item2_int, var5_item35_item0_item0_item3_int, };
	Constant* var5_item35_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item35_item0_item0_elems);
	ArrayRef<Constant*> var5_item35_item0_elems { var5_item35_item0_item0_struct, };
	Constant* var5_item35_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item35_item0_elems);
	Constant* var5_item35_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item35_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item35_elems { var5_item35_item0_struct, var5_item35_item1_int, var5_item35_item2_int, };
	Constant* var5_item35_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item35_elems);
	Constant* var5_item36_item0_item0_item0_int = ConstantInt::get(types[0], 56u);
	Constant* var5_item36_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item36_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item36_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item36_item0_item0_elems { var5_item36_item0_item0_item0_int, var5_item36_item0_item0_item1_int, var5_item36_item0_item0_item2_int, var5_item36_item0_item0_item3_int, };
	Constant* var5_item36_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item36_item0_item0_elems);
	ArrayRef<Constant*> var5_item36_item0_elems { var5_item36_item0_item0_struct, };
	Constant* var5_item36_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item36_item0_elems);
	Constant* var5_item36_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item36_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item36_elems { var5_item36_item0_struct, var5_item36_item1_int, var5_item36_item2_int, };
	Constant* var5_item36_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item36_elems);
	Constant* var5_item37_item0_item0_item0_int = ConstantInt::get(types[0], 16u);
	Constant* var5_item37_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item37_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item37_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item37_item0_item0_elems { var5_item37_item0_item0_item0_int, var5_item37_item0_item0_item1_int, var5_item37_item0_item0_item2_int, var5_item37_item0_item0_item3_int, };
	Constant* var5_item37_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item37_item0_item0_elems);
	ArrayRef<Constant*> var5_item37_item0_elems { var5_item37_item0_item0_struct, };
	Constant* var5_item37_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item37_item0_elems);
	Constant* var5_item37_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item37_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item37_elems { var5_item37_item0_struct, var5_item37_item1_int, var5_item37_item2_int, };
	Constant* var5_item37_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item37_elems);
	Constant* var5_item38_item0_item0_item0_int = ConstantInt::get(types[0], 24u);
	Constant* var5_item38_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item38_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item38_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item38_item0_item0_elems { var5_item38_item0_item0_item0_int, var5_item38_item0_item0_item1_int, var5_item38_item0_item0_item2_int, var5_item38_item0_item0_item3_int, };
	Constant* var5_item38_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item38_item0_item0_elems);
	ArrayRef<Constant*> var5_item38_item0_elems { var5_item38_item0_item0_struct, };
	Constant* var5_item38_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item38_item0_elems);
	Constant* var5_item38_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item38_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item38_elems { var5_item38_item0_struct, var5_item38_item1_int, var5_item38_item2_int, };
	Constant* var5_item38_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item38_elems);
	Constant* var5_item39_item0_item0_item0_int = ConstantInt::get(types[0], 48u);
	Constant* var5_item39_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item39_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item39_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item39_item0_item0_elems { var5_item39_item0_item0_item0_int, var5_item39_item0_item0_item1_int, var5_item39_item0_item0_item2_int, var5_item39_item0_item0_item3_int, };
	Constant* var5_item39_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item39_item0_item0_elems);
	ArrayRef<Constant*> var5_item39_item0_elems { var5_item39_item0_item0_struct, };
	Constant* var5_item39_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item39_item0_elems);
	Constant* var5_item39_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item39_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item39_elems { var5_item39_item0_struct, var5_item39_item1_int, var5_item39_item2_int, };
	Constant* var5_item39_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item39_elems);
	Constant* var5_item40_item0_item0_item0_int = ConstantInt::get(types[0], 32u);
	Constant* var5_item40_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item40_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item40_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item40_item0_item0_elems { var5_item40_item0_item0_item0_int, var5_item40_item0_item0_item1_int, var5_item40_item0_item0_item2_int, var5_item40_item0_item0_item3_int, };
	Constant* var5_item40_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item40_item0_item0_elems);
	ArrayRef<Constant*> var5_item40_item0_elems { var5_item40_item0_item0_struct, };
	Constant* var5_item40_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item40_item0_elems);
	Constant* var5_item40_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item40_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item40_elems { var5_item40_item0_struct, var5_item40_item1_int, var5_item40_item2_int, };
	Constant* var5_item40_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item40_elems);
	Constant* var5_item41_item0_item0_item0_int = ConstantInt::get(types[0], 72u);
	Constant* var5_item41_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item41_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item41_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item41_item0_item0_elems { var5_item41_item0_item0_item0_int, var5_item41_item0_item0_item1_int, var5_item41_item0_item0_item2_int, var5_item41_item0_item0_item3_int, };
	Constant* var5_item41_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item41_item0_item0_elems);
	ArrayRef<Constant*> var5_item41_item0_elems { var5_item41_item0_item0_struct, };
	Constant* var5_item41_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item41_item0_elems);
	Constant* var5_item41_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item41_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item41_elems { var5_item41_item0_struct, var5_item41_item1_int, var5_item41_item2_int, };
	Constant* var5_item41_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item41_elems);
	Constant* var5_item42_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item42_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item42_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item42_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item42_item0_item0_elems { var5_item42_item0_item0_item0_int, var5_item42_item0_item0_item1_int, var5_item42_item0_item0_item2_int, var5_item42_item0_item0_item3_int, };
	Constant* var5_item42_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item42_item0_item0_elems);
	ArrayRef<Constant*> var5_item42_item0_elems { var5_item42_item0_item0_struct, };
	Constant* var5_item42_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item42_item0_elems);
	Constant* var5_item42_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item42_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item42_elems { var5_item42_item0_struct, var5_item42_item1_int, var5_item42_item2_int, };
	Constant* var5_item42_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item42_elems);
	Constant* var5_item43_item0_item0_item0_int = ConstantInt::get(types[0], 40u);
	Constant* var5_item43_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item43_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item43_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item43_item0_item0_elems { var5_item43_item0_item0_item0_int, var5_item43_item0_item0_item1_int, var5_item43_item0_item0_item2_int, var5_item43_item0_item0_item3_int, };
	Constant* var5_item43_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item43_item0_item0_elems);
	ArrayRef<Constant*> var5_item43_item0_elems { var5_item43_item0_item0_struct, };
	Constant* var5_item43_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item43_item0_elems);
	Constant* var5_item43_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item43_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item43_elems { var5_item43_item0_struct, var5_item43_item1_int, var5_item43_item2_int, };
	Constant* var5_item43_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item43_elems);
	Constant* var5_item44_item0_item0_item0_int = ConstantInt::get(types[0], 64u);
	Constant* var5_item44_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item44_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item44_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item44_item0_item0_elems { var5_item44_item0_item0_item0_int, var5_item44_item0_item0_item1_int, var5_item44_item0_item0_item2_int, var5_item44_item0_item0_item3_int, };
	Constant* var5_item44_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item44_item0_item0_elems);
	ArrayRef<Constant*> var5_item44_item0_elems { var5_item44_item0_item0_struct, };
	Constant* var5_item44_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item44_item0_elems);
	Constant* var5_item44_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item44_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item44_elems { var5_item44_item0_struct, var5_item44_item1_int, var5_item44_item2_int, };
	Constant* var5_item44_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item44_elems);
	Constant* var5_item45_item0_item0_item0_int = ConstantInt::get(types[0], 40u);
	Constant* var5_item45_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item45_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item45_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item45_item0_item0_elems { var5_item45_item0_item0_item0_int, var5_item45_item0_item0_item1_int, var5_item45_item0_item0_item2_int, var5_item45_item0_item0_item3_int, };
	Constant* var5_item45_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item45_item0_item0_elems);
	ArrayRef<Constant*> var5_item45_item0_elems { var5_item45_item0_item0_struct, };
	Constant* var5_item45_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item45_item0_elems);
	Constant* var5_item45_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item45_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item45_elems { var5_item45_item0_struct, var5_item45_item1_int, var5_item45_item2_int, };
	Constant* var5_item45_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item45_elems);
	Constant* var5_item46_item0_item0_item0_int = ConstantInt::get(types[0], 40u);
	Constant* var5_item46_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item46_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item46_item0_item0_item3_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Constant*> var5_item46_item0_item0_elems { var5_item46_item0_item0_item0_int, var5_item46_item0_item0_item1_int, var5_item46_item0_item0_item2_int, var5_item46_item0_item0_item3_int, };
	Constant* var5_item46_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item46_item0_item0_elems);
	ArrayRef<Constant*> var5_item46_item0_elems { var5_item46_item0_item0_struct, };
	Constant* var5_item46_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item46_item0_elems);
	Constant* var5_item46_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item46_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item46_elems { var5_item46_item0_struct, var5_item46_item1_int, var5_item46_item2_int, };
	Constant* var5_item46_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item46_elems);
	Constant* var5_item47_item0_item0_item0_int = ConstantInt::get(types[0], 64u);
	Constant* var5_item47_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item47_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item47_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item47_item0_item0_elems { var5_item47_item0_item0_item0_int, var5_item47_item0_item0_item1_int, var5_item47_item0_item0_item2_int, var5_item47_item0_item0_item3_int, };
	Constant* var5_item47_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item47_item0_item0_elems);
	ArrayRef<Constant*> var5_item47_item0_elems { var5_item47_item0_item0_struct, };
	Constant* var5_item47_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item47_item0_elems);
	Constant* var5_item47_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item47_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item47_elems { var5_item47_item0_struct, var5_item47_item1_int, var5_item47_item2_int, };
	Constant* var5_item47_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item47_elems);
	Constant* var5_item48_item0_item0_item0_int = ConstantInt::get(types[0], 64u);
	Constant* var5_item48_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item48_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item48_item0_item0_item3_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Constant*> var5_item48_item0_item0_elems { var5_item48_item0_item0_item0_int, var5_item48_item0_item0_item1_int, var5_item48_item0_item0_item2_int, var5_item48_item0_item0_item3_int, };
	Constant* var5_item48_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item48_item0_item0_elems);
	ArrayRef<Constant*> var5_item48_item0_elems { var5_item48_item0_item0_struct, };
	Constant* var5_item48_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item48_item0_elems);
	Constant* var5_item48_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item48_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item48_elems { var5_item48_item0_struct, var5_item48_item1_int, var5_item48_item2_int, };
	Constant* var5_item48_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item48_elems);
	Constant* var5_item49_item0_item0_item0_int = ConstantInt::get(types[0], 184u);
	Constant* var5_item49_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item49_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item49_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item49_item0_item0_elems { var5_item49_item0_item0_item0_int, var5_item49_item0_item0_item1_int, var5_item49_item0_item0_item2_int, var5_item49_item0_item0_item3_int, };
	Constant* var5_item49_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item49_item0_item0_elems);
	ArrayRef<Constant*> var5_item49_item0_elems { var5_item49_item0_item0_struct, };
	Constant* var5_item49_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item49_item0_elems);
	Constant* var5_item49_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item49_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item49_elems { var5_item49_item0_struct, var5_item49_item1_int, var5_item49_item2_int, };
	Constant* var5_item49_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item49_elems);
	Constant* var5_item50_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item50_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item50_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item50_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item50_item0_item0_elems { var5_item50_item0_item0_item0_int, var5_item50_item0_item0_item1_int, var5_item50_item0_item0_item2_int, var5_item50_item0_item0_item3_int, };
	Constant* var5_item50_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item50_item0_item0_elems);
	ArrayRef<Constant*> var5_item50_item0_elems { var5_item50_item0_item0_struct, };
	Constant* var5_item50_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item50_item0_elems);
	Constant* var5_item50_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item50_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item50_elems { var5_item50_item0_struct, var5_item50_item1_int, var5_item50_item2_int, };
	Constant* var5_item50_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item50_elems);
	Constant* var5_item51_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item51_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item51_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item51_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item51_item0_item0_elems { var5_item51_item0_item0_item0_int, var5_item51_item0_item0_item1_int, var5_item51_item0_item0_item2_int, var5_item51_item0_item0_item3_int, };
	Constant* var5_item51_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item51_item0_item0_elems);
	ArrayRef<Constant*> var5_item51_item0_elems { var5_item51_item0_item0_struct, };
	Constant* var5_item51_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item51_item0_elems);
	Constant* var5_item51_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item51_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item51_elems { var5_item51_item0_struct, var5_item51_item1_int, var5_item51_item2_int, };
	Constant* var5_item51_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item51_elems);
	Constant* var5_item52_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item52_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item52_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item52_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item52_item0_item0_elems { var5_item52_item0_item0_item0_int, var5_item52_item0_item0_item1_int, var5_item52_item0_item0_item2_int, var5_item52_item0_item0_item3_int, };
	Constant* var5_item52_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item52_item0_item0_elems);
	ArrayRef<Constant*> var5_item52_item0_elems { var5_item52_item0_item0_struct, };
	Constant* var5_item52_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item52_item0_elems);
	Constant* var5_item52_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item52_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item52_elems { var5_item52_item0_struct, var5_item52_item1_int, var5_item52_item2_int, };
	Constant* var5_item52_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item52_elems);
	Constant* var5_item53_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item53_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item53_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item53_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item53_item0_item0_elems { var5_item53_item0_item0_item0_int, var5_item53_item0_item0_item1_int, var5_item53_item0_item0_item2_int, var5_item53_item0_item0_item3_int, };
	Constant* var5_item53_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item53_item0_item0_elems);
	ArrayRef<Constant*> var5_item53_item0_elems { var5_item53_item0_item0_struct, };
	Constant* var5_item53_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item53_item0_elems);
	Constant* var5_item53_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item53_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item53_elems { var5_item53_item0_struct, var5_item53_item1_int, var5_item53_item2_int, };
	Constant* var5_item53_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item53_elems);
	Constant* var5_item54_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item54_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item54_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item54_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item54_item0_item0_elems { var5_item54_item0_item0_item0_int, var5_item54_item0_item0_item1_int, var5_item54_item0_item0_item2_int, var5_item54_item0_item0_item3_int, };
	Constant* var5_item54_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item54_item0_item0_elems);
	ArrayRef<Constant*> var5_item54_item0_elems { var5_item54_item0_item0_struct, };
	Constant* var5_item54_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item54_item0_elems);
	Constant* var5_item54_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item54_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item54_elems { var5_item54_item0_struct, var5_item54_item1_int, var5_item54_item2_int, };
	Constant* var5_item54_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item54_elems);
	Constant* var5_item55_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item55_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item55_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item55_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item55_item0_item0_elems { var5_item55_item0_item0_item0_int, var5_item55_item0_item0_item1_int, var5_item55_item0_item0_item2_int, var5_item55_item0_item0_item3_int, };
	Constant* var5_item55_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item55_item0_item0_elems);
	ArrayRef<Constant*> var5_item55_item0_elems { var5_item55_item0_item0_struct, };
	Constant* var5_item55_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item55_item0_elems);
	Constant* var5_item55_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item55_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item55_elems { var5_item55_item0_struct, var5_item55_item1_int, var5_item55_item2_int, };
	Constant* var5_item55_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item55_elems);
	Constant* var5_item56_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item56_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item56_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item56_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item56_item0_item0_elems { var5_item56_item0_item0_item0_int, var5_item56_item0_item0_item1_int, var5_item56_item0_item0_item2_int, var5_item56_item0_item0_item3_int, };
	Constant* var5_item56_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item56_item0_item0_elems);
	ArrayRef<Constant*> var5_item56_item0_elems { var5_item56_item0_item0_struct, };
	Constant* var5_item56_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item56_item0_elems);
	Constant* var5_item56_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item56_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item56_elems { var5_item56_item0_struct, var5_item56_item1_int, var5_item56_item2_int, };
	Constant* var5_item56_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item56_elems);
	Constant* var5_item57_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item57_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item57_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item57_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item57_item0_item0_elems { var5_item57_item0_item0_item0_int, var5_item57_item0_item0_item1_int, var5_item57_item0_item0_item2_int, var5_item57_item0_item0_item3_int, };
	Constant* var5_item57_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item57_item0_item0_elems);
	ArrayRef<Constant*> var5_item57_item0_elems { var5_item57_item0_item0_struct, };
	Constant* var5_item57_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item57_item0_elems);
	Constant* var5_item57_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item57_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item57_elems { var5_item57_item0_struct, var5_item57_item1_int, var5_item57_item2_int, };
	Constant* var5_item57_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item57_elems);
	Constant* var5_item58_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item58_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item58_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item58_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item58_item0_item0_elems { var5_item58_item0_item0_item0_int, var5_item58_item0_item0_item1_int, var5_item58_item0_item0_item2_int, var5_item58_item0_item0_item3_int, };
	Constant* var5_item58_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item58_item0_item0_elems);
	ArrayRef<Constant*> var5_item58_item0_elems { var5_item58_item0_item0_struct, };
	Constant* var5_item58_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item58_item0_elems);
	Constant* var5_item58_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item58_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item58_elems { var5_item58_item0_struct, var5_item58_item1_int, var5_item58_item2_int, };
	Constant* var5_item58_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item58_elems);
	Constant* var5_item59_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item59_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item59_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item59_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item59_item0_item0_elems { var5_item59_item0_item0_item0_int, var5_item59_item0_item0_item1_int, var5_item59_item0_item0_item2_int, var5_item59_item0_item0_item3_int, };
	Constant* var5_item59_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item59_item0_item0_elems);
	ArrayRef<Constant*> var5_item59_item0_elems { var5_item59_item0_item0_struct, };
	Constant* var5_item59_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item59_item0_elems);
	Constant* var5_item59_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item59_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item59_elems { var5_item59_item0_struct, var5_item59_item1_int, var5_item59_item2_int, };
	Constant* var5_item59_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item59_elems);
	Constant* var5_item60_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item60_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item60_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item60_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item60_item0_item0_elems { var5_item60_item0_item0_item0_int, var5_item60_item0_item0_item1_int, var5_item60_item0_item0_item2_int, var5_item60_item0_item0_item3_int, };
	Constant* var5_item60_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item60_item0_item0_elems);
	ArrayRef<Constant*> var5_item60_item0_elems { var5_item60_item0_item0_struct, };
	Constant* var5_item60_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item60_item0_elems);
	Constant* var5_item60_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item60_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item60_elems { var5_item60_item0_struct, var5_item60_item1_int, var5_item60_item2_int, };
	Constant* var5_item60_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item60_elems);
	Constant* var5_item61_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item61_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item61_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item61_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item61_item0_item0_elems { var5_item61_item0_item0_item0_int, var5_item61_item0_item0_item1_int, var5_item61_item0_item0_item2_int, var5_item61_item0_item0_item3_int, };
	Constant* var5_item61_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item61_item0_item0_elems);
	ArrayRef<Constant*> var5_item61_item0_elems { var5_item61_item0_item0_struct, };
	Constant* var5_item61_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item61_item0_elems);
	Constant* var5_item61_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item61_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item61_elems { var5_item61_item0_struct, var5_item61_item1_int, var5_item61_item2_int, };
	Constant* var5_item61_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item61_elems);
	Constant* var5_item62_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item62_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item62_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item62_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item62_item0_item0_elems { var5_item62_item0_item0_item0_int, var5_item62_item0_item0_item1_int, var5_item62_item0_item0_item2_int, var5_item62_item0_item0_item3_int, };
	Constant* var5_item62_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item62_item0_item0_elems);
	ArrayRef<Constant*> var5_item62_item0_elems { var5_item62_item0_item0_struct, };
	Constant* var5_item62_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item62_item0_elems);
	Constant* var5_item62_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item62_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item62_elems { var5_item62_item0_struct, var5_item62_item1_int, var5_item62_item2_int, };
	Constant* var5_item62_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item62_elems);
	Constant* var5_item63_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item63_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item63_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item63_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item63_item0_item0_elems { var5_item63_item0_item0_item0_int, var5_item63_item0_item0_item1_int, var5_item63_item0_item0_item2_int, var5_item63_item0_item0_item3_int, };
	Constant* var5_item63_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item63_item0_item0_elems);
	ArrayRef<Constant*> var5_item63_item0_elems { var5_item63_item0_item0_struct, };
	Constant* var5_item63_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item63_item0_elems);
	Constant* var5_item63_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item63_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item63_elems { var5_item63_item0_struct, var5_item63_item1_int, var5_item63_item2_int, };
	Constant* var5_item63_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item63_elems);
	Constant* var5_item64_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item64_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item64_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item64_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item64_item0_item0_elems { var5_item64_item0_item0_item0_int, var5_item64_item0_item0_item1_int, var5_item64_item0_item0_item2_int, var5_item64_item0_item0_item3_int, };
	Constant* var5_item64_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item64_item0_item0_elems);
	ArrayRef<Constant*> var5_item64_item0_elems { var5_item64_item0_item0_struct, };
	Constant* var5_item64_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item64_item0_elems);
	Constant* var5_item64_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item64_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item64_elems { var5_item64_item0_struct, var5_item64_item1_int, var5_item64_item2_int, };
	Constant* var5_item64_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item64_elems);
	Constant* var5_item65_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item65_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item65_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item65_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item65_item0_item0_elems { var5_item65_item0_item0_item0_int, var5_item65_item0_item0_item1_int, var5_item65_item0_item0_item2_int, var5_item65_item0_item0_item3_int, };
	Constant* var5_item65_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item65_item0_item0_elems);
	ArrayRef<Constant*> var5_item65_item0_elems { var5_item65_item0_item0_struct, };
	Constant* var5_item65_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item65_item0_elems);
	Constant* var5_item65_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item65_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item65_elems { var5_item65_item0_struct, var5_item65_item1_int, var5_item65_item2_int, };
	Constant* var5_item65_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item65_elems);
	Constant* var5_item66_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item66_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item66_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item66_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item66_item0_item0_elems { var5_item66_item0_item0_item0_int, var5_item66_item0_item0_item1_int, var5_item66_item0_item0_item2_int, var5_item66_item0_item0_item3_int, };
	Constant* var5_item66_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item66_item0_item0_elems);
	ArrayRef<Constant*> var5_item66_item0_elems { var5_item66_item0_item0_struct, };
	Constant* var5_item66_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item66_item0_elems);
	Constant* var5_item66_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item66_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item66_elems { var5_item66_item0_struct, var5_item66_item1_int, var5_item66_item2_int, };
	Constant* var5_item66_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item66_elems);
	Constant* var5_item67_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item67_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item67_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item67_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item67_item0_item0_elems { var5_item67_item0_item0_item0_int, var5_item67_item0_item0_item1_int, var5_item67_item0_item0_item2_int, var5_item67_item0_item0_item3_int, };
	Constant* var5_item67_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item67_item0_item0_elems);
	ArrayRef<Constant*> var5_item67_item0_elems { var5_item67_item0_item0_struct, };
	Constant* var5_item67_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item67_item0_elems);
	Constant* var5_item67_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item67_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item67_elems { var5_item67_item0_struct, var5_item67_item1_int, var5_item67_item2_int, };
	Constant* var5_item67_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item67_elems);
	Constant* var5_item68_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item68_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item68_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item68_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item68_item0_item0_elems { var5_item68_item0_item0_item0_int, var5_item68_item0_item0_item1_int, var5_item68_item0_item0_item2_int, var5_item68_item0_item0_item3_int, };
	Constant* var5_item68_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item68_item0_item0_elems);
	ArrayRef<Constant*> var5_item68_item0_elems { var5_item68_item0_item0_struct, };
	Constant* var5_item68_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item68_item0_elems);
	Constant* var5_item68_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item68_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item68_elems { var5_item68_item0_struct, var5_item68_item1_int, var5_item68_item2_int, };
	Constant* var5_item68_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item68_elems);
	Constant* var5_item69_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item69_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item69_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item69_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item69_item0_item0_elems { var5_item69_item0_item0_item0_int, var5_item69_item0_item0_item1_int, var5_item69_item0_item0_item2_int, var5_item69_item0_item0_item3_int, };
	Constant* var5_item69_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item69_item0_item0_elems);
	ArrayRef<Constant*> var5_item69_item0_elems { var5_item69_item0_item0_struct, };
	Constant* var5_item69_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item69_item0_elems);
	Constant* var5_item69_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item69_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item69_elems { var5_item69_item0_struct, var5_item69_item1_int, var5_item69_item2_int, };
	Constant* var5_item69_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item69_elems);
	Constant* var5_item70_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item70_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item70_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item70_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item70_item0_item0_elems { var5_item70_item0_item0_item0_int, var5_item70_item0_item0_item1_int, var5_item70_item0_item0_item2_int, var5_item70_item0_item0_item3_int, };
	Constant* var5_item70_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item70_item0_item0_elems);
	ArrayRef<Constant*> var5_item70_item0_elems { var5_item70_item0_item0_struct, };
	Constant* var5_item70_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item70_item0_elems);
	Constant* var5_item70_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item70_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item70_elems { var5_item70_item0_struct, var5_item70_item1_int, var5_item70_item2_int, };
	Constant* var5_item70_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item70_elems);
	Constant* var5_item71_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item71_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item71_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item71_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item71_item0_item0_elems { var5_item71_item0_item0_item0_int, var5_item71_item0_item0_item1_int, var5_item71_item0_item0_item2_int, var5_item71_item0_item0_item3_int, };
	Constant* var5_item71_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item71_item0_item0_elems);
	ArrayRef<Constant*> var5_item71_item0_elems { var5_item71_item0_item0_struct, };
	Constant* var5_item71_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item71_item0_elems);
	Constant* var5_item71_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item71_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item71_elems { var5_item71_item0_struct, var5_item71_item1_int, var5_item71_item2_int, };
	Constant* var5_item71_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item71_elems);
	Constant* var5_item72_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item72_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item72_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item72_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item72_item0_item0_elems { var5_item72_item0_item0_item0_int, var5_item72_item0_item0_item1_int, var5_item72_item0_item0_item2_int, var5_item72_item0_item0_item3_int, };
	Constant* var5_item72_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item72_item0_item0_elems);
	ArrayRef<Constant*> var5_item72_item0_elems { var5_item72_item0_item0_struct, };
	Constant* var5_item72_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item72_item0_elems);
	Constant* var5_item72_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item72_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item72_elems { var5_item72_item0_struct, var5_item72_item1_int, var5_item72_item2_int, };
	Constant* var5_item72_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item72_elems);
	Constant* var5_item73_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item73_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item73_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item73_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item73_item0_item0_elems { var5_item73_item0_item0_item0_int, var5_item73_item0_item0_item1_int, var5_item73_item0_item0_item2_int, var5_item73_item0_item0_item3_int, };
	Constant* var5_item73_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item73_item0_item0_elems);
	ArrayRef<Constant*> var5_item73_item0_elems { var5_item73_item0_item0_struct, };
	Constant* var5_item73_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item73_item0_elems);
	Constant* var5_item73_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item73_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item73_elems { var5_item73_item0_struct, var5_item73_item1_int, var5_item73_item2_int, };
	Constant* var5_item73_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item73_elems);
	Constant* var5_item74_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item74_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item74_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item74_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item74_item0_item0_elems { var5_item74_item0_item0_item0_int, var5_item74_item0_item0_item1_int, var5_item74_item0_item0_item2_int, var5_item74_item0_item0_item3_int, };
	Constant* var5_item74_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item74_item0_item0_elems);
	ArrayRef<Constant*> var5_item74_item0_elems { var5_item74_item0_item0_struct, };
	Constant* var5_item74_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item74_item0_elems);
	Constant* var5_item74_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item74_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item74_elems { var5_item74_item0_struct, var5_item74_item1_int, var5_item74_item2_int, };
	Constant* var5_item74_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item74_elems);
	Constant* var5_item75_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item75_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item75_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item75_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item75_item0_item0_elems { var5_item75_item0_item0_item0_int, var5_item75_item0_item0_item1_int, var5_item75_item0_item0_item2_int, var5_item75_item0_item0_item3_int, };
	Constant* var5_item75_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item75_item0_item0_elems);
	ArrayRef<Constant*> var5_item75_item0_elems { var5_item75_item0_item0_struct, };
	Constant* var5_item75_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item75_item0_elems);
	Constant* var5_item75_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item75_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item75_elems { var5_item75_item0_struct, var5_item75_item1_int, var5_item75_item2_int, };
	Constant* var5_item75_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item75_elems);
	Constant* var5_item76_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item76_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item76_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item76_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item76_item0_item0_elems { var5_item76_item0_item0_item0_int, var5_item76_item0_item0_item1_int, var5_item76_item0_item0_item2_int, var5_item76_item0_item0_item3_int, };
	Constant* var5_item76_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item76_item0_item0_elems);
	ArrayRef<Constant*> var5_item76_item0_elems { var5_item76_item0_item0_struct, };
	Constant* var5_item76_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item76_item0_elems);
	Constant* var5_item76_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item76_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item76_elems { var5_item76_item0_struct, var5_item76_item1_int, var5_item76_item2_int, };
	Constant* var5_item76_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item76_elems);
	Constant* var5_item77_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item77_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item77_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item77_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item77_item0_item0_elems { var5_item77_item0_item0_item0_int, var5_item77_item0_item0_item1_int, var5_item77_item0_item0_item2_int, var5_item77_item0_item0_item3_int, };
	Constant* var5_item77_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item77_item0_item0_elems);
	ArrayRef<Constant*> var5_item77_item0_elems { var5_item77_item0_item0_struct, };
	Constant* var5_item77_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item77_item0_elems);
	Constant* var5_item77_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item77_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item77_elems { var5_item77_item0_struct, var5_item77_item1_int, var5_item77_item2_int, };
	Constant* var5_item77_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item77_elems);
	Constant* var5_item78_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item78_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item78_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item78_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item78_item0_item0_elems { var5_item78_item0_item0_item0_int, var5_item78_item0_item0_item1_int, var5_item78_item0_item0_item2_int, var5_item78_item0_item0_item3_int, };
	Constant* var5_item78_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item78_item0_item0_elems);
	ArrayRef<Constant*> var5_item78_item0_elems { var5_item78_item0_item0_struct, };
	Constant* var5_item78_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item78_item0_elems);
	Constant* var5_item78_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item78_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item78_elems { var5_item78_item0_struct, var5_item78_item1_int, var5_item78_item2_int, };
	Constant* var5_item78_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item78_elems);
	Constant* var5_item79_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item79_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item79_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item79_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item79_item0_item0_elems { var5_item79_item0_item0_item0_int, var5_item79_item0_item0_item1_int, var5_item79_item0_item0_item2_int, var5_item79_item0_item0_item3_int, };
	Constant* var5_item79_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item79_item0_item0_elems);
	ArrayRef<Constant*> var5_item79_item0_elems { var5_item79_item0_item0_struct, };
	Constant* var5_item79_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item79_item0_elems);
	Constant* var5_item79_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item79_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item79_elems { var5_item79_item0_struct, var5_item79_item1_int, var5_item79_item2_int, };
	Constant* var5_item79_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item79_elems);
	Constant* var5_item80_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item80_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item80_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item80_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item80_item0_item0_elems { var5_item80_item0_item0_item0_int, var5_item80_item0_item0_item1_int, var5_item80_item0_item0_item2_int, var5_item80_item0_item0_item3_int, };
	Constant* var5_item80_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item80_item0_item0_elems);
	ArrayRef<Constant*> var5_item80_item0_elems { var5_item80_item0_item0_struct, };
	Constant* var5_item80_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item80_item0_elems);
	Constant* var5_item80_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item80_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item80_elems { var5_item80_item0_struct, var5_item80_item1_int, var5_item80_item2_int, };
	Constant* var5_item80_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item80_elems);
	Constant* var5_item81_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item81_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item81_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item81_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item81_item0_item0_elems { var5_item81_item0_item0_item0_int, var5_item81_item0_item0_item1_int, var5_item81_item0_item0_item2_int, var5_item81_item0_item0_item3_int, };
	Constant* var5_item81_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item81_item0_item0_elems);
	ArrayRef<Constant*> var5_item81_item0_elems { var5_item81_item0_item0_struct, };
	Constant* var5_item81_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item81_item0_elems);
	Constant* var5_item81_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item81_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item81_elems { var5_item81_item0_struct, var5_item81_item1_int, var5_item81_item2_int, };
	Constant* var5_item81_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item81_elems);
	Constant* var5_item82_item0_item0_item0_int = ConstantInt::get(types[0], 192u);
	Constant* var5_item82_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item82_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item82_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item82_item0_item0_elems { var5_item82_item0_item0_item0_int, var5_item82_item0_item0_item1_int, var5_item82_item0_item0_item2_int, var5_item82_item0_item0_item3_int, };
	Constant* var5_item82_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item82_item0_item0_elems);
	ArrayRef<Constant*> var5_item82_item0_elems { var5_item82_item0_item0_struct, };
	Constant* var5_item82_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item82_item0_elems);
	Constant* var5_item82_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item82_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item82_elems { var5_item82_item0_struct, var5_item82_item1_int, var5_item82_item2_int, };
	Constant* var5_item82_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item82_elems);
	Constant* var5_item83_item0_item0_item0_int = ConstantInt::get(types[0], 200u);
	Constant* var5_item83_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item83_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item83_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item83_item0_item0_elems { var5_item83_item0_item0_item0_int, var5_item83_item0_item0_item1_int, var5_item83_item0_item0_item2_int, var5_item83_item0_item0_item3_int, };
	Constant* var5_item83_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item83_item0_item0_elems);
	ArrayRef<Constant*> var5_item83_item0_elems { var5_item83_item0_item0_struct, };
	Constant* var5_item83_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item83_item0_elems);
	Constant* var5_item83_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item83_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item83_elems { var5_item83_item0_struct, var5_item83_item1_int, var5_item83_item2_int, };
	Constant* var5_item83_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item83_elems);
	Constant* var5_item84_item0_item0_item0_int = ConstantInt::get(types[0], 208u);
	Constant* var5_item84_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item84_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item84_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item84_item0_item0_elems { var5_item84_item0_item0_item0_int, var5_item84_item0_item0_item1_int, var5_item84_item0_item0_item2_int, var5_item84_item0_item0_item3_int, };
	Constant* var5_item84_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item84_item0_item0_elems);
	ArrayRef<Constant*> var5_item84_item0_elems { var5_item84_item0_item0_struct, };
	Constant* var5_item84_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item84_item0_elems);
	Constant* var5_item84_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item84_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item84_elems { var5_item84_item0_struct, var5_item84_item1_int, var5_item84_item2_int, };
	Constant* var5_item84_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item84_elems);
	Constant* var5_item85_item0_item0_item0_int = ConstantInt::get(types[0], 216u);
	Constant* var5_item85_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item85_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item85_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item85_item0_item0_elems { var5_item85_item0_item0_item0_int, var5_item85_item0_item0_item1_int, var5_item85_item0_item0_item2_int, var5_item85_item0_item0_item3_int, };
	Constant* var5_item85_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item85_item0_item0_elems);
	ArrayRef<Constant*> var5_item85_item0_elems { var5_item85_item0_item0_struct, };
	Constant* var5_item85_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item85_item0_elems);
	Constant* var5_item85_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item85_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item85_elems { var5_item85_item0_struct, var5_item85_item1_int, var5_item85_item2_int, };
	Constant* var5_item85_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item85_elems);
	Constant* var5_item86_item0_item0_item0_int = ConstantInt::get(types[0], 224u);
	Constant* var5_item86_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item86_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item86_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item86_item0_item0_elems { var5_item86_item0_item0_item0_int, var5_item86_item0_item0_item1_int, var5_item86_item0_item0_item2_int, var5_item86_item0_item0_item3_int, };
	Constant* var5_item86_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item86_item0_item0_elems);
	ArrayRef<Constant*> var5_item86_item0_elems { var5_item86_item0_item0_struct, };
	Constant* var5_item86_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item86_item0_elems);
	Constant* var5_item86_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item86_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item86_elems { var5_item86_item0_struct, var5_item86_item1_int, var5_item86_item2_int, };
	Constant* var5_item86_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item86_elems);
	Constant* var5_item87_item0_item0_item0_int = ConstantInt::get(types[0], 232u);
	Constant* var5_item87_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item87_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item87_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item87_item0_item0_elems { var5_item87_item0_item0_item0_int, var5_item87_item0_item0_item1_int, var5_item87_item0_item0_item2_int, var5_item87_item0_item0_item3_int, };
	Constant* var5_item87_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item87_item0_item0_elems);
	ArrayRef<Constant*> var5_item87_item0_elems { var5_item87_item0_item0_struct, };
	Constant* var5_item87_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item87_item0_elems);
	Constant* var5_item87_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item87_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item87_elems { var5_item87_item0_struct, var5_item87_item1_int, var5_item87_item2_int, };
	Constant* var5_item87_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item87_elems);
	Constant* var5_item88_item0_item0_item0_int = ConstantInt::get(types[0], 240u);
	Constant* var5_item88_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item88_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item88_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item88_item0_item0_elems { var5_item88_item0_item0_item0_int, var5_item88_item0_item0_item1_int, var5_item88_item0_item0_item2_int, var5_item88_item0_item0_item3_int, };
	Constant* var5_item88_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item88_item0_item0_elems);
	ArrayRef<Constant*> var5_item88_item0_elems { var5_item88_item0_item0_struct, };
	Constant* var5_item88_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item88_item0_elems);
	Constant* var5_item88_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item88_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item88_elems { var5_item88_item0_struct, var5_item88_item1_int, var5_item88_item2_int, };
	Constant* var5_item88_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item88_elems);
	Constant* var5_item89_item0_item0_item0_int = ConstantInt::get(types[0], 248u);
	Constant* var5_item89_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item89_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item89_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item89_item0_item0_elems { var5_item89_item0_item0_item0_int, var5_item89_item0_item0_item1_int, var5_item89_item0_item0_item2_int, var5_item89_item0_item0_item3_int, };
	Constant* var5_item89_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item89_item0_item0_elems);
	ArrayRef<Constant*> var5_item89_item0_elems { var5_item89_item0_item0_struct, };
	Constant* var5_item89_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item89_item0_elems);
	Constant* var5_item89_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item89_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item89_elems { var5_item89_item0_struct, var5_item89_item1_int, var5_item89_item2_int, };
	Constant* var5_item89_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item89_elems);
	Constant* var5_item90_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item90_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item90_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item90_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item90_item0_item0_elems { var5_item90_item0_item0_item0_int, var5_item90_item0_item0_item1_int, var5_item90_item0_item0_item2_int, var5_item90_item0_item0_item3_int, };
	Constant* var5_item90_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item90_item0_item0_elems);
	ArrayRef<Constant*> var5_item90_item0_elems { var5_item90_item0_item0_struct, };
	Constant* var5_item90_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item90_item0_elems);
	Constant* var5_item90_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item90_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item90_elems { var5_item90_item0_struct, var5_item90_item1_int, var5_item90_item2_int, };
	Constant* var5_item90_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item90_elems);
	Constant* var5_item91_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item91_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item91_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item91_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item91_item0_item0_elems { var5_item91_item0_item0_item0_int, var5_item91_item0_item0_item1_int, var5_item91_item0_item0_item2_int, var5_item91_item0_item0_item3_int, };
	Constant* var5_item91_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item91_item0_item0_elems);
	ArrayRef<Constant*> var5_item91_item0_elems { var5_item91_item0_item0_struct, };
	Constant* var5_item91_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item91_item0_elems);
	Constant* var5_item91_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item91_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item91_elems { var5_item91_item0_struct, var5_item91_item1_int, var5_item91_item2_int, };
	Constant* var5_item91_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item91_elems);
	Constant* var5_item92_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item92_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item92_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item92_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item92_item0_item0_elems { var5_item92_item0_item0_item0_int, var5_item92_item0_item0_item1_int, var5_item92_item0_item0_item2_int, var5_item92_item0_item0_item3_int, };
	Constant* var5_item92_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item92_item0_item0_elems);
	ArrayRef<Constant*> var5_item92_item0_elems { var5_item92_item0_item0_struct, };
	Constant* var5_item92_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item92_item0_elems);
	Constant* var5_item92_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item92_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item92_elems { var5_item92_item0_struct, var5_item92_item1_int, var5_item92_item2_int, };
	Constant* var5_item92_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item92_elems);
	Constant* var5_item93_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item93_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item93_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item93_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item93_item0_item0_elems { var5_item93_item0_item0_item0_int, var5_item93_item0_item0_item1_int, var5_item93_item0_item0_item2_int, var5_item93_item0_item0_item3_int, };
	Constant* var5_item93_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item93_item0_item0_elems);
	ArrayRef<Constant*> var5_item93_item0_elems { var5_item93_item0_item0_struct, };
	Constant* var5_item93_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item93_item0_elems);
	Constant* var5_item93_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item93_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item93_elems { var5_item93_item0_struct, var5_item93_item1_int, var5_item93_item2_int, };
	Constant* var5_item93_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item93_elems);
	Constant* var5_item94_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item94_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item94_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item94_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item94_item0_item0_elems { var5_item94_item0_item0_item0_int, var5_item94_item0_item0_item1_int, var5_item94_item0_item0_item2_int, var5_item94_item0_item0_item3_int, };
	Constant* var5_item94_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item94_item0_item0_elems);
	ArrayRef<Constant*> var5_item94_item0_elems { var5_item94_item0_item0_struct, };
	Constant* var5_item94_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item94_item0_elems);
	Constant* var5_item94_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item94_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item94_elems { var5_item94_item0_struct, var5_item94_item1_int, var5_item94_item2_int, };
	Constant* var5_item94_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item94_elems);
	Constant* var5_item95_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item95_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item95_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item95_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item95_item0_item0_elems { var5_item95_item0_item0_item0_int, var5_item95_item0_item0_item1_int, var5_item95_item0_item0_item2_int, var5_item95_item0_item0_item3_int, };
	Constant* var5_item95_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item95_item0_item0_elems);
	ArrayRef<Constant*> var5_item95_item0_elems { var5_item95_item0_item0_struct, };
	Constant* var5_item95_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item95_item0_elems);
	Constant* var5_item95_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item95_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item95_elems { var5_item95_item0_struct, var5_item95_item1_int, var5_item95_item2_int, };
	Constant* var5_item95_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item95_elems);
	Constant* var5_item96_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item96_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item96_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item96_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item96_item0_item0_elems { var5_item96_item0_item0_item0_int, var5_item96_item0_item0_item1_int, var5_item96_item0_item0_item2_int, var5_item96_item0_item0_item3_int, };
	Constant* var5_item96_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item96_item0_item0_elems);
	ArrayRef<Constant*> var5_item96_item0_elems { var5_item96_item0_item0_struct, };
	Constant* var5_item96_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item96_item0_elems);
	Constant* var5_item96_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item96_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item96_elems { var5_item96_item0_struct, var5_item96_item1_int, var5_item96_item2_int, };
	Constant* var5_item96_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item96_elems);
	Constant* var5_item97_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item97_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item97_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item97_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item97_item0_item0_elems { var5_item97_item0_item0_item0_int, var5_item97_item0_item0_item1_int, var5_item97_item0_item0_item2_int, var5_item97_item0_item0_item3_int, };
	Constant* var5_item97_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item97_item0_item0_elems);
	ArrayRef<Constant*> var5_item97_item0_elems { var5_item97_item0_item0_struct, };
	Constant* var5_item97_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item97_item0_elems);
	Constant* var5_item97_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item97_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item97_elems { var5_item97_item0_struct, var5_item97_item1_int, var5_item97_item2_int, };
	Constant* var5_item97_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item97_elems);
	Constant* var5_item98_item0_item0_item0_int = ConstantInt::get(types[0], 80u);
	Constant* var5_item98_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item98_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item98_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item98_item0_item0_elems { var5_item98_item0_item0_item0_int, var5_item98_item0_item0_item1_int, var5_item98_item0_item0_item2_int, var5_item98_item0_item0_item3_int, };
	Constant* var5_item98_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item98_item0_item0_elems);
	ArrayRef<Constant*> var5_item98_item0_elems { var5_item98_item0_item0_struct, };
	Constant* var5_item98_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item98_item0_elems);
	Constant* var5_item98_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item98_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item98_elems { var5_item98_item0_struct, var5_item98_item1_int, var5_item98_item2_int, };
	Constant* var5_item98_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item98_elems);
	Constant* var5_item99_item0_item0_item0_int = ConstantInt::get(types[0], 88u);
	Constant* var5_item99_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item99_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item99_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item99_item0_item0_elems { var5_item99_item0_item0_item0_int, var5_item99_item0_item0_item1_int, var5_item99_item0_item0_item2_int, var5_item99_item0_item0_item3_int, };
	Constant* var5_item99_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item99_item0_item0_elems);
	ArrayRef<Constant*> var5_item99_item0_elems { var5_item99_item0_item0_struct, };
	Constant* var5_item99_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item99_item0_elems);
	Constant* var5_item99_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item99_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item99_elems { var5_item99_item0_struct, var5_item99_item1_int, var5_item99_item2_int, };
	Constant* var5_item99_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item99_elems);
	Constant* var5_item100_item0_item0_item0_int = ConstantInt::get(types[0], 96u);
	Constant* var5_item100_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item100_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item100_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item100_item0_item0_elems { var5_item100_item0_item0_item0_int, var5_item100_item0_item0_item1_int, var5_item100_item0_item0_item2_int, var5_item100_item0_item0_item3_int, };
	Constant* var5_item100_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item100_item0_item0_elems);
	ArrayRef<Constant*> var5_item100_item0_elems { var5_item100_item0_item0_struct, };
	Constant* var5_item100_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item100_item0_elems);
	Constant* var5_item100_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item100_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item100_elems { var5_item100_item0_struct, var5_item100_item1_int, var5_item100_item2_int, };
	Constant* var5_item100_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item100_elems);
	Constant* var5_item101_item0_item0_item0_int = ConstantInt::get(types[0], 104u);
	Constant* var5_item101_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item101_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item101_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item101_item0_item0_elems { var5_item101_item0_item0_item0_int, var5_item101_item0_item0_item1_int, var5_item101_item0_item0_item2_int, var5_item101_item0_item0_item3_int, };
	Constant* var5_item101_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item101_item0_item0_elems);
	ArrayRef<Constant*> var5_item101_item0_elems { var5_item101_item0_item0_struct, };
	Constant* var5_item101_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item101_item0_elems);
	Constant* var5_item101_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item101_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item101_elems { var5_item101_item0_struct, var5_item101_item1_int, var5_item101_item2_int, };
	Constant* var5_item101_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item101_elems);
	Constant* var5_item102_item0_item0_item0_int = ConstantInt::get(types[0], 112u);
	Constant* var5_item102_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item102_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item102_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item102_item0_item0_elems { var5_item102_item0_item0_item0_int, var5_item102_item0_item0_item1_int, var5_item102_item0_item0_item2_int, var5_item102_item0_item0_item3_int, };
	Constant* var5_item102_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item102_item0_item0_elems);
	ArrayRef<Constant*> var5_item102_item0_elems { var5_item102_item0_item0_struct, };
	Constant* var5_item102_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item102_item0_elems);
	Constant* var5_item102_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item102_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item102_elems { var5_item102_item0_struct, var5_item102_item1_int, var5_item102_item2_int, };
	Constant* var5_item102_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item102_elems);
	Constant* var5_item103_item0_item0_item0_int = ConstantInt::get(types[0], 120u);
	Constant* var5_item103_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item103_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item103_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item103_item0_item0_elems { var5_item103_item0_item0_item0_int, var5_item103_item0_item0_item1_int, var5_item103_item0_item0_item2_int, var5_item103_item0_item0_item3_int, };
	Constant* var5_item103_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item103_item0_item0_elems);
	ArrayRef<Constant*> var5_item103_item0_elems { var5_item103_item0_item0_struct, };
	Constant* var5_item103_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item103_item0_elems);
	Constant* var5_item103_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item103_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item103_elems { var5_item103_item0_struct, var5_item103_item1_int, var5_item103_item2_int, };
	Constant* var5_item103_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item103_elems);
	Constant* var5_item104_item0_item0_item0_int = ConstantInt::get(types[0], 128u);
	Constant* var5_item104_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item104_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item104_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item104_item0_item0_elems { var5_item104_item0_item0_item0_int, var5_item104_item0_item0_item1_int, var5_item104_item0_item0_item2_int, var5_item104_item0_item0_item3_int, };
	Constant* var5_item104_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item104_item0_item0_elems);
	ArrayRef<Constant*> var5_item104_item0_elems { var5_item104_item0_item0_struct, };
	Constant* var5_item104_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item104_item0_elems);
	Constant* var5_item104_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item104_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item104_elems { var5_item104_item0_struct, var5_item104_item1_int, var5_item104_item2_int, };
	Constant* var5_item104_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item104_elems);
	Constant* var5_item105_item0_item0_item0_int = ConstantInt::get(types[0], 136u);
	Constant* var5_item105_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item105_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item105_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item105_item0_item0_elems { var5_item105_item0_item0_item0_int, var5_item105_item0_item0_item1_int, var5_item105_item0_item0_item2_int, var5_item105_item0_item0_item3_int, };
	Constant* var5_item105_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item105_item0_item0_elems);
	ArrayRef<Constant*> var5_item105_item0_elems { var5_item105_item0_item0_struct, };
	Constant* var5_item105_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item105_item0_elems);
	Constant* var5_item105_item1_int = ConstantInt::get(types[0], 8u);
	Constant* var5_item105_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item105_elems { var5_item105_item0_struct, var5_item105_item1_int, var5_item105_item2_int, };
	Constant* var5_item105_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item105_elems);
	Constant* var5_item106_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item106_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item106_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item106_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item106_item0_item0_elems { var5_item106_item0_item0_item0_int, var5_item106_item0_item0_item1_int, var5_item106_item0_item0_item2_int, var5_item106_item0_item0_item3_int, };
	Constant* var5_item106_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item106_item0_item0_elems);
	ArrayRef<Constant*> var5_item106_item0_elems { var5_item106_item0_item0_struct, };
	Constant* var5_item106_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item106_item0_elems);
	Constant* var5_item106_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item106_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item106_elems { var5_item106_item0_struct, var5_item106_item1_int, var5_item106_item2_int, };
	Constant* var5_item106_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item106_elems);
	Constant* var5_item107_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item107_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item107_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item107_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item107_item0_item0_elems { var5_item107_item0_item0_item0_int, var5_item107_item0_item0_item1_int, var5_item107_item0_item0_item2_int, var5_item107_item0_item0_item3_int, };
	Constant* var5_item107_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item107_item0_item0_elems);
	ArrayRef<Constant*> var5_item107_item0_elems { var5_item107_item0_item0_struct, };
	Constant* var5_item107_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item107_item0_elems);
	Constant* var5_item107_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item107_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item107_elems { var5_item107_item0_struct, var5_item107_item1_int, var5_item107_item2_int, };
	Constant* var5_item107_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item107_elems);
	Constant* var5_item108_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item108_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item108_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item108_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item108_item0_item0_elems { var5_item108_item0_item0_item0_int, var5_item108_item0_item0_item1_int, var5_item108_item0_item0_item2_int, var5_item108_item0_item0_item3_int, };
	Constant* var5_item108_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item108_item0_item0_elems);
	ArrayRef<Constant*> var5_item108_item0_elems { var5_item108_item0_item0_struct, };
	Constant* var5_item108_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item108_item0_elems);
	Constant* var5_item108_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item108_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item108_elems { var5_item108_item0_struct, var5_item108_item1_int, var5_item108_item2_int, };
	Constant* var5_item108_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item108_elems);
	Constant* var5_item109_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item109_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item109_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item109_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item109_item0_item0_elems { var5_item109_item0_item0_item0_int, var5_item109_item0_item0_item1_int, var5_item109_item0_item0_item2_int, var5_item109_item0_item0_item3_int, };
	Constant* var5_item109_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item109_item0_item0_elems);
	ArrayRef<Constant*> var5_item109_item0_elems { var5_item109_item0_item0_struct, };
	Constant* var5_item109_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item109_item0_elems);
	Constant* var5_item109_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item109_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item109_elems { var5_item109_item0_struct, var5_item109_item1_int, var5_item109_item2_int, };
	Constant* var5_item109_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item109_elems);
	Constant* var5_item110_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item110_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item110_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item110_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item110_item0_item0_elems { var5_item110_item0_item0_item0_int, var5_item110_item0_item0_item1_int, var5_item110_item0_item0_item2_int, var5_item110_item0_item0_item3_int, };
	Constant* var5_item110_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item110_item0_item0_elems);
	ArrayRef<Constant*> var5_item110_item0_elems { var5_item110_item0_item0_struct, };
	Constant* var5_item110_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item110_item0_elems);
	Constant* var5_item110_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item110_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item110_elems { var5_item110_item0_struct, var5_item110_item1_int, var5_item110_item2_int, };
	Constant* var5_item110_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item110_elems);
	Constant* var5_item111_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item111_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item111_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item111_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item111_item0_item0_elems { var5_item111_item0_item0_item0_int, var5_item111_item0_item0_item1_int, var5_item111_item0_item0_item2_int, var5_item111_item0_item0_item3_int, };
	Constant* var5_item111_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item111_item0_item0_elems);
	ArrayRef<Constant*> var5_item111_item0_elems { var5_item111_item0_item0_struct, };
	Constant* var5_item111_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item111_item0_elems);
	Constant* var5_item111_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item111_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item111_elems { var5_item111_item0_struct, var5_item111_item1_int, var5_item111_item2_int, };
	Constant* var5_item111_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item111_elems);
	Constant* var5_item112_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item112_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item112_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item112_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item112_item0_item0_elems { var5_item112_item0_item0_item0_int, var5_item112_item0_item0_item1_int, var5_item112_item0_item0_item2_int, var5_item112_item0_item0_item3_int, };
	Constant* var5_item112_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item112_item0_item0_elems);
	ArrayRef<Constant*> var5_item112_item0_elems { var5_item112_item0_item0_struct, };
	Constant* var5_item112_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item112_item0_elems);
	Constant* var5_item112_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item112_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item112_elems { var5_item112_item0_struct, var5_item112_item1_int, var5_item112_item2_int, };
	Constant* var5_item112_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item112_elems);
	Constant* var5_item113_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item113_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item113_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item113_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item113_item0_item0_elems { var5_item113_item0_item0_item0_int, var5_item113_item0_item0_item1_int, var5_item113_item0_item0_item2_int, var5_item113_item0_item0_item3_int, };
	Constant* var5_item113_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item113_item0_item0_elems);
	ArrayRef<Constant*> var5_item113_item0_elems { var5_item113_item0_item0_struct, };
	Constant* var5_item113_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item113_item0_elems);
	Constant* var5_item113_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item113_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item113_elems { var5_item113_item0_struct, var5_item113_item1_int, var5_item113_item2_int, };
	Constant* var5_item113_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item113_elems);
	Constant* var5_item114_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item114_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item114_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item114_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item114_item0_item0_elems { var5_item114_item0_item0_item0_int, var5_item114_item0_item0_item1_int, var5_item114_item0_item0_item2_int, var5_item114_item0_item0_item3_int, };
	Constant* var5_item114_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item114_item0_item0_elems);
	ArrayRef<Constant*> var5_item114_item0_elems { var5_item114_item0_item0_struct, };
	Constant* var5_item114_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item114_item0_elems);
	Constant* var5_item114_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item114_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item114_elems { var5_item114_item0_struct, var5_item114_item1_int, var5_item114_item2_int, };
	Constant* var5_item114_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item114_elems);
	Constant* var5_item115_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item115_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item115_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item115_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item115_item0_item0_elems { var5_item115_item0_item0_item0_int, var5_item115_item0_item0_item1_int, var5_item115_item0_item0_item2_int, var5_item115_item0_item0_item3_int, };
	Constant* var5_item115_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item115_item0_item0_elems);
	ArrayRef<Constant*> var5_item115_item0_elems { var5_item115_item0_item0_struct, };
	Constant* var5_item115_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item115_item0_elems);
	Constant* var5_item115_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item115_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item115_elems { var5_item115_item0_struct, var5_item115_item1_int, var5_item115_item2_int, };
	Constant* var5_item115_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item115_elems);
	Constant* var5_item116_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item116_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item116_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item116_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item116_item0_item0_elems { var5_item116_item0_item0_item0_int, var5_item116_item0_item0_item1_int, var5_item116_item0_item0_item2_int, var5_item116_item0_item0_item3_int, };
	Constant* var5_item116_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item116_item0_item0_elems);
	ArrayRef<Constant*> var5_item116_item0_elems { var5_item116_item0_item0_struct, };
	Constant* var5_item116_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item116_item0_elems);
	Constant* var5_item116_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item116_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item116_elems { var5_item116_item0_struct, var5_item116_item1_int, var5_item116_item2_int, };
	Constant* var5_item116_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item116_elems);
	Constant* var5_item117_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item117_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item117_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item117_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item117_item0_item0_elems { var5_item117_item0_item0_item0_int, var5_item117_item0_item0_item1_int, var5_item117_item0_item0_item2_int, var5_item117_item0_item0_item3_int, };
	Constant* var5_item117_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item117_item0_item0_elems);
	ArrayRef<Constant*> var5_item117_item0_elems { var5_item117_item0_item0_struct, };
	Constant* var5_item117_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item117_item0_elems);
	Constant* var5_item117_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item117_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item117_elems { var5_item117_item0_struct, var5_item117_item1_int, var5_item117_item2_int, };
	Constant* var5_item117_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item117_elems);
	Constant* var5_item118_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item118_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item118_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item118_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item118_item0_item0_elems { var5_item118_item0_item0_item0_int, var5_item118_item0_item0_item1_int, var5_item118_item0_item0_item2_int, var5_item118_item0_item0_item3_int, };
	Constant* var5_item118_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item118_item0_item0_elems);
	ArrayRef<Constant*> var5_item118_item0_elems { var5_item118_item0_item0_struct, };
	Constant* var5_item118_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item118_item0_elems);
	Constant* var5_item118_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item118_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item118_elems { var5_item118_item0_struct, var5_item118_item1_int, var5_item118_item2_int, };
	Constant* var5_item118_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item118_elems);
	Constant* var5_item119_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item119_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item119_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item119_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item119_item0_item0_elems { var5_item119_item0_item0_item0_int, var5_item119_item0_item0_item1_int, var5_item119_item0_item0_item2_int, var5_item119_item0_item0_item3_int, };
	Constant* var5_item119_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item119_item0_item0_elems);
	ArrayRef<Constant*> var5_item119_item0_elems { var5_item119_item0_item0_struct, };
	Constant* var5_item119_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item119_item0_elems);
	Constant* var5_item119_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item119_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item119_elems { var5_item119_item0_struct, var5_item119_item1_int, var5_item119_item2_int, };
	Constant* var5_item119_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item119_elems);
	Constant* var5_item120_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item120_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item120_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item120_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item120_item0_item0_elems { var5_item120_item0_item0_item0_int, var5_item120_item0_item0_item1_int, var5_item120_item0_item0_item2_int, var5_item120_item0_item0_item3_int, };
	Constant* var5_item120_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item120_item0_item0_elems);
	ArrayRef<Constant*> var5_item120_item0_elems { var5_item120_item0_item0_struct, };
	Constant* var5_item120_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item120_item0_elems);
	Constant* var5_item120_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item120_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item120_elems { var5_item120_item0_struct, var5_item120_item1_int, var5_item120_item2_int, };
	Constant* var5_item120_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item120_elems);
	Constant* var5_item121_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item121_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item121_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item121_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item121_item0_item0_elems { var5_item121_item0_item0_item0_int, var5_item121_item0_item0_item1_int, var5_item121_item0_item0_item2_int, var5_item121_item0_item0_item3_int, };
	Constant* var5_item121_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item121_item0_item0_elems);
	ArrayRef<Constant*> var5_item121_item0_elems { var5_item121_item0_item0_struct, };
	Constant* var5_item121_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item121_item0_elems);
	Constant* var5_item121_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item121_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item121_elems { var5_item121_item0_struct, var5_item121_item1_int, var5_item121_item2_int, };
	Constant* var5_item121_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item121_elems);
	Constant* var5_item122_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item122_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item122_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item122_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item122_item0_item0_elems { var5_item122_item0_item0_item0_int, var5_item122_item0_item0_item1_int, var5_item122_item0_item0_item2_int, var5_item122_item0_item0_item3_int, };
	Constant* var5_item122_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item122_item0_item0_elems);
	ArrayRef<Constant*> var5_item122_item0_elems { var5_item122_item0_item0_struct, };
	Constant* var5_item122_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item122_item0_elems);
	Constant* var5_item122_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item122_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item122_elems { var5_item122_item0_struct, var5_item122_item1_int, var5_item122_item2_int, };
	Constant* var5_item122_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item122_elems);
	Constant* var5_item123_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item123_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item123_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item123_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item123_item0_item0_elems { var5_item123_item0_item0_item0_int, var5_item123_item0_item0_item1_int, var5_item123_item0_item0_item2_int, var5_item123_item0_item0_item3_int, };
	Constant* var5_item123_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item123_item0_item0_elems);
	ArrayRef<Constant*> var5_item123_item0_elems { var5_item123_item0_item0_struct, };
	Constant* var5_item123_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item123_item0_elems);
	Constant* var5_item123_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item123_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item123_elems { var5_item123_item0_struct, var5_item123_item1_int, var5_item123_item2_int, };
	Constant* var5_item123_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item123_elems);
	Constant* var5_item124_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item124_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item124_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item124_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item124_item0_item0_elems { var5_item124_item0_item0_item0_int, var5_item124_item0_item0_item1_int, var5_item124_item0_item0_item2_int, var5_item124_item0_item0_item3_int, };
	Constant* var5_item124_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item124_item0_item0_elems);
	ArrayRef<Constant*> var5_item124_item0_elems { var5_item124_item0_item0_struct, };
	Constant* var5_item124_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item124_item0_elems);
	Constant* var5_item124_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item124_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item124_elems { var5_item124_item0_struct, var5_item124_item1_int, var5_item124_item2_int, };
	Constant* var5_item124_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item124_elems);
	Constant* var5_item125_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item125_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item125_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item125_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item125_item0_item0_elems { var5_item125_item0_item0_item0_int, var5_item125_item0_item0_item1_int, var5_item125_item0_item0_item2_int, var5_item125_item0_item0_item3_int, };
	Constant* var5_item125_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item125_item0_item0_elems);
	ArrayRef<Constant*> var5_item125_item0_elems { var5_item125_item0_item0_struct, };
	Constant* var5_item125_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item125_item0_elems);
	Constant* var5_item125_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item125_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item125_elems { var5_item125_item0_struct, var5_item125_item1_int, var5_item125_item2_int, };
	Constant* var5_item125_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item125_elems);
	Constant* var5_item126_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item126_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item126_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item126_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item126_item0_item0_elems { var5_item126_item0_item0_item0_int, var5_item126_item0_item0_item1_int, var5_item126_item0_item0_item2_int, var5_item126_item0_item0_item3_int, };
	Constant* var5_item126_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item126_item0_item0_elems);
	ArrayRef<Constant*> var5_item126_item0_elems { var5_item126_item0_item0_struct, };
	Constant* var5_item126_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item126_item0_elems);
	Constant* var5_item126_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item126_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item126_elems { var5_item126_item0_struct, var5_item126_item1_int, var5_item126_item2_int, };
	Constant* var5_item126_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item126_elems);
	Constant* var5_item127_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item127_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item127_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item127_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item127_item0_item0_elems { var5_item127_item0_item0_item0_int, var5_item127_item0_item0_item1_int, var5_item127_item0_item0_item2_int, var5_item127_item0_item0_item3_int, };
	Constant* var5_item127_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item127_item0_item0_elems);
	ArrayRef<Constant*> var5_item127_item0_elems { var5_item127_item0_item0_struct, };
	Constant* var5_item127_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item127_item0_elems);
	Constant* var5_item127_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item127_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item127_elems { var5_item127_item0_struct, var5_item127_item1_int, var5_item127_item2_int, };
	Constant* var5_item127_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item127_elems);
	Constant* var5_item128_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item128_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item128_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item128_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item128_item0_item0_elems { var5_item128_item0_item0_item0_int, var5_item128_item0_item0_item1_int, var5_item128_item0_item0_item2_int, var5_item128_item0_item0_item3_int, };
	Constant* var5_item128_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item128_item0_item0_elems);
	ArrayRef<Constant*> var5_item128_item0_elems { var5_item128_item0_item0_struct, };
	Constant* var5_item128_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item128_item0_elems);
	Constant* var5_item128_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item128_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item128_elems { var5_item128_item0_struct, var5_item128_item1_int, var5_item128_item2_int, };
	Constant* var5_item128_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item128_elems);
	Constant* var5_item129_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item129_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item129_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item129_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item129_item0_item0_elems { var5_item129_item0_item0_item0_int, var5_item129_item0_item0_item1_int, var5_item129_item0_item0_item2_int, var5_item129_item0_item0_item3_int, };
	Constant* var5_item129_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item129_item0_item0_elems);
	ArrayRef<Constant*> var5_item129_item0_elems { var5_item129_item0_item0_struct, };
	Constant* var5_item129_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item129_item0_elems);
	Constant* var5_item129_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item129_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item129_elems { var5_item129_item0_struct, var5_item129_item1_int, var5_item129_item2_int, };
	Constant* var5_item129_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item129_elems);
	Constant* var5_item130_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item130_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item130_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item130_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item130_item0_item0_elems { var5_item130_item0_item0_item0_int, var5_item130_item0_item0_item1_int, var5_item130_item0_item0_item2_int, var5_item130_item0_item0_item3_int, };
	Constant* var5_item130_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item130_item0_item0_elems);
	ArrayRef<Constant*> var5_item130_item0_elems { var5_item130_item0_item0_struct, };
	Constant* var5_item130_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item130_item0_elems);
	Constant* var5_item130_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item130_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item130_elems { var5_item130_item0_struct, var5_item130_item1_int, var5_item130_item2_int, };
	Constant* var5_item130_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item130_elems);
	Constant* var5_item131_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item131_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item131_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item131_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item131_item0_item0_elems { var5_item131_item0_item0_item0_int, var5_item131_item0_item0_item1_int, var5_item131_item0_item0_item2_int, var5_item131_item0_item0_item3_int, };
	Constant* var5_item131_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item131_item0_item0_elems);
	ArrayRef<Constant*> var5_item131_item0_elems { var5_item131_item0_item0_struct, };
	Constant* var5_item131_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item131_item0_elems);
	Constant* var5_item131_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item131_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item131_elems { var5_item131_item0_struct, var5_item131_item1_int, var5_item131_item2_int, };
	Constant* var5_item131_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item131_elems);
	Constant* var5_item132_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item132_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item132_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item132_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item132_item0_item0_elems { var5_item132_item0_item0_item0_int, var5_item132_item0_item0_item1_int, var5_item132_item0_item0_item2_int, var5_item132_item0_item0_item3_int, };
	Constant* var5_item132_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item132_item0_item0_elems);
	ArrayRef<Constant*> var5_item132_item0_elems { var5_item132_item0_item0_struct, };
	Constant* var5_item132_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item132_item0_elems);
	Constant* var5_item132_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item132_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item132_elems { var5_item132_item0_struct, var5_item132_item1_int, var5_item132_item2_int, };
	Constant* var5_item132_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item132_elems);
	Constant* var5_item133_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item133_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item133_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item133_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item133_item0_item0_elems { var5_item133_item0_item0_item0_int, var5_item133_item0_item0_item1_int, var5_item133_item0_item0_item2_int, var5_item133_item0_item0_item3_int, };
	Constant* var5_item133_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item133_item0_item0_elems);
	ArrayRef<Constant*> var5_item133_item0_elems { var5_item133_item0_item0_struct, };
	Constant* var5_item133_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item133_item0_elems);
	Constant* var5_item133_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item133_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item133_elems { var5_item133_item0_struct, var5_item133_item1_int, var5_item133_item2_int, };
	Constant* var5_item133_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item133_elems);
	Constant* var5_item134_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item134_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item134_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item134_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item134_item0_item0_elems { var5_item134_item0_item0_item0_int, var5_item134_item0_item0_item1_int, var5_item134_item0_item0_item2_int, var5_item134_item0_item0_item3_int, };
	Constant* var5_item134_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item134_item0_item0_elems);
	ArrayRef<Constant*> var5_item134_item0_elems { var5_item134_item0_item0_struct, };
	Constant* var5_item134_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item134_item0_elems);
	Constant* var5_item134_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item134_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item134_elems { var5_item134_item0_struct, var5_item134_item1_int, var5_item134_item2_int, };
	Constant* var5_item134_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item134_elems);
	Constant* var5_item135_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item135_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item135_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item135_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item135_item0_item0_elems { var5_item135_item0_item0_item0_int, var5_item135_item0_item0_item1_int, var5_item135_item0_item0_item2_int, var5_item135_item0_item0_item3_int, };
	Constant* var5_item135_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item135_item0_item0_elems);
	ArrayRef<Constant*> var5_item135_item0_elems { var5_item135_item0_item0_struct, };
	Constant* var5_item135_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item135_item0_elems);
	Constant* var5_item135_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item135_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item135_elems { var5_item135_item0_struct, var5_item135_item1_int, var5_item135_item2_int, };
	Constant* var5_item135_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item135_elems);
	Constant* var5_item136_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item136_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item136_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item136_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item136_item0_item0_elems { var5_item136_item0_item0_item0_int, var5_item136_item0_item0_item1_int, var5_item136_item0_item0_item2_int, var5_item136_item0_item0_item3_int, };
	Constant* var5_item136_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item136_item0_item0_elems);
	ArrayRef<Constant*> var5_item136_item0_elems { var5_item136_item0_item0_struct, };
	Constant* var5_item136_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item136_item0_elems);
	Constant* var5_item136_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item136_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item136_elems { var5_item136_item0_struct, var5_item136_item1_int, var5_item136_item2_int, };
	Constant* var5_item136_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item136_elems);
	Constant* var5_item137_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item137_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item137_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item137_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item137_item0_item0_elems { var5_item137_item0_item0_item0_int, var5_item137_item0_item0_item1_int, var5_item137_item0_item0_item2_int, var5_item137_item0_item0_item3_int, };
	Constant* var5_item137_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item137_item0_item0_elems);
	ArrayRef<Constant*> var5_item137_item0_elems { var5_item137_item0_item0_struct, };
	Constant* var5_item137_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item137_item0_elems);
	Constant* var5_item137_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item137_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item137_elems { var5_item137_item0_struct, var5_item137_item1_int, var5_item137_item2_int, };
	Constant* var5_item137_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item137_elems);
	Constant* var5_item138_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item138_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item138_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item138_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item138_item0_item0_elems { var5_item138_item0_item0_item0_int, var5_item138_item0_item0_item1_int, var5_item138_item0_item0_item2_int, var5_item138_item0_item0_item3_int, };
	Constant* var5_item138_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item138_item0_item0_elems);
	ArrayRef<Constant*> var5_item138_item0_elems { var5_item138_item0_item0_struct, };
	Constant* var5_item138_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item138_item0_elems);
	Constant* var5_item138_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item138_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item138_elems { var5_item138_item0_struct, var5_item138_item1_int, var5_item138_item2_int, };
	Constant* var5_item138_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item138_elems);
	Constant* var5_item139_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item139_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item139_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item139_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item139_item0_item0_elems { var5_item139_item0_item0_item0_int, var5_item139_item0_item0_item1_int, var5_item139_item0_item0_item2_int, var5_item139_item0_item0_item3_int, };
	Constant* var5_item139_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item139_item0_item0_elems);
	ArrayRef<Constant*> var5_item139_item0_elems { var5_item139_item0_item0_struct, };
	Constant* var5_item139_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item139_item0_elems);
	Constant* var5_item139_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item139_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item139_elems { var5_item139_item0_struct, var5_item139_item1_int, var5_item139_item2_int, };
	Constant* var5_item139_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item139_elems);
	Constant* var5_item140_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item140_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item140_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item140_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item140_item0_item0_elems { var5_item140_item0_item0_item0_int, var5_item140_item0_item0_item1_int, var5_item140_item0_item0_item2_int, var5_item140_item0_item0_item3_int, };
	Constant* var5_item140_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item140_item0_item0_elems);
	ArrayRef<Constant*> var5_item140_item0_elems { var5_item140_item0_item0_struct, };
	Constant* var5_item140_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item140_item0_elems);
	Constant* var5_item140_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item140_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item140_elems { var5_item140_item0_struct, var5_item140_item1_int, var5_item140_item2_int, };
	Constant* var5_item140_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item140_elems);
	Constant* var5_item141_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item141_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item141_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item141_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item141_item0_item0_elems { var5_item141_item0_item0_item0_int, var5_item141_item0_item0_item1_int, var5_item141_item0_item0_item2_int, var5_item141_item0_item0_item3_int, };
	Constant* var5_item141_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item141_item0_item0_elems);
	ArrayRef<Constant*> var5_item141_item0_elems { var5_item141_item0_item0_struct, };
	Constant* var5_item141_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item141_item0_elems);
	Constant* var5_item141_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item141_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item141_elems { var5_item141_item0_struct, var5_item141_item1_int, var5_item141_item2_int, };
	Constant* var5_item141_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item141_elems);
	Constant* var5_item142_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item142_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item142_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item142_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item142_item0_item0_elems { var5_item142_item0_item0_item0_int, var5_item142_item0_item0_item1_int, var5_item142_item0_item0_item2_int, var5_item142_item0_item0_item3_int, };
	Constant* var5_item142_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item142_item0_item0_elems);
	ArrayRef<Constant*> var5_item142_item0_elems { var5_item142_item0_item0_struct, };
	Constant* var5_item142_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item142_item0_elems);
	Constant* var5_item142_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item142_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item142_elems { var5_item142_item0_struct, var5_item142_item1_int, var5_item142_item2_int, };
	Constant* var5_item142_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item142_elems);
	Constant* var5_item143_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item143_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item143_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item143_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item143_item0_item0_elems { var5_item143_item0_item0_item0_int, var5_item143_item0_item0_item1_int, var5_item143_item0_item0_item2_int, var5_item143_item0_item0_item3_int, };
	Constant* var5_item143_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item143_item0_item0_elems);
	ArrayRef<Constant*> var5_item143_item0_elems { var5_item143_item0_item0_struct, };
	Constant* var5_item143_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item143_item0_elems);
	Constant* var5_item143_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item143_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item143_elems { var5_item143_item0_struct, var5_item143_item1_int, var5_item143_item2_int, };
	Constant* var5_item143_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item143_elems);
	Constant* var5_item144_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item144_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item144_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item144_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item144_item0_item0_elems { var5_item144_item0_item0_item0_int, var5_item144_item0_item0_item1_int, var5_item144_item0_item0_item2_int, var5_item144_item0_item0_item3_int, };
	Constant* var5_item144_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item144_item0_item0_elems);
	ArrayRef<Constant*> var5_item144_item0_elems { var5_item144_item0_item0_struct, };
	Constant* var5_item144_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item144_item0_elems);
	Constant* var5_item144_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item144_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item144_elems { var5_item144_item0_struct, var5_item144_item1_int, var5_item144_item2_int, };
	Constant* var5_item144_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item144_elems);
	Constant* var5_item145_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item145_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item145_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item145_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item145_item0_item0_elems { var5_item145_item0_item0_item0_int, var5_item145_item0_item0_item1_int, var5_item145_item0_item0_item2_int, var5_item145_item0_item0_item3_int, };
	Constant* var5_item145_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item145_item0_item0_elems);
	ArrayRef<Constant*> var5_item145_item0_elems { var5_item145_item0_item0_struct, };
	Constant* var5_item145_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item145_item0_elems);
	Constant* var5_item145_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item145_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item145_elems { var5_item145_item0_struct, var5_item145_item1_int, var5_item145_item2_int, };
	Constant* var5_item145_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item145_elems);
	Constant* var5_item146_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item146_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item146_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item146_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item146_item0_item0_elems { var5_item146_item0_item0_item0_int, var5_item146_item0_item0_item1_int, var5_item146_item0_item0_item2_int, var5_item146_item0_item0_item3_int, };
	Constant* var5_item146_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item146_item0_item0_elems);
	ArrayRef<Constant*> var5_item146_item0_elems { var5_item146_item0_item0_struct, };
	Constant* var5_item146_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item146_item0_elems);
	Constant* var5_item146_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item146_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item146_elems { var5_item146_item0_struct, var5_item146_item1_int, var5_item146_item2_int, };
	Constant* var5_item146_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item146_elems);
	Constant* var5_item147_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item147_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item147_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item147_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item147_item0_item0_elems { var5_item147_item0_item0_item0_int, var5_item147_item0_item0_item1_int, var5_item147_item0_item0_item2_int, var5_item147_item0_item0_item3_int, };
	Constant* var5_item147_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item147_item0_item0_elems);
	ArrayRef<Constant*> var5_item147_item0_elems { var5_item147_item0_item0_struct, };
	Constant* var5_item147_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item147_item0_elems);
	Constant* var5_item147_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item147_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item147_elems { var5_item147_item0_struct, var5_item147_item1_int, var5_item147_item2_int, };
	Constant* var5_item147_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item147_elems);
	Constant* var5_item148_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item148_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item148_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item148_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item148_item0_item0_elems { var5_item148_item0_item0_item0_int, var5_item148_item0_item0_item1_int, var5_item148_item0_item0_item2_int, var5_item148_item0_item0_item3_int, };
	Constant* var5_item148_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item148_item0_item0_elems);
	ArrayRef<Constant*> var5_item148_item0_elems { var5_item148_item0_item0_struct, };
	Constant* var5_item148_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item148_item0_elems);
	Constant* var5_item148_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item148_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item148_elems { var5_item148_item0_struct, var5_item148_item1_int, var5_item148_item2_int, };
	Constant* var5_item148_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item148_elems);
	Constant* var5_item149_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item149_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item149_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item149_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item149_item0_item0_elems { var5_item149_item0_item0_item0_int, var5_item149_item0_item0_item1_int, var5_item149_item0_item0_item2_int, var5_item149_item0_item0_item3_int, };
	Constant* var5_item149_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item149_item0_item0_elems);
	ArrayRef<Constant*> var5_item149_item0_elems { var5_item149_item0_item0_struct, };
	Constant* var5_item149_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item149_item0_elems);
	Constant* var5_item149_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item149_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item149_elems { var5_item149_item0_struct, var5_item149_item1_int, var5_item149_item2_int, };
	Constant* var5_item149_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item149_elems);
	Constant* var5_item150_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item150_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item150_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item150_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item150_item0_item0_elems { var5_item150_item0_item0_item0_int, var5_item150_item0_item0_item1_int, var5_item150_item0_item0_item2_int, var5_item150_item0_item0_item3_int, };
	Constant* var5_item150_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item150_item0_item0_elems);
	ArrayRef<Constant*> var5_item150_item0_elems { var5_item150_item0_item0_struct, };
	Constant* var5_item150_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item150_item0_elems);
	Constant* var5_item150_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item150_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item150_elems { var5_item150_item0_struct, var5_item150_item1_int, var5_item150_item2_int, };
	Constant* var5_item150_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item150_elems);
	Constant* var5_item151_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item151_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item151_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item151_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item151_item0_item0_elems { var5_item151_item0_item0_item0_int, var5_item151_item0_item0_item1_int, var5_item151_item0_item0_item2_int, var5_item151_item0_item0_item3_int, };
	Constant* var5_item151_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item151_item0_item0_elems);
	ArrayRef<Constant*> var5_item151_item0_elems { var5_item151_item0_item0_struct, };
	Constant* var5_item151_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item151_item0_elems);
	Constant* var5_item151_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item151_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item151_elems { var5_item151_item0_struct, var5_item151_item1_int, var5_item151_item2_int, };
	Constant* var5_item151_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item151_elems);
	Constant* var5_item152_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item152_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item152_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item152_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item152_item0_item0_elems { var5_item152_item0_item0_item0_int, var5_item152_item0_item0_item1_int, var5_item152_item0_item0_item2_int, var5_item152_item0_item0_item3_int, };
	Constant* var5_item152_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item152_item0_item0_elems);
	ArrayRef<Constant*> var5_item152_item0_elems { var5_item152_item0_item0_struct, };
	Constant* var5_item152_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item152_item0_elems);
	Constant* var5_item152_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item152_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item152_elems { var5_item152_item0_struct, var5_item152_item1_int, var5_item152_item2_int, };
	Constant* var5_item152_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item152_elems);
	Constant* var5_item153_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item153_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item153_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item153_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item153_item0_item0_elems { var5_item153_item0_item0_item0_int, var5_item153_item0_item0_item1_int, var5_item153_item0_item0_item2_int, var5_item153_item0_item0_item3_int, };
	Constant* var5_item153_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item153_item0_item0_elems);
	ArrayRef<Constant*> var5_item153_item0_elems { var5_item153_item0_item0_struct, };
	Constant* var5_item153_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item153_item0_elems);
	Constant* var5_item153_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item153_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item153_elems { var5_item153_item0_struct, var5_item153_item1_int, var5_item153_item2_int, };
	Constant* var5_item153_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item153_elems);
	Constant* var5_item154_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item154_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item154_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item154_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item154_item0_item0_elems { var5_item154_item0_item0_item0_int, var5_item154_item0_item0_item1_int, var5_item154_item0_item0_item2_int, var5_item154_item0_item0_item3_int, };
	Constant* var5_item154_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item154_item0_item0_elems);
	ArrayRef<Constant*> var5_item154_item0_elems { var5_item154_item0_item0_struct, };
	Constant* var5_item154_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item154_item0_elems);
	Constant* var5_item154_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item154_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item154_elems { var5_item154_item0_struct, var5_item154_item1_int, var5_item154_item2_int, };
	Constant* var5_item154_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item154_elems);
	Constant* var5_item155_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item155_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item155_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item155_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item155_item0_item0_elems { var5_item155_item0_item0_item0_int, var5_item155_item0_item0_item1_int, var5_item155_item0_item0_item2_int, var5_item155_item0_item0_item3_int, };
	Constant* var5_item155_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item155_item0_item0_elems);
	ArrayRef<Constant*> var5_item155_item0_elems { var5_item155_item0_item0_struct, };
	Constant* var5_item155_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item155_item0_elems);
	Constant* var5_item155_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item155_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item155_elems { var5_item155_item0_struct, var5_item155_item1_int, var5_item155_item2_int, };
	Constant* var5_item155_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item155_elems);
	Constant* var5_item156_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item156_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item156_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item156_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item156_item0_item0_elems { var5_item156_item0_item0_item0_int, var5_item156_item0_item0_item1_int, var5_item156_item0_item0_item2_int, var5_item156_item0_item0_item3_int, };
	Constant* var5_item156_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item156_item0_item0_elems);
	ArrayRef<Constant*> var5_item156_item0_elems { var5_item156_item0_item0_struct, };
	Constant* var5_item156_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item156_item0_elems);
	Constant* var5_item156_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item156_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item156_elems { var5_item156_item0_struct, var5_item156_item1_int, var5_item156_item2_int, };
	Constant* var5_item156_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item156_elems);
	Constant* var5_item157_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item157_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item157_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item157_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item157_item0_item0_elems { var5_item157_item0_item0_item0_int, var5_item157_item0_item0_item1_int, var5_item157_item0_item0_item2_int, var5_item157_item0_item0_item3_int, };
	Constant* var5_item157_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item157_item0_item0_elems);
	ArrayRef<Constant*> var5_item157_item0_elems { var5_item157_item0_item0_struct, };
	Constant* var5_item157_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item157_item0_elems);
	Constant* var5_item157_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item157_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item157_elems { var5_item157_item0_struct, var5_item157_item1_int, var5_item157_item2_int, };
	Constant* var5_item157_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item157_elems);
	Constant* var5_item158_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item158_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item158_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item158_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item158_item0_item0_elems { var5_item158_item0_item0_item0_int, var5_item158_item0_item0_item1_int, var5_item158_item0_item0_item2_int, var5_item158_item0_item0_item3_int, };
	Constant* var5_item158_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item158_item0_item0_elems);
	ArrayRef<Constant*> var5_item158_item0_elems { var5_item158_item0_item0_struct, };
	Constant* var5_item158_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item158_item0_elems);
	Constant* var5_item158_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item158_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item158_elems { var5_item158_item0_struct, var5_item158_item1_int, var5_item158_item2_int, };
	Constant* var5_item158_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item158_elems);
	Constant* var5_item159_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item159_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item159_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item159_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item159_item0_item0_elems { var5_item159_item0_item0_item0_int, var5_item159_item0_item0_item1_int, var5_item159_item0_item0_item2_int, var5_item159_item0_item0_item3_int, };
	Constant* var5_item159_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item159_item0_item0_elems);
	ArrayRef<Constant*> var5_item159_item0_elems { var5_item159_item0_item0_struct, };
	Constant* var5_item159_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item159_item0_elems);
	Constant* var5_item159_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item159_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item159_elems { var5_item159_item0_struct, var5_item159_item1_int, var5_item159_item2_int, };
	Constant* var5_item159_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item159_elems);
	Constant* var5_item160_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item160_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item160_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item160_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item160_item0_item0_elems { var5_item160_item0_item0_item0_int, var5_item160_item0_item0_item1_int, var5_item160_item0_item0_item2_int, var5_item160_item0_item0_item3_int, };
	Constant* var5_item160_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item160_item0_item0_elems);
	ArrayRef<Constant*> var5_item160_item0_elems { var5_item160_item0_item0_struct, };
	Constant* var5_item160_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item160_item0_elems);
	Constant* var5_item160_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item160_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item160_elems { var5_item160_item0_struct, var5_item160_item1_int, var5_item160_item2_int, };
	Constant* var5_item160_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item160_elems);
	Constant* var5_item161_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item161_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item161_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item161_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item161_item0_item0_elems { var5_item161_item0_item0_item0_int, var5_item161_item0_item0_item1_int, var5_item161_item0_item0_item2_int, var5_item161_item0_item0_item3_int, };
	Constant* var5_item161_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item161_item0_item0_elems);
	ArrayRef<Constant*> var5_item161_item0_elems { var5_item161_item0_item0_struct, };
	Constant* var5_item161_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item161_item0_elems);
	Constant* var5_item161_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item161_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item161_elems { var5_item161_item0_struct, var5_item161_item1_int, var5_item161_item2_int, };
	Constant* var5_item161_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item161_elems);
	Constant* var5_item162_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item162_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item162_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item162_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item162_item0_item0_elems { var5_item162_item0_item0_item0_int, var5_item162_item0_item0_item1_int, var5_item162_item0_item0_item2_int, var5_item162_item0_item0_item3_int, };
	Constant* var5_item162_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item162_item0_item0_elems);
	ArrayRef<Constant*> var5_item162_item0_elems { var5_item162_item0_item0_struct, };
	Constant* var5_item162_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item162_item0_elems);
	Constant* var5_item162_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item162_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item162_elems { var5_item162_item0_struct, var5_item162_item1_int, var5_item162_item2_int, };
	Constant* var5_item162_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item162_elems);
	Constant* var5_item163_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item163_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item163_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item163_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item163_item0_item0_elems { var5_item163_item0_item0_item0_int, var5_item163_item0_item0_item1_int, var5_item163_item0_item0_item2_int, var5_item163_item0_item0_item3_int, };
	Constant* var5_item163_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item163_item0_item0_elems);
	ArrayRef<Constant*> var5_item163_item0_elems { var5_item163_item0_item0_struct, };
	Constant* var5_item163_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item163_item0_elems);
	Constant* var5_item163_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item163_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item163_elems { var5_item163_item0_struct, var5_item163_item1_int, var5_item163_item2_int, };
	Constant* var5_item163_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item163_elems);
	Constant* var5_item164_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item164_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item164_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item164_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item164_item0_item0_elems { var5_item164_item0_item0_item0_int, var5_item164_item0_item0_item1_int, var5_item164_item0_item0_item2_int, var5_item164_item0_item0_item3_int, };
	Constant* var5_item164_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item164_item0_item0_elems);
	ArrayRef<Constant*> var5_item164_item0_elems { var5_item164_item0_item0_struct, };
	Constant* var5_item164_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item164_item0_elems);
	Constant* var5_item164_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item164_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item164_elems { var5_item164_item0_struct, var5_item164_item1_int, var5_item164_item2_int, };
	Constant* var5_item164_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item164_elems);
	Constant* var5_item165_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item165_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item165_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item165_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item165_item0_item0_elems { var5_item165_item0_item0_item0_int, var5_item165_item0_item0_item1_int, var5_item165_item0_item0_item2_int, var5_item165_item0_item0_item3_int, };
	Constant* var5_item165_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item165_item0_item0_elems);
	ArrayRef<Constant*> var5_item165_item0_elems { var5_item165_item0_item0_struct, };
	Constant* var5_item165_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item165_item0_elems);
	Constant* var5_item165_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item165_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item165_elems { var5_item165_item0_struct, var5_item165_item1_int, var5_item165_item2_int, };
	Constant* var5_item165_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item165_elems);
	Constant* var5_item166_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item166_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item166_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item166_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item166_item0_item0_elems { var5_item166_item0_item0_item0_int, var5_item166_item0_item0_item1_int, var5_item166_item0_item0_item2_int, var5_item166_item0_item0_item3_int, };
	Constant* var5_item166_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item166_item0_item0_elems);
	ArrayRef<Constant*> var5_item166_item0_elems { var5_item166_item0_item0_struct, };
	Constant* var5_item166_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item166_item0_elems);
	Constant* var5_item166_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item166_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item166_elems { var5_item166_item0_struct, var5_item166_item1_int, var5_item166_item2_int, };
	Constant* var5_item166_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item166_elems);
	Constant* var5_item167_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item167_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item167_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item167_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item167_item0_item0_elems { var5_item167_item0_item0_item0_int, var5_item167_item0_item0_item1_int, var5_item167_item0_item0_item2_int, var5_item167_item0_item0_item3_int, };
	Constant* var5_item167_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item167_item0_item0_elems);
	ArrayRef<Constant*> var5_item167_item0_elems { var5_item167_item0_item0_struct, };
	Constant* var5_item167_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item167_item0_elems);
	Constant* var5_item167_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item167_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item167_elems { var5_item167_item0_struct, var5_item167_item1_int, var5_item167_item2_int, };
	Constant* var5_item167_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item167_elems);
	Constant* var5_item168_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item168_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item168_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item168_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item168_item0_item0_elems { var5_item168_item0_item0_item0_int, var5_item168_item0_item0_item1_int, var5_item168_item0_item0_item2_int, var5_item168_item0_item0_item3_int, };
	Constant* var5_item168_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item168_item0_item0_elems);
	ArrayRef<Constant*> var5_item168_item0_elems { var5_item168_item0_item0_struct, };
	Constant* var5_item168_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item168_item0_elems);
	Constant* var5_item168_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item168_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item168_elems { var5_item168_item0_struct, var5_item168_item1_int, var5_item168_item2_int, };
	Constant* var5_item168_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item168_elems);
	Constant* var5_item169_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item169_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item169_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item169_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item169_item0_item0_elems { var5_item169_item0_item0_item0_int, var5_item169_item0_item0_item1_int, var5_item169_item0_item0_item2_int, var5_item169_item0_item0_item3_int, };
	Constant* var5_item169_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item169_item0_item0_elems);
	ArrayRef<Constant*> var5_item169_item0_elems { var5_item169_item0_item0_struct, };
	Constant* var5_item169_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item169_item0_elems);
	Constant* var5_item169_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item169_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item169_elems { var5_item169_item0_struct, var5_item169_item1_int, var5_item169_item2_int, };
	Constant* var5_item169_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item169_elems);
	Constant* var5_item170_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item170_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item170_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item170_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item170_item0_item0_elems { var5_item170_item0_item0_item0_int, var5_item170_item0_item0_item1_int, var5_item170_item0_item0_item2_int, var5_item170_item0_item0_item3_int, };
	Constant* var5_item170_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item170_item0_item0_elems);
	ArrayRef<Constant*> var5_item170_item0_elems { var5_item170_item0_item0_struct, };
	Constant* var5_item170_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item170_item0_elems);
	Constant* var5_item170_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item170_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item170_elems { var5_item170_item0_struct, var5_item170_item1_int, var5_item170_item2_int, };
	Constant* var5_item170_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item170_elems);
	Constant* var5_item171_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item171_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item171_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item171_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item171_item0_item0_elems { var5_item171_item0_item0_item0_int, var5_item171_item0_item0_item1_int, var5_item171_item0_item0_item2_int, var5_item171_item0_item0_item3_int, };
	Constant* var5_item171_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item171_item0_item0_elems);
	ArrayRef<Constant*> var5_item171_item0_elems { var5_item171_item0_item0_struct, };
	Constant* var5_item171_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item171_item0_elems);
	Constant* var5_item171_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item171_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item171_elems { var5_item171_item0_struct, var5_item171_item1_int, var5_item171_item2_int, };
	Constant* var5_item171_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item171_elems);
	Constant* var5_item172_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item172_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item172_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item172_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item172_item0_item0_elems { var5_item172_item0_item0_item0_int, var5_item172_item0_item0_item1_int, var5_item172_item0_item0_item2_int, var5_item172_item0_item0_item3_int, };
	Constant* var5_item172_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item172_item0_item0_elems);
	ArrayRef<Constant*> var5_item172_item0_elems { var5_item172_item0_item0_struct, };
	Constant* var5_item172_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item172_item0_elems);
	Constant* var5_item172_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item172_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item172_elems { var5_item172_item0_struct, var5_item172_item1_int, var5_item172_item2_int, };
	Constant* var5_item172_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item172_elems);
	Constant* var5_item173_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item173_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item173_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item173_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item173_item0_item0_elems { var5_item173_item0_item0_item0_int, var5_item173_item0_item0_item1_int, var5_item173_item0_item0_item2_int, var5_item173_item0_item0_item3_int, };
	Constant* var5_item173_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item173_item0_item0_elems);
	ArrayRef<Constant*> var5_item173_item0_elems { var5_item173_item0_item0_struct, };
	Constant* var5_item173_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item173_item0_elems);
	Constant* var5_item173_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item173_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item173_elems { var5_item173_item0_struct, var5_item173_item1_int, var5_item173_item2_int, };
	Constant* var5_item173_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item173_elems);
	Constant* var5_item174_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item174_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item174_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item174_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item174_item0_item0_elems { var5_item174_item0_item0_item0_int, var5_item174_item0_item0_item1_int, var5_item174_item0_item0_item2_int, var5_item174_item0_item0_item3_int, };
	Constant* var5_item174_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item174_item0_item0_elems);
	ArrayRef<Constant*> var5_item174_item0_elems { var5_item174_item0_item0_struct, };
	Constant* var5_item174_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item174_item0_elems);
	Constant* var5_item174_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item174_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item174_elems { var5_item174_item0_struct, var5_item174_item1_int, var5_item174_item2_int, };
	Constant* var5_item174_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item174_elems);
	Constant* var5_item175_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item175_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item175_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item175_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item175_item0_item0_elems { var5_item175_item0_item0_item0_int, var5_item175_item0_item0_item1_int, var5_item175_item0_item0_item2_int, var5_item175_item0_item0_item3_int, };
	Constant* var5_item175_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item175_item0_item0_elems);
	ArrayRef<Constant*> var5_item175_item0_elems { var5_item175_item0_item0_struct, };
	Constant* var5_item175_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item175_item0_elems);
	Constant* var5_item175_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item175_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item175_elems { var5_item175_item0_struct, var5_item175_item1_int, var5_item175_item2_int, };
	Constant* var5_item175_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item175_elems);
	Constant* var5_item176_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item176_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item176_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item176_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item176_item0_item0_elems { var5_item176_item0_item0_item0_int, var5_item176_item0_item0_item1_int, var5_item176_item0_item0_item2_int, var5_item176_item0_item0_item3_int, };
	Constant* var5_item176_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item176_item0_item0_elems);
	ArrayRef<Constant*> var5_item176_item0_elems { var5_item176_item0_item0_struct, };
	Constant* var5_item176_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item176_item0_elems);
	Constant* var5_item176_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item176_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item176_elems { var5_item176_item0_struct, var5_item176_item1_int, var5_item176_item2_int, };
	Constant* var5_item176_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item176_elems);
	Constant* var5_item177_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item177_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item177_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item177_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item177_item0_item0_elems { var5_item177_item0_item0_item0_int, var5_item177_item0_item0_item1_int, var5_item177_item0_item0_item2_int, var5_item177_item0_item0_item3_int, };
	Constant* var5_item177_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item177_item0_item0_elems);
	ArrayRef<Constant*> var5_item177_item0_elems { var5_item177_item0_item0_struct, };
	Constant* var5_item177_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item177_item0_elems);
	Constant* var5_item177_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item177_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item177_elems { var5_item177_item0_struct, var5_item177_item1_int, var5_item177_item2_int, };
	Constant* var5_item177_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item177_elems);
	Constant* var5_item178_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item178_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item178_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item178_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item178_item0_item0_elems { var5_item178_item0_item0_item0_int, var5_item178_item0_item0_item1_int, var5_item178_item0_item0_item2_int, var5_item178_item0_item0_item3_int, };
	Constant* var5_item178_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item178_item0_item0_elems);
	ArrayRef<Constant*> var5_item178_item0_elems { var5_item178_item0_item0_struct, };
	Constant* var5_item178_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item178_item0_elems);
	Constant* var5_item178_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item178_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item178_elems { var5_item178_item0_struct, var5_item178_item1_int, var5_item178_item2_int, };
	Constant* var5_item178_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item178_elems);
	Constant* var5_item179_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item179_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item179_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item179_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item179_item0_item0_elems { var5_item179_item0_item0_item0_int, var5_item179_item0_item0_item1_int, var5_item179_item0_item0_item2_int, var5_item179_item0_item0_item3_int, };
	Constant* var5_item179_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item179_item0_item0_elems);
	ArrayRef<Constant*> var5_item179_item0_elems { var5_item179_item0_item0_struct, };
	Constant* var5_item179_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item179_item0_elems);
	Constant* var5_item179_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item179_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item179_elems { var5_item179_item0_struct, var5_item179_item1_int, var5_item179_item2_int, };
	Constant* var5_item179_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item179_elems);
	Constant* var5_item180_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item180_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item180_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item180_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item180_item0_item0_elems { var5_item180_item0_item0_item0_int, var5_item180_item0_item0_item1_int, var5_item180_item0_item0_item2_int, var5_item180_item0_item0_item3_int, };
	Constant* var5_item180_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item180_item0_item0_elems);
	ArrayRef<Constant*> var5_item180_item0_elems { var5_item180_item0_item0_struct, };
	Constant* var5_item180_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item180_item0_elems);
	Constant* var5_item180_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item180_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item180_elems { var5_item180_item0_struct, var5_item180_item1_int, var5_item180_item2_int, };
	Constant* var5_item180_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item180_elems);
	Constant* var5_item181_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item181_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item181_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item181_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item181_item0_item0_elems { var5_item181_item0_item0_item0_int, var5_item181_item0_item0_item1_int, var5_item181_item0_item0_item2_int, var5_item181_item0_item0_item3_int, };
	Constant* var5_item181_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item181_item0_item0_elems);
	ArrayRef<Constant*> var5_item181_item0_elems { var5_item181_item0_item0_struct, };
	Constant* var5_item181_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item181_item0_elems);
	Constant* var5_item181_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item181_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item181_elems { var5_item181_item0_struct, var5_item181_item1_int, var5_item181_item2_int, };
	Constant* var5_item181_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item181_elems);
	Constant* var5_item182_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item182_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item182_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item182_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item182_item0_item0_elems { var5_item182_item0_item0_item0_int, var5_item182_item0_item0_item1_int, var5_item182_item0_item0_item2_int, var5_item182_item0_item0_item3_int, };
	Constant* var5_item182_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item182_item0_item0_elems);
	ArrayRef<Constant*> var5_item182_item0_elems { var5_item182_item0_item0_struct, };
	Constant* var5_item182_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item182_item0_elems);
	Constant* var5_item182_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item182_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item182_elems { var5_item182_item0_struct, var5_item182_item1_int, var5_item182_item2_int, };
	Constant* var5_item182_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item182_elems);
	Constant* var5_item183_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item183_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item183_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item183_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item183_item0_item0_elems { var5_item183_item0_item0_item0_int, var5_item183_item0_item0_item1_int, var5_item183_item0_item0_item2_int, var5_item183_item0_item0_item3_int, };
	Constant* var5_item183_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item183_item0_item0_elems);
	ArrayRef<Constant*> var5_item183_item0_elems { var5_item183_item0_item0_struct, };
	Constant* var5_item183_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item183_item0_elems);
	Constant* var5_item183_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item183_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item183_elems { var5_item183_item0_struct, var5_item183_item1_int, var5_item183_item2_int, };
	Constant* var5_item183_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item183_elems);
	Constant* var5_item184_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item184_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item184_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item184_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item184_item0_item0_elems { var5_item184_item0_item0_item0_int, var5_item184_item0_item0_item1_int, var5_item184_item0_item0_item2_int, var5_item184_item0_item0_item3_int, };
	Constant* var5_item184_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item184_item0_item0_elems);
	ArrayRef<Constant*> var5_item184_item0_elems { var5_item184_item0_item0_struct, };
	Constant* var5_item184_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item184_item0_elems);
	Constant* var5_item184_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item184_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item184_elems { var5_item184_item0_struct, var5_item184_item1_int, var5_item184_item2_int, };
	Constant* var5_item184_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item184_elems);
	Constant* var5_item185_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item185_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item185_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item185_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item185_item0_item0_elems { var5_item185_item0_item0_item0_int, var5_item185_item0_item0_item1_int, var5_item185_item0_item0_item2_int, var5_item185_item0_item0_item3_int, };
	Constant* var5_item185_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item185_item0_item0_elems);
	ArrayRef<Constant*> var5_item185_item0_elems { var5_item185_item0_item0_struct, };
	Constant* var5_item185_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item185_item0_elems);
	Constant* var5_item185_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item185_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item185_elems { var5_item185_item0_struct, var5_item185_item1_int, var5_item185_item2_int, };
	Constant* var5_item185_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item185_elems);
	Constant* var5_item186_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item186_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item186_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item186_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item186_item0_item0_elems { var5_item186_item0_item0_item0_int, var5_item186_item0_item0_item1_int, var5_item186_item0_item0_item2_int, var5_item186_item0_item0_item3_int, };
	Constant* var5_item186_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item186_item0_item0_elems);
	ArrayRef<Constant*> var5_item186_item0_elems { var5_item186_item0_item0_struct, };
	Constant* var5_item186_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item186_item0_elems);
	Constant* var5_item186_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item186_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item186_elems { var5_item186_item0_struct, var5_item186_item1_int, var5_item186_item2_int, };
	Constant* var5_item186_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item186_elems);
	Constant* var5_item187_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item187_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item187_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item187_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item187_item0_item0_elems { var5_item187_item0_item0_item0_int, var5_item187_item0_item0_item1_int, var5_item187_item0_item0_item2_int, var5_item187_item0_item0_item3_int, };
	Constant* var5_item187_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item187_item0_item0_elems);
	ArrayRef<Constant*> var5_item187_item0_elems { var5_item187_item0_item0_struct, };
	Constant* var5_item187_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item187_item0_elems);
	Constant* var5_item187_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item187_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item187_elems { var5_item187_item0_struct, var5_item187_item1_int, var5_item187_item2_int, };
	Constant* var5_item187_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item187_elems);
	Constant* var5_item188_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item188_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item188_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item188_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item188_item0_item0_elems { var5_item188_item0_item0_item0_int, var5_item188_item0_item0_item1_int, var5_item188_item0_item0_item2_int, var5_item188_item0_item0_item3_int, };
	Constant* var5_item188_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item188_item0_item0_elems);
	ArrayRef<Constant*> var5_item188_item0_elems { var5_item188_item0_item0_struct, };
	Constant* var5_item188_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item188_item0_elems);
	Constant* var5_item188_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item188_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item188_elems { var5_item188_item0_struct, var5_item188_item1_int, var5_item188_item2_int, };
	Constant* var5_item188_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item188_elems);
	Constant* var5_item189_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item189_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item189_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item189_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item189_item0_item0_elems { var5_item189_item0_item0_item0_int, var5_item189_item0_item0_item1_int, var5_item189_item0_item0_item2_int, var5_item189_item0_item0_item3_int, };
	Constant* var5_item189_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item189_item0_item0_elems);
	ArrayRef<Constant*> var5_item189_item0_elems { var5_item189_item0_item0_struct, };
	Constant* var5_item189_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item189_item0_elems);
	Constant* var5_item189_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item189_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item189_elems { var5_item189_item0_struct, var5_item189_item1_int, var5_item189_item2_int, };
	Constant* var5_item189_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item189_elems);
	Constant* var5_item190_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item190_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item190_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item190_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item190_item0_item0_elems { var5_item190_item0_item0_item0_int, var5_item190_item0_item0_item1_int, var5_item190_item0_item0_item2_int, var5_item190_item0_item0_item3_int, };
	Constant* var5_item190_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item190_item0_item0_elems);
	ArrayRef<Constant*> var5_item190_item0_elems { var5_item190_item0_item0_struct, };
	Constant* var5_item190_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item190_item0_elems);
	Constant* var5_item190_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item190_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item190_elems { var5_item190_item0_struct, var5_item190_item1_int, var5_item190_item2_int, };
	Constant* var5_item190_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item190_elems);
	Constant* var5_item191_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item191_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item191_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item191_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item191_item0_item0_elems { var5_item191_item0_item0_item0_int, var5_item191_item0_item0_item1_int, var5_item191_item0_item0_item2_int, var5_item191_item0_item0_item3_int, };
	Constant* var5_item191_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item191_item0_item0_elems);
	ArrayRef<Constant*> var5_item191_item0_elems { var5_item191_item0_item0_struct, };
	Constant* var5_item191_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item191_item0_elems);
	Constant* var5_item191_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item191_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item191_elems { var5_item191_item0_struct, var5_item191_item1_int, var5_item191_item2_int, };
	Constant* var5_item191_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item191_elems);
	Constant* var5_item192_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item192_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item192_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item192_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item192_item0_item0_elems { var5_item192_item0_item0_item0_int, var5_item192_item0_item0_item1_int, var5_item192_item0_item0_item2_int, var5_item192_item0_item0_item3_int, };
	Constant* var5_item192_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item192_item0_item0_elems);
	ArrayRef<Constant*> var5_item192_item0_elems { var5_item192_item0_item0_struct, };
	Constant* var5_item192_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item192_item0_elems);
	Constant* var5_item192_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item192_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item192_elems { var5_item192_item0_struct, var5_item192_item1_int, var5_item192_item2_int, };
	Constant* var5_item192_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item192_elems);
	Constant* var5_item193_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item193_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item193_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item193_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item193_item0_item0_elems { var5_item193_item0_item0_item0_int, var5_item193_item0_item0_item1_int, var5_item193_item0_item0_item2_int, var5_item193_item0_item0_item3_int, };
	Constant* var5_item193_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item193_item0_item0_elems);
	ArrayRef<Constant*> var5_item193_item0_elems { var5_item193_item0_item0_struct, };
	Constant* var5_item193_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item193_item0_elems);
	Constant* var5_item193_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item193_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item193_elems { var5_item193_item0_struct, var5_item193_item1_int, var5_item193_item2_int, };
	Constant* var5_item193_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item193_elems);
	Constant* var5_item194_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item194_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item194_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item194_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item194_item0_item0_elems { var5_item194_item0_item0_item0_int, var5_item194_item0_item0_item1_int, var5_item194_item0_item0_item2_int, var5_item194_item0_item0_item3_int, };
	Constant* var5_item194_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item194_item0_item0_elems);
	ArrayRef<Constant*> var5_item194_item0_elems { var5_item194_item0_item0_struct, };
	Constant* var5_item194_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item194_item0_elems);
	Constant* var5_item194_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item194_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item194_elems { var5_item194_item0_struct, var5_item194_item1_int, var5_item194_item2_int, };
	Constant* var5_item194_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item194_elems);
	Constant* var5_item195_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item195_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item195_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item195_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item195_item0_item0_elems { var5_item195_item0_item0_item0_int, var5_item195_item0_item0_item1_int, var5_item195_item0_item0_item2_int, var5_item195_item0_item0_item3_int, };
	Constant* var5_item195_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item195_item0_item0_elems);
	ArrayRef<Constant*> var5_item195_item0_elems { var5_item195_item0_item0_struct, };
	Constant* var5_item195_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item195_item0_elems);
	Constant* var5_item195_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item195_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item195_elems { var5_item195_item0_struct, var5_item195_item1_int, var5_item195_item2_int, };
	Constant* var5_item195_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item195_elems);
	Constant* var5_item196_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item196_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item196_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item196_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item196_item0_item0_elems { var5_item196_item0_item0_item0_int, var5_item196_item0_item0_item1_int, var5_item196_item0_item0_item2_int, var5_item196_item0_item0_item3_int, };
	Constant* var5_item196_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item196_item0_item0_elems);
	ArrayRef<Constant*> var5_item196_item0_elems { var5_item196_item0_item0_struct, };
	Constant* var5_item196_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item196_item0_elems);
	Constant* var5_item196_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item196_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item196_elems { var5_item196_item0_struct, var5_item196_item1_int, var5_item196_item2_int, };
	Constant* var5_item196_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item196_elems);
	Constant* var5_item197_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item197_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item197_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item197_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item197_item0_item0_elems { var5_item197_item0_item0_item0_int, var5_item197_item0_item0_item1_int, var5_item197_item0_item0_item2_int, var5_item197_item0_item0_item3_int, };
	Constant* var5_item197_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item197_item0_item0_elems);
	ArrayRef<Constant*> var5_item197_item0_elems { var5_item197_item0_item0_struct, };
	Constant* var5_item197_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item197_item0_elems);
	Constant* var5_item197_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item197_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item197_elems { var5_item197_item0_struct, var5_item197_item1_int, var5_item197_item2_int, };
	Constant* var5_item197_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item197_elems);
	Constant* var5_item198_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item198_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item198_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item198_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item198_item0_item0_elems { var5_item198_item0_item0_item0_int, var5_item198_item0_item0_item1_int, var5_item198_item0_item0_item2_int, var5_item198_item0_item0_item3_int, };
	Constant* var5_item198_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item198_item0_item0_elems);
	ArrayRef<Constant*> var5_item198_item0_elems { var5_item198_item0_item0_struct, };
	Constant* var5_item198_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item198_item0_elems);
	Constant* var5_item198_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item198_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item198_elems { var5_item198_item0_struct, var5_item198_item1_int, var5_item198_item2_int, };
	Constant* var5_item198_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item198_elems);
	Constant* var5_item199_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item199_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item199_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item199_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item199_item0_item0_elems { var5_item199_item0_item0_item0_int, var5_item199_item0_item0_item1_int, var5_item199_item0_item0_item2_int, var5_item199_item0_item0_item3_int, };
	Constant* var5_item199_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item199_item0_item0_elems);
	ArrayRef<Constant*> var5_item199_item0_elems { var5_item199_item0_item0_struct, };
	Constant* var5_item199_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item199_item0_elems);
	Constant* var5_item199_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item199_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item199_elems { var5_item199_item0_struct, var5_item199_item1_int, var5_item199_item2_int, };
	Constant* var5_item199_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item199_elems);
	Constant* var5_item200_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item200_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item200_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item200_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item200_item0_item0_elems { var5_item200_item0_item0_item0_int, var5_item200_item0_item0_item1_int, var5_item200_item0_item0_item2_int, var5_item200_item0_item0_item3_int, };
	Constant* var5_item200_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item200_item0_item0_elems);
	ArrayRef<Constant*> var5_item200_item0_elems { var5_item200_item0_item0_struct, };
	Constant* var5_item200_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item200_item0_elems);
	Constant* var5_item200_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item200_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item200_elems { var5_item200_item0_struct, var5_item200_item1_int, var5_item200_item2_int, };
	Constant* var5_item200_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item200_elems);
	Constant* var5_item201_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item201_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item201_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item201_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item201_item0_item0_elems { var5_item201_item0_item0_item0_int, var5_item201_item0_item0_item1_int, var5_item201_item0_item0_item2_int, var5_item201_item0_item0_item3_int, };
	Constant* var5_item201_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item201_item0_item0_elems);
	ArrayRef<Constant*> var5_item201_item0_elems { var5_item201_item0_item0_struct, };
	Constant* var5_item201_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item201_item0_elems);
	Constant* var5_item201_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item201_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item201_elems { var5_item201_item0_struct, var5_item201_item1_int, var5_item201_item2_int, };
	Constant* var5_item201_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item201_elems);
	Constant* var5_item202_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item202_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item202_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item202_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item202_item0_item0_elems { var5_item202_item0_item0_item0_int, var5_item202_item0_item0_item1_int, var5_item202_item0_item0_item2_int, var5_item202_item0_item0_item3_int, };
	Constant* var5_item202_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item202_item0_item0_elems);
	ArrayRef<Constant*> var5_item202_item0_elems { var5_item202_item0_item0_struct, };
	Constant* var5_item202_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item202_item0_elems);
	Constant* var5_item202_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item202_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item202_elems { var5_item202_item0_struct, var5_item202_item1_int, var5_item202_item2_int, };
	Constant* var5_item202_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item202_elems);
	Constant* var5_item203_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item203_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item203_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item203_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item203_item0_item0_elems { var5_item203_item0_item0_item0_int, var5_item203_item0_item0_item1_int, var5_item203_item0_item0_item2_int, var5_item203_item0_item0_item3_int, };
	Constant* var5_item203_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item203_item0_item0_elems);
	ArrayRef<Constant*> var5_item203_item0_elems { var5_item203_item0_item0_struct, };
	Constant* var5_item203_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item203_item0_elems);
	Constant* var5_item203_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item203_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item203_elems { var5_item203_item0_struct, var5_item203_item1_int, var5_item203_item2_int, };
	Constant* var5_item203_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item203_elems);
	Constant* var5_item204_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item204_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item204_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item204_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item204_item0_item0_elems { var5_item204_item0_item0_item0_int, var5_item204_item0_item0_item1_int, var5_item204_item0_item0_item2_int, var5_item204_item0_item0_item3_int, };
	Constant* var5_item204_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item204_item0_item0_elems);
	ArrayRef<Constant*> var5_item204_item0_elems { var5_item204_item0_item0_struct, };
	Constant* var5_item204_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item204_item0_elems);
	Constant* var5_item204_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item204_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item204_elems { var5_item204_item0_struct, var5_item204_item1_int, var5_item204_item2_int, };
	Constant* var5_item204_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item204_elems);
	Constant* var5_item205_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item205_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item205_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item205_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item205_item0_item0_elems { var5_item205_item0_item0_item0_int, var5_item205_item0_item0_item1_int, var5_item205_item0_item0_item2_int, var5_item205_item0_item0_item3_int, };
	Constant* var5_item205_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item205_item0_item0_elems);
	ArrayRef<Constant*> var5_item205_item0_elems { var5_item205_item0_item0_struct, };
	Constant* var5_item205_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item205_item0_elems);
	Constant* var5_item205_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item205_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item205_elems { var5_item205_item0_struct, var5_item205_item1_int, var5_item205_item2_int, };
	Constant* var5_item205_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item205_elems);
	Constant* var5_item206_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item206_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item206_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item206_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item206_item0_item0_elems { var5_item206_item0_item0_item0_int, var5_item206_item0_item0_item1_int, var5_item206_item0_item0_item2_int, var5_item206_item0_item0_item3_int, };
	Constant* var5_item206_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item206_item0_item0_elems);
	ArrayRef<Constant*> var5_item206_item0_elems { var5_item206_item0_item0_struct, };
	Constant* var5_item206_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item206_item0_elems);
	Constant* var5_item206_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item206_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item206_elems { var5_item206_item0_struct, var5_item206_item1_int, var5_item206_item2_int, };
	Constant* var5_item206_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item206_elems);
	Constant* var5_item207_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item207_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item207_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item207_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item207_item0_item0_elems { var5_item207_item0_item0_item0_int, var5_item207_item0_item0_item1_int, var5_item207_item0_item0_item2_int, var5_item207_item0_item0_item3_int, };
	Constant* var5_item207_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item207_item0_item0_elems);
	ArrayRef<Constant*> var5_item207_item0_elems { var5_item207_item0_item0_struct, };
	Constant* var5_item207_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item207_item0_elems);
	Constant* var5_item207_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item207_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item207_elems { var5_item207_item0_struct, var5_item207_item1_int, var5_item207_item2_int, };
	Constant* var5_item207_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item207_elems);
	Constant* var5_item208_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item208_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item208_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item208_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item208_item0_item0_elems { var5_item208_item0_item0_item0_int, var5_item208_item0_item0_item1_int, var5_item208_item0_item0_item2_int, var5_item208_item0_item0_item3_int, };
	Constant* var5_item208_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item208_item0_item0_elems);
	ArrayRef<Constant*> var5_item208_item0_elems { var5_item208_item0_item0_struct, };
	Constant* var5_item208_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item208_item0_elems);
	Constant* var5_item208_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item208_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item208_elems { var5_item208_item0_struct, var5_item208_item1_int, var5_item208_item2_int, };
	Constant* var5_item208_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item208_elems);
	Constant* var5_item209_item0_item0_item0_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item209_item0_item0_item1_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item209_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item209_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item209_item0_item0_elems { var5_item209_item0_item0_item0_int, var5_item209_item0_item0_item1_int, var5_item209_item0_item0_item2_int, var5_item209_item0_item0_item3_int, };
	Constant* var5_item209_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item209_item0_item0_elems);
	ArrayRef<Constant*> var5_item209_item0_elems { var5_item209_item0_item0_struct, };
	Constant* var5_item209_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item209_item0_elems);
	Constant* var5_item209_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item209_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item209_elems { var5_item209_item0_struct, var5_item209_item1_int, var5_item209_item2_int, };
	Constant* var5_item209_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item209_elems);
	Constant* var5_item210_item0_item0_item0_int = ConstantInt::get(types[0], 80u);
	Constant* var5_item210_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item210_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item210_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item210_item0_item0_elems { var5_item210_item0_item0_item0_int, var5_item210_item0_item0_item1_int, var5_item210_item0_item0_item2_int, var5_item210_item0_item0_item3_int, };
	Constant* var5_item210_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item210_item0_item0_elems);
	ArrayRef<Constant*> var5_item210_item0_elems { var5_item210_item0_item0_struct, };
	Constant* var5_item210_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item210_item0_elems);
	Constant* var5_item210_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item210_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item210_elems { var5_item210_item0_struct, var5_item210_item1_int, var5_item210_item2_int, };
	Constant* var5_item210_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item210_elems);
	Constant* var5_item211_item0_item0_item0_int = ConstantInt::get(types[0], 88u);
	Constant* var5_item211_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item211_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item211_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item211_item0_item0_elems { var5_item211_item0_item0_item0_int, var5_item211_item0_item0_item1_int, var5_item211_item0_item0_item2_int, var5_item211_item0_item0_item3_int, };
	Constant* var5_item211_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item211_item0_item0_elems);
	ArrayRef<Constant*> var5_item211_item0_elems { var5_item211_item0_item0_struct, };
	Constant* var5_item211_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item211_item0_elems);
	Constant* var5_item211_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item211_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item211_elems { var5_item211_item0_struct, var5_item211_item1_int, var5_item211_item2_int, };
	Constant* var5_item211_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item211_elems);
	Constant* var5_item212_item0_item0_item0_int = ConstantInt::get(types[0], 96u);
	Constant* var5_item212_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item212_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item212_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item212_item0_item0_elems { var5_item212_item0_item0_item0_int, var5_item212_item0_item0_item1_int, var5_item212_item0_item0_item2_int, var5_item212_item0_item0_item3_int, };
	Constant* var5_item212_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item212_item0_item0_elems);
	ArrayRef<Constant*> var5_item212_item0_elems { var5_item212_item0_item0_struct, };
	Constant* var5_item212_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item212_item0_elems);
	Constant* var5_item212_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item212_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item212_elems { var5_item212_item0_struct, var5_item212_item1_int, var5_item212_item2_int, };
	Constant* var5_item212_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item212_elems);
	Constant* var5_item213_item0_item0_item0_int = ConstantInt::get(types[0], 104u);
	Constant* var5_item213_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item213_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item213_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item213_item0_item0_elems { var5_item213_item0_item0_item0_int, var5_item213_item0_item0_item1_int, var5_item213_item0_item0_item2_int, var5_item213_item0_item0_item3_int, };
	Constant* var5_item213_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item213_item0_item0_elems);
	ArrayRef<Constant*> var5_item213_item0_elems { var5_item213_item0_item0_struct, };
	Constant* var5_item213_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item213_item0_elems);
	Constant* var5_item213_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item213_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item213_elems { var5_item213_item0_struct, var5_item213_item1_int, var5_item213_item2_int, };
	Constant* var5_item213_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item213_elems);
	Constant* var5_item214_item0_item0_item0_int = ConstantInt::get(types[0], 112u);
	Constant* var5_item214_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item214_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item214_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item214_item0_item0_elems { var5_item214_item0_item0_item0_int, var5_item214_item0_item0_item1_int, var5_item214_item0_item0_item2_int, var5_item214_item0_item0_item3_int, };
	Constant* var5_item214_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item214_item0_item0_elems);
	ArrayRef<Constant*> var5_item214_item0_elems { var5_item214_item0_item0_struct, };
	Constant* var5_item214_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item214_item0_elems);
	Constant* var5_item214_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item214_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item214_elems { var5_item214_item0_struct, var5_item214_item1_int, var5_item214_item2_int, };
	Constant* var5_item214_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item214_elems);
	Constant* var5_item215_item0_item0_item0_int = ConstantInt::get(types[0], 120u);
	Constant* var5_item215_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item215_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item215_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item215_item0_item0_elems { var5_item215_item0_item0_item0_int, var5_item215_item0_item0_item1_int, var5_item215_item0_item0_item2_int, var5_item215_item0_item0_item3_int, };
	Constant* var5_item215_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item215_item0_item0_elems);
	ArrayRef<Constant*> var5_item215_item0_elems { var5_item215_item0_item0_struct, };
	Constant* var5_item215_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item215_item0_elems);
	Constant* var5_item215_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item215_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item215_elems { var5_item215_item0_struct, var5_item215_item1_int, var5_item215_item2_int, };
	Constant* var5_item215_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item215_elems);
	Constant* var5_item216_item0_item0_item0_int = ConstantInt::get(types[0], 128u);
	Constant* var5_item216_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item216_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item216_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item216_item0_item0_elems { var5_item216_item0_item0_item0_int, var5_item216_item0_item0_item1_int, var5_item216_item0_item0_item2_int, var5_item216_item0_item0_item3_int, };
	Constant* var5_item216_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item216_item0_item0_elems);
	ArrayRef<Constant*> var5_item216_item0_elems { var5_item216_item0_item0_struct, };
	Constant* var5_item216_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item216_item0_elems);
	Constant* var5_item216_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item216_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item216_elems { var5_item216_item0_struct, var5_item216_item1_int, var5_item216_item2_int, };
	Constant* var5_item216_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item216_elems);
	Constant* var5_item217_item0_item0_item0_int = ConstantInt::get(types[0], 136u);
	Constant* var5_item217_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item217_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item217_item0_item0_item3_int = ConstantInt::get(types[0], 1u);
	ArrayRef<Constant*> var5_item217_item0_item0_elems { var5_item217_item0_item0_item0_int, var5_item217_item0_item0_item1_int, var5_item217_item0_item0_item2_int, var5_item217_item0_item0_item3_int, };
	Constant* var5_item217_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item217_item0_item0_elems);
	ArrayRef<Constant*> var5_item217_item0_elems { var5_item217_item0_item0_struct, };
	Constant* var5_item217_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item217_item0_elems);
	Constant* var5_item217_item1_int = ConstantInt::get(types[0], 1u);
	Constant* var5_item217_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item217_elems { var5_item217_item0_struct, var5_item217_item1_int, var5_item217_item2_int, };
	Constant* var5_item217_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item217_elems);
	Constant* var5_item218_item0_item0_item0_int = ConstantInt::get(types[0], 80u);
	Constant* var5_item218_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item218_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item218_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item218_item0_item0_elems { var5_item218_item0_item0_item0_int, var5_item218_item0_item0_item1_int, var5_item218_item0_item0_item2_int, var5_item218_item0_item0_item3_int, };
	Constant* var5_item218_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item218_item0_item0_elems);
	ArrayRef<Constant*> var5_item218_item0_elems { var5_item218_item0_item0_struct, };
	Constant* var5_item218_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item218_item0_elems);
	Constant* var5_item218_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item218_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item218_elems { var5_item218_item0_struct, var5_item218_item1_int, var5_item218_item2_int, };
	Constant* var5_item218_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item218_elems);
	Constant* var5_item219_item0_item0_item0_int = ConstantInt::get(types[0], 88u);
	Constant* var5_item219_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item219_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item219_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item219_item0_item0_elems { var5_item219_item0_item0_item0_int, var5_item219_item0_item0_item1_int, var5_item219_item0_item0_item2_int, var5_item219_item0_item0_item3_int, };
	Constant* var5_item219_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item219_item0_item0_elems);
	ArrayRef<Constant*> var5_item219_item0_elems { var5_item219_item0_item0_struct, };
	Constant* var5_item219_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item219_item0_elems);
	Constant* var5_item219_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item219_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item219_elems { var5_item219_item0_struct, var5_item219_item1_int, var5_item219_item2_int, };
	Constant* var5_item219_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item219_elems);
	Constant* var5_item220_item0_item0_item0_int = ConstantInt::get(types[0], 96u);
	Constant* var5_item220_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item220_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item220_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item220_item0_item0_elems { var5_item220_item0_item0_item0_int, var5_item220_item0_item0_item1_int, var5_item220_item0_item0_item2_int, var5_item220_item0_item0_item3_int, };
	Constant* var5_item220_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item220_item0_item0_elems);
	ArrayRef<Constant*> var5_item220_item0_elems { var5_item220_item0_item0_struct, };
	Constant* var5_item220_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item220_item0_elems);
	Constant* var5_item220_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item220_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item220_elems { var5_item220_item0_struct, var5_item220_item1_int, var5_item220_item2_int, };
	Constant* var5_item220_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item220_elems);
	Constant* var5_item221_item0_item0_item0_int = ConstantInt::get(types[0], 104u);
	Constant* var5_item221_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item221_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item221_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item221_item0_item0_elems { var5_item221_item0_item0_item0_int, var5_item221_item0_item0_item1_int, var5_item221_item0_item0_item2_int, var5_item221_item0_item0_item3_int, };
	Constant* var5_item221_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item221_item0_item0_elems);
	ArrayRef<Constant*> var5_item221_item0_elems { var5_item221_item0_item0_struct, };
	Constant* var5_item221_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item221_item0_elems);
	Constant* var5_item221_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item221_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item221_elems { var5_item221_item0_struct, var5_item221_item1_int, var5_item221_item2_int, };
	Constant* var5_item221_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item221_elems);
	Constant* var5_item222_item0_item0_item0_int = ConstantInt::get(types[0], 112u);
	Constant* var5_item222_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item222_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item222_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item222_item0_item0_elems { var5_item222_item0_item0_item0_int, var5_item222_item0_item0_item1_int, var5_item222_item0_item0_item2_int, var5_item222_item0_item0_item3_int, };
	Constant* var5_item222_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item222_item0_item0_elems);
	ArrayRef<Constant*> var5_item222_item0_elems { var5_item222_item0_item0_struct, };
	Constant* var5_item222_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item222_item0_elems);
	Constant* var5_item222_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item222_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item222_elems { var5_item222_item0_struct, var5_item222_item1_int, var5_item222_item2_int, };
	Constant* var5_item222_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item222_elems);
	Constant* var5_item223_item0_item0_item0_int = ConstantInt::get(types[0], 120u);
	Constant* var5_item223_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item223_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item223_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item223_item0_item0_elems { var5_item223_item0_item0_item0_int, var5_item223_item0_item0_item1_int, var5_item223_item0_item0_item2_int, var5_item223_item0_item0_item3_int, };
	Constant* var5_item223_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item223_item0_item0_elems);
	ArrayRef<Constant*> var5_item223_item0_elems { var5_item223_item0_item0_struct, };
	Constant* var5_item223_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item223_item0_elems);
	Constant* var5_item223_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item223_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item223_elems { var5_item223_item0_struct, var5_item223_item1_int, var5_item223_item2_int, };
	Constant* var5_item223_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item223_elems);
	Constant* var5_item224_item0_item0_item0_int = ConstantInt::get(types[0], 128u);
	Constant* var5_item224_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item224_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item224_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item224_item0_item0_elems { var5_item224_item0_item0_item0_int, var5_item224_item0_item0_item1_int, var5_item224_item0_item0_item2_int, var5_item224_item0_item0_item3_int, };
	Constant* var5_item224_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item224_item0_item0_elems);
	ArrayRef<Constant*> var5_item224_item0_elems { var5_item224_item0_item0_struct, };
	Constant* var5_item224_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item224_item0_elems);
	Constant* var5_item224_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item224_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item224_elems { var5_item224_item0_struct, var5_item224_item1_int, var5_item224_item2_int, };
	Constant* var5_item224_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item224_elems);
	Constant* var5_item225_item0_item0_item0_int = ConstantInt::get(types[0], 136u);
	Constant* var5_item225_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item225_item0_item0_item2_int = ConstantInt::get(types[0], 18446744073709551615u);
	Constant* var5_item225_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item225_item0_item0_elems { var5_item225_item0_item0_item0_int, var5_item225_item0_item0_item1_int, var5_item225_item0_item0_item2_int, var5_item225_item0_item0_item3_int, };
	Constant* var5_item225_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item225_item0_item0_elems);
	ArrayRef<Constant*> var5_item225_item0_elems { var5_item225_item0_item0_struct, };
	Constant* var5_item225_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item225_item0_elems);
	Constant* var5_item225_item1_int = ConstantInt::get(types[0], 4u);
	Constant* var5_item225_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item225_elems { var5_item225_item0_struct, var5_item225_item1_int, var5_item225_item2_int, };
	Constant* var5_item225_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item225_elems);
	Constant* var5_item226_item0_item0_item0_int = ConstantInt::get(types[0], 80u);
	Constant* var5_item226_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item226_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item226_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item226_item0_item0_elems { var5_item226_item0_item0_item0_int, var5_item226_item0_item0_item1_int, var5_item226_item0_item0_item2_int, var5_item226_item0_item0_item3_int, };
	Constant* var5_item226_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item226_item0_item0_elems);
	ArrayRef<Constant*> var5_item226_item0_elems { var5_item226_item0_item0_struct, };
	Constant* var5_item226_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item226_item0_elems);
	Constant* var5_item226_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item226_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item226_elems { var5_item226_item0_struct, var5_item226_item1_int, var5_item226_item2_int, };
	Constant* var5_item226_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item226_elems);
	Constant* var5_item227_item0_item0_item0_int = ConstantInt::get(types[0], 88u);
	Constant* var5_item227_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item227_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item227_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item227_item0_item0_elems { var5_item227_item0_item0_item0_int, var5_item227_item0_item0_item1_int, var5_item227_item0_item0_item2_int, var5_item227_item0_item0_item3_int, };
	Constant* var5_item227_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item227_item0_item0_elems);
	ArrayRef<Constant*> var5_item227_item0_elems { var5_item227_item0_item0_struct, };
	Constant* var5_item227_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item227_item0_elems);
	Constant* var5_item227_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item227_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item227_elems { var5_item227_item0_struct, var5_item227_item1_int, var5_item227_item2_int, };
	Constant* var5_item227_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item227_elems);
	Constant* var5_item228_item0_item0_item0_int = ConstantInt::get(types[0], 96u);
	Constant* var5_item228_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item228_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item228_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item228_item0_item0_elems { var5_item228_item0_item0_item0_int, var5_item228_item0_item0_item1_int, var5_item228_item0_item0_item2_int, var5_item228_item0_item0_item3_int, };
	Constant* var5_item228_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item228_item0_item0_elems);
	ArrayRef<Constant*> var5_item228_item0_elems { var5_item228_item0_item0_struct, };
	Constant* var5_item228_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item228_item0_elems);
	Constant* var5_item228_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item228_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item228_elems { var5_item228_item0_struct, var5_item228_item1_int, var5_item228_item2_int, };
	Constant* var5_item228_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item228_elems);
	Constant* var5_item229_item0_item0_item0_int = ConstantInt::get(types[0], 104u);
	Constant* var5_item229_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item229_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item229_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item229_item0_item0_elems { var5_item229_item0_item0_item0_int, var5_item229_item0_item0_item1_int, var5_item229_item0_item0_item2_int, var5_item229_item0_item0_item3_int, };
	Constant* var5_item229_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item229_item0_item0_elems);
	ArrayRef<Constant*> var5_item229_item0_elems { var5_item229_item0_item0_struct, };
	Constant* var5_item229_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item229_item0_elems);
	Constant* var5_item229_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item229_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item229_elems { var5_item229_item0_struct, var5_item229_item1_int, var5_item229_item2_int, };
	Constant* var5_item229_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item229_elems);
	Constant* var5_item230_item0_item0_item0_int = ConstantInt::get(types[0], 112u);
	Constant* var5_item230_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item230_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item230_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item230_item0_item0_elems { var5_item230_item0_item0_item0_int, var5_item230_item0_item0_item1_int, var5_item230_item0_item0_item2_int, var5_item230_item0_item0_item3_int, };
	Constant* var5_item230_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item230_item0_item0_elems);
	ArrayRef<Constant*> var5_item230_item0_elems { var5_item230_item0_item0_struct, };
	Constant* var5_item230_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item230_item0_elems);
	Constant* var5_item230_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item230_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item230_elems { var5_item230_item0_struct, var5_item230_item1_int, var5_item230_item2_int, };
	Constant* var5_item230_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item230_elems);
	Constant* var5_item231_item0_item0_item0_int = ConstantInt::get(types[0], 120u);
	Constant* var5_item231_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item231_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item231_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item231_item0_item0_elems { var5_item231_item0_item0_item0_int, var5_item231_item0_item0_item1_int, var5_item231_item0_item0_item2_int, var5_item231_item0_item0_item3_int, };
	Constant* var5_item231_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item231_item0_item0_elems);
	ArrayRef<Constant*> var5_item231_item0_elems { var5_item231_item0_item0_struct, };
	Constant* var5_item231_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item231_item0_elems);
	Constant* var5_item231_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item231_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item231_elems { var5_item231_item0_struct, var5_item231_item1_int, var5_item231_item2_int, };
	Constant* var5_item231_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item231_elems);
	Constant* var5_item232_item0_item0_item0_int = ConstantInt::get(types[0], 128u);
	Constant* var5_item232_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item232_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item232_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item232_item0_item0_elems { var5_item232_item0_item0_item0_int, var5_item232_item0_item0_item1_int, var5_item232_item0_item0_item2_int, var5_item232_item0_item0_item3_int, };
	Constant* var5_item232_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item232_item0_item0_elems);
	ArrayRef<Constant*> var5_item232_item0_elems { var5_item232_item0_item0_struct, };
	Constant* var5_item232_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item232_item0_elems);
	Constant* var5_item232_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item232_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item232_elems { var5_item232_item0_struct, var5_item232_item1_int, var5_item232_item2_int, };
	Constant* var5_item232_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item232_elems);
	Constant* var5_item233_item0_item0_item0_int = ConstantInt::get(types[0], 136u);
	Constant* var5_item233_item0_item0_item1_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item233_item0_item0_item2_int = ConstantInt::get(types[0], 0u);
	Constant* var5_item233_item0_item0_item3_int = ConstantInt::get(types[0], 18446744073709551615u);
	ArrayRef<Constant*> var5_item233_item0_item0_elems { var5_item233_item0_item0_item0_int, var5_item233_item0_item0_item1_int, var5_item233_item0_item0_item2_int, var5_item233_item0_item0_item3_int, };
	Constant* var5_item233_item0_item0_struct = ConstantStruct::get(cast<StructType>(types[25]), var5_item233_item0_item0_elems);
	ArrayRef<Constant*> var5_item233_item0_elems { var5_item233_item0_item0_struct, };
	Constant* var5_item233_item0_struct = ConstantStruct::get(cast<StructType>(types[24]), var5_item233_item0_elems);
	Constant* var5_item233_item1_int = ConstantInt::get(types[0], 2u);
	Constant* var5_item233_item2_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Constant*> var5_item233_elems { var5_item233_item0_struct, var5_item233_item1_int, var5_item233_item2_int, };
	Constant* var5_item233_struct = ConstantStruct::get(cast<StructType>(types[23]), var5_item233_elems);
	ArrayRef<Constant*> var5_elems { var5_item0_struct, var5_item1_struct, var5_item2_struct, var5_item3_struct, var5_item4_struct, var5_item5_struct, var5_item6_struct, var5_item7_struct, var5_item8_struct, var5_item9_struct, var5_item10_struct, var5_item11_struct, var5_item12_struct, var5_item13_struct, var5_item14_struct, var5_item15_struct, var5_item16_struct, var5_item17_struct, var5_item18_struct, var5_item19_struct, var5_item20_struct, var5_item21_struct, var5_item22_struct, var5_item23_struct, var5_item24_struct, var5_item25_struct, var5_item26_struct, var5_item27_struct, var5_item28_struct, var5_item29_struct, var5_item30_struct, var5_item31_struct, var5_item32_struct, var5_item33_struct, var5_item34_struct, var5_item35_struct, var5_item36_struct, var5_item37_struct, var5_item38_struct, var5_item39_struct, var5_item40_struct, var5_item41_struct, var5_item42_struct, var5_item43_struct, var5_item44_struct, var5_item45_struct, var5_item46_struct, var5_item47_struct, var5_item48_struct, var5_item49_struct, var5_item50_struct, var5_item51_struct, var5_item52_struct, var5_item53_struct, var5_item54_struct, var5_item55_struct, var5_item56_struct, var5_item57_struct, var5_item58_struct, var5_item59_struct, var5_item60_struct, var5_item61_struct, var5_item62_struct, var5_item63_struct, var5_item64_struct, var5_item65_struct, var5_item66_struct, var5_item67_struct, var5_item68_struct, var5_item69_struct, var5_item70_struct, var5_item71_struct, var5_item72_struct, var5_item73_struct, var5_item74_struct, var5_item75_struct, var5_item76_struct, var5_item77_struct, var5_item78_struct, var5_item79_struct, var5_item80_struct, var5_item81_struct, var5_item82_struct, var5_item83_struct, var5_item84_struct, var5_item85_struct, var5_item86_struct, var5_item87_struct, var5_item88_struct, var5_item89_struct, var5_item90_struct, var5_item91_struct, var5_item92_struct, var5_item93_struct, var5_item94_struct, var5_item95_struct, var5_item96_struct, var5_item97_struct, var5_item98_struct, var5_item99_struct, var5_item100_struct, var5_item101_struct, var5_item102_struct, var5_item103_struct, var5_item104_struct, var5_item105_struct, var5_item106_struct, var5_item107_struct, var5_item108_struct, var5_item109_struct, var5_item110_struct, var5_item111_struct, var5_item112_struct, var5_item113_struct, var5_item114_struct, var5_item115_struct, var5_item116_struct, var5_item117_struct, var5_item118_struct, var5_item119_struct, var5_item120_struct, var5_item121_struct, var5_item122_struct, var5_item123_struct, var5_item124_struct, var5_item125_struct, var5_item126_struct, var5_item127_struct, var5_item128_struct, var5_item129_struct, var5_item130_struct, var5_item131_struct, var5_item132_struct, var5_item133_struct, var5_item134_struct, var5_item135_struct, var5_item136_struct, var5_item137_struct, var5_item138_struct, var5_item139_struct, var5_item140_struct, var5_item141_struct, var5_item142_struct, var5_item143_struct, var5_item144_struct, var5_item145_struct, var5_item146_struct, var5_item147_struct, var5_item148_struct, var5_item149_struct, var5_item150_struct, var5_item151_struct, var5_item152_struct, var5_item153_struct, var5_item154_struct, var5_item155_struct, var5_item156_struct, var5_item157_struct, var5_item158_struct, var5_item159_struct, var5_item160_struct, var5_item161_struct, var5_item162_struct, var5_item163_struct, var5_item164_struct, var5_item165_struct, var5_item166_struct, var5_item167_struct, var5_item168_struct, var5_item169_struct, var5_item170_struct, var5_item171_struct, var5_item172_struct, var5_item173_struct, var5_item174_struct, var5_item175_struct, var5_item176_struct, var5_item177_struct, var5_item178_struct, var5_item179_struct, var5_item180_struct, var5_item181_struct, var5_item182_struct, var5_item183_struct, var5_item184_struct, var5_item185_struct, var5_item186_struct, var5_item187_struct, var5_item188_struct, var5_item189_struct, var5_item190_struct, var5_item191_struct, var5_item192_struct, var5_item193_struct, var5_item194_struct, var5_item195_struct, var5_item196_struct, var5_item197_struct, var5_item198_struct, var5_item199_struct, var5_item200_struct, var5_item201_struct, var5_item202_struct, var5_item203_struct, var5_item204_struct, var5_item205_struct, var5_item206_struct, var5_item207_struct, var5_item208_struct, var5_item209_struct, var5_item210_struct, var5_item211_struct, var5_item212_struct, var5_item213_struct, var5_item214_struct, var5_item215_struct, var5_item216_struct, var5_item217_struct, var5_item218_struct, var5_item219_struct, var5_item220_struct, var5_item221_struct, var5_item222_struct, var5_item223_struct, var5_item224_struct, var5_item225_struct, var5_item226_struct, var5_item227_struct, var5_item228_struct, var5_item229_struct, var5_item230_struct, var5_item231_struct, var5_item232_struct, var5_item233_struct, };
	Constant* var5_array = ConstantArray::get(cast<ArrayType>(types[26]), var5_elems);
	GlobalVariable* cv5 = new GlobalVariable(module, types[26], true, GlobalValue::PrivateLinkage, var5_array, "x86_register_table", nullptr, GlobalValue::NotThreadLocal, 0, false);
	globals[5] = cv5;
	
	globals[6] = Function::Create(cast<FunctionType>(types[31]), GlobalValue::ExternalLinkage, "x86_assertion_failure", &module);
	Constant* var7_string = ConstantDataArray::getString(context, "reading from register with non-standard size", true);
	GlobalVariable* cv7 = new GlobalVariable(module, types[32], true, GlobalValue::PrivateLinkage, var7_string, ".str1244", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv7->setUnnamedAddr(true);
	globals[7] = cv7;
	
	globals[8] = Function::Create(cast<FunctionType>(types[33]), GlobalValue::ExternalLinkage, "x86_read_mem", &module);
	Constant* var9_string = ConstantDataArray::getString(context, "trying to read destination from FP or invalid operand", true);
	GlobalVariable* cv9 = new GlobalVariable(module, types[34], true, GlobalValue::PrivateLinkage, var9_string, ".str1241", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv9->setUnnamedAddr(true);
	globals[9] = cv9;
	
	Constant* var10_string = ConstantDataArray::getString(context, "trying to read source from FP or invalid operand", true);
	GlobalVariable* cv10 = new GlobalVariable(module, types[35], true, GlobalValue::PrivateLinkage, var10_string, ".str1242", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv10->setUnnamedAddr(true);
	globals[10] = cv10;
	
	globals[11] = Function::Create(cast<FunctionType>(types[38]), GlobalValue::ExternalLinkage, "llvm.uadd.with.overflow.i64", &module);
	Constant* var12_string = ConstantDataArray::getString(context, "invalid destination size", true);
	GlobalVariable* cv12 = new GlobalVariable(module, types[39], true, GlobalValue::PrivateLinkage, var12_string, ".str1245", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv12->setUnnamedAddr(true);
	globals[12] = cv12;
	
	globals[13] = Function::Create(cast<FunctionType>(types[40]), GlobalValue::ExternalLinkage, "llvm.ctpop.i64", &module);
	globals[14] = Function::Create(cast<FunctionType>(types[41]), GlobalValue::ExternalLinkage, "x86_write_mem", &module);
	Constant* var15_string = ConstantDataArray::getString(context, "mov trying to write to immediate, FP or invalid operand", true);
	GlobalVariable* cv15 = new GlobalVariable(module, types[42], true, GlobalValue::PrivateLinkage, var15_string, ".str1243", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv15->setUnnamedAddr(true);
	globals[15] = cv15;
	
	Constant* var16_string = ConstantDataArray::getString(context, "adcx", true);
	GlobalVariable* cv16 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var16_string, ".str4", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv16->setUnnamedAddr(true);
	globals[16] = cv16;
	
	Constant* var17_string = ConstantDataArray::getString(context, "addpd", true);
	GlobalVariable* cv17 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var17_string, ".str5", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv17->setUnnamedAddr(true);
	globals[17] = cv17;
	
	Constant* var18_string = ConstantDataArray::getString(context, "addps", true);
	GlobalVariable* cv18 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var18_string, ".str6", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv18->setUnnamedAddr(true);
	globals[18] = cv18;
	
	Constant* var19_string = ConstantDataArray::getString(context, "addsd", true);
	GlobalVariable* cv19 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var19_string, ".str7", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv19->setUnnamedAddr(true);
	globals[19] = cv19;
	
	Constant* var20_string = ConstantDataArray::getString(context, "addss", true);
	GlobalVariable* cv20 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var20_string, ".str8", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv20->setUnnamedAddr(true);
	globals[20] = cv20;
	
	Constant* var21_string = ConstantDataArray::getString(context, "addsubpd", true);
	GlobalVariable* cv21 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var21_string, ".str9", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv21->setUnnamedAddr(true);
	globals[21] = cv21;
	
	Constant* var22_string = ConstantDataArray::getString(context, "addsubps", true);
	GlobalVariable* cv22 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var22_string, ".str10", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv22->setUnnamedAddr(true);
	globals[22] = cv22;
	
	Constant* var23_string = ConstantDataArray::getString(context, "adox", true);
	GlobalVariable* cv23 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var23_string, ".str11", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv23->setUnnamedAddr(true);
	globals[23] = cv23;
	
	Constant* var24_string = ConstantDataArray::getString(context, "aesdec", true);
	GlobalVariable* cv24 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var24_string, ".str12", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv24->setUnnamedAddr(true);
	globals[24] = cv24;
	
	Constant* var25_string = ConstantDataArray::getString(context, "aesdeclast", true);
	GlobalVariable* cv25 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var25_string, ".str13", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv25->setUnnamedAddr(true);
	globals[25] = cv25;
	
	Constant* var26_string = ConstantDataArray::getString(context, "aesenc", true);
	GlobalVariable* cv26 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var26_string, ".str14", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv26->setUnnamedAddr(true);
	globals[26] = cv26;
	
	Constant* var27_string = ConstantDataArray::getString(context, "aesenclast", true);
	GlobalVariable* cv27 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var27_string, ".str15", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv27->setUnnamedAddr(true);
	globals[27] = cv27;
	
	Constant* var28_string = ConstantDataArray::getString(context, "aesimc", true);
	GlobalVariable* cv28 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var28_string, ".str16", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv28->setUnnamedAddr(true);
	globals[28] = cv28;
	
	Constant* var29_string = ConstantDataArray::getString(context, "aeskeygenassist", true);
	GlobalVariable* cv29 = new GlobalVariable(module, types[48], true, GlobalValue::PrivateLinkage, var29_string, ".str17", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv29->setUnnamedAddr(true);
	globals[29] = cv29;
	
	Constant* var30_string = ConstantDataArray::getString(context, "andn", true);
	GlobalVariable* cv30 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var30_string, ".str18", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv30->setUnnamedAddr(true);
	globals[30] = cv30;
	
	Constant* var31_string = ConstantDataArray::getString(context, "andnpd", true);
	GlobalVariable* cv31 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var31_string, ".str19", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv31->setUnnamedAddr(true);
	globals[31] = cv31;
	
	Constant* var32_string = ConstantDataArray::getString(context, "andnps", true);
	GlobalVariable* cv32 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var32_string, ".str20", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv32->setUnnamedAddr(true);
	globals[32] = cv32;
	
	Constant* var33_string = ConstantDataArray::getString(context, "andpd", true);
	GlobalVariable* cv33 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var33_string, ".str21", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv33->setUnnamedAddr(true);
	globals[33] = cv33;
	
	Constant* var34_string = ConstantDataArray::getString(context, "andps", true);
	GlobalVariable* cv34 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var34_string, ".str22", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv34->setUnnamedAddr(true);
	globals[34] = cv34;
	
	Constant* var35_string = ConstantDataArray::getString(context, "arpl", true);
	GlobalVariable* cv35 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var35_string, ".str23", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv35->setUnnamedAddr(true);
	globals[35] = cv35;
	
	Constant* var36_string = ConstantDataArray::getString(context, "bextr", true);
	GlobalVariable* cv36 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var36_string, ".str24", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv36->setUnnamedAddr(true);
	globals[36] = cv36;
	
	Constant* var37_string = ConstantDataArray::getString(context, "blcfill", true);
	GlobalVariable* cv37 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var37_string, ".str25", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv37->setUnnamedAddr(true);
	globals[37] = cv37;
	
	Constant* var38_string = ConstantDataArray::getString(context, "blci", true);
	GlobalVariable* cv38 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var38_string, ".str26", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv38->setUnnamedAddr(true);
	globals[38] = cv38;
	
	Constant* var39_string = ConstantDataArray::getString(context, "blcic", true);
	GlobalVariable* cv39 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var39_string, ".str27", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv39->setUnnamedAddr(true);
	globals[39] = cv39;
	
	Constant* var40_string = ConstantDataArray::getString(context, "blcmsk", true);
	GlobalVariable* cv40 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var40_string, ".str28", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv40->setUnnamedAddr(true);
	globals[40] = cv40;
	
	Constant* var41_string = ConstantDataArray::getString(context, "blcs", true);
	GlobalVariable* cv41 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var41_string, ".str29", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv41->setUnnamedAddr(true);
	globals[41] = cv41;
	
	Constant* var42_string = ConstantDataArray::getString(context, "blendpd", true);
	GlobalVariable* cv42 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var42_string, ".str30", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv42->setUnnamedAddr(true);
	globals[42] = cv42;
	
	Constant* var43_string = ConstantDataArray::getString(context, "blendps", true);
	GlobalVariable* cv43 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var43_string, ".str31", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv43->setUnnamedAddr(true);
	globals[43] = cv43;
	
	Constant* var44_string = ConstantDataArray::getString(context, "blendvpd", true);
	GlobalVariable* cv44 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var44_string, ".str32", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv44->setUnnamedAddr(true);
	globals[44] = cv44;
	
	Constant* var45_string = ConstantDataArray::getString(context, "blendvps", true);
	GlobalVariable* cv45 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var45_string, ".str33", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv45->setUnnamedAddr(true);
	globals[45] = cv45;
	
	Constant* var46_string = ConstantDataArray::getString(context, "blsfill", true);
	GlobalVariable* cv46 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var46_string, ".str34", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv46->setUnnamedAddr(true);
	globals[46] = cv46;
	
	Constant* var47_string = ConstantDataArray::getString(context, "blsi", true);
	GlobalVariable* cv47 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var47_string, ".str35", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv47->setUnnamedAddr(true);
	globals[47] = cv47;
	
	Constant* var48_string = ConstantDataArray::getString(context, "blsic", true);
	GlobalVariable* cv48 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var48_string, ".str36", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv48->setUnnamedAddr(true);
	globals[48] = cv48;
	
	Constant* var49_string = ConstantDataArray::getString(context, "blsmsk", true);
	GlobalVariable* cv49 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var49_string, ".str37", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv49->setUnnamedAddr(true);
	globals[49] = cv49;
	
	Constant* var50_string = ConstantDataArray::getString(context, "blsr", true);
	GlobalVariable* cv50 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var50_string, ".str38", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv50->setUnnamedAddr(true);
	globals[50] = cv50;
	
	Constant* var51_string = ConstantDataArray::getString(context, "bound", true);
	GlobalVariable* cv51 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var51_string, ".str39", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv51->setUnnamedAddr(true);
	globals[51] = cv51;
	
	Constant* var52_string = ConstantDataArray::getString(context, "bsf", true);
	GlobalVariable* cv52 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var52_string, ".str40", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv52->setUnnamedAddr(true);
	globals[52] = cv52;
	
	Constant* var53_string = ConstantDataArray::getString(context, "bsr", true);
	GlobalVariable* cv53 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var53_string, ".str41", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv53->setUnnamedAddr(true);
	globals[53] = cv53;
	
	Constant* var54_string = ConstantDataArray::getString(context, "bswap", true);
	GlobalVariable* cv54 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var54_string, ".str42", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv54->setUnnamedAddr(true);
	globals[54] = cv54;
	
	Constant* var55_string = ConstantDataArray::getString(context, "bt", true);
	GlobalVariable* cv55 = new GlobalVariable(module, types[50], true, GlobalValue::PrivateLinkage, var55_string, ".str43", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv55->setUnnamedAddr(true);
	globals[55] = cv55;
	
	Constant* var56_string = ConstantDataArray::getString(context, "btc", true);
	GlobalVariable* cv56 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var56_string, ".str44", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv56->setUnnamedAddr(true);
	globals[56] = cv56;
	
	Constant* var57_string = ConstantDataArray::getString(context, "btr", true);
	GlobalVariable* cv57 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var57_string, ".str45", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv57->setUnnamedAddr(true);
	globals[57] = cv57;
	
	Constant* var58_string = ConstantDataArray::getString(context, "bts", true);
	GlobalVariable* cv58 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var58_string, ".str46", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv58->setUnnamedAddr(true);
	globals[58] = cv58;
	
	Constant* var59_string = ConstantDataArray::getString(context, "bzhi", true);
	GlobalVariable* cv59 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var59_string, ".str47", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv59->setUnnamedAddr(true);
	globals[59] = cv59;
	
	globals[60] = Function::Create(cast<FunctionType>(types[51]), GlobalValue::ExternalLinkage, "x86_call_intrin", &module);
	Constant* var61_string = ConstantDataArray::getString(context, "cbw", true);
	GlobalVariable* cv61 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var61_string, ".str48", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv61->setUnnamedAddr(true);
	globals[61] = cv61;
	
	Constant* var62_string = ConstantDataArray::getString(context, "cdq", true);
	GlobalVariable* cv62 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var62_string, ".str49", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv62->setUnnamedAddr(true);
	globals[62] = cv62;
	
	Constant* var63_string = ConstantDataArray::getString(context, "cdqe", true);
	GlobalVariable* cv63 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var63_string, ".str50", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv63->setUnnamedAddr(true);
	globals[63] = cv63;
	
	Constant* var64_string = ConstantDataArray::getString(context, "clac", true);
	GlobalVariable* cv64 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var64_string, ".str51", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv64->setUnnamedAddr(true);
	globals[64] = cv64;
	
	Constant* var65_string = ConstantDataArray::getString(context, "clc", true);
	GlobalVariable* cv65 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var65_string, ".str52", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv65->setUnnamedAddr(true);
	globals[65] = cv65;
	
	Constant* var66_string = ConstantDataArray::getString(context, "cld", true);
	GlobalVariable* cv66 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var66_string, ".str53", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv66->setUnnamedAddr(true);
	globals[66] = cv66;
	
	Constant* var67_string = ConstantDataArray::getString(context, "clflush", true);
	GlobalVariable* cv67 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var67_string, ".str54", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv67->setUnnamedAddr(true);
	globals[67] = cv67;
	
	Constant* var68_string = ConstantDataArray::getString(context, "clgi", true);
	GlobalVariable* cv68 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var68_string, ".str55", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv68->setUnnamedAddr(true);
	globals[68] = cv68;
	
	Constant* var69_string = ConstantDataArray::getString(context, "cli", true);
	GlobalVariable* cv69 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var69_string, ".str56", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv69->setUnnamedAddr(true);
	globals[69] = cv69;
	
	Constant* var70_string = ConstantDataArray::getString(context, "clts", true);
	GlobalVariable* cv70 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var70_string, ".str57", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv70->setUnnamedAddr(true);
	globals[70] = cv70;
	
	Constant* var71_string = ConstantDataArray::getString(context, "cmc", true);
	GlobalVariable* cv71 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var71_string, ".str58", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv71->setUnnamedAddr(true);
	globals[71] = cv71;
	
	Constant* var72_string = ConstantDataArray::getString(context, "cmova", true);
	GlobalVariable* cv72 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var72_string, ".str59", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv72->setUnnamedAddr(true);
	globals[72] = cv72;
	
	Constant* var73_string = ConstantDataArray::getString(context, "cmovae", true);
	GlobalVariable* cv73 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var73_string, ".str60", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv73->setUnnamedAddr(true);
	globals[73] = cv73;
	
	Constant* var74_string = ConstantDataArray::getString(context, "cmovb", true);
	GlobalVariable* cv74 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var74_string, ".str61", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv74->setUnnamedAddr(true);
	globals[74] = cv74;
	
	Constant* var75_string = ConstantDataArray::getString(context, "cmovbe", true);
	GlobalVariable* cv75 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var75_string, ".str62", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv75->setUnnamedAddr(true);
	globals[75] = cv75;
	
	Constant* var76_string = ConstantDataArray::getString(context, "cmove", true);
	GlobalVariable* cv76 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var76_string, ".str63", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv76->setUnnamedAddr(true);
	globals[76] = cv76;
	
	Constant* var77_string = ConstantDataArray::getString(context, "cmovg", true);
	GlobalVariable* cv77 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var77_string, ".str64", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv77->setUnnamedAddr(true);
	globals[77] = cv77;
	
	Constant* var78_string = ConstantDataArray::getString(context, "cmovge", true);
	GlobalVariable* cv78 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var78_string, ".str65", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv78->setUnnamedAddr(true);
	globals[78] = cv78;
	
	Constant* var79_string = ConstantDataArray::getString(context, "cmovl", true);
	GlobalVariable* cv79 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var79_string, ".str66", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv79->setUnnamedAddr(true);
	globals[79] = cv79;
	
	Constant* var80_string = ConstantDataArray::getString(context, "cmovle", true);
	GlobalVariable* cv80 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var80_string, ".str67", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv80->setUnnamedAddr(true);
	globals[80] = cv80;
	
	Constant* var81_string = ConstantDataArray::getString(context, "cmovne", true);
	GlobalVariable* cv81 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var81_string, ".str68", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv81->setUnnamedAddr(true);
	globals[81] = cv81;
	
	Constant* var82_string = ConstantDataArray::getString(context, "cmovno", true);
	GlobalVariable* cv82 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var82_string, ".str69", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv82->setUnnamedAddr(true);
	globals[82] = cv82;
	
	Constant* var83_string = ConstantDataArray::getString(context, "cmovnp", true);
	GlobalVariable* cv83 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var83_string, ".str70", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv83->setUnnamedAddr(true);
	globals[83] = cv83;
	
	Constant* var84_string = ConstantDataArray::getString(context, "cmovns", true);
	GlobalVariable* cv84 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var84_string, ".str71", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv84->setUnnamedAddr(true);
	globals[84] = cv84;
	
	Constant* var85_string = ConstantDataArray::getString(context, "cmovo", true);
	GlobalVariable* cv85 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var85_string, ".str72", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv85->setUnnamedAddr(true);
	globals[85] = cv85;
	
	Constant* var86_string = ConstantDataArray::getString(context, "cmovp", true);
	GlobalVariable* cv86 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var86_string, ".str73", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv86->setUnnamedAddr(true);
	globals[86] = cv86;
	
	Constant* var87_string = ConstantDataArray::getString(context, "cmovs", true);
	GlobalVariable* cv87 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var87_string, ".str74", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv87->setUnnamedAddr(true);
	globals[87] = cv87;
	
	Constant* var88_string = ConstantDataArray::getString(context, "cmppd", true);
	GlobalVariable* cv88 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var88_string, ".str75", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv88->setUnnamedAddr(true);
	globals[88] = cv88;
	
	Constant* var89_string = ConstantDataArray::getString(context, "cmpps", true);
	GlobalVariable* cv89 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var89_string, ".str76", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv89->setUnnamedAddr(true);
	globals[89] = cv89;
	
	Constant* var90_string = ConstantDataArray::getString(context, "cmpsb", true);
	GlobalVariable* cv90 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var90_string, ".str77", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv90->setUnnamedAddr(true);
	globals[90] = cv90;
	
	Constant* var91_string = ConstantDataArray::getString(context, "cmpsd", true);
	GlobalVariable* cv91 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var91_string, ".str78", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv91->setUnnamedAddr(true);
	globals[91] = cv91;
	
	Constant* var92_string = ConstantDataArray::getString(context, "cmpsq", true);
	GlobalVariable* cv92 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var92_string, ".str79", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv92->setUnnamedAddr(true);
	globals[92] = cv92;
	
	Constant* var93_string = ConstantDataArray::getString(context, "cmpss", true);
	GlobalVariable* cv93 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var93_string, ".str80", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv93->setUnnamedAddr(true);
	globals[93] = cv93;
	
	Constant* var94_string = ConstantDataArray::getString(context, "cmpsw", true);
	GlobalVariable* cv94 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var94_string, ".str81", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv94->setUnnamedAddr(true);
	globals[94] = cv94;
	
	Constant* var95_string = ConstantDataArray::getString(context, "cmpxchg", true);
	GlobalVariable* cv95 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var95_string, ".str82", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv95->setUnnamedAddr(true);
	globals[95] = cv95;
	
	Constant* var96_string = ConstantDataArray::getString(context, "cmpxchg16b", true);
	GlobalVariable* cv96 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var96_string, ".str83", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv96->setUnnamedAddr(true);
	globals[96] = cv96;
	
	Constant* var97_string = ConstantDataArray::getString(context, "cmpxchg8b", true);
	GlobalVariable* cv97 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var97_string, ".str84", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv97->setUnnamedAddr(true);
	globals[97] = cv97;
	
	Constant* var98_string = ConstantDataArray::getString(context, "comisd", true);
	GlobalVariable* cv98 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var98_string, ".str85", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv98->setUnnamedAddr(true);
	globals[98] = cv98;
	
	Constant* var99_string = ConstantDataArray::getString(context, "comiss", true);
	GlobalVariable* cv99 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var99_string, ".str86", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv99->setUnnamedAddr(true);
	globals[99] = cv99;
	
	Constant* var100_string = ConstantDataArray::getString(context, "cpuid", true);
	GlobalVariable* cv100 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var100_string, ".str87", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv100->setUnnamedAddr(true);
	globals[100] = cv100;
	
	Constant* var101_string = ConstantDataArray::getString(context, "cqo", true);
	GlobalVariable* cv101 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var101_string, ".str88", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv101->setUnnamedAddr(true);
	globals[101] = cv101;
	
	Constant* var102_string = ConstantDataArray::getString(context, "crc32", true);
	GlobalVariable* cv102 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var102_string, ".str89", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv102->setUnnamedAddr(true);
	globals[102] = cv102;
	
	Constant* var103_string = ConstantDataArray::getString(context, "cvtdq2pd", true);
	GlobalVariable* cv103 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var103_string, ".str90", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv103->setUnnamedAddr(true);
	globals[103] = cv103;
	
	Constant* var104_string = ConstantDataArray::getString(context, "cvtdq2ps", true);
	GlobalVariable* cv104 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var104_string, ".str91", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv104->setUnnamedAddr(true);
	globals[104] = cv104;
	
	Constant* var105_string = ConstantDataArray::getString(context, "cvtpd2dq", true);
	GlobalVariable* cv105 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var105_string, ".str92", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv105->setUnnamedAddr(true);
	globals[105] = cv105;
	
	Constant* var106_string = ConstantDataArray::getString(context, "cvtpd2pi", true);
	GlobalVariable* cv106 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var106_string, ".str93", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv106->setUnnamedAddr(true);
	globals[106] = cv106;
	
	Constant* var107_string = ConstantDataArray::getString(context, "cvtpd2ps", true);
	GlobalVariable* cv107 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var107_string, ".str94", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv107->setUnnamedAddr(true);
	globals[107] = cv107;
	
	Constant* var108_string = ConstantDataArray::getString(context, "cvtpi2pd", true);
	GlobalVariable* cv108 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var108_string, ".str95", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv108->setUnnamedAddr(true);
	globals[108] = cv108;
	
	Constant* var109_string = ConstantDataArray::getString(context, "cvtpi2ps", true);
	GlobalVariable* cv109 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var109_string, ".str96", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv109->setUnnamedAddr(true);
	globals[109] = cv109;
	
	Constant* var110_string = ConstantDataArray::getString(context, "cvtps2dq", true);
	GlobalVariable* cv110 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var110_string, ".str97", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv110->setUnnamedAddr(true);
	globals[110] = cv110;
	
	Constant* var111_string = ConstantDataArray::getString(context, "cvtps2pd", true);
	GlobalVariable* cv111 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var111_string, ".str98", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv111->setUnnamedAddr(true);
	globals[111] = cv111;
	
	Constant* var112_string = ConstantDataArray::getString(context, "cvtps2pi", true);
	GlobalVariable* cv112 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var112_string, ".str99", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv112->setUnnamedAddr(true);
	globals[112] = cv112;
	
	Constant* var113_string = ConstantDataArray::getString(context, "cvtsd2si", true);
	GlobalVariable* cv113 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var113_string, ".str100", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv113->setUnnamedAddr(true);
	globals[113] = cv113;
	
	Constant* var114_string = ConstantDataArray::getString(context, "cvtsd2ss", true);
	GlobalVariable* cv114 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var114_string, ".str101", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv114->setUnnamedAddr(true);
	globals[114] = cv114;
	
	Constant* var115_string = ConstantDataArray::getString(context, "cvtsi2sd", true);
	GlobalVariable* cv115 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var115_string, ".str102", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv115->setUnnamedAddr(true);
	globals[115] = cv115;
	
	Constant* var116_string = ConstantDataArray::getString(context, "cvtsi2ss", true);
	GlobalVariable* cv116 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var116_string, ".str103", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv116->setUnnamedAddr(true);
	globals[116] = cv116;
	
	Constant* var117_string = ConstantDataArray::getString(context, "cvtss2sd", true);
	GlobalVariable* cv117 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var117_string, ".str104", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv117->setUnnamedAddr(true);
	globals[117] = cv117;
	
	Constant* var118_string = ConstantDataArray::getString(context, "cvtss2si", true);
	GlobalVariable* cv118 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var118_string, ".str105", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv118->setUnnamedAddr(true);
	globals[118] = cv118;
	
	Constant* var119_string = ConstantDataArray::getString(context, "cvttpd2dq", true);
	GlobalVariable* cv119 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var119_string, ".str106", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv119->setUnnamedAddr(true);
	globals[119] = cv119;
	
	Constant* var120_string = ConstantDataArray::getString(context, "cvttpd2pi", true);
	GlobalVariable* cv120 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var120_string, ".str107", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv120->setUnnamedAddr(true);
	globals[120] = cv120;
	
	Constant* var121_string = ConstantDataArray::getString(context, "cvttps2dq", true);
	GlobalVariable* cv121 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var121_string, ".str108", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv121->setUnnamedAddr(true);
	globals[121] = cv121;
	
	Constant* var122_string = ConstantDataArray::getString(context, "cvttps2pi", true);
	GlobalVariable* cv122 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var122_string, ".str109", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv122->setUnnamedAddr(true);
	globals[122] = cv122;
	
	Constant* var123_string = ConstantDataArray::getString(context, "cvttsd2si", true);
	GlobalVariable* cv123 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var123_string, ".str110", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv123->setUnnamedAddr(true);
	globals[123] = cv123;
	
	Constant* var124_string = ConstantDataArray::getString(context, "cvttss2si", true);
	GlobalVariable* cv124 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var124_string, ".str111", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv124->setUnnamedAddr(true);
	globals[124] = cv124;
	
	Constant* var125_string = ConstantDataArray::getString(context, "cwd", true);
	GlobalVariable* cv125 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var125_string, ".str112", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv125->setUnnamedAddr(true);
	globals[125] = cv125;
	
	Constant* var126_string = ConstantDataArray::getString(context, "cwde", true);
	GlobalVariable* cv126 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var126_string, ".str113", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv126->setUnnamedAddr(true);
	globals[126] = cv126;
	
	Constant* var127_string = ConstantDataArray::getString(context, "daa", true);
	GlobalVariable* cv127 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var127_string, ".str114", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv127->setUnnamedAddr(true);
	globals[127] = cv127;
	
	Constant* var128_string = ConstantDataArray::getString(context, "das", true);
	GlobalVariable* cv128 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var128_string, ".str115", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv128->setUnnamedAddr(true);
	globals[128] = cv128;
	
	Constant* var129_string = ConstantDataArray::getString(context, "data16", true);
	GlobalVariable* cv129 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var129_string, ".str116", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv129->setUnnamedAddr(true);
	globals[129] = cv129;
	
	Constant* var130_string = ConstantDataArray::getString(context, "dec", true);
	GlobalVariable* cv130 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var130_string, ".str117", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv130->setUnnamedAddr(true);
	globals[130] = cv130;
	
	Constant* var131_string = ConstantDataArray::getString(context, "div", true);
	GlobalVariable* cv131 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var131_string, ".str118", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv131->setUnnamedAddr(true);
	globals[131] = cv131;
	
	Constant* var132_string = ConstantDataArray::getString(context, "divpd", true);
	GlobalVariable* cv132 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var132_string, ".str119", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv132->setUnnamedAddr(true);
	globals[132] = cv132;
	
	Constant* var133_string = ConstantDataArray::getString(context, "divps", true);
	GlobalVariable* cv133 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var133_string, ".str120", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv133->setUnnamedAddr(true);
	globals[133] = cv133;
	
	Constant* var134_string = ConstantDataArray::getString(context, "divsd", true);
	GlobalVariable* cv134 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var134_string, ".str121", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv134->setUnnamedAddr(true);
	globals[134] = cv134;
	
	Constant* var135_string = ConstantDataArray::getString(context, "divss", true);
	GlobalVariable* cv135 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var135_string, ".str122", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv135->setUnnamedAddr(true);
	globals[135] = cv135;
	
	Constant* var136_string = ConstantDataArray::getString(context, "dppd", true);
	GlobalVariable* cv136 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var136_string, ".str123", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv136->setUnnamedAddr(true);
	globals[136] = cv136;
	
	Constant* var137_string = ConstantDataArray::getString(context, "dpps", true);
	GlobalVariable* cv137 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var137_string, ".str124", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv137->setUnnamedAddr(true);
	globals[137] = cv137;
	
	Constant* var138_string = ConstantDataArray::getString(context, "emms", true);
	GlobalVariable* cv138 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var138_string, ".str125", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv138->setUnnamedAddr(true);
	globals[138] = cv138;
	
	Constant* var139_string = ConstantDataArray::getString(context, "encls", true);
	GlobalVariable* cv139 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var139_string, ".str126", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv139->setUnnamedAddr(true);
	globals[139] = cv139;
	
	Constant* var140_string = ConstantDataArray::getString(context, "enclu", true);
	GlobalVariable* cv140 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var140_string, ".str127", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv140->setUnnamedAddr(true);
	globals[140] = cv140;
	
	Constant* var141_string = ConstantDataArray::getString(context, "enter", true);
	GlobalVariable* cv141 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var141_string, ".str128", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv141->setUnnamedAddr(true);
	globals[141] = cv141;
	
	Constant* var142_string = ConstantDataArray::getString(context, "extractps", true);
	GlobalVariable* cv142 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var142_string, ".str129", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv142->setUnnamedAddr(true);
	globals[142] = cv142;
	
	Constant* var143_string = ConstantDataArray::getString(context, "extrq", true);
	GlobalVariable* cv143 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var143_string, ".str130", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv143->setUnnamedAddr(true);
	globals[143] = cv143;
	
	Constant* var144_string = ConstantDataArray::getString(context, "f2xm1", true);
	GlobalVariable* cv144 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var144_string, ".str131", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv144->setUnnamedAddr(true);
	globals[144] = cv144;
	
	Constant* var145_string = ConstantDataArray::getString(context, "fabs", true);
	GlobalVariable* cv145 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var145_string, ".str132", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv145->setUnnamedAddr(true);
	globals[145] = cv145;
	
	Constant* var146_string = ConstantDataArray::getString(context, "fadd", true);
	GlobalVariable* cv146 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var146_string, ".str133", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv146->setUnnamedAddr(true);
	globals[146] = cv146;
	
	Constant* var147_string = ConstantDataArray::getString(context, "faddp", true);
	GlobalVariable* cv147 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var147_string, ".str134", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv147->setUnnamedAddr(true);
	globals[147] = cv147;
	
	Constant* var148_string = ConstantDataArray::getString(context, "fbld", true);
	GlobalVariable* cv148 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var148_string, ".str135", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv148->setUnnamedAddr(true);
	globals[148] = cv148;
	
	Constant* var149_string = ConstantDataArray::getString(context, "fbstp", true);
	GlobalVariable* cv149 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var149_string, ".str136", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv149->setUnnamedAddr(true);
	globals[149] = cv149;
	
	Constant* var150_string = ConstantDataArray::getString(context, "fchs", true);
	GlobalVariable* cv150 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var150_string, ".str137", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv150->setUnnamedAddr(true);
	globals[150] = cv150;
	
	Constant* var151_string = ConstantDataArray::getString(context, "fcmovb", true);
	GlobalVariable* cv151 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var151_string, ".str138", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv151->setUnnamedAddr(true);
	globals[151] = cv151;
	
	Constant* var152_string = ConstantDataArray::getString(context, "fcmovbe", true);
	GlobalVariable* cv152 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var152_string, ".str139", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv152->setUnnamedAddr(true);
	globals[152] = cv152;
	
	Constant* var153_string = ConstantDataArray::getString(context, "fcmove", true);
	GlobalVariable* cv153 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var153_string, ".str140", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv153->setUnnamedAddr(true);
	globals[153] = cv153;
	
	Constant* var154_string = ConstantDataArray::getString(context, "fcmovnb", true);
	GlobalVariable* cv154 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var154_string, ".str141", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv154->setUnnamedAddr(true);
	globals[154] = cv154;
	
	Constant* var155_string = ConstantDataArray::getString(context, "fcmovnbe", true);
	GlobalVariable* cv155 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var155_string, ".str142", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv155->setUnnamedAddr(true);
	globals[155] = cv155;
	
	Constant* var156_string = ConstantDataArray::getString(context, "fcmovne", true);
	GlobalVariable* cv156 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var156_string, ".str143", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv156->setUnnamedAddr(true);
	globals[156] = cv156;
	
	Constant* var157_string = ConstantDataArray::getString(context, "fcmovnu", true);
	GlobalVariable* cv157 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var157_string, ".str144", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv157->setUnnamedAddr(true);
	globals[157] = cv157;
	
	Constant* var158_string = ConstantDataArray::getString(context, "fcmovu", true);
	GlobalVariable* cv158 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var158_string, ".str145", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv158->setUnnamedAddr(true);
	globals[158] = cv158;
	
	Constant* var159_string = ConstantDataArray::getString(context, "fcom", true);
	GlobalVariable* cv159 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var159_string, ".str146", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv159->setUnnamedAddr(true);
	globals[159] = cv159;
	
	Constant* var160_string = ConstantDataArray::getString(context, "fcomi", true);
	GlobalVariable* cv160 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var160_string, ".str147", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv160->setUnnamedAddr(true);
	globals[160] = cv160;
	
	Constant* var161_string = ConstantDataArray::getString(context, "fcomp", true);
	GlobalVariable* cv161 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var161_string, ".str148", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv161->setUnnamedAddr(true);
	globals[161] = cv161;
	
	Constant* var162_string = ConstantDataArray::getString(context, "fcompi", true);
	GlobalVariable* cv162 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var162_string, ".str149", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv162->setUnnamedAddr(true);
	globals[162] = cv162;
	
	Constant* var163_string = ConstantDataArray::getString(context, "fcompp", true);
	GlobalVariable* cv163 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var163_string, ".str150", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv163->setUnnamedAddr(true);
	globals[163] = cv163;
	
	Constant* var164_string = ConstantDataArray::getString(context, "fcos", true);
	GlobalVariable* cv164 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var164_string, ".str151", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv164->setUnnamedAddr(true);
	globals[164] = cv164;
	
	Constant* var165_string = ConstantDataArray::getString(context, "fdecstp", true);
	GlobalVariable* cv165 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var165_string, ".str152", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv165->setUnnamedAddr(true);
	globals[165] = cv165;
	
	Constant* var166_string = ConstantDataArray::getString(context, "fdiv", true);
	GlobalVariable* cv166 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var166_string, ".str153", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv166->setUnnamedAddr(true);
	globals[166] = cv166;
	
	Constant* var167_string = ConstantDataArray::getString(context, "fdivp", true);
	GlobalVariable* cv167 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var167_string, ".str154", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv167->setUnnamedAddr(true);
	globals[167] = cv167;
	
	Constant* var168_string = ConstantDataArray::getString(context, "fdivr", true);
	GlobalVariable* cv168 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var168_string, ".str155", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv168->setUnnamedAddr(true);
	globals[168] = cv168;
	
	Constant* var169_string = ConstantDataArray::getString(context, "fdivrp", true);
	GlobalVariable* cv169 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var169_string, ".str156", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv169->setUnnamedAddr(true);
	globals[169] = cv169;
	
	Constant* var170_string = ConstantDataArray::getString(context, "femms", true);
	GlobalVariable* cv170 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var170_string, ".str157", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv170->setUnnamedAddr(true);
	globals[170] = cv170;
	
	Constant* var171_string = ConstantDataArray::getString(context, "ffree", true);
	GlobalVariable* cv171 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var171_string, ".str158", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv171->setUnnamedAddr(true);
	globals[171] = cv171;
	
	Constant* var172_string = ConstantDataArray::getString(context, "fiadd", true);
	GlobalVariable* cv172 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var172_string, ".str159", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv172->setUnnamedAddr(true);
	globals[172] = cv172;
	
	Constant* var173_string = ConstantDataArray::getString(context, "ficom", true);
	GlobalVariable* cv173 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var173_string, ".str160", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv173->setUnnamedAddr(true);
	globals[173] = cv173;
	
	Constant* var174_string = ConstantDataArray::getString(context, "ficomp", true);
	GlobalVariable* cv174 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var174_string, ".str161", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv174->setUnnamedAddr(true);
	globals[174] = cv174;
	
	Constant* var175_string = ConstantDataArray::getString(context, "fidiv", true);
	GlobalVariable* cv175 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var175_string, ".str162", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv175->setUnnamedAddr(true);
	globals[175] = cv175;
	
	Constant* var176_string = ConstantDataArray::getString(context, "fidivr", true);
	GlobalVariable* cv176 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var176_string, ".str163", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv176->setUnnamedAddr(true);
	globals[176] = cv176;
	
	Constant* var177_string = ConstantDataArray::getString(context, "fild", true);
	GlobalVariable* cv177 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var177_string, ".str164", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv177->setUnnamedAddr(true);
	globals[177] = cv177;
	
	Constant* var178_string = ConstantDataArray::getString(context, "fimul", true);
	GlobalVariable* cv178 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var178_string, ".str165", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv178->setUnnamedAddr(true);
	globals[178] = cv178;
	
	Constant* var179_string = ConstantDataArray::getString(context, "fincstp", true);
	GlobalVariable* cv179 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var179_string, ".str166", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv179->setUnnamedAddr(true);
	globals[179] = cv179;
	
	Constant* var180_string = ConstantDataArray::getString(context, "fist", true);
	GlobalVariable* cv180 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var180_string, ".str167", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv180->setUnnamedAddr(true);
	globals[180] = cv180;
	
	Constant* var181_string = ConstantDataArray::getString(context, "fistp", true);
	GlobalVariable* cv181 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var181_string, ".str168", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv181->setUnnamedAddr(true);
	globals[181] = cv181;
	
	Constant* var182_string = ConstantDataArray::getString(context, "fisttp", true);
	GlobalVariable* cv182 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var182_string, ".str169", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv182->setUnnamedAddr(true);
	globals[182] = cv182;
	
	Constant* var183_string = ConstantDataArray::getString(context, "fisub", true);
	GlobalVariable* cv183 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var183_string, ".str170", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv183->setUnnamedAddr(true);
	globals[183] = cv183;
	
	Constant* var184_string = ConstantDataArray::getString(context, "fisubr", true);
	GlobalVariable* cv184 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var184_string, ".str171", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv184->setUnnamedAddr(true);
	globals[184] = cv184;
	
	Constant* var185_string = ConstantDataArray::getString(context, "fld", true);
	GlobalVariable* cv185 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var185_string, ".str172", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv185->setUnnamedAddr(true);
	globals[185] = cv185;
	
	Constant* var186_string = ConstantDataArray::getString(context, "fld1", true);
	GlobalVariable* cv186 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var186_string, ".str173", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv186->setUnnamedAddr(true);
	globals[186] = cv186;
	
	Constant* var187_string = ConstantDataArray::getString(context, "fldcw", true);
	GlobalVariable* cv187 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var187_string, ".str174", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv187->setUnnamedAddr(true);
	globals[187] = cv187;
	
	Constant* var188_string = ConstantDataArray::getString(context, "fldenv", true);
	GlobalVariable* cv188 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var188_string, ".str175", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv188->setUnnamedAddr(true);
	globals[188] = cv188;
	
	Constant* var189_string = ConstantDataArray::getString(context, "fldl2e", true);
	GlobalVariable* cv189 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var189_string, ".str176", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv189->setUnnamedAddr(true);
	globals[189] = cv189;
	
	Constant* var190_string = ConstantDataArray::getString(context, "fldl2t", true);
	GlobalVariable* cv190 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var190_string, ".str177", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv190->setUnnamedAddr(true);
	globals[190] = cv190;
	
	Constant* var191_string = ConstantDataArray::getString(context, "fldlg2", true);
	GlobalVariable* cv191 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var191_string, ".str178", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv191->setUnnamedAddr(true);
	globals[191] = cv191;
	
	Constant* var192_string = ConstantDataArray::getString(context, "fldln2", true);
	GlobalVariable* cv192 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var192_string, ".str179", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv192->setUnnamedAddr(true);
	globals[192] = cv192;
	
	Constant* var193_string = ConstantDataArray::getString(context, "fldpi", true);
	GlobalVariable* cv193 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var193_string, ".str180", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv193->setUnnamedAddr(true);
	globals[193] = cv193;
	
	Constant* var194_string = ConstantDataArray::getString(context, "fldz", true);
	GlobalVariable* cv194 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var194_string, ".str181", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv194->setUnnamedAddr(true);
	globals[194] = cv194;
	
	Constant* var195_string = ConstantDataArray::getString(context, "fmul", true);
	GlobalVariable* cv195 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var195_string, ".str182", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv195->setUnnamedAddr(true);
	globals[195] = cv195;
	
	Constant* var196_string = ConstantDataArray::getString(context, "fmulp", true);
	GlobalVariable* cv196 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var196_string, ".str183", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv196->setUnnamedAddr(true);
	globals[196] = cv196;
	
	Constant* var197_string = ConstantDataArray::getString(context, "fnclex", true);
	GlobalVariable* cv197 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var197_string, ".str184", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv197->setUnnamedAddr(true);
	globals[197] = cv197;
	
	Constant* var198_string = ConstantDataArray::getString(context, "fninit", true);
	GlobalVariable* cv198 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var198_string, ".str185", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv198->setUnnamedAddr(true);
	globals[198] = cv198;
	
	Constant* var199_string = ConstantDataArray::getString(context, "fnop", true);
	GlobalVariable* cv199 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var199_string, ".str186", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv199->setUnnamedAddr(true);
	globals[199] = cv199;
	
	Constant* var200_string = ConstantDataArray::getString(context, "fnsave", true);
	GlobalVariable* cv200 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var200_string, ".str187", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv200->setUnnamedAddr(true);
	globals[200] = cv200;
	
	Constant* var201_string = ConstantDataArray::getString(context, "fnstcw", true);
	GlobalVariable* cv201 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var201_string, ".str188", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv201->setUnnamedAddr(true);
	globals[201] = cv201;
	
	Constant* var202_string = ConstantDataArray::getString(context, "fnstenv", true);
	GlobalVariable* cv202 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var202_string, ".str189", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv202->setUnnamedAddr(true);
	globals[202] = cv202;
	
	Constant* var203_string = ConstantDataArray::getString(context, "fnstsw", true);
	GlobalVariable* cv203 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var203_string, ".str190", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv203->setUnnamedAddr(true);
	globals[203] = cv203;
	
	Constant* var204_string = ConstantDataArray::getString(context, "fpatan", true);
	GlobalVariable* cv204 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var204_string, ".str191", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv204->setUnnamedAddr(true);
	globals[204] = cv204;
	
	Constant* var205_string = ConstantDataArray::getString(context, "fprem", true);
	GlobalVariable* cv205 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var205_string, ".str192", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv205->setUnnamedAddr(true);
	globals[205] = cv205;
	
	Constant* var206_string = ConstantDataArray::getString(context, "fprem1", true);
	GlobalVariable* cv206 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var206_string, ".str193", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv206->setUnnamedAddr(true);
	globals[206] = cv206;
	
	Constant* var207_string = ConstantDataArray::getString(context, "fptan", true);
	GlobalVariable* cv207 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var207_string, ".str194", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv207->setUnnamedAddr(true);
	globals[207] = cv207;
	
	Constant* var208_string = ConstantDataArray::getString(context, "frndint", true);
	GlobalVariable* cv208 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var208_string, ".str195", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv208->setUnnamedAddr(true);
	globals[208] = cv208;
	
	Constant* var209_string = ConstantDataArray::getString(context, "frstor", true);
	GlobalVariable* cv209 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var209_string, ".str196", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv209->setUnnamedAddr(true);
	globals[209] = cv209;
	
	Constant* var210_string = ConstantDataArray::getString(context, "fscale", true);
	GlobalVariable* cv210 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var210_string, ".str197", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv210->setUnnamedAddr(true);
	globals[210] = cv210;
	
	Constant* var211_string = ConstantDataArray::getString(context, "fsetpm", true);
	GlobalVariable* cv211 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var211_string, ".str198", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv211->setUnnamedAddr(true);
	globals[211] = cv211;
	
	Constant* var212_string = ConstantDataArray::getString(context, "fsin", true);
	GlobalVariable* cv212 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var212_string, ".str199", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv212->setUnnamedAddr(true);
	globals[212] = cv212;
	
	Constant* var213_string = ConstantDataArray::getString(context, "fsincos", true);
	GlobalVariable* cv213 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var213_string, ".str200", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv213->setUnnamedAddr(true);
	globals[213] = cv213;
	
	Constant* var214_string = ConstantDataArray::getString(context, "fsqrt", true);
	GlobalVariable* cv214 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var214_string, ".str201", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv214->setUnnamedAddr(true);
	globals[214] = cv214;
	
	Constant* var215_string = ConstantDataArray::getString(context, "fst", true);
	GlobalVariable* cv215 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var215_string, ".str202", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv215->setUnnamedAddr(true);
	globals[215] = cv215;
	
	Constant* var216_string = ConstantDataArray::getString(context, "fstp", true);
	GlobalVariable* cv216 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var216_string, ".str203", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv216->setUnnamedAddr(true);
	globals[216] = cv216;
	
	Constant* var217_string = ConstantDataArray::getString(context, "fstpnce", true);
	GlobalVariable* cv217 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var217_string, ".str204", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv217->setUnnamedAddr(true);
	globals[217] = cv217;
	
	Constant* var218_string = ConstantDataArray::getString(context, "fsub", true);
	GlobalVariable* cv218 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var218_string, ".str205", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv218->setUnnamedAddr(true);
	globals[218] = cv218;
	
	Constant* var219_string = ConstantDataArray::getString(context, "fsubp", true);
	GlobalVariable* cv219 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var219_string, ".str206", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv219->setUnnamedAddr(true);
	globals[219] = cv219;
	
	Constant* var220_string = ConstantDataArray::getString(context, "fsubr", true);
	GlobalVariable* cv220 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var220_string, ".str207", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv220->setUnnamedAddr(true);
	globals[220] = cv220;
	
	Constant* var221_string = ConstantDataArray::getString(context, "fsubrp", true);
	GlobalVariable* cv221 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var221_string, ".str208", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv221->setUnnamedAddr(true);
	globals[221] = cv221;
	
	Constant* var222_string = ConstantDataArray::getString(context, "ftst", true);
	GlobalVariable* cv222 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var222_string, ".str209", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv222->setUnnamedAddr(true);
	globals[222] = cv222;
	
	Constant* var223_string = ConstantDataArray::getString(context, "fucom", true);
	GlobalVariable* cv223 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var223_string, ".str210", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv223->setUnnamedAddr(true);
	globals[223] = cv223;
	
	Constant* var224_string = ConstantDataArray::getString(context, "fucomi", true);
	GlobalVariable* cv224 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var224_string, ".str211", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv224->setUnnamedAddr(true);
	globals[224] = cv224;
	
	Constant* var225_string = ConstantDataArray::getString(context, "fucomp", true);
	GlobalVariable* cv225 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var225_string, ".str212", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv225->setUnnamedAddr(true);
	globals[225] = cv225;
	
	Constant* var226_string = ConstantDataArray::getString(context, "fucompi", true);
	GlobalVariable* cv226 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var226_string, ".str213", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv226->setUnnamedAddr(true);
	globals[226] = cv226;
	
	Constant* var227_string = ConstantDataArray::getString(context, "fucompp", true);
	GlobalVariable* cv227 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var227_string, ".str214", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv227->setUnnamedAddr(true);
	globals[227] = cv227;
	
	Constant* var228_string = ConstantDataArray::getString(context, "fxam", true);
	GlobalVariable* cv228 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var228_string, ".str215", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv228->setUnnamedAddr(true);
	globals[228] = cv228;
	
	Constant* var229_string = ConstantDataArray::getString(context, "fxch", true);
	GlobalVariable* cv229 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var229_string, ".str216", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv229->setUnnamedAddr(true);
	globals[229] = cv229;
	
	Constant* var230_string = ConstantDataArray::getString(context, "fxrstor", true);
	GlobalVariable* cv230 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var230_string, ".str217", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv230->setUnnamedAddr(true);
	globals[230] = cv230;
	
	Constant* var231_string = ConstantDataArray::getString(context, "fxrstor64", true);
	GlobalVariable* cv231 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var231_string, ".str218", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv231->setUnnamedAddr(true);
	globals[231] = cv231;
	
	Constant* var232_string = ConstantDataArray::getString(context, "fxsave", true);
	GlobalVariable* cv232 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var232_string, ".str219", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv232->setUnnamedAddr(true);
	globals[232] = cv232;
	
	Constant* var233_string = ConstantDataArray::getString(context, "fxsave64", true);
	GlobalVariable* cv233 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var233_string, ".str220", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv233->setUnnamedAddr(true);
	globals[233] = cv233;
	
	Constant* var234_string = ConstantDataArray::getString(context, "fxtract", true);
	GlobalVariable* cv234 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var234_string, ".str221", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv234->setUnnamedAddr(true);
	globals[234] = cv234;
	
	Constant* var235_string = ConstantDataArray::getString(context, "fyl2x", true);
	GlobalVariable* cv235 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var235_string, ".str222", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv235->setUnnamedAddr(true);
	globals[235] = cv235;
	
	Constant* var236_string = ConstantDataArray::getString(context, "fyl2xp1", true);
	GlobalVariable* cv236 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var236_string, ".str223", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv236->setUnnamedAddr(true);
	globals[236] = cv236;
	
	Constant* var237_string = ConstantDataArray::getString(context, "getsec", true);
	GlobalVariable* cv237 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var237_string, ".str224", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv237->setUnnamedAddr(true);
	globals[237] = cv237;
	
	Constant* var238_string = ConstantDataArray::getString(context, "haddpd", true);
	GlobalVariable* cv238 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var238_string, ".str225", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv238->setUnnamedAddr(true);
	globals[238] = cv238;
	
	Constant* var239_string = ConstantDataArray::getString(context, "haddps", true);
	GlobalVariable* cv239 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var239_string, ".str226", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv239->setUnnamedAddr(true);
	globals[239] = cv239;
	
	Constant* var240_string = ConstantDataArray::getString(context, "hlt", true);
	GlobalVariable* cv240 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var240_string, ".str227", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv240->setUnnamedAddr(true);
	globals[240] = cv240;
	
	Constant* var241_string = ConstantDataArray::getString(context, "hsubpd", true);
	GlobalVariable* cv241 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var241_string, ".str228", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv241->setUnnamedAddr(true);
	globals[241] = cv241;
	
	Constant* var242_string = ConstantDataArray::getString(context, "hsubps", true);
	GlobalVariable* cv242 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var242_string, ".str229", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv242->setUnnamedAddr(true);
	globals[242] = cv242;
	
	Constant* var243_string = ConstantDataArray::getString(context, "idiv", true);
	GlobalVariable* cv243 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var243_string, ".str230", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv243->setUnnamedAddr(true);
	globals[243] = cv243;
	
	Constant* var244_string = ConstantDataArray::getString(context, "single-operand imul form is not implemented", true);
	GlobalVariable* cv244 = new GlobalVariable(module, types[53], true, GlobalValue::PrivateLinkage, var244_string, ".str231", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv244->setUnnamedAddr(true);
	globals[244] = cv244;
	
	globals[245] = Function::Create(cast<FunctionType>(types[38]), GlobalValue::ExternalLinkage, "llvm.smul.with.overflow.i64", &module);
	Constant* var246_string = ConstantDataArray::getString(context, "unexpected multiply size", true);
	GlobalVariable* cv246 = new GlobalVariable(module, types[39], true, GlobalValue::PrivateLinkage, var246_string, ".str232", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv246->setUnnamedAddr(true);
	globals[246] = cv246;
	
	Constant* var247_string = ConstantDataArray::getString(context, "in", true);
	GlobalVariable* cv247 = new GlobalVariable(module, types[50], true, GlobalValue::PrivateLinkage, var247_string, ".str233", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv247->setUnnamedAddr(true);
	globals[247] = cv247;
	
	Constant* var248_string = ConstantDataArray::getString(context, "inc", true);
	GlobalVariable* cv248 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var248_string, ".str234", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv248->setUnnamedAddr(true);
	globals[248] = cv248;
	
	Constant* var249_string = ConstantDataArray::getString(context, "insb", true);
	GlobalVariable* cv249 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var249_string, ".str235", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv249->setUnnamedAddr(true);
	globals[249] = cv249;
	
	Constant* var250_string = ConstantDataArray::getString(context, "insd", true);
	GlobalVariable* cv250 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var250_string, ".str236", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv250->setUnnamedAddr(true);
	globals[250] = cv250;
	
	Constant* var251_string = ConstantDataArray::getString(context, "insertps", true);
	GlobalVariable* cv251 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var251_string, ".str237", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv251->setUnnamedAddr(true);
	globals[251] = cv251;
	
	Constant* var252_string = ConstantDataArray::getString(context, "insertq", true);
	GlobalVariable* cv252 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var252_string, ".str238", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv252->setUnnamedAddr(true);
	globals[252] = cv252;
	
	Constant* var253_string = ConstantDataArray::getString(context, "insw", true);
	GlobalVariable* cv253 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var253_string, ".str239", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv253->setUnnamedAddr(true);
	globals[253] = cv253;
	
	Constant* var254_string = ConstantDataArray::getString(context, "int", true);
	GlobalVariable* cv254 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var254_string, ".str240", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv254->setUnnamedAddr(true);
	globals[254] = cv254;
	
	Constant* var255_string = ConstantDataArray::getString(context, "int1", true);
	GlobalVariable* cv255 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var255_string, ".str241", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv255->setUnnamedAddr(true);
	globals[255] = cv255;
	
	Constant* var256_string = ConstantDataArray::getString(context, "int3", true);
	GlobalVariable* cv256 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var256_string, ".str242", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv256->setUnnamedAddr(true);
	globals[256] = cv256;
	
	Constant* var257_string = ConstantDataArray::getString(context, "into", true);
	GlobalVariable* cv257 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var257_string, ".str243", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv257->setUnnamedAddr(true);
	globals[257] = cv257;
	
	Constant* var258_string = ConstantDataArray::getString(context, "invd", true);
	GlobalVariable* cv258 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var258_string, ".str244", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv258->setUnnamedAddr(true);
	globals[258] = cv258;
	
	Constant* var259_string = ConstantDataArray::getString(context, "invept", true);
	GlobalVariable* cv259 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var259_string, ".str245", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv259->setUnnamedAddr(true);
	globals[259] = cv259;
	
	Constant* var260_string = ConstantDataArray::getString(context, "invlpg", true);
	GlobalVariable* cv260 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var260_string, ".str246", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv260->setUnnamedAddr(true);
	globals[260] = cv260;
	
	Constant* var261_string = ConstantDataArray::getString(context, "invlpga", true);
	GlobalVariable* cv261 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var261_string, ".str247", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv261->setUnnamedAddr(true);
	globals[261] = cv261;
	
	Constant* var262_string = ConstantDataArray::getString(context, "invpcid", true);
	GlobalVariable* cv262 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var262_string, ".str248", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv262->setUnnamedAddr(true);
	globals[262] = cv262;
	
	Constant* var263_string = ConstantDataArray::getString(context, "invvpid", true);
	GlobalVariable* cv263 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var263_string, ".str249", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv263->setUnnamedAddr(true);
	globals[263] = cv263;
	
	Constant* var264_string = ConstantDataArray::getString(context, "iret", true);
	GlobalVariable* cv264 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var264_string, ".str250", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv264->setUnnamedAddr(true);
	globals[264] = cv264;
	
	Constant* var265_string = ConstantDataArray::getString(context, "iretd", true);
	GlobalVariable* cv265 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var265_string, ".str251", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv265->setUnnamedAddr(true);
	globals[265] = cv265;
	
	Constant* var266_string = ConstantDataArray::getString(context, "iretq", true);
	GlobalVariable* cv266 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var266_string, ".str252", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv266->setUnnamedAddr(true);
	globals[266] = cv266;
	
	globals[267] = Function::Create(cast<FunctionType>(types[51]), GlobalValue::ExternalLinkage, "x86_jump_intrin", &module);
	Constant* var268_string = ConstantDataArray::getString(context, "kandb", true);
	GlobalVariable* cv268 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var268_string, ".str253", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv268->setUnnamedAddr(true);
	globals[268] = cv268;
	
	Constant* var269_string = ConstantDataArray::getString(context, "kandd", true);
	GlobalVariable* cv269 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var269_string, ".str254", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv269->setUnnamedAddr(true);
	globals[269] = cv269;
	
	Constant* var270_string = ConstantDataArray::getString(context, "kandnb", true);
	GlobalVariable* cv270 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var270_string, ".str255", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv270->setUnnamedAddr(true);
	globals[270] = cv270;
	
	Constant* var271_string = ConstantDataArray::getString(context, "kandnd", true);
	GlobalVariable* cv271 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var271_string, ".str256", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv271->setUnnamedAddr(true);
	globals[271] = cv271;
	
	Constant* var272_string = ConstantDataArray::getString(context, "kandnq", true);
	GlobalVariable* cv272 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var272_string, ".str257", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv272->setUnnamedAddr(true);
	globals[272] = cv272;
	
	Constant* var273_string = ConstantDataArray::getString(context, "kandnw", true);
	GlobalVariable* cv273 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var273_string, ".str258", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv273->setUnnamedAddr(true);
	globals[273] = cv273;
	
	Constant* var274_string = ConstantDataArray::getString(context, "kandq", true);
	GlobalVariable* cv274 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var274_string, ".str259", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv274->setUnnamedAddr(true);
	globals[274] = cv274;
	
	Constant* var275_string = ConstantDataArray::getString(context, "kandw", true);
	GlobalVariable* cv275 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var275_string, ".str260", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv275->setUnnamedAddr(true);
	globals[275] = cv275;
	
	Constant* var276_string = ConstantDataArray::getString(context, "kmovb", true);
	GlobalVariable* cv276 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var276_string, ".str261", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv276->setUnnamedAddr(true);
	globals[276] = cv276;
	
	Constant* var277_string = ConstantDataArray::getString(context, "kmovd", true);
	GlobalVariable* cv277 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var277_string, ".str262", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv277->setUnnamedAddr(true);
	globals[277] = cv277;
	
	Constant* var278_string = ConstantDataArray::getString(context, "kmovq", true);
	GlobalVariable* cv278 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var278_string, ".str263", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv278->setUnnamedAddr(true);
	globals[278] = cv278;
	
	Constant* var279_string = ConstantDataArray::getString(context, "kmovw", true);
	GlobalVariable* cv279 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var279_string, ".str264", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv279->setUnnamedAddr(true);
	globals[279] = cv279;
	
	Constant* var280_string = ConstantDataArray::getString(context, "knotb", true);
	GlobalVariable* cv280 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var280_string, ".str265", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv280->setUnnamedAddr(true);
	globals[280] = cv280;
	
	Constant* var281_string = ConstantDataArray::getString(context, "knotd", true);
	GlobalVariable* cv281 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var281_string, ".str266", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv281->setUnnamedAddr(true);
	globals[281] = cv281;
	
	Constant* var282_string = ConstantDataArray::getString(context, "knotq", true);
	GlobalVariable* cv282 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var282_string, ".str267", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv282->setUnnamedAddr(true);
	globals[282] = cv282;
	
	Constant* var283_string = ConstantDataArray::getString(context, "knotw", true);
	GlobalVariable* cv283 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var283_string, ".str268", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv283->setUnnamedAddr(true);
	globals[283] = cv283;
	
	Constant* var284_string = ConstantDataArray::getString(context, "korb", true);
	GlobalVariable* cv284 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var284_string, ".str269", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv284->setUnnamedAddr(true);
	globals[284] = cv284;
	
	Constant* var285_string = ConstantDataArray::getString(context, "kord", true);
	GlobalVariable* cv285 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var285_string, ".str270", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv285->setUnnamedAddr(true);
	globals[285] = cv285;
	
	Constant* var286_string = ConstantDataArray::getString(context, "korq", true);
	GlobalVariable* cv286 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var286_string, ".str271", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv286->setUnnamedAddr(true);
	globals[286] = cv286;
	
	Constant* var287_string = ConstantDataArray::getString(context, "kortestw", true);
	GlobalVariable* cv287 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var287_string, ".str272", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv287->setUnnamedAddr(true);
	globals[287] = cv287;
	
	Constant* var288_string = ConstantDataArray::getString(context, "korw", true);
	GlobalVariable* cv288 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var288_string, ".str273", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv288->setUnnamedAddr(true);
	globals[288] = cv288;
	
	Constant* var289_string = ConstantDataArray::getString(context, "kshiftlw", true);
	GlobalVariable* cv289 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var289_string, ".str274", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv289->setUnnamedAddr(true);
	globals[289] = cv289;
	
	Constant* var290_string = ConstantDataArray::getString(context, "kshiftrw", true);
	GlobalVariable* cv290 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var290_string, ".str275", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv290->setUnnamedAddr(true);
	globals[290] = cv290;
	
	Constant* var291_string = ConstantDataArray::getString(context, "kunpckbw", true);
	GlobalVariable* cv291 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var291_string, ".str276", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv291->setUnnamedAddr(true);
	globals[291] = cv291;
	
	Constant* var292_string = ConstantDataArray::getString(context, "kxnorb", true);
	GlobalVariable* cv292 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var292_string, ".str277", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv292->setUnnamedAddr(true);
	globals[292] = cv292;
	
	Constant* var293_string = ConstantDataArray::getString(context, "kxnord", true);
	GlobalVariable* cv293 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var293_string, ".str278", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv293->setUnnamedAddr(true);
	globals[293] = cv293;
	
	Constant* var294_string = ConstantDataArray::getString(context, "kxnorq", true);
	GlobalVariable* cv294 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var294_string, ".str279", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv294->setUnnamedAddr(true);
	globals[294] = cv294;
	
	Constant* var295_string = ConstantDataArray::getString(context, "kxnorw", true);
	GlobalVariable* cv295 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var295_string, ".str280", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv295->setUnnamedAddr(true);
	globals[295] = cv295;
	
	Constant* var296_string = ConstantDataArray::getString(context, "kxorb", true);
	GlobalVariable* cv296 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var296_string, ".str281", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv296->setUnnamedAddr(true);
	globals[296] = cv296;
	
	Constant* var297_string = ConstantDataArray::getString(context, "kxord", true);
	GlobalVariable* cv297 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var297_string, ".str282", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv297->setUnnamedAddr(true);
	globals[297] = cv297;
	
	Constant* var298_string = ConstantDataArray::getString(context, "kxorq", true);
	GlobalVariable* cv298 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var298_string, ".str283", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv298->setUnnamedAddr(true);
	globals[298] = cv298;
	
	Constant* var299_string = ConstantDataArray::getString(context, "kxorw", true);
	GlobalVariable* cv299 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var299_string, ".str284", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv299->setUnnamedAddr(true);
	globals[299] = cv299;
	
	Constant* var300_string = ConstantDataArray::getString(context, "lahf", true);
	GlobalVariable* cv300 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var300_string, ".str285", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv300->setUnnamedAddr(true);
	globals[300] = cv300;
	
	Constant* var301_string = ConstantDataArray::getString(context, "lar", true);
	GlobalVariable* cv301 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var301_string, ".str286", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv301->setUnnamedAddr(true);
	globals[301] = cv301;
	
	Constant* var302_string = ConstantDataArray::getString(context, "lcall", true);
	GlobalVariable* cv302 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var302_string, ".str287", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv302->setUnnamedAddr(true);
	globals[302] = cv302;
	
	Constant* var303_string = ConstantDataArray::getString(context, "lddqu", true);
	GlobalVariable* cv303 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var303_string, ".str288", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv303->setUnnamedAddr(true);
	globals[303] = cv303;
	
	Constant* var304_string = ConstantDataArray::getString(context, "ldmxcsr", true);
	GlobalVariable* cv304 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var304_string, ".str289", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv304->setUnnamedAddr(true);
	globals[304] = cv304;
	
	Constant* var305_string = ConstantDataArray::getString(context, "lds", true);
	GlobalVariable* cv305 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var305_string, ".str290", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv305->setUnnamedAddr(true);
	globals[305] = cv305;
	
	Constant* var306_string = ConstantDataArray::getString(context, "les", true);
	GlobalVariable* cv306 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var306_string, ".str291", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv306->setUnnamedAddr(true);
	globals[306] = cv306;
	
	Constant* var307_string = ConstantDataArray::getString(context, "lfence", true);
	GlobalVariable* cv307 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var307_string, ".str292", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv307->setUnnamedAddr(true);
	globals[307] = cv307;
	
	Constant* var308_string = ConstantDataArray::getString(context, "lfs", true);
	GlobalVariable* cv308 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var308_string, ".str293", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv308->setUnnamedAddr(true);
	globals[308] = cv308;
	
	Constant* var309_string = ConstantDataArray::getString(context, "lgdt", true);
	GlobalVariable* cv309 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var309_string, ".str294", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv309->setUnnamedAddr(true);
	globals[309] = cv309;
	
	Constant* var310_string = ConstantDataArray::getString(context, "lgs", true);
	GlobalVariable* cv310 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var310_string, ".str295", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv310->setUnnamedAddr(true);
	globals[310] = cv310;
	
	Constant* var311_string = ConstantDataArray::getString(context, "lidt", true);
	GlobalVariable* cv311 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var311_string, ".str296", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv311->setUnnamedAddr(true);
	globals[311] = cv311;
	
	Constant* var312_string = ConstantDataArray::getString(context, "ljmp", true);
	GlobalVariable* cv312 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var312_string, ".str297", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv312->setUnnamedAddr(true);
	globals[312] = cv312;
	
	Constant* var313_string = ConstantDataArray::getString(context, "lldt", true);
	GlobalVariable* cv313 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var313_string, ".str298", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv313->setUnnamedAddr(true);
	globals[313] = cv313;
	
	Constant* var314_string = ConstantDataArray::getString(context, "lmsw", true);
	GlobalVariable* cv314 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var314_string, ".str299", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv314->setUnnamedAddr(true);
	globals[314] = cv314;
	
	Constant* var315_string = ConstantDataArray::getString(context, "lodsb", true);
	GlobalVariable* cv315 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var315_string, ".str300", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv315->setUnnamedAddr(true);
	globals[315] = cv315;
	
	Constant* var316_string = ConstantDataArray::getString(context, "lodsd", true);
	GlobalVariable* cv316 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var316_string, ".str301", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv316->setUnnamedAddr(true);
	globals[316] = cv316;
	
	Constant* var317_string = ConstantDataArray::getString(context, "lodsq", true);
	GlobalVariable* cv317 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var317_string, ".str302", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv317->setUnnamedAddr(true);
	globals[317] = cv317;
	
	Constant* var318_string = ConstantDataArray::getString(context, "lodsw", true);
	GlobalVariable* cv318 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var318_string, ".str303", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv318->setUnnamedAddr(true);
	globals[318] = cv318;
	
	Constant* var319_string = ConstantDataArray::getString(context, "loop", true);
	GlobalVariable* cv319 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var319_string, ".str304", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv319->setUnnamedAddr(true);
	globals[319] = cv319;
	
	Constant* var320_string = ConstantDataArray::getString(context, "loope", true);
	GlobalVariable* cv320 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var320_string, ".str305", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv320->setUnnamedAddr(true);
	globals[320] = cv320;
	
	Constant* var321_string = ConstantDataArray::getString(context, "loopne", true);
	GlobalVariable* cv321 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var321_string, ".str306", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv321->setUnnamedAddr(true);
	globals[321] = cv321;
	
	Constant* var322_string = ConstantDataArray::getString(context, "lsl", true);
	GlobalVariable* cv322 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var322_string, ".str307", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv322->setUnnamedAddr(true);
	globals[322] = cv322;
	
	Constant* var323_string = ConstantDataArray::getString(context, "lss", true);
	GlobalVariable* cv323 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var323_string, ".str308", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv323->setUnnamedAddr(true);
	globals[323] = cv323;
	
	Constant* var324_string = ConstantDataArray::getString(context, "ltr", true);
	GlobalVariable* cv324 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var324_string, ".str309", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv324->setUnnamedAddr(true);
	globals[324] = cv324;
	
	Constant* var325_string = ConstantDataArray::getString(context, "lzcnt", true);
	GlobalVariable* cv325 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var325_string, ".str310", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv325->setUnnamedAddr(true);
	globals[325] = cv325;
	
	Constant* var326_string = ConstantDataArray::getString(context, "maskmovdqu", true);
	GlobalVariable* cv326 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var326_string, ".str311", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv326->setUnnamedAddr(true);
	globals[326] = cv326;
	
	Constant* var327_string = ConstantDataArray::getString(context, "maskmovq", true);
	GlobalVariable* cv327 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var327_string, ".str312", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv327->setUnnamedAddr(true);
	globals[327] = cv327;
	
	Constant* var328_string = ConstantDataArray::getString(context, "maxpd", true);
	GlobalVariable* cv328 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var328_string, ".str313", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv328->setUnnamedAddr(true);
	globals[328] = cv328;
	
	Constant* var329_string = ConstantDataArray::getString(context, "maxps", true);
	GlobalVariable* cv329 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var329_string, ".str314", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv329->setUnnamedAddr(true);
	globals[329] = cv329;
	
	Constant* var330_string = ConstantDataArray::getString(context, "maxsd", true);
	GlobalVariable* cv330 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var330_string, ".str315", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv330->setUnnamedAddr(true);
	globals[330] = cv330;
	
	Constant* var331_string = ConstantDataArray::getString(context, "maxss", true);
	GlobalVariable* cv331 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var331_string, ".str316", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv331->setUnnamedAddr(true);
	globals[331] = cv331;
	
	Constant* var332_string = ConstantDataArray::getString(context, "mfence", true);
	GlobalVariable* cv332 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var332_string, ".str317", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv332->setUnnamedAddr(true);
	globals[332] = cv332;
	
	Constant* var333_string = ConstantDataArray::getString(context, "minpd", true);
	GlobalVariable* cv333 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var333_string, ".str318", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv333->setUnnamedAddr(true);
	globals[333] = cv333;
	
	Constant* var334_string = ConstantDataArray::getString(context, "minps", true);
	GlobalVariable* cv334 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var334_string, ".str319", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv334->setUnnamedAddr(true);
	globals[334] = cv334;
	
	Constant* var335_string = ConstantDataArray::getString(context, "minsd", true);
	GlobalVariable* cv335 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var335_string, ".str320", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv335->setUnnamedAddr(true);
	globals[335] = cv335;
	
	Constant* var336_string = ConstantDataArray::getString(context, "minss", true);
	GlobalVariable* cv336 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var336_string, ".str321", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv336->setUnnamedAddr(true);
	globals[336] = cv336;
	
	Constant* var337_string = ConstantDataArray::getString(context, "monitor", true);
	GlobalVariable* cv337 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var337_string, ".str322", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv337->setUnnamedAddr(true);
	globals[337] = cv337;
	
	Constant* var338_string = ConstantDataArray::getString(context, "montmul", true);
	GlobalVariable* cv338 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var338_string, ".str323", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv338->setUnnamedAddr(true);
	globals[338] = cv338;
	
	Constant* var339_string = ConstantDataArray::getString(context, "movabs", true);
	GlobalVariable* cv339 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var339_string, ".str324", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv339->setUnnamedAddr(true);
	globals[339] = cv339;
	
	Constant* var340_string = ConstantDataArray::getString(context, "movapd", true);
	GlobalVariable* cv340 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var340_string, ".str325", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv340->setUnnamedAddr(true);
	globals[340] = cv340;
	
	Constant* var341_string = ConstantDataArray::getString(context, "movaps", true);
	GlobalVariable* cv341 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var341_string, ".str326", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv341->setUnnamedAddr(true);
	globals[341] = cv341;
	
	Constant* var342_string = ConstantDataArray::getString(context, "movbe", true);
	GlobalVariable* cv342 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var342_string, ".str327", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv342->setUnnamedAddr(true);
	globals[342] = cv342;
	
	Constant* var343_string = ConstantDataArray::getString(context, "movd", true);
	GlobalVariable* cv343 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var343_string, ".str328", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv343->setUnnamedAddr(true);
	globals[343] = cv343;
	
	Constant* var344_string = ConstantDataArray::getString(context, "movddup", true);
	GlobalVariable* cv344 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var344_string, ".str329", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv344->setUnnamedAddr(true);
	globals[344] = cv344;
	
	Constant* var345_string = ConstantDataArray::getString(context, "movdq2q", true);
	GlobalVariable* cv345 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var345_string, ".str330", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv345->setUnnamedAddr(true);
	globals[345] = cv345;
	
	Constant* var346_string = ConstantDataArray::getString(context, "movdqa", true);
	GlobalVariable* cv346 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var346_string, ".str331", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv346->setUnnamedAddr(true);
	globals[346] = cv346;
	
	Constant* var347_string = ConstantDataArray::getString(context, "movdqu", true);
	GlobalVariable* cv347 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var347_string, ".str332", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv347->setUnnamedAddr(true);
	globals[347] = cv347;
	
	Constant* var348_string = ConstantDataArray::getString(context, "movhlps", true);
	GlobalVariable* cv348 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var348_string, ".str333", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv348->setUnnamedAddr(true);
	globals[348] = cv348;
	
	Constant* var349_string = ConstantDataArray::getString(context, "movhpd", true);
	GlobalVariable* cv349 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var349_string, ".str334", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv349->setUnnamedAddr(true);
	globals[349] = cv349;
	
	Constant* var350_string = ConstantDataArray::getString(context, "movhps", true);
	GlobalVariable* cv350 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var350_string, ".str335", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv350->setUnnamedAddr(true);
	globals[350] = cv350;
	
	Constant* var351_string = ConstantDataArray::getString(context, "movlhps", true);
	GlobalVariable* cv351 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var351_string, ".str336", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv351->setUnnamedAddr(true);
	globals[351] = cv351;
	
	Constant* var352_string = ConstantDataArray::getString(context, "movlpd", true);
	GlobalVariable* cv352 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var352_string, ".str337", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv352->setUnnamedAddr(true);
	globals[352] = cv352;
	
	Constant* var353_string = ConstantDataArray::getString(context, "movlps", true);
	GlobalVariable* cv353 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var353_string, ".str338", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv353->setUnnamedAddr(true);
	globals[353] = cv353;
	
	Constant* var354_string = ConstantDataArray::getString(context, "movmskpd", true);
	GlobalVariable* cv354 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var354_string, ".str339", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv354->setUnnamedAddr(true);
	globals[354] = cv354;
	
	Constant* var355_string = ConstantDataArray::getString(context, "movmskps", true);
	GlobalVariable* cv355 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var355_string, ".str340", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv355->setUnnamedAddr(true);
	globals[355] = cv355;
	
	Constant* var356_string = ConstantDataArray::getString(context, "movntdq", true);
	GlobalVariable* cv356 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var356_string, ".str341", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv356->setUnnamedAddr(true);
	globals[356] = cv356;
	
	Constant* var357_string = ConstantDataArray::getString(context, "movntdqa", true);
	GlobalVariable* cv357 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var357_string, ".str342", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv357->setUnnamedAddr(true);
	globals[357] = cv357;
	
	Constant* var358_string = ConstantDataArray::getString(context, "movnti", true);
	GlobalVariable* cv358 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var358_string, ".str343", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv358->setUnnamedAddr(true);
	globals[358] = cv358;
	
	Constant* var359_string = ConstantDataArray::getString(context, "movntpd", true);
	GlobalVariable* cv359 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var359_string, ".str344", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv359->setUnnamedAddr(true);
	globals[359] = cv359;
	
	Constant* var360_string = ConstantDataArray::getString(context, "movntps", true);
	GlobalVariable* cv360 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var360_string, ".str345", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv360->setUnnamedAddr(true);
	globals[360] = cv360;
	
	Constant* var361_string = ConstantDataArray::getString(context, "movntq", true);
	GlobalVariable* cv361 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var361_string, ".str346", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv361->setUnnamedAddr(true);
	globals[361] = cv361;
	
	Constant* var362_string = ConstantDataArray::getString(context, "movntsd", true);
	GlobalVariable* cv362 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var362_string, ".str347", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv362->setUnnamedAddr(true);
	globals[362] = cv362;
	
	Constant* var363_string = ConstantDataArray::getString(context, "movntss", true);
	GlobalVariable* cv363 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var363_string, ".str348", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv363->setUnnamedAddr(true);
	globals[363] = cv363;
	
	Constant* var364_string = ConstantDataArray::getString(context, "movq", true);
	GlobalVariable* cv364 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var364_string, ".str349", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv364->setUnnamedAddr(true);
	globals[364] = cv364;
	
	Constant* var365_string = ConstantDataArray::getString(context, "movq2dq", true);
	GlobalVariable* cv365 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var365_string, ".str350", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv365->setUnnamedAddr(true);
	globals[365] = cv365;
	
	Constant* var366_string = ConstantDataArray::getString(context, "movsb", true);
	GlobalVariable* cv366 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var366_string, ".str351", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv366->setUnnamedAddr(true);
	globals[366] = cv366;
	
	Constant* var367_string = ConstantDataArray::getString(context, "movsd", true);
	GlobalVariable* cv367 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var367_string, ".str352", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv367->setUnnamedAddr(true);
	globals[367] = cv367;
	
	Constant* var368_string = ConstantDataArray::getString(context, "movshdup", true);
	GlobalVariable* cv368 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var368_string, ".str353", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv368->setUnnamedAddr(true);
	globals[368] = cv368;
	
	Constant* var369_string = ConstantDataArray::getString(context, "movsldup", true);
	GlobalVariable* cv369 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var369_string, ".str354", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv369->setUnnamedAddr(true);
	globals[369] = cv369;
	
	Constant* var370_string = ConstantDataArray::getString(context, "movsq", true);
	GlobalVariable* cv370 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var370_string, ".str355", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv370->setUnnamedAddr(true);
	globals[370] = cv370;
	
	Constant* var371_string = ConstantDataArray::getString(context, "movss", true);
	GlobalVariable* cv371 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var371_string, ".str356", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv371->setUnnamedAddr(true);
	globals[371] = cv371;
	
	Constant* var372_string = ConstantDataArray::getString(context, "movsw", true);
	GlobalVariable* cv372 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var372_string, ".str357", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv372->setUnnamedAddr(true);
	globals[372] = cv372;
	
	Constant* var373_string = ConstantDataArray::getString(context, "movsx", true);
	GlobalVariable* cv373 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var373_string, ".str358", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv373->setUnnamedAddr(true);
	globals[373] = cv373;
	
	Constant* var374_string = ConstantDataArray::getString(context, "movsxd", true);
	GlobalVariable* cv374 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var374_string, ".str359", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv374->setUnnamedAddr(true);
	globals[374] = cv374;
	
	Constant* var375_string = ConstantDataArray::getString(context, "movupd", true);
	GlobalVariable* cv375 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var375_string, ".str360", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv375->setUnnamedAddr(true);
	globals[375] = cv375;
	
	Constant* var376_string = ConstantDataArray::getString(context, "movups", true);
	GlobalVariable* cv376 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var376_string, ".str361", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv376->setUnnamedAddr(true);
	globals[376] = cv376;
	
	Constant* var377_string = ConstantDataArray::getString(context, "mpsadbw", true);
	GlobalVariable* cv377 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var377_string, ".str362", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv377->setUnnamedAddr(true);
	globals[377] = cv377;
	
	Constant* var378_string = ConstantDataArray::getString(context, "mul", true);
	GlobalVariable* cv378 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var378_string, ".str363", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv378->setUnnamedAddr(true);
	globals[378] = cv378;
	
	Constant* var379_string = ConstantDataArray::getString(context, "mulpd", true);
	GlobalVariable* cv379 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var379_string, ".str364", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv379->setUnnamedAddr(true);
	globals[379] = cv379;
	
	Constant* var380_string = ConstantDataArray::getString(context, "mulps", true);
	GlobalVariable* cv380 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var380_string, ".str365", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv380->setUnnamedAddr(true);
	globals[380] = cv380;
	
	Constant* var381_string = ConstantDataArray::getString(context, "mulsd", true);
	GlobalVariable* cv381 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var381_string, ".str366", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv381->setUnnamedAddr(true);
	globals[381] = cv381;
	
	Constant* var382_string = ConstantDataArray::getString(context, "mulss", true);
	GlobalVariable* cv382 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var382_string, ".str367", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv382->setUnnamedAddr(true);
	globals[382] = cv382;
	
	Constant* var383_string = ConstantDataArray::getString(context, "mulx", true);
	GlobalVariable* cv383 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var383_string, ".str368", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv383->setUnnamedAddr(true);
	globals[383] = cv383;
	
	Constant* var384_string = ConstantDataArray::getString(context, "mwait", true);
	GlobalVariable* cv384 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var384_string, ".str369", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv384->setUnnamedAddr(true);
	globals[384] = cv384;
	
	Constant* var385_string = ConstantDataArray::getString(context, "neg", true);
	GlobalVariable* cv385 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var385_string, ".str370", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv385->setUnnamedAddr(true);
	globals[385] = cv385;
	
	Constant* var386_string = ConstantDataArray::getString(context, "not", true);
	GlobalVariable* cv386 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var386_string, ".str371", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv386->setUnnamedAddr(true);
	globals[386] = cv386;
	
	Constant* var387_string = ConstantDataArray::getString(context, "orpd", true);
	GlobalVariable* cv387 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var387_string, ".str372", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv387->setUnnamedAddr(true);
	globals[387] = cv387;
	
	Constant* var388_string = ConstantDataArray::getString(context, "orps", true);
	GlobalVariable* cv388 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var388_string, ".str373", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv388->setUnnamedAddr(true);
	globals[388] = cv388;
	
	Constant* var389_string = ConstantDataArray::getString(context, "out", true);
	GlobalVariable* cv389 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var389_string, ".str374", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv389->setUnnamedAddr(true);
	globals[389] = cv389;
	
	Constant* var390_string = ConstantDataArray::getString(context, "outsb", true);
	GlobalVariable* cv390 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var390_string, ".str375", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv390->setUnnamedAddr(true);
	globals[390] = cv390;
	
	Constant* var391_string = ConstantDataArray::getString(context, "outsd", true);
	GlobalVariable* cv391 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var391_string, ".str376", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv391->setUnnamedAddr(true);
	globals[391] = cv391;
	
	Constant* var392_string = ConstantDataArray::getString(context, "outsw", true);
	GlobalVariable* cv392 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var392_string, ".str377", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv392->setUnnamedAddr(true);
	globals[392] = cv392;
	
	Constant* var393_string = ConstantDataArray::getString(context, "pabsb", true);
	GlobalVariable* cv393 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var393_string, ".str378", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv393->setUnnamedAddr(true);
	globals[393] = cv393;
	
	Constant* var394_string = ConstantDataArray::getString(context, "pabsd", true);
	GlobalVariable* cv394 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var394_string, ".str379", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv394->setUnnamedAddr(true);
	globals[394] = cv394;
	
	Constant* var395_string = ConstantDataArray::getString(context, "pabsw", true);
	GlobalVariable* cv395 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var395_string, ".str380", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv395->setUnnamedAddr(true);
	globals[395] = cv395;
	
	Constant* var396_string = ConstantDataArray::getString(context, "packssdw", true);
	GlobalVariable* cv396 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var396_string, ".str381", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv396->setUnnamedAddr(true);
	globals[396] = cv396;
	
	Constant* var397_string = ConstantDataArray::getString(context, "packsswb", true);
	GlobalVariable* cv397 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var397_string, ".str382", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv397->setUnnamedAddr(true);
	globals[397] = cv397;
	
	Constant* var398_string = ConstantDataArray::getString(context, "packusdw", true);
	GlobalVariable* cv398 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var398_string, ".str383", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv398->setUnnamedAddr(true);
	globals[398] = cv398;
	
	Constant* var399_string = ConstantDataArray::getString(context, "packuswb", true);
	GlobalVariable* cv399 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var399_string, ".str384", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv399->setUnnamedAddr(true);
	globals[399] = cv399;
	
	Constant* var400_string = ConstantDataArray::getString(context, "paddb", true);
	GlobalVariable* cv400 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var400_string, ".str385", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv400->setUnnamedAddr(true);
	globals[400] = cv400;
	
	Constant* var401_string = ConstantDataArray::getString(context, "paddd", true);
	GlobalVariable* cv401 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var401_string, ".str386", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv401->setUnnamedAddr(true);
	globals[401] = cv401;
	
	Constant* var402_string = ConstantDataArray::getString(context, "paddq", true);
	GlobalVariable* cv402 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var402_string, ".str387", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv402->setUnnamedAddr(true);
	globals[402] = cv402;
	
	Constant* var403_string = ConstantDataArray::getString(context, "paddsb", true);
	GlobalVariable* cv403 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var403_string, ".str388", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv403->setUnnamedAddr(true);
	globals[403] = cv403;
	
	Constant* var404_string = ConstantDataArray::getString(context, "paddsw", true);
	GlobalVariable* cv404 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var404_string, ".str389", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv404->setUnnamedAddr(true);
	globals[404] = cv404;
	
	Constant* var405_string = ConstantDataArray::getString(context, "paddusb", true);
	GlobalVariable* cv405 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var405_string, ".str390", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv405->setUnnamedAddr(true);
	globals[405] = cv405;
	
	Constant* var406_string = ConstantDataArray::getString(context, "paddusw", true);
	GlobalVariable* cv406 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var406_string, ".str391", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv406->setUnnamedAddr(true);
	globals[406] = cv406;
	
	Constant* var407_string = ConstantDataArray::getString(context, "paddw", true);
	GlobalVariable* cv407 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var407_string, ".str392", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv407->setUnnamedAddr(true);
	globals[407] = cv407;
	
	Constant* var408_string = ConstantDataArray::getString(context, "palignr", true);
	GlobalVariable* cv408 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var408_string, ".str393", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv408->setUnnamedAddr(true);
	globals[408] = cv408;
	
	Constant* var409_string = ConstantDataArray::getString(context, "pand", true);
	GlobalVariable* cv409 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var409_string, ".str394", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv409->setUnnamedAddr(true);
	globals[409] = cv409;
	
	Constant* var410_string = ConstantDataArray::getString(context, "pandn", true);
	GlobalVariable* cv410 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var410_string, ".str395", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv410->setUnnamedAddr(true);
	globals[410] = cv410;
	
	Constant* var411_string = ConstantDataArray::getString(context, "pause", true);
	GlobalVariable* cv411 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var411_string, ".str396", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv411->setUnnamedAddr(true);
	globals[411] = cv411;
	
	Constant* var412_string = ConstantDataArray::getString(context, "pavgb", true);
	GlobalVariable* cv412 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var412_string, ".str397", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv412->setUnnamedAddr(true);
	globals[412] = cv412;
	
	Constant* var413_string = ConstantDataArray::getString(context, "pavgusb", true);
	GlobalVariable* cv413 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var413_string, ".str398", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv413->setUnnamedAddr(true);
	globals[413] = cv413;
	
	Constant* var414_string = ConstantDataArray::getString(context, "pavgw", true);
	GlobalVariable* cv414 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var414_string, ".str399", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv414->setUnnamedAddr(true);
	globals[414] = cv414;
	
	Constant* var415_string = ConstantDataArray::getString(context, "pblendvb", true);
	GlobalVariable* cv415 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var415_string, ".str400", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv415->setUnnamedAddr(true);
	globals[415] = cv415;
	
	Constant* var416_string = ConstantDataArray::getString(context, "pblendw", true);
	GlobalVariable* cv416 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var416_string, ".str401", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv416->setUnnamedAddr(true);
	globals[416] = cv416;
	
	Constant* var417_string = ConstantDataArray::getString(context, "pclmulqdq", true);
	GlobalVariable* cv417 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var417_string, ".str402", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv417->setUnnamedAddr(true);
	globals[417] = cv417;
	
	Constant* var418_string = ConstantDataArray::getString(context, "pcmpeqb", true);
	GlobalVariable* cv418 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var418_string, ".str403", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv418->setUnnamedAddr(true);
	globals[418] = cv418;
	
	Constant* var419_string = ConstantDataArray::getString(context, "pcmpeqd", true);
	GlobalVariable* cv419 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var419_string, ".str404", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv419->setUnnamedAddr(true);
	globals[419] = cv419;
	
	Constant* var420_string = ConstantDataArray::getString(context, "pcmpeqq", true);
	GlobalVariable* cv420 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var420_string, ".str405", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv420->setUnnamedAddr(true);
	globals[420] = cv420;
	
	Constant* var421_string = ConstantDataArray::getString(context, "pcmpeqw", true);
	GlobalVariable* cv421 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var421_string, ".str406", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv421->setUnnamedAddr(true);
	globals[421] = cv421;
	
	Constant* var422_string = ConstantDataArray::getString(context, "pcmpestri", true);
	GlobalVariable* cv422 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var422_string, ".str407", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv422->setUnnamedAddr(true);
	globals[422] = cv422;
	
	Constant* var423_string = ConstantDataArray::getString(context, "pcmpestrm", true);
	GlobalVariable* cv423 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var423_string, ".str408", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv423->setUnnamedAddr(true);
	globals[423] = cv423;
	
	Constant* var424_string = ConstantDataArray::getString(context, "pcmpgtb", true);
	GlobalVariable* cv424 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var424_string, ".str409", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv424->setUnnamedAddr(true);
	globals[424] = cv424;
	
	Constant* var425_string = ConstantDataArray::getString(context, "pcmpgtd", true);
	GlobalVariable* cv425 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var425_string, ".str410", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv425->setUnnamedAddr(true);
	globals[425] = cv425;
	
	Constant* var426_string = ConstantDataArray::getString(context, "pcmpgtq", true);
	GlobalVariable* cv426 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var426_string, ".str411", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv426->setUnnamedAddr(true);
	globals[426] = cv426;
	
	Constant* var427_string = ConstantDataArray::getString(context, "pcmpgtw", true);
	GlobalVariable* cv427 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var427_string, ".str412", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv427->setUnnamedAddr(true);
	globals[427] = cv427;
	
	Constant* var428_string = ConstantDataArray::getString(context, "pcmpistri", true);
	GlobalVariable* cv428 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var428_string, ".str413", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv428->setUnnamedAddr(true);
	globals[428] = cv428;
	
	Constant* var429_string = ConstantDataArray::getString(context, "pcmpistrm", true);
	GlobalVariable* cv429 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var429_string, ".str414", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv429->setUnnamedAddr(true);
	globals[429] = cv429;
	
	Constant* var430_string = ConstantDataArray::getString(context, "pdep", true);
	GlobalVariable* cv430 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var430_string, ".str415", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv430->setUnnamedAddr(true);
	globals[430] = cv430;
	
	Constant* var431_string = ConstantDataArray::getString(context, "pext", true);
	GlobalVariable* cv431 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var431_string, ".str416", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv431->setUnnamedAddr(true);
	globals[431] = cv431;
	
	Constant* var432_string = ConstantDataArray::getString(context, "pextrb", true);
	GlobalVariable* cv432 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var432_string, ".str417", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv432->setUnnamedAddr(true);
	globals[432] = cv432;
	
	Constant* var433_string = ConstantDataArray::getString(context, "pextrd", true);
	GlobalVariable* cv433 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var433_string, ".str418", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv433->setUnnamedAddr(true);
	globals[433] = cv433;
	
	Constant* var434_string = ConstantDataArray::getString(context, "pextrq", true);
	GlobalVariable* cv434 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var434_string, ".str419", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv434->setUnnamedAddr(true);
	globals[434] = cv434;
	
	Constant* var435_string = ConstantDataArray::getString(context, "pextrw", true);
	GlobalVariable* cv435 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var435_string, ".str420", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv435->setUnnamedAddr(true);
	globals[435] = cv435;
	
	Constant* var436_string = ConstantDataArray::getString(context, "pf2id", true);
	GlobalVariable* cv436 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var436_string, ".str421", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv436->setUnnamedAddr(true);
	globals[436] = cv436;
	
	Constant* var437_string = ConstantDataArray::getString(context, "pf2iw", true);
	GlobalVariable* cv437 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var437_string, ".str422", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv437->setUnnamedAddr(true);
	globals[437] = cv437;
	
	Constant* var438_string = ConstantDataArray::getString(context, "pfacc", true);
	GlobalVariable* cv438 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var438_string, ".str423", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv438->setUnnamedAddr(true);
	globals[438] = cv438;
	
	Constant* var439_string = ConstantDataArray::getString(context, "pfadd", true);
	GlobalVariable* cv439 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var439_string, ".str424", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv439->setUnnamedAddr(true);
	globals[439] = cv439;
	
	Constant* var440_string = ConstantDataArray::getString(context, "pfcmpeq", true);
	GlobalVariable* cv440 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var440_string, ".str425", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv440->setUnnamedAddr(true);
	globals[440] = cv440;
	
	Constant* var441_string = ConstantDataArray::getString(context, "pfcmpge", true);
	GlobalVariable* cv441 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var441_string, ".str426", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv441->setUnnamedAddr(true);
	globals[441] = cv441;
	
	Constant* var442_string = ConstantDataArray::getString(context, "pfcmpgt", true);
	GlobalVariable* cv442 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var442_string, ".str427", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv442->setUnnamedAddr(true);
	globals[442] = cv442;
	
	Constant* var443_string = ConstantDataArray::getString(context, "pfmax", true);
	GlobalVariable* cv443 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var443_string, ".str428", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv443->setUnnamedAddr(true);
	globals[443] = cv443;
	
	Constant* var444_string = ConstantDataArray::getString(context, "pfmin", true);
	GlobalVariable* cv444 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var444_string, ".str429", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv444->setUnnamedAddr(true);
	globals[444] = cv444;
	
	Constant* var445_string = ConstantDataArray::getString(context, "pfmul", true);
	GlobalVariable* cv445 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var445_string, ".str430", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv445->setUnnamedAddr(true);
	globals[445] = cv445;
	
	Constant* var446_string = ConstantDataArray::getString(context, "pfnacc", true);
	GlobalVariable* cv446 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var446_string, ".str431", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv446->setUnnamedAddr(true);
	globals[446] = cv446;
	
	Constant* var447_string = ConstantDataArray::getString(context, "pfpnacc", true);
	GlobalVariable* cv447 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var447_string, ".str432", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv447->setUnnamedAddr(true);
	globals[447] = cv447;
	
	Constant* var448_string = ConstantDataArray::getString(context, "pfrcp", true);
	GlobalVariable* cv448 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var448_string, ".str433", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv448->setUnnamedAddr(true);
	globals[448] = cv448;
	
	Constant* var449_string = ConstantDataArray::getString(context, "pfrcpit1", true);
	GlobalVariable* cv449 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var449_string, ".str434", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv449->setUnnamedAddr(true);
	globals[449] = cv449;
	
	Constant* var450_string = ConstantDataArray::getString(context, "pfrcpit2", true);
	GlobalVariable* cv450 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var450_string, ".str435", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv450->setUnnamedAddr(true);
	globals[450] = cv450;
	
	Constant* var451_string = ConstantDataArray::getString(context, "pfrsqit1", true);
	GlobalVariable* cv451 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var451_string, ".str436", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv451->setUnnamedAddr(true);
	globals[451] = cv451;
	
	Constant* var452_string = ConstantDataArray::getString(context, "pfrsqrt", true);
	GlobalVariable* cv452 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var452_string, ".str437", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv452->setUnnamedAddr(true);
	globals[452] = cv452;
	
	Constant* var453_string = ConstantDataArray::getString(context, "pfsub", true);
	GlobalVariable* cv453 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var453_string, ".str438", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv453->setUnnamedAddr(true);
	globals[453] = cv453;
	
	Constant* var454_string = ConstantDataArray::getString(context, "pfsubr", true);
	GlobalVariable* cv454 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var454_string, ".str439", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv454->setUnnamedAddr(true);
	globals[454] = cv454;
	
	Constant* var455_string = ConstantDataArray::getString(context, "phaddd", true);
	GlobalVariable* cv455 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var455_string, ".str440", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv455->setUnnamedAddr(true);
	globals[455] = cv455;
	
	Constant* var456_string = ConstantDataArray::getString(context, "phaddsw", true);
	GlobalVariable* cv456 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var456_string, ".str441", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv456->setUnnamedAddr(true);
	globals[456] = cv456;
	
	Constant* var457_string = ConstantDataArray::getString(context, "phaddw", true);
	GlobalVariable* cv457 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var457_string, ".str442", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv457->setUnnamedAddr(true);
	globals[457] = cv457;
	
	Constant* var458_string = ConstantDataArray::getString(context, "phminposuw", true);
	GlobalVariable* cv458 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var458_string, ".str443", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv458->setUnnamedAddr(true);
	globals[458] = cv458;
	
	Constant* var459_string = ConstantDataArray::getString(context, "phsubd", true);
	GlobalVariable* cv459 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var459_string, ".str444", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv459->setUnnamedAddr(true);
	globals[459] = cv459;
	
	Constant* var460_string = ConstantDataArray::getString(context, "phsubsw", true);
	GlobalVariable* cv460 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var460_string, ".str445", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv460->setUnnamedAddr(true);
	globals[460] = cv460;
	
	Constant* var461_string = ConstantDataArray::getString(context, "phsubw", true);
	GlobalVariable* cv461 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var461_string, ".str446", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv461->setUnnamedAddr(true);
	globals[461] = cv461;
	
	Constant* var462_string = ConstantDataArray::getString(context, "pi2fd", true);
	GlobalVariable* cv462 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var462_string, ".str447", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv462->setUnnamedAddr(true);
	globals[462] = cv462;
	
	Constant* var463_string = ConstantDataArray::getString(context, "pi2fw", true);
	GlobalVariable* cv463 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var463_string, ".str448", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv463->setUnnamedAddr(true);
	globals[463] = cv463;
	
	Constant* var464_string = ConstantDataArray::getString(context, "pinsrb", true);
	GlobalVariable* cv464 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var464_string, ".str449", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv464->setUnnamedAddr(true);
	globals[464] = cv464;
	
	Constant* var465_string = ConstantDataArray::getString(context, "pinsrd", true);
	GlobalVariable* cv465 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var465_string, ".str450", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv465->setUnnamedAddr(true);
	globals[465] = cv465;
	
	Constant* var466_string = ConstantDataArray::getString(context, "pinsrq", true);
	GlobalVariable* cv466 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var466_string, ".str451", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv466->setUnnamedAddr(true);
	globals[466] = cv466;
	
	Constant* var467_string = ConstantDataArray::getString(context, "pinsrw", true);
	GlobalVariable* cv467 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var467_string, ".str452", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv467->setUnnamedAddr(true);
	globals[467] = cv467;
	
	Constant* var468_string = ConstantDataArray::getString(context, "pmaddubsw", true);
	GlobalVariable* cv468 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var468_string, ".str453", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv468->setUnnamedAddr(true);
	globals[468] = cv468;
	
	Constant* var469_string = ConstantDataArray::getString(context, "pmaddwd", true);
	GlobalVariable* cv469 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var469_string, ".str454", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv469->setUnnamedAddr(true);
	globals[469] = cv469;
	
	Constant* var470_string = ConstantDataArray::getString(context, "pmaxsb", true);
	GlobalVariable* cv470 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var470_string, ".str455", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv470->setUnnamedAddr(true);
	globals[470] = cv470;
	
	Constant* var471_string = ConstantDataArray::getString(context, "pmaxsd", true);
	GlobalVariable* cv471 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var471_string, ".str456", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv471->setUnnamedAddr(true);
	globals[471] = cv471;
	
	Constant* var472_string = ConstantDataArray::getString(context, "pmaxsw", true);
	GlobalVariable* cv472 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var472_string, ".str457", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv472->setUnnamedAddr(true);
	globals[472] = cv472;
	
	Constant* var473_string = ConstantDataArray::getString(context, "pmaxub", true);
	GlobalVariable* cv473 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var473_string, ".str458", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv473->setUnnamedAddr(true);
	globals[473] = cv473;
	
	Constant* var474_string = ConstantDataArray::getString(context, "pmaxud", true);
	GlobalVariable* cv474 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var474_string, ".str459", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv474->setUnnamedAddr(true);
	globals[474] = cv474;
	
	Constant* var475_string = ConstantDataArray::getString(context, "pmaxuw", true);
	GlobalVariable* cv475 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var475_string, ".str460", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv475->setUnnamedAddr(true);
	globals[475] = cv475;
	
	Constant* var476_string = ConstantDataArray::getString(context, "pminsb", true);
	GlobalVariable* cv476 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var476_string, ".str461", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv476->setUnnamedAddr(true);
	globals[476] = cv476;
	
	Constant* var477_string = ConstantDataArray::getString(context, "pminsd", true);
	GlobalVariable* cv477 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var477_string, ".str462", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv477->setUnnamedAddr(true);
	globals[477] = cv477;
	
	Constant* var478_string = ConstantDataArray::getString(context, "pminsw", true);
	GlobalVariable* cv478 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var478_string, ".str463", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv478->setUnnamedAddr(true);
	globals[478] = cv478;
	
	Constant* var479_string = ConstantDataArray::getString(context, "pminub", true);
	GlobalVariable* cv479 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var479_string, ".str464", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv479->setUnnamedAddr(true);
	globals[479] = cv479;
	
	Constant* var480_string = ConstantDataArray::getString(context, "pminud", true);
	GlobalVariable* cv480 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var480_string, ".str465", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv480->setUnnamedAddr(true);
	globals[480] = cv480;
	
	Constant* var481_string = ConstantDataArray::getString(context, "pminuw", true);
	GlobalVariable* cv481 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var481_string, ".str466", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv481->setUnnamedAddr(true);
	globals[481] = cv481;
	
	Constant* var482_string = ConstantDataArray::getString(context, "pmovmskb", true);
	GlobalVariable* cv482 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var482_string, ".str467", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv482->setUnnamedAddr(true);
	globals[482] = cv482;
	
	Constant* var483_string = ConstantDataArray::getString(context, "pmovsxbd", true);
	GlobalVariable* cv483 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var483_string, ".str468", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv483->setUnnamedAddr(true);
	globals[483] = cv483;
	
	Constant* var484_string = ConstantDataArray::getString(context, "pmovsxbq", true);
	GlobalVariable* cv484 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var484_string, ".str469", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv484->setUnnamedAddr(true);
	globals[484] = cv484;
	
	Constant* var485_string = ConstantDataArray::getString(context, "pmovsxbw", true);
	GlobalVariable* cv485 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var485_string, ".str470", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv485->setUnnamedAddr(true);
	globals[485] = cv485;
	
	Constant* var486_string = ConstantDataArray::getString(context, "pmovsxdq", true);
	GlobalVariable* cv486 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var486_string, ".str471", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv486->setUnnamedAddr(true);
	globals[486] = cv486;
	
	Constant* var487_string = ConstantDataArray::getString(context, "pmovsxwd", true);
	GlobalVariable* cv487 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var487_string, ".str472", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv487->setUnnamedAddr(true);
	globals[487] = cv487;
	
	Constant* var488_string = ConstantDataArray::getString(context, "pmovsxwq", true);
	GlobalVariable* cv488 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var488_string, ".str473", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv488->setUnnamedAddr(true);
	globals[488] = cv488;
	
	Constant* var489_string = ConstantDataArray::getString(context, "pmovzxbd", true);
	GlobalVariable* cv489 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var489_string, ".str474", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv489->setUnnamedAddr(true);
	globals[489] = cv489;
	
	Constant* var490_string = ConstantDataArray::getString(context, "pmovzxbq", true);
	GlobalVariable* cv490 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var490_string, ".str475", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv490->setUnnamedAddr(true);
	globals[490] = cv490;
	
	Constant* var491_string = ConstantDataArray::getString(context, "pmovzxbw", true);
	GlobalVariable* cv491 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var491_string, ".str476", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv491->setUnnamedAddr(true);
	globals[491] = cv491;
	
	Constant* var492_string = ConstantDataArray::getString(context, "pmovzxdq", true);
	GlobalVariable* cv492 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var492_string, ".str477", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv492->setUnnamedAddr(true);
	globals[492] = cv492;
	
	Constant* var493_string = ConstantDataArray::getString(context, "pmovzxwd", true);
	GlobalVariable* cv493 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var493_string, ".str478", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv493->setUnnamedAddr(true);
	globals[493] = cv493;
	
	Constant* var494_string = ConstantDataArray::getString(context, "pmovzxwq", true);
	GlobalVariable* cv494 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var494_string, ".str479", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv494->setUnnamedAddr(true);
	globals[494] = cv494;
	
	Constant* var495_string = ConstantDataArray::getString(context, "pmuldq", true);
	GlobalVariable* cv495 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var495_string, ".str480", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv495->setUnnamedAddr(true);
	globals[495] = cv495;
	
	Constant* var496_string = ConstantDataArray::getString(context, "pmulhrsw", true);
	GlobalVariable* cv496 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var496_string, ".str481", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv496->setUnnamedAddr(true);
	globals[496] = cv496;
	
	Constant* var497_string = ConstantDataArray::getString(context, "pmulhrw", true);
	GlobalVariable* cv497 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var497_string, ".str482", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv497->setUnnamedAddr(true);
	globals[497] = cv497;
	
	Constant* var498_string = ConstantDataArray::getString(context, "pmulhuw", true);
	GlobalVariable* cv498 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var498_string, ".str483", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv498->setUnnamedAddr(true);
	globals[498] = cv498;
	
	Constant* var499_string = ConstantDataArray::getString(context, "pmulhw", true);
	GlobalVariable* cv499 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var499_string, ".str484", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv499->setUnnamedAddr(true);
	globals[499] = cv499;
	
	Constant* var500_string = ConstantDataArray::getString(context, "pmulld", true);
	GlobalVariable* cv500 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var500_string, ".str485", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv500->setUnnamedAddr(true);
	globals[500] = cv500;
	
	Constant* var501_string = ConstantDataArray::getString(context, "pmullw", true);
	GlobalVariable* cv501 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var501_string, ".str486", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv501->setUnnamedAddr(true);
	globals[501] = cv501;
	
	Constant* var502_string = ConstantDataArray::getString(context, "pmuludq", true);
	GlobalVariable* cv502 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var502_string, ".str487", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv502->setUnnamedAddr(true);
	globals[502] = cv502;
	
	Constant* var503_string = ConstantDataArray::getString(context, "popal", true);
	GlobalVariable* cv503 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var503_string, ".str488", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv503->setUnnamedAddr(true);
	globals[503] = cv503;
	
	Constant* var504_string = ConstantDataArray::getString(context, "popaw", true);
	GlobalVariable* cv504 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var504_string, ".str489", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv504->setUnnamedAddr(true);
	globals[504] = cv504;
	
	Constant* var505_string = ConstantDataArray::getString(context, "popcnt", true);
	GlobalVariable* cv505 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var505_string, ".str490", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv505->setUnnamedAddr(true);
	globals[505] = cv505;
	
	Constant* var506_string = ConstantDataArray::getString(context, "popf", true);
	GlobalVariable* cv506 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var506_string, ".str491", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv506->setUnnamedAddr(true);
	globals[506] = cv506;
	
	Constant* var507_string = ConstantDataArray::getString(context, "popfd", true);
	GlobalVariable* cv507 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var507_string, ".str492", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv507->setUnnamedAddr(true);
	globals[507] = cv507;
	
	Constant* var508_string = ConstantDataArray::getString(context, "popfq", true);
	GlobalVariable* cv508 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var508_string, ".str493", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv508->setUnnamedAddr(true);
	globals[508] = cv508;
	
	Constant* var509_string = ConstantDataArray::getString(context, "por", true);
	GlobalVariable* cv509 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var509_string, ".str494", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv509->setUnnamedAddr(true);
	globals[509] = cv509;
	
	Constant* var510_string = ConstantDataArray::getString(context, "prefetch", true);
	GlobalVariable* cv510 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var510_string, ".str495", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv510->setUnnamedAddr(true);
	globals[510] = cv510;
	
	Constant* var511_string = ConstantDataArray::getString(context, "prefetchnta", true);
	GlobalVariable* cv511 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var511_string, ".str496", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv511->setUnnamedAddr(true);
	globals[511] = cv511;
	
	Constant* var512_string = ConstantDataArray::getString(context, "prefetcht0", true);
	GlobalVariable* cv512 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var512_string, ".str497", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv512->setUnnamedAddr(true);
	globals[512] = cv512;
	
	Constant* var513_string = ConstantDataArray::getString(context, "prefetcht1", true);
	GlobalVariable* cv513 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var513_string, ".str498", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv513->setUnnamedAddr(true);
	globals[513] = cv513;
	
	Constant* var514_string = ConstantDataArray::getString(context, "prefetcht2", true);
	GlobalVariable* cv514 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var514_string, ".str499", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv514->setUnnamedAddr(true);
	globals[514] = cv514;
	
	Constant* var515_string = ConstantDataArray::getString(context, "prefetchw", true);
	GlobalVariable* cv515 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var515_string, ".str500", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv515->setUnnamedAddr(true);
	globals[515] = cv515;
	
	Constant* var516_string = ConstantDataArray::getString(context, "psadbw", true);
	GlobalVariable* cv516 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var516_string, ".str501", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv516->setUnnamedAddr(true);
	globals[516] = cv516;
	
	Constant* var517_string = ConstantDataArray::getString(context, "pshufb", true);
	GlobalVariable* cv517 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var517_string, ".str502", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv517->setUnnamedAddr(true);
	globals[517] = cv517;
	
	Constant* var518_string = ConstantDataArray::getString(context, "pshufd", true);
	GlobalVariable* cv518 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var518_string, ".str503", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv518->setUnnamedAddr(true);
	globals[518] = cv518;
	
	Constant* var519_string = ConstantDataArray::getString(context, "pshufhw", true);
	GlobalVariable* cv519 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var519_string, ".str504", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv519->setUnnamedAddr(true);
	globals[519] = cv519;
	
	Constant* var520_string = ConstantDataArray::getString(context, "pshuflw", true);
	GlobalVariable* cv520 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var520_string, ".str505", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv520->setUnnamedAddr(true);
	globals[520] = cv520;
	
	Constant* var521_string = ConstantDataArray::getString(context, "pshufw", true);
	GlobalVariable* cv521 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var521_string, ".str506", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv521->setUnnamedAddr(true);
	globals[521] = cv521;
	
	Constant* var522_string = ConstantDataArray::getString(context, "psignb", true);
	GlobalVariable* cv522 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var522_string, ".str507", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv522->setUnnamedAddr(true);
	globals[522] = cv522;
	
	Constant* var523_string = ConstantDataArray::getString(context, "psignd", true);
	GlobalVariable* cv523 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var523_string, ".str508", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv523->setUnnamedAddr(true);
	globals[523] = cv523;
	
	Constant* var524_string = ConstantDataArray::getString(context, "psignw", true);
	GlobalVariable* cv524 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var524_string, ".str509", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv524->setUnnamedAddr(true);
	globals[524] = cv524;
	
	Constant* var525_string = ConstantDataArray::getString(context, "pslld", true);
	GlobalVariable* cv525 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var525_string, ".str510", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv525->setUnnamedAddr(true);
	globals[525] = cv525;
	
	Constant* var526_string = ConstantDataArray::getString(context, "pslldq", true);
	GlobalVariable* cv526 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var526_string, ".str511", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv526->setUnnamedAddr(true);
	globals[526] = cv526;
	
	Constant* var527_string = ConstantDataArray::getString(context, "psllq", true);
	GlobalVariable* cv527 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var527_string, ".str512", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv527->setUnnamedAddr(true);
	globals[527] = cv527;
	
	Constant* var528_string = ConstantDataArray::getString(context, "psllw", true);
	GlobalVariable* cv528 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var528_string, ".str513", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv528->setUnnamedAddr(true);
	globals[528] = cv528;
	
	Constant* var529_string = ConstantDataArray::getString(context, "psrad", true);
	GlobalVariable* cv529 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var529_string, ".str514", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv529->setUnnamedAddr(true);
	globals[529] = cv529;
	
	Constant* var530_string = ConstantDataArray::getString(context, "psraw", true);
	GlobalVariable* cv530 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var530_string, ".str515", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv530->setUnnamedAddr(true);
	globals[530] = cv530;
	
	Constant* var531_string = ConstantDataArray::getString(context, "psrld", true);
	GlobalVariable* cv531 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var531_string, ".str516", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv531->setUnnamedAddr(true);
	globals[531] = cv531;
	
	Constant* var532_string = ConstantDataArray::getString(context, "psrldq", true);
	GlobalVariable* cv532 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var532_string, ".str517", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv532->setUnnamedAddr(true);
	globals[532] = cv532;
	
	Constant* var533_string = ConstantDataArray::getString(context, "psrlq", true);
	GlobalVariable* cv533 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var533_string, ".str518", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv533->setUnnamedAddr(true);
	globals[533] = cv533;
	
	Constant* var534_string = ConstantDataArray::getString(context, "psrlw", true);
	GlobalVariable* cv534 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var534_string, ".str519", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv534->setUnnamedAddr(true);
	globals[534] = cv534;
	
	Constant* var535_string = ConstantDataArray::getString(context, "psubb", true);
	GlobalVariable* cv535 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var535_string, ".str520", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv535->setUnnamedAddr(true);
	globals[535] = cv535;
	
	Constant* var536_string = ConstantDataArray::getString(context, "psubd", true);
	GlobalVariable* cv536 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var536_string, ".str521", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv536->setUnnamedAddr(true);
	globals[536] = cv536;
	
	Constant* var537_string = ConstantDataArray::getString(context, "psubq", true);
	GlobalVariable* cv537 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var537_string, ".str522", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv537->setUnnamedAddr(true);
	globals[537] = cv537;
	
	Constant* var538_string = ConstantDataArray::getString(context, "psubsb", true);
	GlobalVariable* cv538 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var538_string, ".str523", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv538->setUnnamedAddr(true);
	globals[538] = cv538;
	
	Constant* var539_string = ConstantDataArray::getString(context, "psubsw", true);
	GlobalVariable* cv539 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var539_string, ".str524", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv539->setUnnamedAddr(true);
	globals[539] = cv539;
	
	Constant* var540_string = ConstantDataArray::getString(context, "psubusb", true);
	GlobalVariable* cv540 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var540_string, ".str525", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv540->setUnnamedAddr(true);
	globals[540] = cv540;
	
	Constant* var541_string = ConstantDataArray::getString(context, "psubusw", true);
	GlobalVariable* cv541 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var541_string, ".str526", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv541->setUnnamedAddr(true);
	globals[541] = cv541;
	
	Constant* var542_string = ConstantDataArray::getString(context, "psubw", true);
	GlobalVariable* cv542 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var542_string, ".str527", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv542->setUnnamedAddr(true);
	globals[542] = cv542;
	
	Constant* var543_string = ConstantDataArray::getString(context, "pswapd", true);
	GlobalVariable* cv543 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var543_string, ".str528", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv543->setUnnamedAddr(true);
	globals[543] = cv543;
	
	Constant* var544_string = ConstantDataArray::getString(context, "ptest", true);
	GlobalVariable* cv544 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var544_string, ".str529", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv544->setUnnamedAddr(true);
	globals[544] = cv544;
	
	Constant* var545_string = ConstantDataArray::getString(context, "punpckhbw", true);
	GlobalVariable* cv545 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var545_string, ".str530", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv545->setUnnamedAddr(true);
	globals[545] = cv545;
	
	Constant* var546_string = ConstantDataArray::getString(context, "punpckhdq", true);
	GlobalVariable* cv546 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var546_string, ".str531", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv546->setUnnamedAddr(true);
	globals[546] = cv546;
	
	Constant* var547_string = ConstantDataArray::getString(context, "punpckhqdq", true);
	GlobalVariable* cv547 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var547_string, ".str532", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv547->setUnnamedAddr(true);
	globals[547] = cv547;
	
	Constant* var548_string = ConstantDataArray::getString(context, "punpckhwd", true);
	GlobalVariable* cv548 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var548_string, ".str533", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv548->setUnnamedAddr(true);
	globals[548] = cv548;
	
	Constant* var549_string = ConstantDataArray::getString(context, "punpcklbw", true);
	GlobalVariable* cv549 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var549_string, ".str534", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv549->setUnnamedAddr(true);
	globals[549] = cv549;
	
	Constant* var550_string = ConstantDataArray::getString(context, "punpckldq", true);
	GlobalVariable* cv550 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var550_string, ".str535", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv550->setUnnamedAddr(true);
	globals[550] = cv550;
	
	Constant* var551_string = ConstantDataArray::getString(context, "punpcklqdq", true);
	GlobalVariable* cv551 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var551_string, ".str536", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv551->setUnnamedAddr(true);
	globals[551] = cv551;
	
	Constant* var552_string = ConstantDataArray::getString(context, "punpcklwd", true);
	GlobalVariable* cv552 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var552_string, ".str537", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv552->setUnnamedAddr(true);
	globals[552] = cv552;
	
	Constant* var553_string = ConstantDataArray::getString(context, "pushal", true);
	GlobalVariable* cv553 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var553_string, ".str538", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv553->setUnnamedAddr(true);
	globals[553] = cv553;
	
	Constant* var554_string = ConstantDataArray::getString(context, "pushaw", true);
	GlobalVariable* cv554 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var554_string, ".str539", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv554->setUnnamedAddr(true);
	globals[554] = cv554;
	
	Constant* var555_string = ConstantDataArray::getString(context, "pushf", true);
	GlobalVariable* cv555 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var555_string, ".str540", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv555->setUnnamedAddr(true);
	globals[555] = cv555;
	
	Constant* var556_string = ConstantDataArray::getString(context, "pushfd", true);
	GlobalVariable* cv556 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var556_string, ".str541", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv556->setUnnamedAddr(true);
	globals[556] = cv556;
	
	Constant* var557_string = ConstantDataArray::getString(context, "pushfq", true);
	GlobalVariable* cv557 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var557_string, ".str542", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv557->setUnnamedAddr(true);
	globals[557] = cv557;
	
	Constant* var558_string = ConstantDataArray::getString(context, "pxor", true);
	GlobalVariable* cv558 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var558_string, ".str543", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv558->setUnnamedAddr(true);
	globals[558] = cv558;
	
	Constant* var559_string = ConstantDataArray::getString(context, "rcl", true);
	GlobalVariable* cv559 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var559_string, ".str544", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv559->setUnnamedAddr(true);
	globals[559] = cv559;
	
	Constant* var560_string = ConstantDataArray::getString(context, "rcpps", true);
	GlobalVariable* cv560 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var560_string, ".str545", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv560->setUnnamedAddr(true);
	globals[560] = cv560;
	
	Constant* var561_string = ConstantDataArray::getString(context, "rcpss", true);
	GlobalVariable* cv561 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var561_string, ".str546", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv561->setUnnamedAddr(true);
	globals[561] = cv561;
	
	Constant* var562_string = ConstantDataArray::getString(context, "rcr", true);
	GlobalVariable* cv562 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var562_string, ".str547", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv562->setUnnamedAddr(true);
	globals[562] = cv562;
	
	Constant* var563_string = ConstantDataArray::getString(context, "rdfsbase", true);
	GlobalVariable* cv563 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var563_string, ".str548", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv563->setUnnamedAddr(true);
	globals[563] = cv563;
	
	Constant* var564_string = ConstantDataArray::getString(context, "rdgsbase", true);
	GlobalVariable* cv564 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var564_string, ".str549", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv564->setUnnamedAddr(true);
	globals[564] = cv564;
	
	Constant* var565_string = ConstantDataArray::getString(context, "rdmsr", true);
	GlobalVariable* cv565 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var565_string, ".str550", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv565->setUnnamedAddr(true);
	globals[565] = cv565;
	
	Constant* var566_string = ConstantDataArray::getString(context, "rdpmc", true);
	GlobalVariable* cv566 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var566_string, ".str551", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv566->setUnnamedAddr(true);
	globals[566] = cv566;
	
	Constant* var567_string = ConstantDataArray::getString(context, "rdrand", true);
	GlobalVariable* cv567 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var567_string, ".str552", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv567->setUnnamedAddr(true);
	globals[567] = cv567;
	
	Constant* var568_string = ConstantDataArray::getString(context, "rdseed", true);
	GlobalVariable* cv568 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var568_string, ".str553", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv568->setUnnamedAddr(true);
	globals[568] = cv568;
	
	Constant* var569_string = ConstantDataArray::getString(context, "rdtsc", true);
	GlobalVariable* cv569 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var569_string, ".str554", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv569->setUnnamedAddr(true);
	globals[569] = cv569;
	
	Constant* var570_string = ConstantDataArray::getString(context, "rdtscp", true);
	GlobalVariable* cv570 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var570_string, ".str555", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv570->setUnnamedAddr(true);
	globals[570] = cv570;
	
	globals[571] = Function::Create(cast<FunctionType>(types[55]), GlobalValue::ExternalLinkage, "x86_ret_intrin", &module);
	Constant* var572_string = ConstantDataArray::getString(context, "retf", true);
	GlobalVariable* cv572 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var572_string, ".str556", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv572->setUnnamedAddr(true);
	globals[572] = cv572;
	
	Constant* var573_string = ConstantDataArray::getString(context, "retfq", true);
	GlobalVariable* cv573 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var573_string, ".str557", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv573->setUnnamedAddr(true);
	globals[573] = cv573;
	
	Constant* var574_string = ConstantDataArray::getString(context, "rol", true);
	GlobalVariable* cv574 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var574_string, ".str558", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv574->setUnnamedAddr(true);
	globals[574] = cv574;
	
	Constant* var575_string = ConstantDataArray::getString(context, "ror", true);
	GlobalVariable* cv575 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var575_string, ".str559", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv575->setUnnamedAddr(true);
	globals[575] = cv575;
	
	Constant* var576_string = ConstantDataArray::getString(context, "rorx", true);
	GlobalVariable* cv576 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var576_string, ".str560", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv576->setUnnamedAddr(true);
	globals[576] = cv576;
	
	Constant* var577_string = ConstantDataArray::getString(context, "roundpd", true);
	GlobalVariable* cv577 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var577_string, ".str561", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv577->setUnnamedAddr(true);
	globals[577] = cv577;
	
	Constant* var578_string = ConstantDataArray::getString(context, "roundps", true);
	GlobalVariable* cv578 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var578_string, ".str562", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv578->setUnnamedAddr(true);
	globals[578] = cv578;
	
	Constant* var579_string = ConstantDataArray::getString(context, "roundsd", true);
	GlobalVariable* cv579 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var579_string, ".str563", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv579->setUnnamedAddr(true);
	globals[579] = cv579;
	
	Constant* var580_string = ConstantDataArray::getString(context, "roundss", true);
	GlobalVariable* cv580 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var580_string, ".str564", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv580->setUnnamedAddr(true);
	globals[580] = cv580;
	
	Constant* var581_string = ConstantDataArray::getString(context, "rsm", true);
	GlobalVariable* cv581 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var581_string, ".str565", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv581->setUnnamedAddr(true);
	globals[581] = cv581;
	
	Constant* var582_string = ConstantDataArray::getString(context, "rsqrtps", true);
	GlobalVariable* cv582 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var582_string, ".str566", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv582->setUnnamedAddr(true);
	globals[582] = cv582;
	
	Constant* var583_string = ConstantDataArray::getString(context, "rsqrtss", true);
	GlobalVariable* cv583 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var583_string, ".str567", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv583->setUnnamedAddr(true);
	globals[583] = cv583;
	
	Constant* var584_string = ConstantDataArray::getString(context, "sahf", true);
	GlobalVariable* cv584 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var584_string, ".str568", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv584->setUnnamedAddr(true);
	globals[584] = cv584;
	
	Constant* var585_string = ConstantDataArray::getString(context, "sal", true);
	GlobalVariable* cv585 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var585_string, ".str569", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv585->setUnnamedAddr(true);
	globals[585] = cv585;
	
	Constant* var586_string = ConstantDataArray::getString(context, "salc", true);
	GlobalVariable* cv586 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var586_string, ".str570", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv586->setUnnamedAddr(true);
	globals[586] = cv586;
	
	Constant* var587_string = ConstantDataArray::getString(context, "sar", true);
	GlobalVariable* cv587 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var587_string, ".str571", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv587->setUnnamedAddr(true);
	globals[587] = cv587;
	
	Constant* var588_string = ConstantDataArray::getString(context, "sarx", true);
	GlobalVariable* cv588 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var588_string, ".str572", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv588->setUnnamedAddr(true);
	globals[588] = cv588;
	
	Constant* var589_string = ConstantDataArray::getString(context, "sbb", true);
	GlobalVariable* cv589 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var589_string, ".str573", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv589->setUnnamedAddr(true);
	globals[589] = cv589;
	
	Constant* var590_string = ConstantDataArray::getString(context, "scasb", true);
	GlobalVariable* cv590 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var590_string, ".str574", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv590->setUnnamedAddr(true);
	globals[590] = cv590;
	
	Constant* var591_string = ConstantDataArray::getString(context, "scasd", true);
	GlobalVariable* cv591 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var591_string, ".str575", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv591->setUnnamedAddr(true);
	globals[591] = cv591;
	
	Constant* var592_string = ConstantDataArray::getString(context, "scasq", true);
	GlobalVariable* cv592 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var592_string, ".str576", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv592->setUnnamedAddr(true);
	globals[592] = cv592;
	
	Constant* var593_string = ConstantDataArray::getString(context, "scasw", true);
	GlobalVariable* cv593 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var593_string, ".str577", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv593->setUnnamedAddr(true);
	globals[593] = cv593;
	
	Constant* var594_string = ConstantDataArray::getString(context, "sfence", true);
	GlobalVariable* cv594 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var594_string, ".str578", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv594->setUnnamedAddr(true);
	globals[594] = cv594;
	
	Constant* var595_string = ConstantDataArray::getString(context, "sgdt", true);
	GlobalVariable* cv595 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var595_string, ".str579", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv595->setUnnamedAddr(true);
	globals[595] = cv595;
	
	Constant* var596_string = ConstantDataArray::getString(context, "sha1msg1", true);
	GlobalVariable* cv596 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var596_string, ".str580", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv596->setUnnamedAddr(true);
	globals[596] = cv596;
	
	Constant* var597_string = ConstantDataArray::getString(context, "sha1msg2", true);
	GlobalVariable* cv597 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var597_string, ".str581", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv597->setUnnamedAddr(true);
	globals[597] = cv597;
	
	Constant* var598_string = ConstantDataArray::getString(context, "sha1nexte", true);
	GlobalVariable* cv598 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var598_string, ".str582", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv598->setUnnamedAddr(true);
	globals[598] = cv598;
	
	Constant* var599_string = ConstantDataArray::getString(context, "sha1rnds4", true);
	GlobalVariable* cv599 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var599_string, ".str583", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv599->setUnnamedAddr(true);
	globals[599] = cv599;
	
	Constant* var600_string = ConstantDataArray::getString(context, "sha256msg1", true);
	GlobalVariable* cv600 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var600_string, ".str584", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv600->setUnnamedAddr(true);
	globals[600] = cv600;
	
	Constant* var601_string = ConstantDataArray::getString(context, "sha256msg2", true);
	GlobalVariable* cv601 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var601_string, ".str585", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv601->setUnnamedAddr(true);
	globals[601] = cv601;
	
	Constant* var602_string = ConstantDataArray::getString(context, "sha256rnds2", true);
	GlobalVariable* cv602 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var602_string, ".str586", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv602->setUnnamedAddr(true);
	globals[602] = cv602;
	
	Constant* var603_string = ConstantDataArray::getString(context, "shl", true);
	GlobalVariable* cv603 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var603_string, ".str587", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv603->setUnnamedAddr(true);
	globals[603] = cv603;
	
	Constant* var604_string = ConstantDataArray::getString(context, "shld", true);
	GlobalVariable* cv604 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var604_string, ".str588", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv604->setUnnamedAddr(true);
	globals[604] = cv604;
	
	Constant* var605_string = ConstantDataArray::getString(context, "shlx", true);
	GlobalVariable* cv605 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var605_string, ".str589", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv605->setUnnamedAddr(true);
	globals[605] = cv605;
	
	Constant* var606_string = ConstantDataArray::getString(context, "shrd", true);
	GlobalVariable* cv606 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var606_string, ".str590", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv606->setUnnamedAddr(true);
	globals[606] = cv606;
	
	Constant* var607_string = ConstantDataArray::getString(context, "shrx", true);
	GlobalVariable* cv607 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var607_string, ".str591", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv607->setUnnamedAddr(true);
	globals[607] = cv607;
	
	Constant* var608_string = ConstantDataArray::getString(context, "shufpd", true);
	GlobalVariable* cv608 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var608_string, ".str592", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv608->setUnnamedAddr(true);
	globals[608] = cv608;
	
	Constant* var609_string = ConstantDataArray::getString(context, "shufps", true);
	GlobalVariable* cv609 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var609_string, ".str593", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv609->setUnnamedAddr(true);
	globals[609] = cv609;
	
	Constant* var610_string = ConstantDataArray::getString(context, "sidt", true);
	GlobalVariable* cv610 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var610_string, ".str594", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv610->setUnnamedAddr(true);
	globals[610] = cv610;
	
	Constant* var611_string = ConstantDataArray::getString(context, "skinit", true);
	GlobalVariable* cv611 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var611_string, ".str595", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv611->setUnnamedAddr(true);
	globals[611] = cv611;
	
	Constant* var612_string = ConstantDataArray::getString(context, "sldt", true);
	GlobalVariable* cv612 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var612_string, ".str596", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv612->setUnnamedAddr(true);
	globals[612] = cv612;
	
	Constant* var613_string = ConstantDataArray::getString(context, "smsw", true);
	GlobalVariable* cv613 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var613_string, ".str597", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv613->setUnnamedAddr(true);
	globals[613] = cv613;
	
	Constant* var614_string = ConstantDataArray::getString(context, "sqrtpd", true);
	GlobalVariable* cv614 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var614_string, ".str598", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv614->setUnnamedAddr(true);
	globals[614] = cv614;
	
	Constant* var615_string = ConstantDataArray::getString(context, "sqrtps", true);
	GlobalVariable* cv615 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var615_string, ".str599", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv615->setUnnamedAddr(true);
	globals[615] = cv615;
	
	Constant* var616_string = ConstantDataArray::getString(context, "sqrtsd", true);
	GlobalVariable* cv616 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var616_string, ".str600", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv616->setUnnamedAddr(true);
	globals[616] = cv616;
	
	Constant* var617_string = ConstantDataArray::getString(context, "sqrtss", true);
	GlobalVariable* cv617 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var617_string, ".str601", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv617->setUnnamedAddr(true);
	globals[617] = cv617;
	
	Constant* var618_string = ConstantDataArray::getString(context, "stac", true);
	GlobalVariable* cv618 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var618_string, ".str602", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv618->setUnnamedAddr(true);
	globals[618] = cv618;
	
	Constant* var619_string = ConstantDataArray::getString(context, "stc", true);
	GlobalVariable* cv619 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var619_string, ".str603", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv619->setUnnamedAddr(true);
	globals[619] = cv619;
	
	Constant* var620_string = ConstantDataArray::getString(context, "std", true);
	GlobalVariable* cv620 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var620_string, ".str604", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv620->setUnnamedAddr(true);
	globals[620] = cv620;
	
	Constant* var621_string = ConstantDataArray::getString(context, "stgi", true);
	GlobalVariable* cv621 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var621_string, ".str605", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv621->setUnnamedAddr(true);
	globals[621] = cv621;
	
	Constant* var622_string = ConstantDataArray::getString(context, "sti", true);
	GlobalVariable* cv622 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var622_string, ".str606", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv622->setUnnamedAddr(true);
	globals[622] = cv622;
	
	Constant* var623_string = ConstantDataArray::getString(context, "stmxcsr", true);
	GlobalVariable* cv623 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var623_string, ".str607", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv623->setUnnamedAddr(true);
	globals[623] = cv623;
	
	Constant* var624_string = ConstantDataArray::getString(context, "stosb", true);
	GlobalVariable* cv624 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var624_string, ".str608", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv624->setUnnamedAddr(true);
	globals[624] = cv624;
	
	Constant* var625_string = ConstantDataArray::getString(context, "stosd", true);
	GlobalVariable* cv625 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var625_string, ".str609", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv625->setUnnamedAddr(true);
	globals[625] = cv625;
	
	Constant* var626_string = ConstantDataArray::getString(context, "stosq", true);
	GlobalVariable* cv626 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var626_string, ".str610", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv626->setUnnamedAddr(true);
	globals[626] = cv626;
	
	Constant* var627_string = ConstantDataArray::getString(context, "stosw", true);
	GlobalVariable* cv627 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var627_string, ".str611", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv627->setUnnamedAddr(true);
	globals[627] = cv627;
	
	Constant* var628_string = ConstantDataArray::getString(context, "str", true);
	GlobalVariable* cv628 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var628_string, ".str612", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv628->setUnnamedAddr(true);
	globals[628] = cv628;
	
	Constant* var629_string = ConstantDataArray::getString(context, "subpd", true);
	GlobalVariable* cv629 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var629_string, ".str613", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv629->setUnnamedAddr(true);
	globals[629] = cv629;
	
	Constant* var630_string = ConstantDataArray::getString(context, "subps", true);
	GlobalVariable* cv630 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var630_string, ".str614", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv630->setUnnamedAddr(true);
	globals[630] = cv630;
	
	Constant* var631_string = ConstantDataArray::getString(context, "subsd", true);
	GlobalVariable* cv631 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var631_string, ".str615", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv631->setUnnamedAddr(true);
	globals[631] = cv631;
	
	Constant* var632_string = ConstantDataArray::getString(context, "subss", true);
	GlobalVariable* cv632 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var632_string, ".str616", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv632->setUnnamedAddr(true);
	globals[632] = cv632;
	
	Constant* var633_string = ConstantDataArray::getString(context, "swapgs", true);
	GlobalVariable* cv633 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var633_string, ".str617", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv633->setUnnamedAddr(true);
	globals[633] = cv633;
	
	Constant* var634_string = ConstantDataArray::getString(context, "syscall", true);
	GlobalVariable* cv634 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var634_string, ".str618", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv634->setUnnamedAddr(true);
	globals[634] = cv634;
	
	Constant* var635_string = ConstantDataArray::getString(context, "sysenter", true);
	GlobalVariable* cv635 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var635_string, ".str619", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv635->setUnnamedAddr(true);
	globals[635] = cv635;
	
	Constant* var636_string = ConstantDataArray::getString(context, "sysexit", true);
	GlobalVariable* cv636 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var636_string, ".str620", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv636->setUnnamedAddr(true);
	globals[636] = cv636;
	
	Constant* var637_string = ConstantDataArray::getString(context, "sysret", true);
	GlobalVariable* cv637 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var637_string, ".str621", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv637->setUnnamedAddr(true);
	globals[637] = cv637;
	
	Constant* var638_string = ConstantDataArray::getString(context, "t1mskc", true);
	GlobalVariable* cv638 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var638_string, ".str622", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv638->setUnnamedAddr(true);
	globals[638] = cv638;
	
	Constant* var639_string = ConstantDataArray::getString(context, "tzcnt", true);
	GlobalVariable* cv639 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var639_string, ".str623", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv639->setUnnamedAddr(true);
	globals[639] = cv639;
	
	Constant* var640_string = ConstantDataArray::getString(context, "tzmsk", true);
	GlobalVariable* cv640 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var640_string, ".str624", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv640->setUnnamedAddr(true);
	globals[640] = cv640;
	
	Constant* var641_string = ConstantDataArray::getString(context, "ucomisd", true);
	GlobalVariable* cv641 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var641_string, ".str625", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv641->setUnnamedAddr(true);
	globals[641] = cv641;
	
	Constant* var642_string = ConstantDataArray::getString(context, "ucomiss", true);
	GlobalVariable* cv642 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var642_string, ".str626", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv642->setUnnamedAddr(true);
	globals[642] = cv642;
	
	Constant* var643_string = ConstantDataArray::getString(context, "ud2", true);
	GlobalVariable* cv643 = new GlobalVariable(module, types[14], true, GlobalValue::PrivateLinkage, var643_string, ".str627", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv643->setUnnamedAddr(true);
	globals[643] = cv643;
	
	Constant* var644_string = ConstantDataArray::getString(context, "ud2b", true);
	GlobalVariable* cv644 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var644_string, ".str628", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv644->setUnnamedAddr(true);
	globals[644] = cv644;
	
	Constant* var645_string = ConstantDataArray::getString(context, "unpckhpd", true);
	GlobalVariable* cv645 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var645_string, ".str629", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv645->setUnnamedAddr(true);
	globals[645] = cv645;
	
	Constant* var646_string = ConstantDataArray::getString(context, "unpckhps", true);
	GlobalVariable* cv646 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var646_string, ".str630", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv646->setUnnamedAddr(true);
	globals[646] = cv646;
	
	Constant* var647_string = ConstantDataArray::getString(context, "unpcklpd", true);
	GlobalVariable* cv647 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var647_string, ".str631", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv647->setUnnamedAddr(true);
	globals[647] = cv647;
	
	Constant* var648_string = ConstantDataArray::getString(context, "unpcklps", true);
	GlobalVariable* cv648 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var648_string, ".str632", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv648->setUnnamedAddr(true);
	globals[648] = cv648;
	
	Constant* var649_string = ConstantDataArray::getString(context, "vaddpd", true);
	GlobalVariable* cv649 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var649_string, ".str633", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv649->setUnnamedAddr(true);
	globals[649] = cv649;
	
	Constant* var650_string = ConstantDataArray::getString(context, "vaddps", true);
	GlobalVariable* cv650 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var650_string, ".str634", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv650->setUnnamedAddr(true);
	globals[650] = cv650;
	
	Constant* var651_string = ConstantDataArray::getString(context, "vaddsd", true);
	GlobalVariable* cv651 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var651_string, ".str635", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv651->setUnnamedAddr(true);
	globals[651] = cv651;
	
	Constant* var652_string = ConstantDataArray::getString(context, "vaddss", true);
	GlobalVariable* cv652 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var652_string, ".str636", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv652->setUnnamedAddr(true);
	globals[652] = cv652;
	
	Constant* var653_string = ConstantDataArray::getString(context, "vaddsubpd", true);
	GlobalVariable* cv653 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var653_string, ".str637", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv653->setUnnamedAddr(true);
	globals[653] = cv653;
	
	Constant* var654_string = ConstantDataArray::getString(context, "vaddsubps", true);
	GlobalVariable* cv654 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var654_string, ".str638", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv654->setUnnamedAddr(true);
	globals[654] = cv654;
	
	Constant* var655_string = ConstantDataArray::getString(context, "vaesdec", true);
	GlobalVariable* cv655 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var655_string, ".str639", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv655->setUnnamedAddr(true);
	globals[655] = cv655;
	
	Constant* var656_string = ConstantDataArray::getString(context, "vaesdeclast", true);
	GlobalVariable* cv656 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var656_string, ".str640", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv656->setUnnamedAddr(true);
	globals[656] = cv656;
	
	Constant* var657_string = ConstantDataArray::getString(context, "vaesenc", true);
	GlobalVariable* cv657 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var657_string, ".str641", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv657->setUnnamedAddr(true);
	globals[657] = cv657;
	
	Constant* var658_string = ConstantDataArray::getString(context, "vaesenclast", true);
	GlobalVariable* cv658 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var658_string, ".str642", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv658->setUnnamedAddr(true);
	globals[658] = cv658;
	
	Constant* var659_string = ConstantDataArray::getString(context, "vaesimc", true);
	GlobalVariable* cv659 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var659_string, ".str643", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv659->setUnnamedAddr(true);
	globals[659] = cv659;
	
	Constant* var660_string = ConstantDataArray::getString(context, "vaeskeygenassist", true);
	GlobalVariable* cv660 = new GlobalVariable(module, types[56], true, GlobalValue::PrivateLinkage, var660_string, ".str644", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv660->setUnnamedAddr(true);
	globals[660] = cv660;
	
	Constant* var661_string = ConstantDataArray::getString(context, "valignd", true);
	GlobalVariable* cv661 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var661_string, ".str645", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv661->setUnnamedAddr(true);
	globals[661] = cv661;
	
	Constant* var662_string = ConstantDataArray::getString(context, "valignq", true);
	GlobalVariable* cv662 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var662_string, ".str646", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv662->setUnnamedAddr(true);
	globals[662] = cv662;
	
	Constant* var663_string = ConstantDataArray::getString(context, "vandnpd", true);
	GlobalVariable* cv663 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var663_string, ".str647", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv663->setUnnamedAddr(true);
	globals[663] = cv663;
	
	Constant* var664_string = ConstantDataArray::getString(context, "vandnps", true);
	GlobalVariable* cv664 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var664_string, ".str648", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv664->setUnnamedAddr(true);
	globals[664] = cv664;
	
	Constant* var665_string = ConstantDataArray::getString(context, "vandpd", true);
	GlobalVariable* cv665 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var665_string, ".str649", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv665->setUnnamedAddr(true);
	globals[665] = cv665;
	
	Constant* var666_string = ConstantDataArray::getString(context, "vandps", true);
	GlobalVariable* cv666 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var666_string, ".str650", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv666->setUnnamedAddr(true);
	globals[666] = cv666;
	
	Constant* var667_string = ConstantDataArray::getString(context, "vblendmpd", true);
	GlobalVariable* cv667 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var667_string, ".str651", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv667->setUnnamedAddr(true);
	globals[667] = cv667;
	
	Constant* var668_string = ConstantDataArray::getString(context, "vblendmps", true);
	GlobalVariable* cv668 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var668_string, ".str652", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv668->setUnnamedAddr(true);
	globals[668] = cv668;
	
	Constant* var669_string = ConstantDataArray::getString(context, "vblendpd", true);
	GlobalVariable* cv669 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var669_string, ".str653", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv669->setUnnamedAddr(true);
	globals[669] = cv669;
	
	Constant* var670_string = ConstantDataArray::getString(context, "vblendps", true);
	GlobalVariable* cv670 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var670_string, ".str654", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv670->setUnnamedAddr(true);
	globals[670] = cv670;
	
	Constant* var671_string = ConstantDataArray::getString(context, "vblendvpd", true);
	GlobalVariable* cv671 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var671_string, ".str655", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv671->setUnnamedAddr(true);
	globals[671] = cv671;
	
	Constant* var672_string = ConstantDataArray::getString(context, "vblendvps", true);
	GlobalVariable* cv672 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var672_string, ".str656", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv672->setUnnamedAddr(true);
	globals[672] = cv672;
	
	Constant* var673_string = ConstantDataArray::getString(context, "vbroadcastf128", true);
	GlobalVariable* cv673 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var673_string, ".str657", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv673->setUnnamedAddr(true);
	globals[673] = cv673;
	
	Constant* var674_string = ConstantDataArray::getString(context, "vbroadcasti128", true);
	GlobalVariable* cv674 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var674_string, ".str658", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv674->setUnnamedAddr(true);
	globals[674] = cv674;
	
	Constant* var675_string = ConstantDataArray::getString(context, "vbroadcasti32x4", true);
	GlobalVariable* cv675 = new GlobalVariable(module, types[48], true, GlobalValue::PrivateLinkage, var675_string, ".str659", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv675->setUnnamedAddr(true);
	globals[675] = cv675;
	
	Constant* var676_string = ConstantDataArray::getString(context, "vbroadcasti64x4", true);
	GlobalVariable* cv676 = new GlobalVariable(module, types[48], true, GlobalValue::PrivateLinkage, var676_string, ".str660", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv676->setUnnamedAddr(true);
	globals[676] = cv676;
	
	Constant* var677_string = ConstantDataArray::getString(context, "vbroadcastsd", true);
	GlobalVariable* cv677 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var677_string, ".str661", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv677->setUnnamedAddr(true);
	globals[677] = cv677;
	
	Constant* var678_string = ConstantDataArray::getString(context, "vbroadcastss", true);
	GlobalVariable* cv678 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var678_string, ".str662", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv678->setUnnamedAddr(true);
	globals[678] = cv678;
	
	Constant* var679_string = ConstantDataArray::getString(context, "vcmp", true);
	GlobalVariable* cv679 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var679_string, ".str663", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv679->setUnnamedAddr(true);
	globals[679] = cv679;
	
	Constant* var680_string = ConstantDataArray::getString(context, "vcmppd", true);
	GlobalVariable* cv680 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var680_string, ".str664", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv680->setUnnamedAddr(true);
	globals[680] = cv680;
	
	Constant* var681_string = ConstantDataArray::getString(context, "vcmpps", true);
	GlobalVariable* cv681 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var681_string, ".str665", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv681->setUnnamedAddr(true);
	globals[681] = cv681;
	
	Constant* var682_string = ConstantDataArray::getString(context, "vcmpsd", true);
	GlobalVariable* cv682 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var682_string, ".str666", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv682->setUnnamedAddr(true);
	globals[682] = cv682;
	
	Constant* var683_string = ConstantDataArray::getString(context, "vcmpss", true);
	GlobalVariable* cv683 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var683_string, ".str667", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv683->setUnnamedAddr(true);
	globals[683] = cv683;
	
	Constant* var684_string = ConstantDataArray::getString(context, "vcomisd", true);
	GlobalVariable* cv684 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var684_string, ".str668", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv684->setUnnamedAddr(true);
	globals[684] = cv684;
	
	Constant* var685_string = ConstantDataArray::getString(context, "vcomiss", true);
	GlobalVariable* cv685 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var685_string, ".str669", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv685->setUnnamedAddr(true);
	globals[685] = cv685;
	
	Constant* var686_string = ConstantDataArray::getString(context, "vcvtdq2pd", true);
	GlobalVariable* cv686 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var686_string, ".str670", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv686->setUnnamedAddr(true);
	globals[686] = cv686;
	
	Constant* var687_string = ConstantDataArray::getString(context, "vcvtdq2ps", true);
	GlobalVariable* cv687 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var687_string, ".str671", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv687->setUnnamedAddr(true);
	globals[687] = cv687;
	
	Constant* var688_string = ConstantDataArray::getString(context, "vcvtpd2dq", true);
	GlobalVariable* cv688 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var688_string, ".str672", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv688->setUnnamedAddr(true);
	globals[688] = cv688;
	
	Constant* var689_string = ConstantDataArray::getString(context, "vcvtpd2dqx", true);
	GlobalVariable* cv689 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var689_string, ".str673", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv689->setUnnamedAddr(true);
	globals[689] = cv689;
	
	Constant* var690_string = ConstantDataArray::getString(context, "vcvtpd2ps", true);
	GlobalVariable* cv690 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var690_string, ".str674", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv690->setUnnamedAddr(true);
	globals[690] = cv690;
	
	Constant* var691_string = ConstantDataArray::getString(context, "vcvtpd2psx", true);
	GlobalVariable* cv691 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var691_string, ".str675", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv691->setUnnamedAddr(true);
	globals[691] = cv691;
	
	Constant* var692_string = ConstantDataArray::getString(context, "vcvtpd2udq", true);
	GlobalVariable* cv692 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var692_string, ".str676", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv692->setUnnamedAddr(true);
	globals[692] = cv692;
	
	Constant* var693_string = ConstantDataArray::getString(context, "vcvtph2ps", true);
	GlobalVariable* cv693 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var693_string, ".str677", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv693->setUnnamedAddr(true);
	globals[693] = cv693;
	
	Constant* var694_string = ConstantDataArray::getString(context, "vcvtps2dq", true);
	GlobalVariable* cv694 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var694_string, ".str678", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv694->setUnnamedAddr(true);
	globals[694] = cv694;
	
	Constant* var695_string = ConstantDataArray::getString(context, "vcvtps2pd", true);
	GlobalVariable* cv695 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var695_string, ".str679", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv695->setUnnamedAddr(true);
	globals[695] = cv695;
	
	Constant* var696_string = ConstantDataArray::getString(context, "vcvtps2ph", true);
	GlobalVariable* cv696 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var696_string, ".str680", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv696->setUnnamedAddr(true);
	globals[696] = cv696;
	
	Constant* var697_string = ConstantDataArray::getString(context, "vcvtps2udq", true);
	GlobalVariable* cv697 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var697_string, ".str681", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv697->setUnnamedAddr(true);
	globals[697] = cv697;
	
	Constant* var698_string = ConstantDataArray::getString(context, "vcvtsd2si", true);
	GlobalVariable* cv698 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var698_string, ".str682", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv698->setUnnamedAddr(true);
	globals[698] = cv698;
	
	Constant* var699_string = ConstantDataArray::getString(context, "vcvtsd2ss", true);
	GlobalVariable* cv699 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var699_string, ".str683", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv699->setUnnamedAddr(true);
	globals[699] = cv699;
	
	Constant* var700_string = ConstantDataArray::getString(context, "vcvtsd2usi", true);
	GlobalVariable* cv700 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var700_string, ".str684", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv700->setUnnamedAddr(true);
	globals[700] = cv700;
	
	Constant* var701_string = ConstantDataArray::getString(context, "vcvtsi2sd", true);
	GlobalVariable* cv701 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var701_string, ".str685", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv701->setUnnamedAddr(true);
	globals[701] = cv701;
	
	Constant* var702_string = ConstantDataArray::getString(context, "vcvtsi2ss", true);
	GlobalVariable* cv702 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var702_string, ".str686", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv702->setUnnamedAddr(true);
	globals[702] = cv702;
	
	Constant* var703_string = ConstantDataArray::getString(context, "vcvtss2sd", true);
	GlobalVariable* cv703 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var703_string, ".str687", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv703->setUnnamedAddr(true);
	globals[703] = cv703;
	
	Constant* var704_string = ConstantDataArray::getString(context, "vcvtss2si", true);
	GlobalVariable* cv704 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var704_string, ".str688", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv704->setUnnamedAddr(true);
	globals[704] = cv704;
	
	Constant* var705_string = ConstantDataArray::getString(context, "vcvtss2usi", true);
	GlobalVariable* cv705 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var705_string, ".str689", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv705->setUnnamedAddr(true);
	globals[705] = cv705;
	
	Constant* var706_string = ConstantDataArray::getString(context, "vcvttpd2dq", true);
	GlobalVariable* cv706 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var706_string, ".str690", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv706->setUnnamedAddr(true);
	globals[706] = cv706;
	
	Constant* var707_string = ConstantDataArray::getString(context, "vcvttpd2dqx", true);
	GlobalVariable* cv707 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var707_string, ".str691", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv707->setUnnamedAddr(true);
	globals[707] = cv707;
	
	Constant* var708_string = ConstantDataArray::getString(context, "vcvttpd2udq", true);
	GlobalVariable* cv708 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var708_string, ".str692", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv708->setUnnamedAddr(true);
	globals[708] = cv708;
	
	Constant* var709_string = ConstantDataArray::getString(context, "vcvttps2dq", true);
	GlobalVariable* cv709 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var709_string, ".str693", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv709->setUnnamedAddr(true);
	globals[709] = cv709;
	
	Constant* var710_string = ConstantDataArray::getString(context, "vcvttps2udq", true);
	GlobalVariable* cv710 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var710_string, ".str694", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv710->setUnnamedAddr(true);
	globals[710] = cv710;
	
	Constant* var711_string = ConstantDataArray::getString(context, "vcvttsd2si", true);
	GlobalVariable* cv711 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var711_string, ".str695", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv711->setUnnamedAddr(true);
	globals[711] = cv711;
	
	Constant* var712_string = ConstantDataArray::getString(context, "vcvttsd2usi", true);
	GlobalVariable* cv712 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var712_string, ".str696", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv712->setUnnamedAddr(true);
	globals[712] = cv712;
	
	Constant* var713_string = ConstantDataArray::getString(context, "vcvttss2si", true);
	GlobalVariable* cv713 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var713_string, ".str697", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv713->setUnnamedAddr(true);
	globals[713] = cv713;
	
	Constant* var714_string = ConstantDataArray::getString(context, "vcvttss2usi", true);
	GlobalVariable* cv714 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var714_string, ".str698", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv714->setUnnamedAddr(true);
	globals[714] = cv714;
	
	Constant* var715_string = ConstantDataArray::getString(context, "vcvtudq2pd", true);
	GlobalVariable* cv715 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var715_string, ".str699", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv715->setUnnamedAddr(true);
	globals[715] = cv715;
	
	Constant* var716_string = ConstantDataArray::getString(context, "vcvtudq2ps", true);
	GlobalVariable* cv716 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var716_string, ".str700", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv716->setUnnamedAddr(true);
	globals[716] = cv716;
	
	Constant* var717_string = ConstantDataArray::getString(context, "vcvtusi2sd", true);
	GlobalVariable* cv717 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var717_string, ".str701", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv717->setUnnamedAddr(true);
	globals[717] = cv717;
	
	Constant* var718_string = ConstantDataArray::getString(context, "vcvtusi2ss", true);
	GlobalVariable* cv718 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var718_string, ".str702", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv718->setUnnamedAddr(true);
	globals[718] = cv718;
	
	Constant* var719_string = ConstantDataArray::getString(context, "vdivpd", true);
	GlobalVariable* cv719 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var719_string, ".str703", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv719->setUnnamedAddr(true);
	globals[719] = cv719;
	
	Constant* var720_string = ConstantDataArray::getString(context, "vdivps", true);
	GlobalVariable* cv720 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var720_string, ".str704", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv720->setUnnamedAddr(true);
	globals[720] = cv720;
	
	Constant* var721_string = ConstantDataArray::getString(context, "vdivsd", true);
	GlobalVariable* cv721 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var721_string, ".str705", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv721->setUnnamedAddr(true);
	globals[721] = cv721;
	
	Constant* var722_string = ConstantDataArray::getString(context, "vdivss", true);
	GlobalVariable* cv722 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var722_string, ".str706", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv722->setUnnamedAddr(true);
	globals[722] = cv722;
	
	Constant* var723_string = ConstantDataArray::getString(context, "vdppd", true);
	GlobalVariable* cv723 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var723_string, ".str707", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv723->setUnnamedAddr(true);
	globals[723] = cv723;
	
	Constant* var724_string = ConstantDataArray::getString(context, "vdpps", true);
	GlobalVariable* cv724 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var724_string, ".str708", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv724->setUnnamedAddr(true);
	globals[724] = cv724;
	
	Constant* var725_string = ConstantDataArray::getString(context, "verr", true);
	GlobalVariable* cv725 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var725_string, ".str709", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv725->setUnnamedAddr(true);
	globals[725] = cv725;
	
	Constant* var726_string = ConstantDataArray::getString(context, "verw", true);
	GlobalVariable* cv726 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var726_string, ".str710", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv726->setUnnamedAddr(true);
	globals[726] = cv726;
	
	Constant* var727_string = ConstantDataArray::getString(context, "vextractf128", true);
	GlobalVariable* cv727 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var727_string, ".str711", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv727->setUnnamedAddr(true);
	globals[727] = cv727;
	
	Constant* var728_string = ConstantDataArray::getString(context, "vextractf32x4", true);
	GlobalVariable* cv728 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var728_string, ".str712", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv728->setUnnamedAddr(true);
	globals[728] = cv728;
	
	Constant* var729_string = ConstantDataArray::getString(context, "vextractf64x4", true);
	GlobalVariable* cv729 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var729_string, ".str713", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv729->setUnnamedAddr(true);
	globals[729] = cv729;
	
	Constant* var730_string = ConstantDataArray::getString(context, "vextracti128", true);
	GlobalVariable* cv730 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var730_string, ".str714", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv730->setUnnamedAddr(true);
	globals[730] = cv730;
	
	Constant* var731_string = ConstantDataArray::getString(context, "vextracti32x4", true);
	GlobalVariable* cv731 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var731_string, ".str715", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv731->setUnnamedAddr(true);
	globals[731] = cv731;
	
	Constant* var732_string = ConstantDataArray::getString(context, "vextracti64x4", true);
	GlobalVariable* cv732 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var732_string, ".str716", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv732->setUnnamedAddr(true);
	globals[732] = cv732;
	
	Constant* var733_string = ConstantDataArray::getString(context, "vextractps", true);
	GlobalVariable* cv733 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var733_string, ".str717", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv733->setUnnamedAddr(true);
	globals[733] = cv733;
	
	Constant* var734_string = ConstantDataArray::getString(context, "vfmadd132pd", true);
	GlobalVariable* cv734 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var734_string, ".str718", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv734->setUnnamedAddr(true);
	globals[734] = cv734;
	
	Constant* var735_string = ConstantDataArray::getString(context, "vfmadd132ps", true);
	GlobalVariable* cv735 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var735_string, ".str719", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv735->setUnnamedAddr(true);
	globals[735] = cv735;
	
	Constant* var736_string = ConstantDataArray::getString(context, "vfmadd132sd", true);
	GlobalVariable* cv736 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var736_string, ".str720", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv736->setUnnamedAddr(true);
	globals[736] = cv736;
	
	Constant* var737_string = ConstantDataArray::getString(context, "vfmadd132ss", true);
	GlobalVariable* cv737 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var737_string, ".str721", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv737->setUnnamedAddr(true);
	globals[737] = cv737;
	
	Constant* var738_string = ConstantDataArray::getString(context, "vfmadd213pd", true);
	GlobalVariable* cv738 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var738_string, ".str722", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv738->setUnnamedAddr(true);
	globals[738] = cv738;
	
	Constant* var739_string = ConstantDataArray::getString(context, "vfmadd213ps", true);
	GlobalVariable* cv739 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var739_string, ".str723", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv739->setUnnamedAddr(true);
	globals[739] = cv739;
	
	Constant* var740_string = ConstantDataArray::getString(context, "vfmadd213sd", true);
	GlobalVariable* cv740 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var740_string, ".str724", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv740->setUnnamedAddr(true);
	globals[740] = cv740;
	
	Constant* var741_string = ConstantDataArray::getString(context, "vfmadd213ss", true);
	GlobalVariable* cv741 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var741_string, ".str725", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv741->setUnnamedAddr(true);
	globals[741] = cv741;
	
	Constant* var742_string = ConstantDataArray::getString(context, "vfmadd231pd", true);
	GlobalVariable* cv742 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var742_string, ".str726", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv742->setUnnamedAddr(true);
	globals[742] = cv742;
	
	Constant* var743_string = ConstantDataArray::getString(context, "vfmadd231ps", true);
	GlobalVariable* cv743 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var743_string, ".str727", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv743->setUnnamedAddr(true);
	globals[743] = cv743;
	
	Constant* var744_string = ConstantDataArray::getString(context, "vfmadd231sd", true);
	GlobalVariable* cv744 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var744_string, ".str728", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv744->setUnnamedAddr(true);
	globals[744] = cv744;
	
	Constant* var745_string = ConstantDataArray::getString(context, "vfmadd231ss", true);
	GlobalVariable* cv745 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var745_string, ".str729", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv745->setUnnamedAddr(true);
	globals[745] = cv745;
	
	Constant* var746_string = ConstantDataArray::getString(context, "vfmaddpd", true);
	GlobalVariable* cv746 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var746_string, ".str730", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv746->setUnnamedAddr(true);
	globals[746] = cv746;
	
	Constant* var747_string = ConstantDataArray::getString(context, "vfmaddps", true);
	GlobalVariable* cv747 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var747_string, ".str731", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv747->setUnnamedAddr(true);
	globals[747] = cv747;
	
	Constant* var748_string = ConstantDataArray::getString(context, "vfmaddsd", true);
	GlobalVariable* cv748 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var748_string, ".str732", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv748->setUnnamedAddr(true);
	globals[748] = cv748;
	
	Constant* var749_string = ConstantDataArray::getString(context, "vfmaddss", true);
	GlobalVariable* cv749 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var749_string, ".str733", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv749->setUnnamedAddr(true);
	globals[749] = cv749;
	
	Constant* var750_string = ConstantDataArray::getString(context, "vfmaddsub132pd", true);
	GlobalVariable* cv750 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var750_string, ".str734", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv750->setUnnamedAddr(true);
	globals[750] = cv750;
	
	Constant* var751_string = ConstantDataArray::getString(context, "vfmaddsub132ps", true);
	GlobalVariable* cv751 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var751_string, ".str735", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv751->setUnnamedAddr(true);
	globals[751] = cv751;
	
	Constant* var752_string = ConstantDataArray::getString(context, "vfmaddsub213pd", true);
	GlobalVariable* cv752 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var752_string, ".str736", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv752->setUnnamedAddr(true);
	globals[752] = cv752;
	
	Constant* var753_string = ConstantDataArray::getString(context, "vfmaddsub213ps", true);
	GlobalVariable* cv753 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var753_string, ".str737", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv753->setUnnamedAddr(true);
	globals[753] = cv753;
	
	Constant* var754_string = ConstantDataArray::getString(context, "vfmaddsub231pd", true);
	GlobalVariable* cv754 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var754_string, ".str738", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv754->setUnnamedAddr(true);
	globals[754] = cv754;
	
	Constant* var755_string = ConstantDataArray::getString(context, "vfmaddsub231ps", true);
	GlobalVariable* cv755 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var755_string, ".str739", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv755->setUnnamedAddr(true);
	globals[755] = cv755;
	
	Constant* var756_string = ConstantDataArray::getString(context, "vfmaddsubpd", true);
	GlobalVariable* cv756 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var756_string, ".str740", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv756->setUnnamedAddr(true);
	globals[756] = cv756;
	
	Constant* var757_string = ConstantDataArray::getString(context, "vfmaddsubps", true);
	GlobalVariable* cv757 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var757_string, ".str741", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv757->setUnnamedAddr(true);
	globals[757] = cv757;
	
	Constant* var758_string = ConstantDataArray::getString(context, "vfmsub132pd", true);
	GlobalVariable* cv758 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var758_string, ".str742", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv758->setUnnamedAddr(true);
	globals[758] = cv758;
	
	Constant* var759_string = ConstantDataArray::getString(context, "vfmsub132ps", true);
	GlobalVariable* cv759 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var759_string, ".str743", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv759->setUnnamedAddr(true);
	globals[759] = cv759;
	
	Constant* var760_string = ConstantDataArray::getString(context, "vfmsub132sd", true);
	GlobalVariable* cv760 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var760_string, ".str744", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv760->setUnnamedAddr(true);
	globals[760] = cv760;
	
	Constant* var761_string = ConstantDataArray::getString(context, "vfmsub132ss", true);
	GlobalVariable* cv761 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var761_string, ".str745", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv761->setUnnamedAddr(true);
	globals[761] = cv761;
	
	Constant* var762_string = ConstantDataArray::getString(context, "vfmsub213pd", true);
	GlobalVariable* cv762 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var762_string, ".str746", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv762->setUnnamedAddr(true);
	globals[762] = cv762;
	
	Constant* var763_string = ConstantDataArray::getString(context, "vfmsub213ps", true);
	GlobalVariable* cv763 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var763_string, ".str747", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv763->setUnnamedAddr(true);
	globals[763] = cv763;
	
	Constant* var764_string = ConstantDataArray::getString(context, "vfmsub213sd", true);
	GlobalVariable* cv764 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var764_string, ".str748", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv764->setUnnamedAddr(true);
	globals[764] = cv764;
	
	Constant* var765_string = ConstantDataArray::getString(context, "vfmsub213ss", true);
	GlobalVariable* cv765 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var765_string, ".str749", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv765->setUnnamedAddr(true);
	globals[765] = cv765;
	
	Constant* var766_string = ConstantDataArray::getString(context, "vfmsub231pd", true);
	GlobalVariable* cv766 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var766_string, ".str750", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv766->setUnnamedAddr(true);
	globals[766] = cv766;
	
	Constant* var767_string = ConstantDataArray::getString(context, "vfmsub231ps", true);
	GlobalVariable* cv767 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var767_string, ".str751", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv767->setUnnamedAddr(true);
	globals[767] = cv767;
	
	Constant* var768_string = ConstantDataArray::getString(context, "vfmsub231sd", true);
	GlobalVariable* cv768 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var768_string, ".str752", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv768->setUnnamedAddr(true);
	globals[768] = cv768;
	
	Constant* var769_string = ConstantDataArray::getString(context, "vfmsub231ss", true);
	GlobalVariable* cv769 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var769_string, ".str753", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv769->setUnnamedAddr(true);
	globals[769] = cv769;
	
	Constant* var770_string = ConstantDataArray::getString(context, "vfmsubadd132pd", true);
	GlobalVariable* cv770 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var770_string, ".str754", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv770->setUnnamedAddr(true);
	globals[770] = cv770;
	
	Constant* var771_string = ConstantDataArray::getString(context, "vfmsubadd132ps", true);
	GlobalVariable* cv771 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var771_string, ".str755", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv771->setUnnamedAddr(true);
	globals[771] = cv771;
	
	Constant* var772_string = ConstantDataArray::getString(context, "vfmsubadd213pd", true);
	GlobalVariable* cv772 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var772_string, ".str756", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv772->setUnnamedAddr(true);
	globals[772] = cv772;
	
	Constant* var773_string = ConstantDataArray::getString(context, "vfmsubadd213ps", true);
	GlobalVariable* cv773 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var773_string, ".str757", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv773->setUnnamedAddr(true);
	globals[773] = cv773;
	
	Constant* var774_string = ConstantDataArray::getString(context, "vfmsubadd231pd", true);
	GlobalVariable* cv774 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var774_string, ".str758", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv774->setUnnamedAddr(true);
	globals[774] = cv774;
	
	Constant* var775_string = ConstantDataArray::getString(context, "vfmsubadd231ps", true);
	GlobalVariable* cv775 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var775_string, ".str759", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv775->setUnnamedAddr(true);
	globals[775] = cv775;
	
	Constant* var776_string = ConstantDataArray::getString(context, "vfmsubaddpd", true);
	GlobalVariable* cv776 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var776_string, ".str760", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv776->setUnnamedAddr(true);
	globals[776] = cv776;
	
	Constant* var777_string = ConstantDataArray::getString(context, "vfmsubaddps", true);
	GlobalVariable* cv777 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var777_string, ".str761", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv777->setUnnamedAddr(true);
	globals[777] = cv777;
	
	Constant* var778_string = ConstantDataArray::getString(context, "vfmsubpd", true);
	GlobalVariable* cv778 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var778_string, ".str762", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv778->setUnnamedAddr(true);
	globals[778] = cv778;
	
	Constant* var779_string = ConstantDataArray::getString(context, "vfmsubps", true);
	GlobalVariable* cv779 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var779_string, ".str763", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv779->setUnnamedAddr(true);
	globals[779] = cv779;
	
	Constant* var780_string = ConstantDataArray::getString(context, "vfmsubsd", true);
	GlobalVariable* cv780 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var780_string, ".str764", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv780->setUnnamedAddr(true);
	globals[780] = cv780;
	
	Constant* var781_string = ConstantDataArray::getString(context, "vfmsubss", true);
	GlobalVariable* cv781 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var781_string, ".str765", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv781->setUnnamedAddr(true);
	globals[781] = cv781;
	
	Constant* var782_string = ConstantDataArray::getString(context, "vfnmadd132pd", true);
	GlobalVariable* cv782 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var782_string, ".str766", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv782->setUnnamedAddr(true);
	globals[782] = cv782;
	
	Constant* var783_string = ConstantDataArray::getString(context, "vfnmadd132ps", true);
	GlobalVariable* cv783 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var783_string, ".str767", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv783->setUnnamedAddr(true);
	globals[783] = cv783;
	
	Constant* var784_string = ConstantDataArray::getString(context, "vfnmadd132sd", true);
	GlobalVariable* cv784 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var784_string, ".str768", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv784->setUnnamedAddr(true);
	globals[784] = cv784;
	
	Constant* var785_string = ConstantDataArray::getString(context, "vfnmadd132ss", true);
	GlobalVariable* cv785 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var785_string, ".str769", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv785->setUnnamedAddr(true);
	globals[785] = cv785;
	
	Constant* var786_string = ConstantDataArray::getString(context, "vfnmadd213pd", true);
	GlobalVariable* cv786 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var786_string, ".str770", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv786->setUnnamedAddr(true);
	globals[786] = cv786;
	
	Constant* var787_string = ConstantDataArray::getString(context, "vfnmadd213ps", true);
	GlobalVariable* cv787 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var787_string, ".str771", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv787->setUnnamedAddr(true);
	globals[787] = cv787;
	
	Constant* var788_string = ConstantDataArray::getString(context, "vfnmadd213sd", true);
	GlobalVariable* cv788 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var788_string, ".str772", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv788->setUnnamedAddr(true);
	globals[788] = cv788;
	
	Constant* var789_string = ConstantDataArray::getString(context, "vfnmadd213ss", true);
	GlobalVariable* cv789 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var789_string, ".str773", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv789->setUnnamedAddr(true);
	globals[789] = cv789;
	
	Constant* var790_string = ConstantDataArray::getString(context, "vfnmadd231pd", true);
	GlobalVariable* cv790 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var790_string, ".str774", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv790->setUnnamedAddr(true);
	globals[790] = cv790;
	
	Constant* var791_string = ConstantDataArray::getString(context, "vfnmadd231ps", true);
	GlobalVariable* cv791 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var791_string, ".str775", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv791->setUnnamedAddr(true);
	globals[791] = cv791;
	
	Constant* var792_string = ConstantDataArray::getString(context, "vfnmadd231sd", true);
	GlobalVariable* cv792 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var792_string, ".str776", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv792->setUnnamedAddr(true);
	globals[792] = cv792;
	
	Constant* var793_string = ConstantDataArray::getString(context, "vfnmadd231ss", true);
	GlobalVariable* cv793 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var793_string, ".str777", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv793->setUnnamedAddr(true);
	globals[793] = cv793;
	
	Constant* var794_string = ConstantDataArray::getString(context, "vfnmaddpd", true);
	GlobalVariable* cv794 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var794_string, ".str778", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv794->setUnnamedAddr(true);
	globals[794] = cv794;
	
	Constant* var795_string = ConstantDataArray::getString(context, "vfnmaddps", true);
	GlobalVariable* cv795 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var795_string, ".str779", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv795->setUnnamedAddr(true);
	globals[795] = cv795;
	
	Constant* var796_string = ConstantDataArray::getString(context, "vfnmaddsd", true);
	GlobalVariable* cv796 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var796_string, ".str780", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv796->setUnnamedAddr(true);
	globals[796] = cv796;
	
	Constant* var797_string = ConstantDataArray::getString(context, "vfnmaddss", true);
	GlobalVariable* cv797 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var797_string, ".str781", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv797->setUnnamedAddr(true);
	globals[797] = cv797;
	
	Constant* var798_string = ConstantDataArray::getString(context, "vfnmsub132pd", true);
	GlobalVariable* cv798 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var798_string, ".str782", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv798->setUnnamedAddr(true);
	globals[798] = cv798;
	
	Constant* var799_string = ConstantDataArray::getString(context, "vfnmsub132ps", true);
	GlobalVariable* cv799 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var799_string, ".str783", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv799->setUnnamedAddr(true);
	globals[799] = cv799;
	
	Constant* var800_string = ConstantDataArray::getString(context, "vfnmsub132sd", true);
	GlobalVariable* cv800 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var800_string, ".str784", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv800->setUnnamedAddr(true);
	globals[800] = cv800;
	
	Constant* var801_string = ConstantDataArray::getString(context, "vfnmsub132ss", true);
	GlobalVariable* cv801 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var801_string, ".str785", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv801->setUnnamedAddr(true);
	globals[801] = cv801;
	
	Constant* var802_string = ConstantDataArray::getString(context, "vfnmsub213pd", true);
	GlobalVariable* cv802 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var802_string, ".str786", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv802->setUnnamedAddr(true);
	globals[802] = cv802;
	
	Constant* var803_string = ConstantDataArray::getString(context, "vfnmsub213ps", true);
	GlobalVariable* cv803 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var803_string, ".str787", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv803->setUnnamedAddr(true);
	globals[803] = cv803;
	
	Constant* var804_string = ConstantDataArray::getString(context, "vfnmsub213sd", true);
	GlobalVariable* cv804 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var804_string, ".str788", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv804->setUnnamedAddr(true);
	globals[804] = cv804;
	
	Constant* var805_string = ConstantDataArray::getString(context, "vfnmsub213ss", true);
	GlobalVariable* cv805 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var805_string, ".str789", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv805->setUnnamedAddr(true);
	globals[805] = cv805;
	
	Constant* var806_string = ConstantDataArray::getString(context, "vfnmsub231pd", true);
	GlobalVariable* cv806 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var806_string, ".str790", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv806->setUnnamedAddr(true);
	globals[806] = cv806;
	
	Constant* var807_string = ConstantDataArray::getString(context, "vfnmsub231ps", true);
	GlobalVariable* cv807 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var807_string, ".str791", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv807->setUnnamedAddr(true);
	globals[807] = cv807;
	
	Constant* var808_string = ConstantDataArray::getString(context, "vfnmsub231sd", true);
	GlobalVariable* cv808 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var808_string, ".str792", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv808->setUnnamedAddr(true);
	globals[808] = cv808;
	
	Constant* var809_string = ConstantDataArray::getString(context, "vfnmsub231ss", true);
	GlobalVariable* cv809 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var809_string, ".str793", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv809->setUnnamedAddr(true);
	globals[809] = cv809;
	
	Constant* var810_string = ConstantDataArray::getString(context, "vfnmsubpd", true);
	GlobalVariable* cv810 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var810_string, ".str794", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv810->setUnnamedAddr(true);
	globals[810] = cv810;
	
	Constant* var811_string = ConstantDataArray::getString(context, "vfnmsubps", true);
	GlobalVariable* cv811 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var811_string, ".str795", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv811->setUnnamedAddr(true);
	globals[811] = cv811;
	
	Constant* var812_string = ConstantDataArray::getString(context, "vfnmsubsd", true);
	GlobalVariable* cv812 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var812_string, ".str796", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv812->setUnnamedAddr(true);
	globals[812] = cv812;
	
	Constant* var813_string = ConstantDataArray::getString(context, "vfnmsubss", true);
	GlobalVariable* cv813 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var813_string, ".str797", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv813->setUnnamedAddr(true);
	globals[813] = cv813;
	
	Constant* var814_string = ConstantDataArray::getString(context, "vfrczpd", true);
	GlobalVariable* cv814 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var814_string, ".str798", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv814->setUnnamedAddr(true);
	globals[814] = cv814;
	
	Constant* var815_string = ConstantDataArray::getString(context, "vfrczps", true);
	GlobalVariable* cv815 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var815_string, ".str799", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv815->setUnnamedAddr(true);
	globals[815] = cv815;
	
	Constant* var816_string = ConstantDataArray::getString(context, "vfrczsd", true);
	GlobalVariable* cv816 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var816_string, ".str800", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv816->setUnnamedAddr(true);
	globals[816] = cv816;
	
	Constant* var817_string = ConstantDataArray::getString(context, "vfrczss", true);
	GlobalVariable* cv817 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var817_string, ".str801", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv817->setUnnamedAddr(true);
	globals[817] = cv817;
	
	Constant* var818_string = ConstantDataArray::getString(context, "vgatherdpd", true);
	GlobalVariable* cv818 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var818_string, ".str802", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv818->setUnnamedAddr(true);
	globals[818] = cv818;
	
	Constant* var819_string = ConstantDataArray::getString(context, "vgatherdps", true);
	GlobalVariable* cv819 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var819_string, ".str803", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv819->setUnnamedAddr(true);
	globals[819] = cv819;
	
	Constant* var820_string = ConstantDataArray::getString(context, "vgatherpf0dpd", true);
	GlobalVariable* cv820 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var820_string, ".str804", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv820->setUnnamedAddr(true);
	globals[820] = cv820;
	
	Constant* var821_string = ConstantDataArray::getString(context, "vgatherpf0dps", true);
	GlobalVariable* cv821 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var821_string, ".str805", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv821->setUnnamedAddr(true);
	globals[821] = cv821;
	
	Constant* var822_string = ConstantDataArray::getString(context, "vgatherpf0qpd", true);
	GlobalVariable* cv822 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var822_string, ".str806", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv822->setUnnamedAddr(true);
	globals[822] = cv822;
	
	Constant* var823_string = ConstantDataArray::getString(context, "vgatherpf0qps", true);
	GlobalVariable* cv823 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var823_string, ".str807", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv823->setUnnamedAddr(true);
	globals[823] = cv823;
	
	Constant* var824_string = ConstantDataArray::getString(context, "vgatherpf1dpd", true);
	GlobalVariable* cv824 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var824_string, ".str808", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv824->setUnnamedAddr(true);
	globals[824] = cv824;
	
	Constant* var825_string = ConstantDataArray::getString(context, "vgatherpf1dps", true);
	GlobalVariable* cv825 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var825_string, ".str809", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv825->setUnnamedAddr(true);
	globals[825] = cv825;
	
	Constant* var826_string = ConstantDataArray::getString(context, "vgatherpf1qpd", true);
	GlobalVariable* cv826 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var826_string, ".str810", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv826->setUnnamedAddr(true);
	globals[826] = cv826;
	
	Constant* var827_string = ConstantDataArray::getString(context, "vgatherpf1qps", true);
	GlobalVariable* cv827 = new GlobalVariable(module, types[59], true, GlobalValue::PrivateLinkage, var827_string, ".str811", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv827->setUnnamedAddr(true);
	globals[827] = cv827;
	
	Constant* var828_string = ConstantDataArray::getString(context, "vgatherqpd", true);
	GlobalVariable* cv828 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var828_string, ".str812", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv828->setUnnamedAddr(true);
	globals[828] = cv828;
	
	Constant* var829_string = ConstantDataArray::getString(context, "vgatherqps", true);
	GlobalVariable* cv829 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var829_string, ".str813", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv829->setUnnamedAddr(true);
	globals[829] = cv829;
	
	Constant* var830_string = ConstantDataArray::getString(context, "vhaddpd", true);
	GlobalVariable* cv830 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var830_string, ".str814", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv830->setUnnamedAddr(true);
	globals[830] = cv830;
	
	Constant* var831_string = ConstantDataArray::getString(context, "vhaddps", true);
	GlobalVariable* cv831 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var831_string, ".str815", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv831->setUnnamedAddr(true);
	globals[831] = cv831;
	
	Constant* var832_string = ConstantDataArray::getString(context, "vhsubpd", true);
	GlobalVariable* cv832 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var832_string, ".str816", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv832->setUnnamedAddr(true);
	globals[832] = cv832;
	
	Constant* var833_string = ConstantDataArray::getString(context, "vhsubps", true);
	GlobalVariable* cv833 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var833_string, ".str817", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv833->setUnnamedAddr(true);
	globals[833] = cv833;
	
	Constant* var834_string = ConstantDataArray::getString(context, "vinsertf128", true);
	GlobalVariable* cv834 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var834_string, ".str818", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv834->setUnnamedAddr(true);
	globals[834] = cv834;
	
	Constant* var835_string = ConstantDataArray::getString(context, "vinsertf32x4", true);
	GlobalVariable* cv835 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var835_string, ".str819", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv835->setUnnamedAddr(true);
	globals[835] = cv835;
	
	Constant* var836_string = ConstantDataArray::getString(context, "vinsertf64x4", true);
	GlobalVariable* cv836 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var836_string, ".str820", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv836->setUnnamedAddr(true);
	globals[836] = cv836;
	
	Constant* var837_string = ConstantDataArray::getString(context, "vinserti128", true);
	GlobalVariable* cv837 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var837_string, ".str821", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv837->setUnnamedAddr(true);
	globals[837] = cv837;
	
	Constant* var838_string = ConstantDataArray::getString(context, "vinserti32x4", true);
	GlobalVariable* cv838 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var838_string, ".str822", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv838->setUnnamedAddr(true);
	globals[838] = cv838;
	
	Constant* var839_string = ConstantDataArray::getString(context, "vinserti64x4", true);
	GlobalVariable* cv839 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var839_string, ".str823", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv839->setUnnamedAddr(true);
	globals[839] = cv839;
	
	Constant* var840_string = ConstantDataArray::getString(context, "vinsertps", true);
	GlobalVariable* cv840 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var840_string, ".str824", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv840->setUnnamedAddr(true);
	globals[840] = cv840;
	
	Constant* var841_string = ConstantDataArray::getString(context, "vlddqu", true);
	GlobalVariable* cv841 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var841_string, ".str825", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv841->setUnnamedAddr(true);
	globals[841] = cv841;
	
	Constant* var842_string = ConstantDataArray::getString(context, "vldmxcsr", true);
	GlobalVariable* cv842 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var842_string, ".str826", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv842->setUnnamedAddr(true);
	globals[842] = cv842;
	
	Constant* var843_string = ConstantDataArray::getString(context, "vmaskmovdqu", true);
	GlobalVariable* cv843 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var843_string, ".str827", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv843->setUnnamedAddr(true);
	globals[843] = cv843;
	
	Constant* var844_string = ConstantDataArray::getString(context, "vmaskmovpd", true);
	GlobalVariable* cv844 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var844_string, ".str828", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv844->setUnnamedAddr(true);
	globals[844] = cv844;
	
	Constant* var845_string = ConstantDataArray::getString(context, "vmaskmovps", true);
	GlobalVariable* cv845 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var845_string, ".str829", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv845->setUnnamedAddr(true);
	globals[845] = cv845;
	
	Constant* var846_string = ConstantDataArray::getString(context, "vmaxpd", true);
	GlobalVariable* cv846 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var846_string, ".str830", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv846->setUnnamedAddr(true);
	globals[846] = cv846;
	
	Constant* var847_string = ConstantDataArray::getString(context, "vmaxps", true);
	GlobalVariable* cv847 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var847_string, ".str831", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv847->setUnnamedAddr(true);
	globals[847] = cv847;
	
	Constant* var848_string = ConstantDataArray::getString(context, "vmaxsd", true);
	GlobalVariable* cv848 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var848_string, ".str832", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv848->setUnnamedAddr(true);
	globals[848] = cv848;
	
	Constant* var849_string = ConstantDataArray::getString(context, "vmaxss", true);
	GlobalVariable* cv849 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var849_string, ".str833", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv849->setUnnamedAddr(true);
	globals[849] = cv849;
	
	Constant* var850_string = ConstantDataArray::getString(context, "vmcall", true);
	GlobalVariable* cv850 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var850_string, ".str834", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv850->setUnnamedAddr(true);
	globals[850] = cv850;
	
	Constant* var851_string = ConstantDataArray::getString(context, "vmclear", true);
	GlobalVariable* cv851 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var851_string, ".str835", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv851->setUnnamedAddr(true);
	globals[851] = cv851;
	
	Constant* var852_string = ConstantDataArray::getString(context, "vmfunc", true);
	GlobalVariable* cv852 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var852_string, ".str836", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv852->setUnnamedAddr(true);
	globals[852] = cv852;
	
	Constant* var853_string = ConstantDataArray::getString(context, "vminpd", true);
	GlobalVariable* cv853 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var853_string, ".str837", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv853->setUnnamedAddr(true);
	globals[853] = cv853;
	
	Constant* var854_string = ConstantDataArray::getString(context, "vminps", true);
	GlobalVariable* cv854 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var854_string, ".str838", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv854->setUnnamedAddr(true);
	globals[854] = cv854;
	
	Constant* var855_string = ConstantDataArray::getString(context, "vminsd", true);
	GlobalVariable* cv855 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var855_string, ".str839", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv855->setUnnamedAddr(true);
	globals[855] = cv855;
	
	Constant* var856_string = ConstantDataArray::getString(context, "vminss", true);
	GlobalVariable* cv856 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var856_string, ".str840", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv856->setUnnamedAddr(true);
	globals[856] = cv856;
	
	Constant* var857_string = ConstantDataArray::getString(context, "vmlaunch", true);
	GlobalVariable* cv857 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var857_string, ".str841", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv857->setUnnamedAddr(true);
	globals[857] = cv857;
	
	Constant* var858_string = ConstantDataArray::getString(context, "vmload", true);
	GlobalVariable* cv858 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var858_string, ".str842", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv858->setUnnamedAddr(true);
	globals[858] = cv858;
	
	Constant* var859_string = ConstantDataArray::getString(context, "vmmcall", true);
	GlobalVariable* cv859 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var859_string, ".str843", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv859->setUnnamedAddr(true);
	globals[859] = cv859;
	
	Constant* var860_string = ConstantDataArray::getString(context, "vmovapd", true);
	GlobalVariable* cv860 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var860_string, ".str844", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv860->setUnnamedAddr(true);
	globals[860] = cv860;
	
	Constant* var861_string = ConstantDataArray::getString(context, "vmovaps", true);
	GlobalVariable* cv861 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var861_string, ".str845", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv861->setUnnamedAddr(true);
	globals[861] = cv861;
	
	Constant* var862_string = ConstantDataArray::getString(context, "vmovd", true);
	GlobalVariable* cv862 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var862_string, ".str846", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv862->setUnnamedAddr(true);
	globals[862] = cv862;
	
	Constant* var863_string = ConstantDataArray::getString(context, "vmovddup", true);
	GlobalVariable* cv863 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var863_string, ".str847", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv863->setUnnamedAddr(true);
	globals[863] = cv863;
	
	Constant* var864_string = ConstantDataArray::getString(context, "vmovdqa", true);
	GlobalVariable* cv864 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var864_string, ".str848", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv864->setUnnamedAddr(true);
	globals[864] = cv864;
	
	Constant* var865_string = ConstantDataArray::getString(context, "vmovdqa32", true);
	GlobalVariable* cv865 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var865_string, ".str849", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv865->setUnnamedAddr(true);
	globals[865] = cv865;
	
	Constant* var866_string = ConstantDataArray::getString(context, "vmovdqa64", true);
	GlobalVariable* cv866 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var866_string, ".str850", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv866->setUnnamedAddr(true);
	globals[866] = cv866;
	
	Constant* var867_string = ConstantDataArray::getString(context, "vmovdqu", true);
	GlobalVariable* cv867 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var867_string, ".str851", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv867->setUnnamedAddr(true);
	globals[867] = cv867;
	
	Constant* var868_string = ConstantDataArray::getString(context, "vmovdqu16", true);
	GlobalVariable* cv868 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var868_string, ".str852", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv868->setUnnamedAddr(true);
	globals[868] = cv868;
	
	Constant* var869_string = ConstantDataArray::getString(context, "vmovdqu32", true);
	GlobalVariable* cv869 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var869_string, ".str853", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv869->setUnnamedAddr(true);
	globals[869] = cv869;
	
	Constant* var870_string = ConstantDataArray::getString(context, "vmovdqu64", true);
	GlobalVariable* cv870 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var870_string, ".str854", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv870->setUnnamedAddr(true);
	globals[870] = cv870;
	
	Constant* var871_string = ConstantDataArray::getString(context, "vmovdqu8", true);
	GlobalVariable* cv871 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var871_string, ".str855", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv871->setUnnamedAddr(true);
	globals[871] = cv871;
	
	Constant* var872_string = ConstantDataArray::getString(context, "vmovhlps", true);
	GlobalVariable* cv872 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var872_string, ".str856", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv872->setUnnamedAddr(true);
	globals[872] = cv872;
	
	Constant* var873_string = ConstantDataArray::getString(context, "vmovhpd", true);
	GlobalVariable* cv873 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var873_string, ".str857", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv873->setUnnamedAddr(true);
	globals[873] = cv873;
	
	Constant* var874_string = ConstantDataArray::getString(context, "vmovhps", true);
	GlobalVariable* cv874 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var874_string, ".str858", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv874->setUnnamedAddr(true);
	globals[874] = cv874;
	
	Constant* var875_string = ConstantDataArray::getString(context, "vmovlhps", true);
	GlobalVariable* cv875 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var875_string, ".str859", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv875->setUnnamedAddr(true);
	globals[875] = cv875;
	
	Constant* var876_string = ConstantDataArray::getString(context, "vmovlpd", true);
	GlobalVariable* cv876 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var876_string, ".str860", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv876->setUnnamedAddr(true);
	globals[876] = cv876;
	
	Constant* var877_string = ConstantDataArray::getString(context, "vmovlps", true);
	GlobalVariable* cv877 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var877_string, ".str861", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv877->setUnnamedAddr(true);
	globals[877] = cv877;
	
	Constant* var878_string = ConstantDataArray::getString(context, "vmovmskpd", true);
	GlobalVariable* cv878 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var878_string, ".str862", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv878->setUnnamedAddr(true);
	globals[878] = cv878;
	
	Constant* var879_string = ConstantDataArray::getString(context, "vmovmskps", true);
	GlobalVariable* cv879 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var879_string, ".str863", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv879->setUnnamedAddr(true);
	globals[879] = cv879;
	
	Constant* var880_string = ConstantDataArray::getString(context, "vmovntdq", true);
	GlobalVariable* cv880 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var880_string, ".str864", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv880->setUnnamedAddr(true);
	globals[880] = cv880;
	
	Constant* var881_string = ConstantDataArray::getString(context, "vmovntdqa", true);
	GlobalVariable* cv881 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var881_string, ".str865", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv881->setUnnamedAddr(true);
	globals[881] = cv881;
	
	Constant* var882_string = ConstantDataArray::getString(context, "vmovntpd", true);
	GlobalVariable* cv882 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var882_string, ".str866", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv882->setUnnamedAddr(true);
	globals[882] = cv882;
	
	Constant* var883_string = ConstantDataArray::getString(context, "vmovntps", true);
	GlobalVariable* cv883 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var883_string, ".str867", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv883->setUnnamedAddr(true);
	globals[883] = cv883;
	
	Constant* var884_string = ConstantDataArray::getString(context, "vmovq", true);
	GlobalVariable* cv884 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var884_string, ".str868", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv884->setUnnamedAddr(true);
	globals[884] = cv884;
	
	Constant* var885_string = ConstantDataArray::getString(context, "vmovsd", true);
	GlobalVariable* cv885 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var885_string, ".str869", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv885->setUnnamedAddr(true);
	globals[885] = cv885;
	
	Constant* var886_string = ConstantDataArray::getString(context, "vmovshdup", true);
	GlobalVariable* cv886 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var886_string, ".str870", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv886->setUnnamedAddr(true);
	globals[886] = cv886;
	
	Constant* var887_string = ConstantDataArray::getString(context, "vmovsldup", true);
	GlobalVariable* cv887 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var887_string, ".str871", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv887->setUnnamedAddr(true);
	globals[887] = cv887;
	
	Constant* var888_string = ConstantDataArray::getString(context, "vmovss", true);
	GlobalVariable* cv888 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var888_string, ".str872", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv888->setUnnamedAddr(true);
	globals[888] = cv888;
	
	Constant* var889_string = ConstantDataArray::getString(context, "vmovupd", true);
	GlobalVariable* cv889 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var889_string, ".str873", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv889->setUnnamedAddr(true);
	globals[889] = cv889;
	
	Constant* var890_string = ConstantDataArray::getString(context, "vmovups", true);
	GlobalVariable* cv890 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var890_string, ".str874", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv890->setUnnamedAddr(true);
	globals[890] = cv890;
	
	Constant* var891_string = ConstantDataArray::getString(context, "vmpsadbw", true);
	GlobalVariable* cv891 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var891_string, ".str875", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv891->setUnnamedAddr(true);
	globals[891] = cv891;
	
	Constant* var892_string = ConstantDataArray::getString(context, "vmptrld", true);
	GlobalVariable* cv892 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var892_string, ".str876", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv892->setUnnamedAddr(true);
	globals[892] = cv892;
	
	Constant* var893_string = ConstantDataArray::getString(context, "vmptrst", true);
	GlobalVariable* cv893 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var893_string, ".str877", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv893->setUnnamedAddr(true);
	globals[893] = cv893;
	
	Constant* var894_string = ConstantDataArray::getString(context, "vmread", true);
	GlobalVariable* cv894 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var894_string, ".str878", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv894->setUnnamedAddr(true);
	globals[894] = cv894;
	
	Constant* var895_string = ConstantDataArray::getString(context, "vmresume", true);
	GlobalVariable* cv895 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var895_string, ".str879", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv895->setUnnamedAddr(true);
	globals[895] = cv895;
	
	Constant* var896_string = ConstantDataArray::getString(context, "vmrun", true);
	GlobalVariable* cv896 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var896_string, ".str880", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv896->setUnnamedAddr(true);
	globals[896] = cv896;
	
	Constant* var897_string = ConstantDataArray::getString(context, "vmsave", true);
	GlobalVariable* cv897 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var897_string, ".str881", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv897->setUnnamedAddr(true);
	globals[897] = cv897;
	
	Constant* var898_string = ConstantDataArray::getString(context, "vmulpd", true);
	GlobalVariable* cv898 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var898_string, ".str882", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv898->setUnnamedAddr(true);
	globals[898] = cv898;
	
	Constant* var899_string = ConstantDataArray::getString(context, "vmulps", true);
	GlobalVariable* cv899 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var899_string, ".str883", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv899->setUnnamedAddr(true);
	globals[899] = cv899;
	
	Constant* var900_string = ConstantDataArray::getString(context, "vmulsd", true);
	GlobalVariable* cv900 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var900_string, ".str884", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv900->setUnnamedAddr(true);
	globals[900] = cv900;
	
	Constant* var901_string = ConstantDataArray::getString(context, "vmulss", true);
	GlobalVariable* cv901 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var901_string, ".str885", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv901->setUnnamedAddr(true);
	globals[901] = cv901;
	
	Constant* var902_string = ConstantDataArray::getString(context, "vmwrite", true);
	GlobalVariable* cv902 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var902_string, ".str886", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv902->setUnnamedAddr(true);
	globals[902] = cv902;
	
	Constant* var903_string = ConstantDataArray::getString(context, "vmxoff", true);
	GlobalVariable* cv903 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var903_string, ".str887", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv903->setUnnamedAddr(true);
	globals[903] = cv903;
	
	Constant* var904_string = ConstantDataArray::getString(context, "vmxon", true);
	GlobalVariable* cv904 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var904_string, ".str888", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv904->setUnnamedAddr(true);
	globals[904] = cv904;
	
	Constant* var905_string = ConstantDataArray::getString(context, "vorpd", true);
	GlobalVariable* cv905 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var905_string, ".str889", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv905->setUnnamedAddr(true);
	globals[905] = cv905;
	
	Constant* var906_string = ConstantDataArray::getString(context, "vorps", true);
	GlobalVariable* cv906 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var906_string, ".str890", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv906->setUnnamedAddr(true);
	globals[906] = cv906;
	
	Constant* var907_string = ConstantDataArray::getString(context, "vpabsb", true);
	GlobalVariable* cv907 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var907_string, ".str891", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv907->setUnnamedAddr(true);
	globals[907] = cv907;
	
	Constant* var908_string = ConstantDataArray::getString(context, "vpabsd", true);
	GlobalVariable* cv908 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var908_string, ".str892", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv908->setUnnamedAddr(true);
	globals[908] = cv908;
	
	Constant* var909_string = ConstantDataArray::getString(context, "vpabsq", true);
	GlobalVariable* cv909 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var909_string, ".str893", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv909->setUnnamedAddr(true);
	globals[909] = cv909;
	
	Constant* var910_string = ConstantDataArray::getString(context, "vpabsw", true);
	GlobalVariable* cv910 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var910_string, ".str894", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv910->setUnnamedAddr(true);
	globals[910] = cv910;
	
	Constant* var911_string = ConstantDataArray::getString(context, "vpackssdw", true);
	GlobalVariable* cv911 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var911_string, ".str895", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv911->setUnnamedAddr(true);
	globals[911] = cv911;
	
	Constant* var912_string = ConstantDataArray::getString(context, "vpacksswb", true);
	GlobalVariable* cv912 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var912_string, ".str896", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv912->setUnnamedAddr(true);
	globals[912] = cv912;
	
	Constant* var913_string = ConstantDataArray::getString(context, "vpackusdw", true);
	GlobalVariable* cv913 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var913_string, ".str897", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv913->setUnnamedAddr(true);
	globals[913] = cv913;
	
	Constant* var914_string = ConstantDataArray::getString(context, "vpackuswb", true);
	GlobalVariable* cv914 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var914_string, ".str898", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv914->setUnnamedAddr(true);
	globals[914] = cv914;
	
	Constant* var915_string = ConstantDataArray::getString(context, "vpaddb", true);
	GlobalVariable* cv915 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var915_string, ".str899", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv915->setUnnamedAddr(true);
	globals[915] = cv915;
	
	Constant* var916_string = ConstantDataArray::getString(context, "vpaddd", true);
	GlobalVariable* cv916 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var916_string, ".str900", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv916->setUnnamedAddr(true);
	globals[916] = cv916;
	
	Constant* var917_string = ConstantDataArray::getString(context, "vpaddq", true);
	GlobalVariable* cv917 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var917_string, ".str901", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv917->setUnnamedAddr(true);
	globals[917] = cv917;
	
	Constant* var918_string = ConstantDataArray::getString(context, "vpaddsb", true);
	GlobalVariable* cv918 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var918_string, ".str902", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv918->setUnnamedAddr(true);
	globals[918] = cv918;
	
	Constant* var919_string = ConstantDataArray::getString(context, "vpaddsw", true);
	GlobalVariable* cv919 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var919_string, ".str903", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv919->setUnnamedAddr(true);
	globals[919] = cv919;
	
	Constant* var920_string = ConstantDataArray::getString(context, "vpaddusb", true);
	GlobalVariable* cv920 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var920_string, ".str904", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv920->setUnnamedAddr(true);
	globals[920] = cv920;
	
	Constant* var921_string = ConstantDataArray::getString(context, "vpaddusw", true);
	GlobalVariable* cv921 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var921_string, ".str905", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv921->setUnnamedAddr(true);
	globals[921] = cv921;
	
	Constant* var922_string = ConstantDataArray::getString(context, "vpaddw", true);
	GlobalVariable* cv922 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var922_string, ".str906", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv922->setUnnamedAddr(true);
	globals[922] = cv922;
	
	Constant* var923_string = ConstantDataArray::getString(context, "vpalignr", true);
	GlobalVariable* cv923 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var923_string, ".str907", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv923->setUnnamedAddr(true);
	globals[923] = cv923;
	
	Constant* var924_string = ConstantDataArray::getString(context, "vpand", true);
	GlobalVariable* cv924 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var924_string, ".str908", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv924->setUnnamedAddr(true);
	globals[924] = cv924;
	
	Constant* var925_string = ConstantDataArray::getString(context, "vpandd", true);
	GlobalVariable* cv925 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var925_string, ".str909", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv925->setUnnamedAddr(true);
	globals[925] = cv925;
	
	Constant* var926_string = ConstantDataArray::getString(context, "vpandn", true);
	GlobalVariable* cv926 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var926_string, ".str910", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv926->setUnnamedAddr(true);
	globals[926] = cv926;
	
	Constant* var927_string = ConstantDataArray::getString(context, "vpandnd", true);
	GlobalVariable* cv927 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var927_string, ".str911", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv927->setUnnamedAddr(true);
	globals[927] = cv927;
	
	Constant* var928_string = ConstantDataArray::getString(context, "vpandnq", true);
	GlobalVariable* cv928 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var928_string, ".str912", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv928->setUnnamedAddr(true);
	globals[928] = cv928;
	
	Constant* var929_string = ConstantDataArray::getString(context, "vpandq", true);
	GlobalVariable* cv929 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var929_string, ".str913", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv929->setUnnamedAddr(true);
	globals[929] = cv929;
	
	Constant* var930_string = ConstantDataArray::getString(context, "vpavgb", true);
	GlobalVariable* cv930 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var930_string, ".str914", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv930->setUnnamedAddr(true);
	globals[930] = cv930;
	
	Constant* var931_string = ConstantDataArray::getString(context, "vpavgw", true);
	GlobalVariable* cv931 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var931_string, ".str915", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv931->setUnnamedAddr(true);
	globals[931] = cv931;
	
	Constant* var932_string = ConstantDataArray::getString(context, "vpblendd", true);
	GlobalVariable* cv932 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var932_string, ".str916", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv932->setUnnamedAddr(true);
	globals[932] = cv932;
	
	Constant* var933_string = ConstantDataArray::getString(context, "vpblendmd", true);
	GlobalVariable* cv933 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var933_string, ".str917", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv933->setUnnamedAddr(true);
	globals[933] = cv933;
	
	Constant* var934_string = ConstantDataArray::getString(context, "vpblendmq", true);
	GlobalVariable* cv934 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var934_string, ".str918", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv934->setUnnamedAddr(true);
	globals[934] = cv934;
	
	Constant* var935_string = ConstantDataArray::getString(context, "vpblendvb", true);
	GlobalVariable* cv935 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var935_string, ".str919", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv935->setUnnamedAddr(true);
	globals[935] = cv935;
	
	Constant* var936_string = ConstantDataArray::getString(context, "vpblendw", true);
	GlobalVariable* cv936 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var936_string, ".str920", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv936->setUnnamedAddr(true);
	globals[936] = cv936;
	
	Constant* var937_string = ConstantDataArray::getString(context, "vpbroadcastb", true);
	GlobalVariable* cv937 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var937_string, ".str921", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv937->setUnnamedAddr(true);
	globals[937] = cv937;
	
	Constant* var938_string = ConstantDataArray::getString(context, "vpbroadcastd", true);
	GlobalVariable* cv938 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var938_string, ".str922", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv938->setUnnamedAddr(true);
	globals[938] = cv938;
	
	Constant* var939_string = ConstantDataArray::getString(context, "vpbroadcastmb2q", true);
	GlobalVariable* cv939 = new GlobalVariable(module, types[48], true, GlobalValue::PrivateLinkage, var939_string, ".str923", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv939->setUnnamedAddr(true);
	globals[939] = cv939;
	
	Constant* var940_string = ConstantDataArray::getString(context, "vpbroadcastmw2d", true);
	GlobalVariable* cv940 = new GlobalVariable(module, types[48], true, GlobalValue::PrivateLinkage, var940_string, ".str924", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv940->setUnnamedAddr(true);
	globals[940] = cv940;
	
	Constant* var941_string = ConstantDataArray::getString(context, "vpbroadcastq", true);
	GlobalVariable* cv941 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var941_string, ".str925", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv941->setUnnamedAddr(true);
	globals[941] = cv941;
	
	Constant* var942_string = ConstantDataArray::getString(context, "vpbroadcastw", true);
	GlobalVariable* cv942 = new GlobalVariable(module, types[58], true, GlobalValue::PrivateLinkage, var942_string, ".str926", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv942->setUnnamedAddr(true);
	globals[942] = cv942;
	
	Constant* var943_string = ConstantDataArray::getString(context, "vpclmulqdq", true);
	GlobalVariable* cv943 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var943_string, ".str927", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv943->setUnnamedAddr(true);
	globals[943] = cv943;
	
	Constant* var944_string = ConstantDataArray::getString(context, "vpcmov", true);
	GlobalVariable* cv944 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var944_string, ".str928", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv944->setUnnamedAddr(true);
	globals[944] = cv944;
	
	Constant* var945_string = ConstantDataArray::getString(context, "vpcmp", true);
	GlobalVariable* cv945 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var945_string, ".str929", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv945->setUnnamedAddr(true);
	globals[945] = cv945;
	
	Constant* var946_string = ConstantDataArray::getString(context, "vpcmpd", true);
	GlobalVariable* cv946 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var946_string, ".str930", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv946->setUnnamedAddr(true);
	globals[946] = cv946;
	
	Constant* var947_string = ConstantDataArray::getString(context, "vpcmpeqb", true);
	GlobalVariable* cv947 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var947_string, ".str931", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv947->setUnnamedAddr(true);
	globals[947] = cv947;
	
	Constant* var948_string = ConstantDataArray::getString(context, "vpcmpeqd", true);
	GlobalVariable* cv948 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var948_string, ".str932", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv948->setUnnamedAddr(true);
	globals[948] = cv948;
	
	Constant* var949_string = ConstantDataArray::getString(context, "vpcmpeqq", true);
	GlobalVariable* cv949 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var949_string, ".str933", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv949->setUnnamedAddr(true);
	globals[949] = cv949;
	
	Constant* var950_string = ConstantDataArray::getString(context, "vpcmpeqw", true);
	GlobalVariable* cv950 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var950_string, ".str934", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv950->setUnnamedAddr(true);
	globals[950] = cv950;
	
	Constant* var951_string = ConstantDataArray::getString(context, "vpcmpestri", true);
	GlobalVariable* cv951 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var951_string, ".str935", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv951->setUnnamedAddr(true);
	globals[951] = cv951;
	
	Constant* var952_string = ConstantDataArray::getString(context, "vpcmpestrm", true);
	GlobalVariable* cv952 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var952_string, ".str936", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv952->setUnnamedAddr(true);
	globals[952] = cv952;
	
	Constant* var953_string = ConstantDataArray::getString(context, "vpcmpgtb", true);
	GlobalVariable* cv953 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var953_string, ".str937", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv953->setUnnamedAddr(true);
	globals[953] = cv953;
	
	Constant* var954_string = ConstantDataArray::getString(context, "vpcmpgtd", true);
	GlobalVariable* cv954 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var954_string, ".str938", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv954->setUnnamedAddr(true);
	globals[954] = cv954;
	
	Constant* var955_string = ConstantDataArray::getString(context, "vpcmpgtq", true);
	GlobalVariable* cv955 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var955_string, ".str939", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv955->setUnnamedAddr(true);
	globals[955] = cv955;
	
	Constant* var956_string = ConstantDataArray::getString(context, "vpcmpgtw", true);
	GlobalVariable* cv956 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var956_string, ".str940", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv956->setUnnamedAddr(true);
	globals[956] = cv956;
	
	Constant* var957_string = ConstantDataArray::getString(context, "vpcmpistri", true);
	GlobalVariable* cv957 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var957_string, ".str941", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv957->setUnnamedAddr(true);
	globals[957] = cv957;
	
	Constant* var958_string = ConstantDataArray::getString(context, "vpcmpistrm", true);
	GlobalVariable* cv958 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var958_string, ".str942", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv958->setUnnamedAddr(true);
	globals[958] = cv958;
	
	Constant* var959_string = ConstantDataArray::getString(context, "vpcmpq", true);
	GlobalVariable* cv959 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var959_string, ".str943", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv959->setUnnamedAddr(true);
	globals[959] = cv959;
	
	Constant* var960_string = ConstantDataArray::getString(context, "vpcmpud", true);
	GlobalVariable* cv960 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var960_string, ".str944", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv960->setUnnamedAddr(true);
	globals[960] = cv960;
	
	Constant* var961_string = ConstantDataArray::getString(context, "vpcmpuq", true);
	GlobalVariable* cv961 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var961_string, ".str945", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv961->setUnnamedAddr(true);
	globals[961] = cv961;
	
	Constant* var962_string = ConstantDataArray::getString(context, "vpcomb", true);
	GlobalVariable* cv962 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var962_string, ".str946", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv962->setUnnamedAddr(true);
	globals[962] = cv962;
	
	Constant* var963_string = ConstantDataArray::getString(context, "vpcomd", true);
	GlobalVariable* cv963 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var963_string, ".str947", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv963->setUnnamedAddr(true);
	globals[963] = cv963;
	
	Constant* var964_string = ConstantDataArray::getString(context, "vpcomq", true);
	GlobalVariable* cv964 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var964_string, ".str948", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv964->setUnnamedAddr(true);
	globals[964] = cv964;
	
	Constant* var965_string = ConstantDataArray::getString(context, "vpcomub", true);
	GlobalVariable* cv965 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var965_string, ".str949", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv965->setUnnamedAddr(true);
	globals[965] = cv965;
	
	Constant* var966_string = ConstantDataArray::getString(context, "vpcomud", true);
	GlobalVariable* cv966 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var966_string, ".str950", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv966->setUnnamedAddr(true);
	globals[966] = cv966;
	
	Constant* var967_string = ConstantDataArray::getString(context, "vpcomuq", true);
	GlobalVariable* cv967 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var967_string, ".str951", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv967->setUnnamedAddr(true);
	globals[967] = cv967;
	
	Constant* var968_string = ConstantDataArray::getString(context, "vpcomuw", true);
	GlobalVariable* cv968 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var968_string, ".str952", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv968->setUnnamedAddr(true);
	globals[968] = cv968;
	
	Constant* var969_string = ConstantDataArray::getString(context, "vpcomw", true);
	GlobalVariable* cv969 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var969_string, ".str953", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv969->setUnnamedAddr(true);
	globals[969] = cv969;
	
	Constant* var970_string = ConstantDataArray::getString(context, "vpconflictd", true);
	GlobalVariable* cv970 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var970_string, ".str954", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv970->setUnnamedAddr(true);
	globals[970] = cv970;
	
	Constant* var971_string = ConstantDataArray::getString(context, "vpconflictq", true);
	GlobalVariable* cv971 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var971_string, ".str955", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv971->setUnnamedAddr(true);
	globals[971] = cv971;
	
	Constant* var972_string = ConstantDataArray::getString(context, "vperm2f128", true);
	GlobalVariable* cv972 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var972_string, ".str956", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv972->setUnnamedAddr(true);
	globals[972] = cv972;
	
	Constant* var973_string = ConstantDataArray::getString(context, "vperm2i128", true);
	GlobalVariable* cv973 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var973_string, ".str957", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv973->setUnnamedAddr(true);
	globals[973] = cv973;
	
	Constant* var974_string = ConstantDataArray::getString(context, "vpermd", true);
	GlobalVariable* cv974 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var974_string, ".str958", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv974->setUnnamedAddr(true);
	globals[974] = cv974;
	
	Constant* var975_string = ConstantDataArray::getString(context, "vpermi2d", true);
	GlobalVariable* cv975 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var975_string, ".str959", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv975->setUnnamedAddr(true);
	globals[975] = cv975;
	
	Constant* var976_string = ConstantDataArray::getString(context, "vpermi2pd", true);
	GlobalVariable* cv976 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var976_string, ".str960", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv976->setUnnamedAddr(true);
	globals[976] = cv976;
	
	Constant* var977_string = ConstantDataArray::getString(context, "vpermi2ps", true);
	GlobalVariable* cv977 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var977_string, ".str961", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv977->setUnnamedAddr(true);
	globals[977] = cv977;
	
	Constant* var978_string = ConstantDataArray::getString(context, "vpermi2q", true);
	GlobalVariable* cv978 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var978_string, ".str962", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv978->setUnnamedAddr(true);
	globals[978] = cv978;
	
	Constant* var979_string = ConstantDataArray::getString(context, "vpermil2pd", true);
	GlobalVariable* cv979 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var979_string, ".str963", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv979->setUnnamedAddr(true);
	globals[979] = cv979;
	
	Constant* var980_string = ConstantDataArray::getString(context, "vpermil2ps", true);
	GlobalVariable* cv980 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var980_string, ".str964", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv980->setUnnamedAddr(true);
	globals[980] = cv980;
	
	Constant* var981_string = ConstantDataArray::getString(context, "vpermilpd", true);
	GlobalVariable* cv981 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var981_string, ".str965", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv981->setUnnamedAddr(true);
	globals[981] = cv981;
	
	Constant* var982_string = ConstantDataArray::getString(context, "vpermilps", true);
	GlobalVariable* cv982 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var982_string, ".str966", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv982->setUnnamedAddr(true);
	globals[982] = cv982;
	
	Constant* var983_string = ConstantDataArray::getString(context, "vpermpd", true);
	GlobalVariable* cv983 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var983_string, ".str967", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv983->setUnnamedAddr(true);
	globals[983] = cv983;
	
	Constant* var984_string = ConstantDataArray::getString(context, "vpermps", true);
	GlobalVariable* cv984 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var984_string, ".str968", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv984->setUnnamedAddr(true);
	globals[984] = cv984;
	
	Constant* var985_string = ConstantDataArray::getString(context, "vpermq", true);
	GlobalVariable* cv985 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var985_string, ".str969", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv985->setUnnamedAddr(true);
	globals[985] = cv985;
	
	Constant* var986_string = ConstantDataArray::getString(context, "vpermt2d", true);
	GlobalVariable* cv986 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var986_string, ".str970", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv986->setUnnamedAddr(true);
	globals[986] = cv986;
	
	Constant* var987_string = ConstantDataArray::getString(context, "vpermt2pd", true);
	GlobalVariable* cv987 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var987_string, ".str971", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv987->setUnnamedAddr(true);
	globals[987] = cv987;
	
	Constant* var988_string = ConstantDataArray::getString(context, "vpermt2ps", true);
	GlobalVariable* cv988 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var988_string, ".str972", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv988->setUnnamedAddr(true);
	globals[988] = cv988;
	
	Constant* var989_string = ConstantDataArray::getString(context, "vpermt2q", true);
	GlobalVariable* cv989 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var989_string, ".str973", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv989->setUnnamedAddr(true);
	globals[989] = cv989;
	
	Constant* var990_string = ConstantDataArray::getString(context, "vpextrb", true);
	GlobalVariable* cv990 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var990_string, ".str974", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv990->setUnnamedAddr(true);
	globals[990] = cv990;
	
	Constant* var991_string = ConstantDataArray::getString(context, "vpextrd", true);
	GlobalVariable* cv991 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var991_string, ".str975", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv991->setUnnamedAddr(true);
	globals[991] = cv991;
	
	Constant* var992_string = ConstantDataArray::getString(context, "vpextrq", true);
	GlobalVariable* cv992 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var992_string, ".str976", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv992->setUnnamedAddr(true);
	globals[992] = cv992;
	
	Constant* var993_string = ConstantDataArray::getString(context, "vpextrw", true);
	GlobalVariable* cv993 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var993_string, ".str977", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv993->setUnnamedAddr(true);
	globals[993] = cv993;
	
	Constant* var994_string = ConstantDataArray::getString(context, "vpgatherdd", true);
	GlobalVariable* cv994 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var994_string, ".str978", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv994->setUnnamedAddr(true);
	globals[994] = cv994;
	
	Constant* var995_string = ConstantDataArray::getString(context, "vpgatherdq", true);
	GlobalVariable* cv995 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var995_string, ".str979", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv995->setUnnamedAddr(true);
	globals[995] = cv995;
	
	Constant* var996_string = ConstantDataArray::getString(context, "vpgatherqd", true);
	GlobalVariable* cv996 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var996_string, ".str980", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv996->setUnnamedAddr(true);
	globals[996] = cv996;
	
	Constant* var997_string = ConstantDataArray::getString(context, "vpgatherqq", true);
	GlobalVariable* cv997 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var997_string, ".str981", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv997->setUnnamedAddr(true);
	globals[997] = cv997;
	
	Constant* var998_string = ConstantDataArray::getString(context, "vphaddbd", true);
	GlobalVariable* cv998 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var998_string, ".str982", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv998->setUnnamedAddr(true);
	globals[998] = cv998;
	
	Constant* var999_string = ConstantDataArray::getString(context, "vphaddbq", true);
	GlobalVariable* cv999 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var999_string, ".str983", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv999->setUnnamedAddr(true);
	globals[999] = cv999;
	
	Constant* var1000_string = ConstantDataArray::getString(context, "vphaddbw", true);
	GlobalVariable* cv1000 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1000_string, ".str984", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1000->setUnnamedAddr(true);
	globals[1000] = cv1000;
	
	Constant* var1001_string = ConstantDataArray::getString(context, "vphaddd", true);
	GlobalVariable* cv1001 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1001_string, ".str985", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1001->setUnnamedAddr(true);
	globals[1001] = cv1001;
	
	Constant* var1002_string = ConstantDataArray::getString(context, "vphadddq", true);
	GlobalVariable* cv1002 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1002_string, ".str986", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1002->setUnnamedAddr(true);
	globals[1002] = cv1002;
	
	Constant* var1003_string = ConstantDataArray::getString(context, "vphaddsw", true);
	GlobalVariable* cv1003 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1003_string, ".str987", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1003->setUnnamedAddr(true);
	globals[1003] = cv1003;
	
	Constant* var1004_string = ConstantDataArray::getString(context, "vphaddubd", true);
	GlobalVariable* cv1004 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1004_string, ".str988", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1004->setUnnamedAddr(true);
	globals[1004] = cv1004;
	
	Constant* var1005_string = ConstantDataArray::getString(context, "vphaddubq", true);
	GlobalVariable* cv1005 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1005_string, ".str989", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1005->setUnnamedAddr(true);
	globals[1005] = cv1005;
	
	Constant* var1006_string = ConstantDataArray::getString(context, "vphaddubw", true);
	GlobalVariable* cv1006 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1006_string, ".str990", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1006->setUnnamedAddr(true);
	globals[1006] = cv1006;
	
	Constant* var1007_string = ConstantDataArray::getString(context, "vphaddudq", true);
	GlobalVariable* cv1007 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1007_string, ".str991", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1007->setUnnamedAddr(true);
	globals[1007] = cv1007;
	
	Constant* var1008_string = ConstantDataArray::getString(context, "vphadduwd", true);
	GlobalVariable* cv1008 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1008_string, ".str992", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1008->setUnnamedAddr(true);
	globals[1008] = cv1008;
	
	Constant* var1009_string = ConstantDataArray::getString(context, "vphadduwq", true);
	GlobalVariable* cv1009 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1009_string, ".str993", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1009->setUnnamedAddr(true);
	globals[1009] = cv1009;
	
	Constant* var1010_string = ConstantDataArray::getString(context, "vphaddw", true);
	GlobalVariable* cv1010 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1010_string, ".str994", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1010->setUnnamedAddr(true);
	globals[1010] = cv1010;
	
	Constant* var1011_string = ConstantDataArray::getString(context, "vphaddwd", true);
	GlobalVariable* cv1011 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1011_string, ".str995", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1011->setUnnamedAddr(true);
	globals[1011] = cv1011;
	
	Constant* var1012_string = ConstantDataArray::getString(context, "vphaddwq", true);
	GlobalVariable* cv1012 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1012_string, ".str996", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1012->setUnnamedAddr(true);
	globals[1012] = cv1012;
	
	Constant* var1013_string = ConstantDataArray::getString(context, "vphminposuw", true);
	GlobalVariable* cv1013 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1013_string, ".str997", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1013->setUnnamedAddr(true);
	globals[1013] = cv1013;
	
	Constant* var1014_string = ConstantDataArray::getString(context, "vphsubbw", true);
	GlobalVariable* cv1014 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1014_string, ".str998", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1014->setUnnamedAddr(true);
	globals[1014] = cv1014;
	
	Constant* var1015_string = ConstantDataArray::getString(context, "vphsubd", true);
	GlobalVariable* cv1015 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1015_string, ".str999", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1015->setUnnamedAddr(true);
	globals[1015] = cv1015;
	
	Constant* var1016_string = ConstantDataArray::getString(context, "vphsubdq", true);
	GlobalVariable* cv1016 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1016_string, ".str1000", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1016->setUnnamedAddr(true);
	globals[1016] = cv1016;
	
	Constant* var1017_string = ConstantDataArray::getString(context, "vphsubsw", true);
	GlobalVariable* cv1017 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1017_string, ".str1001", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1017->setUnnamedAddr(true);
	globals[1017] = cv1017;
	
	Constant* var1018_string = ConstantDataArray::getString(context, "vphsubw", true);
	GlobalVariable* cv1018 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1018_string, ".str1002", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1018->setUnnamedAddr(true);
	globals[1018] = cv1018;
	
	Constant* var1019_string = ConstantDataArray::getString(context, "vphsubwd", true);
	GlobalVariable* cv1019 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1019_string, ".str1003", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1019->setUnnamedAddr(true);
	globals[1019] = cv1019;
	
	Constant* var1020_string = ConstantDataArray::getString(context, "vpinsrb", true);
	GlobalVariable* cv1020 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1020_string, ".str1004", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1020->setUnnamedAddr(true);
	globals[1020] = cv1020;
	
	Constant* var1021_string = ConstantDataArray::getString(context, "vpinsrd", true);
	GlobalVariable* cv1021 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1021_string, ".str1005", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1021->setUnnamedAddr(true);
	globals[1021] = cv1021;
	
	Constant* var1022_string = ConstantDataArray::getString(context, "vpinsrq", true);
	GlobalVariable* cv1022 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1022_string, ".str1006", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1022->setUnnamedAddr(true);
	globals[1022] = cv1022;
	
	Constant* var1023_string = ConstantDataArray::getString(context, "vpinsrw", true);
	GlobalVariable* cv1023 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1023_string, ".str1007", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1023->setUnnamedAddr(true);
	globals[1023] = cv1023;
	
	Constant* var1024_string = ConstantDataArray::getString(context, "vplzcntd", true);
	GlobalVariable* cv1024 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1024_string, ".str1008", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1024->setUnnamedAddr(true);
	globals[1024] = cv1024;
	
	Constant* var1025_string = ConstantDataArray::getString(context, "vplzcntq", true);
	GlobalVariable* cv1025 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1025_string, ".str1009", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1025->setUnnamedAddr(true);
	globals[1025] = cv1025;
	
	Constant* var1026_string = ConstantDataArray::getString(context, "vpmacsdd", true);
	GlobalVariable* cv1026 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1026_string, ".str1010", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1026->setUnnamedAddr(true);
	globals[1026] = cv1026;
	
	Constant* var1027_string = ConstantDataArray::getString(context, "vpmacsdqh", true);
	GlobalVariable* cv1027 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1027_string, ".str1011", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1027->setUnnamedAddr(true);
	globals[1027] = cv1027;
	
	Constant* var1028_string = ConstantDataArray::getString(context, "vpmacsdql", true);
	GlobalVariable* cv1028 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1028_string, ".str1012", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1028->setUnnamedAddr(true);
	globals[1028] = cv1028;
	
	Constant* var1029_string = ConstantDataArray::getString(context, "vpmacssdd", true);
	GlobalVariable* cv1029 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1029_string, ".str1013", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1029->setUnnamedAddr(true);
	globals[1029] = cv1029;
	
	Constant* var1030_string = ConstantDataArray::getString(context, "vpmacssdqh", true);
	GlobalVariable* cv1030 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1030_string, ".str1014", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1030->setUnnamedAddr(true);
	globals[1030] = cv1030;
	
	Constant* var1031_string = ConstantDataArray::getString(context, "vpmacssdql", true);
	GlobalVariable* cv1031 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1031_string, ".str1015", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1031->setUnnamedAddr(true);
	globals[1031] = cv1031;
	
	Constant* var1032_string = ConstantDataArray::getString(context, "vpmacsswd", true);
	GlobalVariable* cv1032 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1032_string, ".str1016", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1032->setUnnamedAddr(true);
	globals[1032] = cv1032;
	
	Constant* var1033_string = ConstantDataArray::getString(context, "vpmacssww", true);
	GlobalVariable* cv1033 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1033_string, ".str1017", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1033->setUnnamedAddr(true);
	globals[1033] = cv1033;
	
	Constant* var1034_string = ConstantDataArray::getString(context, "vpmacswd", true);
	GlobalVariable* cv1034 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1034_string, ".str1018", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1034->setUnnamedAddr(true);
	globals[1034] = cv1034;
	
	Constant* var1035_string = ConstantDataArray::getString(context, "vpmacsww", true);
	GlobalVariable* cv1035 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1035_string, ".str1019", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1035->setUnnamedAddr(true);
	globals[1035] = cv1035;
	
	Constant* var1036_string = ConstantDataArray::getString(context, "vpmadcsswd", true);
	GlobalVariable* cv1036 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1036_string, ".str1020", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1036->setUnnamedAddr(true);
	globals[1036] = cv1036;
	
	Constant* var1037_string = ConstantDataArray::getString(context, "vpmadcswd", true);
	GlobalVariable* cv1037 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1037_string, ".str1021", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1037->setUnnamedAddr(true);
	globals[1037] = cv1037;
	
	Constant* var1038_string = ConstantDataArray::getString(context, "vpmaddubsw", true);
	GlobalVariable* cv1038 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1038_string, ".str1022", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1038->setUnnamedAddr(true);
	globals[1038] = cv1038;
	
	Constant* var1039_string = ConstantDataArray::getString(context, "vpmaddwd", true);
	GlobalVariable* cv1039 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1039_string, ".str1023", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1039->setUnnamedAddr(true);
	globals[1039] = cv1039;
	
	Constant* var1040_string = ConstantDataArray::getString(context, "vpmaskmovd", true);
	GlobalVariable* cv1040 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1040_string, ".str1024", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1040->setUnnamedAddr(true);
	globals[1040] = cv1040;
	
	Constant* var1041_string = ConstantDataArray::getString(context, "vpmaskmovq", true);
	GlobalVariable* cv1041 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1041_string, ".str1025", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1041->setUnnamedAddr(true);
	globals[1041] = cv1041;
	
	Constant* var1042_string = ConstantDataArray::getString(context, "vpmaxsb", true);
	GlobalVariable* cv1042 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1042_string, ".str1026", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1042->setUnnamedAddr(true);
	globals[1042] = cv1042;
	
	Constant* var1043_string = ConstantDataArray::getString(context, "vpmaxsd", true);
	GlobalVariable* cv1043 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1043_string, ".str1027", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1043->setUnnamedAddr(true);
	globals[1043] = cv1043;
	
	Constant* var1044_string = ConstantDataArray::getString(context, "vpmaxsq", true);
	GlobalVariable* cv1044 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1044_string, ".str1028", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1044->setUnnamedAddr(true);
	globals[1044] = cv1044;
	
	Constant* var1045_string = ConstantDataArray::getString(context, "vpmaxsw", true);
	GlobalVariable* cv1045 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1045_string, ".str1029", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1045->setUnnamedAddr(true);
	globals[1045] = cv1045;
	
	Constant* var1046_string = ConstantDataArray::getString(context, "vpmaxub", true);
	GlobalVariable* cv1046 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1046_string, ".str1030", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1046->setUnnamedAddr(true);
	globals[1046] = cv1046;
	
	Constant* var1047_string = ConstantDataArray::getString(context, "vpmaxud", true);
	GlobalVariable* cv1047 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1047_string, ".str1031", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1047->setUnnamedAddr(true);
	globals[1047] = cv1047;
	
	Constant* var1048_string = ConstantDataArray::getString(context, "vpmaxuq", true);
	GlobalVariable* cv1048 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1048_string, ".str1032", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1048->setUnnamedAddr(true);
	globals[1048] = cv1048;
	
	Constant* var1049_string = ConstantDataArray::getString(context, "vpmaxuw", true);
	GlobalVariable* cv1049 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1049_string, ".str1033", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1049->setUnnamedAddr(true);
	globals[1049] = cv1049;
	
	Constant* var1050_string = ConstantDataArray::getString(context, "vpminsb", true);
	GlobalVariable* cv1050 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1050_string, ".str1034", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1050->setUnnamedAddr(true);
	globals[1050] = cv1050;
	
	Constant* var1051_string = ConstantDataArray::getString(context, "vpminsd", true);
	GlobalVariable* cv1051 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1051_string, ".str1035", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1051->setUnnamedAddr(true);
	globals[1051] = cv1051;
	
	Constant* var1052_string = ConstantDataArray::getString(context, "vpminsq", true);
	GlobalVariable* cv1052 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1052_string, ".str1036", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1052->setUnnamedAddr(true);
	globals[1052] = cv1052;
	
	Constant* var1053_string = ConstantDataArray::getString(context, "vpminsw", true);
	GlobalVariable* cv1053 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1053_string, ".str1037", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1053->setUnnamedAddr(true);
	globals[1053] = cv1053;
	
	Constant* var1054_string = ConstantDataArray::getString(context, "vpminub", true);
	GlobalVariable* cv1054 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1054_string, ".str1038", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1054->setUnnamedAddr(true);
	globals[1054] = cv1054;
	
	Constant* var1055_string = ConstantDataArray::getString(context, "vpminud", true);
	GlobalVariable* cv1055 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1055_string, ".str1039", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1055->setUnnamedAddr(true);
	globals[1055] = cv1055;
	
	Constant* var1056_string = ConstantDataArray::getString(context, "vpminuq", true);
	GlobalVariable* cv1056 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1056_string, ".str1040", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1056->setUnnamedAddr(true);
	globals[1056] = cv1056;
	
	Constant* var1057_string = ConstantDataArray::getString(context, "vpminuw", true);
	GlobalVariable* cv1057 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1057_string, ".str1041", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1057->setUnnamedAddr(true);
	globals[1057] = cv1057;
	
	Constant* var1058_string = ConstantDataArray::getString(context, "vpmovdb", true);
	GlobalVariable* cv1058 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1058_string, ".str1042", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1058->setUnnamedAddr(true);
	globals[1058] = cv1058;
	
	Constant* var1059_string = ConstantDataArray::getString(context, "vpmovdw", true);
	GlobalVariable* cv1059 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1059_string, ".str1043", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1059->setUnnamedAddr(true);
	globals[1059] = cv1059;
	
	Constant* var1060_string = ConstantDataArray::getString(context, "vpmovmskb", true);
	GlobalVariable* cv1060 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1060_string, ".str1044", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1060->setUnnamedAddr(true);
	globals[1060] = cv1060;
	
	Constant* var1061_string = ConstantDataArray::getString(context, "vpmovqb", true);
	GlobalVariable* cv1061 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1061_string, ".str1045", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1061->setUnnamedAddr(true);
	globals[1061] = cv1061;
	
	Constant* var1062_string = ConstantDataArray::getString(context, "vpmovqd", true);
	GlobalVariable* cv1062 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1062_string, ".str1046", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1062->setUnnamedAddr(true);
	globals[1062] = cv1062;
	
	Constant* var1063_string = ConstantDataArray::getString(context, "vpmovqw", true);
	GlobalVariable* cv1063 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1063_string, ".str1047", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1063->setUnnamedAddr(true);
	globals[1063] = cv1063;
	
	Constant* var1064_string = ConstantDataArray::getString(context, "vpmovsdb", true);
	GlobalVariable* cv1064 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1064_string, ".str1048", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1064->setUnnamedAddr(true);
	globals[1064] = cv1064;
	
	Constant* var1065_string = ConstantDataArray::getString(context, "vpmovsdw", true);
	GlobalVariable* cv1065 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1065_string, ".str1049", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1065->setUnnamedAddr(true);
	globals[1065] = cv1065;
	
	Constant* var1066_string = ConstantDataArray::getString(context, "vpmovsqb", true);
	GlobalVariable* cv1066 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1066_string, ".str1050", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1066->setUnnamedAddr(true);
	globals[1066] = cv1066;
	
	Constant* var1067_string = ConstantDataArray::getString(context, "vpmovsqd", true);
	GlobalVariable* cv1067 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1067_string, ".str1051", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1067->setUnnamedAddr(true);
	globals[1067] = cv1067;
	
	Constant* var1068_string = ConstantDataArray::getString(context, "vpmovsqw", true);
	GlobalVariable* cv1068 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1068_string, ".str1052", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1068->setUnnamedAddr(true);
	globals[1068] = cv1068;
	
	Constant* var1069_string = ConstantDataArray::getString(context, "vpmovsxbd", true);
	GlobalVariable* cv1069 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1069_string, ".str1053", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1069->setUnnamedAddr(true);
	globals[1069] = cv1069;
	
	Constant* var1070_string = ConstantDataArray::getString(context, "vpmovsxbq", true);
	GlobalVariable* cv1070 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1070_string, ".str1054", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1070->setUnnamedAddr(true);
	globals[1070] = cv1070;
	
	Constant* var1071_string = ConstantDataArray::getString(context, "vpmovsxbw", true);
	GlobalVariable* cv1071 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1071_string, ".str1055", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1071->setUnnamedAddr(true);
	globals[1071] = cv1071;
	
	Constant* var1072_string = ConstantDataArray::getString(context, "vpmovsxdq", true);
	GlobalVariable* cv1072 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1072_string, ".str1056", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1072->setUnnamedAddr(true);
	globals[1072] = cv1072;
	
	Constant* var1073_string = ConstantDataArray::getString(context, "vpmovsxwd", true);
	GlobalVariable* cv1073 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1073_string, ".str1057", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1073->setUnnamedAddr(true);
	globals[1073] = cv1073;
	
	Constant* var1074_string = ConstantDataArray::getString(context, "vpmovsxwq", true);
	GlobalVariable* cv1074 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1074_string, ".str1058", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1074->setUnnamedAddr(true);
	globals[1074] = cv1074;
	
	Constant* var1075_string = ConstantDataArray::getString(context, "vpmovusdb", true);
	GlobalVariable* cv1075 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1075_string, ".str1059", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1075->setUnnamedAddr(true);
	globals[1075] = cv1075;
	
	Constant* var1076_string = ConstantDataArray::getString(context, "vpmovusdw", true);
	GlobalVariable* cv1076 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1076_string, ".str1060", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1076->setUnnamedAddr(true);
	globals[1076] = cv1076;
	
	Constant* var1077_string = ConstantDataArray::getString(context, "vpmovusqb", true);
	GlobalVariable* cv1077 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1077_string, ".str1061", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1077->setUnnamedAddr(true);
	globals[1077] = cv1077;
	
	Constant* var1078_string = ConstantDataArray::getString(context, "vpmovusqd", true);
	GlobalVariable* cv1078 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1078_string, ".str1062", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1078->setUnnamedAddr(true);
	globals[1078] = cv1078;
	
	Constant* var1079_string = ConstantDataArray::getString(context, "vpmovusqw", true);
	GlobalVariable* cv1079 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1079_string, ".str1063", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1079->setUnnamedAddr(true);
	globals[1079] = cv1079;
	
	Constant* var1080_string = ConstantDataArray::getString(context, "vpmovzxbd", true);
	GlobalVariable* cv1080 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1080_string, ".str1064", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1080->setUnnamedAddr(true);
	globals[1080] = cv1080;
	
	Constant* var1081_string = ConstantDataArray::getString(context, "vpmovzxbq", true);
	GlobalVariable* cv1081 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1081_string, ".str1065", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1081->setUnnamedAddr(true);
	globals[1081] = cv1081;
	
	Constant* var1082_string = ConstantDataArray::getString(context, "vpmovzxbw", true);
	GlobalVariable* cv1082 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1082_string, ".str1066", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1082->setUnnamedAddr(true);
	globals[1082] = cv1082;
	
	Constant* var1083_string = ConstantDataArray::getString(context, "vpmovzxdq", true);
	GlobalVariable* cv1083 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1083_string, ".str1067", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1083->setUnnamedAddr(true);
	globals[1083] = cv1083;
	
	Constant* var1084_string = ConstantDataArray::getString(context, "vpmovzxwd", true);
	GlobalVariable* cv1084 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1084_string, ".str1068", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1084->setUnnamedAddr(true);
	globals[1084] = cv1084;
	
	Constant* var1085_string = ConstantDataArray::getString(context, "vpmovzxwq", true);
	GlobalVariable* cv1085 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1085_string, ".str1069", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1085->setUnnamedAddr(true);
	globals[1085] = cv1085;
	
	Constant* var1086_string = ConstantDataArray::getString(context, "vpmuldq", true);
	GlobalVariable* cv1086 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1086_string, ".str1070", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1086->setUnnamedAddr(true);
	globals[1086] = cv1086;
	
	Constant* var1087_string = ConstantDataArray::getString(context, "vpmulhrsw", true);
	GlobalVariable* cv1087 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1087_string, ".str1071", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1087->setUnnamedAddr(true);
	globals[1087] = cv1087;
	
	Constant* var1088_string = ConstantDataArray::getString(context, "vpmulhuw", true);
	GlobalVariable* cv1088 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1088_string, ".str1072", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1088->setUnnamedAddr(true);
	globals[1088] = cv1088;
	
	Constant* var1089_string = ConstantDataArray::getString(context, "vpmulhw", true);
	GlobalVariable* cv1089 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1089_string, ".str1073", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1089->setUnnamedAddr(true);
	globals[1089] = cv1089;
	
	Constant* var1090_string = ConstantDataArray::getString(context, "vpmulld", true);
	GlobalVariable* cv1090 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1090_string, ".str1074", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1090->setUnnamedAddr(true);
	globals[1090] = cv1090;
	
	Constant* var1091_string = ConstantDataArray::getString(context, "vpmullw", true);
	GlobalVariable* cv1091 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1091_string, ".str1075", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1091->setUnnamedAddr(true);
	globals[1091] = cv1091;
	
	Constant* var1092_string = ConstantDataArray::getString(context, "vpmuludq", true);
	GlobalVariable* cv1092 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1092_string, ".str1076", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1092->setUnnamedAddr(true);
	globals[1092] = cv1092;
	
	Constant* var1093_string = ConstantDataArray::getString(context, "vpor", true);
	GlobalVariable* cv1093 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var1093_string, ".str1077", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1093->setUnnamedAddr(true);
	globals[1093] = cv1093;
	
	Constant* var1094_string = ConstantDataArray::getString(context, "vpord", true);
	GlobalVariable* cv1094 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1094_string, ".str1078", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1094->setUnnamedAddr(true);
	globals[1094] = cv1094;
	
	Constant* var1095_string = ConstantDataArray::getString(context, "vporq", true);
	GlobalVariable* cv1095 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1095_string, ".str1079", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1095->setUnnamedAddr(true);
	globals[1095] = cv1095;
	
	Constant* var1096_string = ConstantDataArray::getString(context, "vpperm", true);
	GlobalVariable* cv1096 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1096_string, ".str1080", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1096->setUnnamedAddr(true);
	globals[1096] = cv1096;
	
	Constant* var1097_string = ConstantDataArray::getString(context, "vprotb", true);
	GlobalVariable* cv1097 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1097_string, ".str1081", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1097->setUnnamedAddr(true);
	globals[1097] = cv1097;
	
	Constant* var1098_string = ConstantDataArray::getString(context, "vprotd", true);
	GlobalVariable* cv1098 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1098_string, ".str1082", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1098->setUnnamedAddr(true);
	globals[1098] = cv1098;
	
	Constant* var1099_string = ConstantDataArray::getString(context, "vprotq", true);
	GlobalVariable* cv1099 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1099_string, ".str1083", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1099->setUnnamedAddr(true);
	globals[1099] = cv1099;
	
	Constant* var1100_string = ConstantDataArray::getString(context, "vprotw", true);
	GlobalVariable* cv1100 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1100_string, ".str1084", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1100->setUnnamedAddr(true);
	globals[1100] = cv1100;
	
	Constant* var1101_string = ConstantDataArray::getString(context, "vpsadbw", true);
	GlobalVariable* cv1101 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1101_string, ".str1085", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1101->setUnnamedAddr(true);
	globals[1101] = cv1101;
	
	Constant* var1102_string = ConstantDataArray::getString(context, "vpscatterdd", true);
	GlobalVariable* cv1102 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1102_string, ".str1086", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1102->setUnnamedAddr(true);
	globals[1102] = cv1102;
	
	Constant* var1103_string = ConstantDataArray::getString(context, "vpscatterdq", true);
	GlobalVariable* cv1103 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1103_string, ".str1087", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1103->setUnnamedAddr(true);
	globals[1103] = cv1103;
	
	Constant* var1104_string = ConstantDataArray::getString(context, "vpscatterqd", true);
	GlobalVariable* cv1104 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1104_string, ".str1088", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1104->setUnnamedAddr(true);
	globals[1104] = cv1104;
	
	Constant* var1105_string = ConstantDataArray::getString(context, "vpscatterqq", true);
	GlobalVariable* cv1105 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1105_string, ".str1089", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1105->setUnnamedAddr(true);
	globals[1105] = cv1105;
	
	Constant* var1106_string = ConstantDataArray::getString(context, "vpshab", true);
	GlobalVariable* cv1106 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1106_string, ".str1090", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1106->setUnnamedAddr(true);
	globals[1106] = cv1106;
	
	Constant* var1107_string = ConstantDataArray::getString(context, "vpshad", true);
	GlobalVariable* cv1107 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1107_string, ".str1091", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1107->setUnnamedAddr(true);
	globals[1107] = cv1107;
	
	Constant* var1108_string = ConstantDataArray::getString(context, "vpshaq", true);
	GlobalVariable* cv1108 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1108_string, ".str1092", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1108->setUnnamedAddr(true);
	globals[1108] = cv1108;
	
	Constant* var1109_string = ConstantDataArray::getString(context, "vpshaw", true);
	GlobalVariable* cv1109 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1109_string, ".str1093", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1109->setUnnamedAddr(true);
	globals[1109] = cv1109;
	
	Constant* var1110_string = ConstantDataArray::getString(context, "vpshlb", true);
	GlobalVariable* cv1110 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1110_string, ".str1094", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1110->setUnnamedAddr(true);
	globals[1110] = cv1110;
	
	Constant* var1111_string = ConstantDataArray::getString(context, "vpshld", true);
	GlobalVariable* cv1111 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1111_string, ".str1095", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1111->setUnnamedAddr(true);
	globals[1111] = cv1111;
	
	Constant* var1112_string = ConstantDataArray::getString(context, "vpshlq", true);
	GlobalVariable* cv1112 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1112_string, ".str1096", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1112->setUnnamedAddr(true);
	globals[1112] = cv1112;
	
	Constant* var1113_string = ConstantDataArray::getString(context, "vpshlw", true);
	GlobalVariable* cv1113 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1113_string, ".str1097", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1113->setUnnamedAddr(true);
	globals[1113] = cv1113;
	
	Constant* var1114_string = ConstantDataArray::getString(context, "vpshufb", true);
	GlobalVariable* cv1114 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1114_string, ".str1098", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1114->setUnnamedAddr(true);
	globals[1114] = cv1114;
	
	Constant* var1115_string = ConstantDataArray::getString(context, "vpshufd", true);
	GlobalVariable* cv1115 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1115_string, ".str1099", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1115->setUnnamedAddr(true);
	globals[1115] = cv1115;
	
	Constant* var1116_string = ConstantDataArray::getString(context, "vpshufhw", true);
	GlobalVariable* cv1116 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1116_string, ".str1100", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1116->setUnnamedAddr(true);
	globals[1116] = cv1116;
	
	Constant* var1117_string = ConstantDataArray::getString(context, "vpshuflw", true);
	GlobalVariable* cv1117 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1117_string, ".str1101", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1117->setUnnamedAddr(true);
	globals[1117] = cv1117;
	
	Constant* var1118_string = ConstantDataArray::getString(context, "vpsignb", true);
	GlobalVariable* cv1118 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1118_string, ".str1102", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1118->setUnnamedAddr(true);
	globals[1118] = cv1118;
	
	Constant* var1119_string = ConstantDataArray::getString(context, "vpsignd", true);
	GlobalVariable* cv1119 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1119_string, ".str1103", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1119->setUnnamedAddr(true);
	globals[1119] = cv1119;
	
	Constant* var1120_string = ConstantDataArray::getString(context, "vpsignw", true);
	GlobalVariable* cv1120 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1120_string, ".str1104", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1120->setUnnamedAddr(true);
	globals[1120] = cv1120;
	
	Constant* var1121_string = ConstantDataArray::getString(context, "vpslld", true);
	GlobalVariable* cv1121 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1121_string, ".str1105", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1121->setUnnamedAddr(true);
	globals[1121] = cv1121;
	
	Constant* var1122_string = ConstantDataArray::getString(context, "vpslldq", true);
	GlobalVariable* cv1122 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1122_string, ".str1106", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1122->setUnnamedAddr(true);
	globals[1122] = cv1122;
	
	Constant* var1123_string = ConstantDataArray::getString(context, "vpsllq", true);
	GlobalVariable* cv1123 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1123_string, ".str1107", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1123->setUnnamedAddr(true);
	globals[1123] = cv1123;
	
	Constant* var1124_string = ConstantDataArray::getString(context, "vpsllvd", true);
	GlobalVariable* cv1124 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1124_string, ".str1108", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1124->setUnnamedAddr(true);
	globals[1124] = cv1124;
	
	Constant* var1125_string = ConstantDataArray::getString(context, "vpsllvq", true);
	GlobalVariable* cv1125 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1125_string, ".str1109", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1125->setUnnamedAddr(true);
	globals[1125] = cv1125;
	
	Constant* var1126_string = ConstantDataArray::getString(context, "vpsllw", true);
	GlobalVariable* cv1126 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1126_string, ".str1110", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1126->setUnnamedAddr(true);
	globals[1126] = cv1126;
	
	Constant* var1127_string = ConstantDataArray::getString(context, "vpsrad", true);
	GlobalVariable* cv1127 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1127_string, ".str1111", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1127->setUnnamedAddr(true);
	globals[1127] = cv1127;
	
	Constant* var1128_string = ConstantDataArray::getString(context, "vpsraq", true);
	GlobalVariable* cv1128 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1128_string, ".str1112", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1128->setUnnamedAddr(true);
	globals[1128] = cv1128;
	
	Constant* var1129_string = ConstantDataArray::getString(context, "vpsravd", true);
	GlobalVariable* cv1129 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1129_string, ".str1113", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1129->setUnnamedAddr(true);
	globals[1129] = cv1129;
	
	Constant* var1130_string = ConstantDataArray::getString(context, "vpsravq", true);
	GlobalVariable* cv1130 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1130_string, ".str1114", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1130->setUnnamedAddr(true);
	globals[1130] = cv1130;
	
	Constant* var1131_string = ConstantDataArray::getString(context, "vpsraw", true);
	GlobalVariable* cv1131 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1131_string, ".str1115", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1131->setUnnamedAddr(true);
	globals[1131] = cv1131;
	
	Constant* var1132_string = ConstantDataArray::getString(context, "vpsrld", true);
	GlobalVariable* cv1132 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1132_string, ".str1116", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1132->setUnnamedAddr(true);
	globals[1132] = cv1132;
	
	Constant* var1133_string = ConstantDataArray::getString(context, "vpsrldq", true);
	GlobalVariable* cv1133 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1133_string, ".str1117", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1133->setUnnamedAddr(true);
	globals[1133] = cv1133;
	
	Constant* var1134_string = ConstantDataArray::getString(context, "vpsrlq", true);
	GlobalVariable* cv1134 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1134_string, ".str1118", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1134->setUnnamedAddr(true);
	globals[1134] = cv1134;
	
	Constant* var1135_string = ConstantDataArray::getString(context, "vpsrlvd", true);
	GlobalVariable* cv1135 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1135_string, ".str1119", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1135->setUnnamedAddr(true);
	globals[1135] = cv1135;
	
	Constant* var1136_string = ConstantDataArray::getString(context, "vpsrlvq", true);
	GlobalVariable* cv1136 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1136_string, ".str1120", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1136->setUnnamedAddr(true);
	globals[1136] = cv1136;
	
	Constant* var1137_string = ConstantDataArray::getString(context, "vpsrlw", true);
	GlobalVariable* cv1137 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1137_string, ".str1121", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1137->setUnnamedAddr(true);
	globals[1137] = cv1137;
	
	Constant* var1138_string = ConstantDataArray::getString(context, "vpsubb", true);
	GlobalVariable* cv1138 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1138_string, ".str1122", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1138->setUnnamedAddr(true);
	globals[1138] = cv1138;
	
	Constant* var1139_string = ConstantDataArray::getString(context, "vpsubd", true);
	GlobalVariable* cv1139 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1139_string, ".str1123", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1139->setUnnamedAddr(true);
	globals[1139] = cv1139;
	
	Constant* var1140_string = ConstantDataArray::getString(context, "vpsubq", true);
	GlobalVariable* cv1140 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1140_string, ".str1124", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1140->setUnnamedAddr(true);
	globals[1140] = cv1140;
	
	Constant* var1141_string = ConstantDataArray::getString(context, "vpsubsb", true);
	GlobalVariable* cv1141 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1141_string, ".str1125", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1141->setUnnamedAddr(true);
	globals[1141] = cv1141;
	
	Constant* var1142_string = ConstantDataArray::getString(context, "vpsubsw", true);
	GlobalVariable* cv1142 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1142_string, ".str1126", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1142->setUnnamedAddr(true);
	globals[1142] = cv1142;
	
	Constant* var1143_string = ConstantDataArray::getString(context, "vpsubusb", true);
	GlobalVariable* cv1143 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1143_string, ".str1127", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1143->setUnnamedAddr(true);
	globals[1143] = cv1143;
	
	Constant* var1144_string = ConstantDataArray::getString(context, "vpsubusw", true);
	GlobalVariable* cv1144 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1144_string, ".str1128", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1144->setUnnamedAddr(true);
	globals[1144] = cv1144;
	
	Constant* var1145_string = ConstantDataArray::getString(context, "vpsubw", true);
	GlobalVariable* cv1145 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1145_string, ".str1129", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1145->setUnnamedAddr(true);
	globals[1145] = cv1145;
	
	Constant* var1146_string = ConstantDataArray::getString(context, "vptest", true);
	GlobalVariable* cv1146 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1146_string, ".str1130", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1146->setUnnamedAddr(true);
	globals[1146] = cv1146;
	
	Constant* var1147_string = ConstantDataArray::getString(context, "vptestmd", true);
	GlobalVariable* cv1147 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1147_string, ".str1131", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1147->setUnnamedAddr(true);
	globals[1147] = cv1147;
	
	Constant* var1148_string = ConstantDataArray::getString(context, "vptestmq", true);
	GlobalVariable* cv1148 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1148_string, ".str1132", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1148->setUnnamedAddr(true);
	globals[1148] = cv1148;
	
	Constant* var1149_string = ConstantDataArray::getString(context, "vptestnmd", true);
	GlobalVariable* cv1149 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1149_string, ".str1133", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1149->setUnnamedAddr(true);
	globals[1149] = cv1149;
	
	Constant* var1150_string = ConstantDataArray::getString(context, "vptestnmq", true);
	GlobalVariable* cv1150 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1150_string, ".str1134", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1150->setUnnamedAddr(true);
	globals[1150] = cv1150;
	
	Constant* var1151_string = ConstantDataArray::getString(context, "vpunpckhbw", true);
	GlobalVariable* cv1151 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1151_string, ".str1135", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1151->setUnnamedAddr(true);
	globals[1151] = cv1151;
	
	Constant* var1152_string = ConstantDataArray::getString(context, "vpunpckhdq", true);
	GlobalVariable* cv1152 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1152_string, ".str1136", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1152->setUnnamedAddr(true);
	globals[1152] = cv1152;
	
	Constant* var1153_string = ConstantDataArray::getString(context, "vpunpckhqdq", true);
	GlobalVariable* cv1153 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1153_string, ".str1137", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1153->setUnnamedAddr(true);
	globals[1153] = cv1153;
	
	Constant* var1154_string = ConstantDataArray::getString(context, "vpunpckhwd", true);
	GlobalVariable* cv1154 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1154_string, ".str1138", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1154->setUnnamedAddr(true);
	globals[1154] = cv1154;
	
	Constant* var1155_string = ConstantDataArray::getString(context, "vpunpcklbw", true);
	GlobalVariable* cv1155 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1155_string, ".str1139", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1155->setUnnamedAddr(true);
	globals[1155] = cv1155;
	
	Constant* var1156_string = ConstantDataArray::getString(context, "vpunpckldq", true);
	GlobalVariable* cv1156 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1156_string, ".str1140", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1156->setUnnamedAddr(true);
	globals[1156] = cv1156;
	
	Constant* var1157_string = ConstantDataArray::getString(context, "vpunpcklqdq", true);
	GlobalVariable* cv1157 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1157_string, ".str1141", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1157->setUnnamedAddr(true);
	globals[1157] = cv1157;
	
	Constant* var1158_string = ConstantDataArray::getString(context, "vpunpcklwd", true);
	GlobalVariable* cv1158 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1158_string, ".str1142", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1158->setUnnamedAddr(true);
	globals[1158] = cv1158;
	
	Constant* var1159_string = ConstantDataArray::getString(context, "vpxor", true);
	GlobalVariable* cv1159 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1159_string, ".str1143", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1159->setUnnamedAddr(true);
	globals[1159] = cv1159;
	
	Constant* var1160_string = ConstantDataArray::getString(context, "vpxord", true);
	GlobalVariable* cv1160 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1160_string, ".str1144", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1160->setUnnamedAddr(true);
	globals[1160] = cv1160;
	
	Constant* var1161_string = ConstantDataArray::getString(context, "vpxorq", true);
	GlobalVariable* cv1161 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1161_string, ".str1145", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1161->setUnnamedAddr(true);
	globals[1161] = cv1161;
	
	Constant* var1162_string = ConstantDataArray::getString(context, "vrcp14pd", true);
	GlobalVariable* cv1162 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1162_string, ".str1146", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1162->setUnnamedAddr(true);
	globals[1162] = cv1162;
	
	Constant* var1163_string = ConstantDataArray::getString(context, "vrcp14ps", true);
	GlobalVariable* cv1163 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1163_string, ".str1147", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1163->setUnnamedAddr(true);
	globals[1163] = cv1163;
	
	Constant* var1164_string = ConstantDataArray::getString(context, "vrcp14sd", true);
	GlobalVariable* cv1164 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1164_string, ".str1148", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1164->setUnnamedAddr(true);
	globals[1164] = cv1164;
	
	Constant* var1165_string = ConstantDataArray::getString(context, "vrcp14ss", true);
	GlobalVariable* cv1165 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1165_string, ".str1149", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1165->setUnnamedAddr(true);
	globals[1165] = cv1165;
	
	Constant* var1166_string = ConstantDataArray::getString(context, "vrcp28pd", true);
	GlobalVariable* cv1166 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1166_string, ".str1150", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1166->setUnnamedAddr(true);
	globals[1166] = cv1166;
	
	Constant* var1167_string = ConstantDataArray::getString(context, "vrcp28ps", true);
	GlobalVariable* cv1167 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1167_string, ".str1151", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1167->setUnnamedAddr(true);
	globals[1167] = cv1167;
	
	Constant* var1168_string = ConstantDataArray::getString(context, "vrcp28sd", true);
	GlobalVariable* cv1168 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1168_string, ".str1152", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1168->setUnnamedAddr(true);
	globals[1168] = cv1168;
	
	Constant* var1169_string = ConstantDataArray::getString(context, "vrcp28ss", true);
	GlobalVariable* cv1169 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1169_string, ".str1153", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1169->setUnnamedAddr(true);
	globals[1169] = cv1169;
	
	Constant* var1170_string = ConstantDataArray::getString(context, "vrcpps", true);
	GlobalVariable* cv1170 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1170_string, ".str1154", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1170->setUnnamedAddr(true);
	globals[1170] = cv1170;
	
	Constant* var1171_string = ConstantDataArray::getString(context, "vrcpss", true);
	GlobalVariable* cv1171 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1171_string, ".str1155", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1171->setUnnamedAddr(true);
	globals[1171] = cv1171;
	
	Constant* var1172_string = ConstantDataArray::getString(context, "vrndscalepd", true);
	GlobalVariable* cv1172 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1172_string, ".str1156", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1172->setUnnamedAddr(true);
	globals[1172] = cv1172;
	
	Constant* var1173_string = ConstantDataArray::getString(context, "vrndscaleps", true);
	GlobalVariable* cv1173 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1173_string, ".str1157", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1173->setUnnamedAddr(true);
	globals[1173] = cv1173;
	
	Constant* var1174_string = ConstantDataArray::getString(context, "vrndscalesd", true);
	GlobalVariable* cv1174 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1174_string, ".str1158", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1174->setUnnamedAddr(true);
	globals[1174] = cv1174;
	
	Constant* var1175_string = ConstantDataArray::getString(context, "vrndscaless", true);
	GlobalVariable* cv1175 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1175_string, ".str1159", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1175->setUnnamedAddr(true);
	globals[1175] = cv1175;
	
	Constant* var1176_string = ConstantDataArray::getString(context, "vroundpd", true);
	GlobalVariable* cv1176 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1176_string, ".str1160", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1176->setUnnamedAddr(true);
	globals[1176] = cv1176;
	
	Constant* var1177_string = ConstantDataArray::getString(context, "vroundps", true);
	GlobalVariable* cv1177 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1177_string, ".str1161", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1177->setUnnamedAddr(true);
	globals[1177] = cv1177;
	
	Constant* var1178_string = ConstantDataArray::getString(context, "vroundsd", true);
	GlobalVariable* cv1178 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1178_string, ".str1162", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1178->setUnnamedAddr(true);
	globals[1178] = cv1178;
	
	Constant* var1179_string = ConstantDataArray::getString(context, "vroundss", true);
	GlobalVariable* cv1179 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1179_string, ".str1163", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1179->setUnnamedAddr(true);
	globals[1179] = cv1179;
	
	Constant* var1180_string = ConstantDataArray::getString(context, "vrsqrt14pd", true);
	GlobalVariable* cv1180 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1180_string, ".str1164", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1180->setUnnamedAddr(true);
	globals[1180] = cv1180;
	
	Constant* var1181_string = ConstantDataArray::getString(context, "vrsqrt14ps", true);
	GlobalVariable* cv1181 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1181_string, ".str1165", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1181->setUnnamedAddr(true);
	globals[1181] = cv1181;
	
	Constant* var1182_string = ConstantDataArray::getString(context, "vrsqrt14sd", true);
	GlobalVariable* cv1182 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1182_string, ".str1166", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1182->setUnnamedAddr(true);
	globals[1182] = cv1182;
	
	Constant* var1183_string = ConstantDataArray::getString(context, "vrsqrt14ss", true);
	GlobalVariable* cv1183 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1183_string, ".str1167", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1183->setUnnamedAddr(true);
	globals[1183] = cv1183;
	
	Constant* var1184_string = ConstantDataArray::getString(context, "vrsqrt28pd", true);
	GlobalVariable* cv1184 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1184_string, ".str1168", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1184->setUnnamedAddr(true);
	globals[1184] = cv1184;
	
	Constant* var1185_string = ConstantDataArray::getString(context, "vrsqrt28ps", true);
	GlobalVariable* cv1185 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1185_string, ".str1169", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1185->setUnnamedAddr(true);
	globals[1185] = cv1185;
	
	Constant* var1186_string = ConstantDataArray::getString(context, "vrsqrt28sd", true);
	GlobalVariable* cv1186 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1186_string, ".str1170", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1186->setUnnamedAddr(true);
	globals[1186] = cv1186;
	
	Constant* var1187_string = ConstantDataArray::getString(context, "vrsqrt28ss", true);
	GlobalVariable* cv1187 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1187_string, ".str1171", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1187->setUnnamedAddr(true);
	globals[1187] = cv1187;
	
	Constant* var1188_string = ConstantDataArray::getString(context, "vrsqrtps", true);
	GlobalVariable* cv1188 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1188_string, ".str1172", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1188->setUnnamedAddr(true);
	globals[1188] = cv1188;
	
	Constant* var1189_string = ConstantDataArray::getString(context, "vrsqrtss", true);
	GlobalVariable* cv1189 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1189_string, ".str1173", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1189->setUnnamedAddr(true);
	globals[1189] = cv1189;
	
	Constant* var1190_string = ConstantDataArray::getString(context, "vscatterdpd", true);
	GlobalVariable* cv1190 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1190_string, ".str1174", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1190->setUnnamedAddr(true);
	globals[1190] = cv1190;
	
	Constant* var1191_string = ConstantDataArray::getString(context, "vscatterdps", true);
	GlobalVariable* cv1191 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1191_string, ".str1175", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1191->setUnnamedAddr(true);
	globals[1191] = cv1191;
	
	Constant* var1192_string = ConstantDataArray::getString(context, "vscatterpf0dpd", true);
	GlobalVariable* cv1192 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var1192_string, ".str1176", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1192->setUnnamedAddr(true);
	globals[1192] = cv1192;
	
	Constant* var1193_string = ConstantDataArray::getString(context, "vscatterpf0dps", true);
	GlobalVariable* cv1193 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var1193_string, ".str1177", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1193->setUnnamedAddr(true);
	globals[1193] = cv1193;
	
	Constant* var1194_string = ConstantDataArray::getString(context, "vscatterpf0qpd", true);
	GlobalVariable* cv1194 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var1194_string, ".str1178", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1194->setUnnamedAddr(true);
	globals[1194] = cv1194;
	
	Constant* var1195_string = ConstantDataArray::getString(context, "vscatterpf0qps", true);
	GlobalVariable* cv1195 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var1195_string, ".str1179", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1195->setUnnamedAddr(true);
	globals[1195] = cv1195;
	
	Constant* var1196_string = ConstantDataArray::getString(context, "vscatterpf1dpd", true);
	GlobalVariable* cv1196 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var1196_string, ".str1180", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1196->setUnnamedAddr(true);
	globals[1196] = cv1196;
	
	Constant* var1197_string = ConstantDataArray::getString(context, "vscatterpf1dps", true);
	GlobalVariable* cv1197 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var1197_string, ".str1181", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1197->setUnnamedAddr(true);
	globals[1197] = cv1197;
	
	Constant* var1198_string = ConstantDataArray::getString(context, "vscatterpf1qpd", true);
	GlobalVariable* cv1198 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var1198_string, ".str1182", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1198->setUnnamedAddr(true);
	globals[1198] = cv1198;
	
	Constant* var1199_string = ConstantDataArray::getString(context, "vscatterpf1qps", true);
	GlobalVariable* cv1199 = new GlobalVariable(module, types[57], true, GlobalValue::PrivateLinkage, var1199_string, ".str1183", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1199->setUnnamedAddr(true);
	globals[1199] = cv1199;
	
	Constant* var1200_string = ConstantDataArray::getString(context, "vscatterqpd", true);
	GlobalVariable* cv1200 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1200_string, ".str1184", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1200->setUnnamedAddr(true);
	globals[1200] = cv1200;
	
	Constant* var1201_string = ConstantDataArray::getString(context, "vscatterqps", true);
	GlobalVariable* cv1201 = new GlobalVariable(module, types[54], true, GlobalValue::PrivateLinkage, var1201_string, ".str1185", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1201->setUnnamedAddr(true);
	globals[1201] = cv1201;
	
	Constant* var1202_string = ConstantDataArray::getString(context, "vshufpd", true);
	GlobalVariable* cv1202 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1202_string, ".str1186", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1202->setUnnamedAddr(true);
	globals[1202] = cv1202;
	
	Constant* var1203_string = ConstantDataArray::getString(context, "vshufps", true);
	GlobalVariable* cv1203 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1203_string, ".str1187", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1203->setUnnamedAddr(true);
	globals[1203] = cv1203;
	
	Constant* var1204_string = ConstantDataArray::getString(context, "vsqrtpd", true);
	GlobalVariable* cv1204 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1204_string, ".str1188", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1204->setUnnamedAddr(true);
	globals[1204] = cv1204;
	
	Constant* var1205_string = ConstantDataArray::getString(context, "vsqrtps", true);
	GlobalVariable* cv1205 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1205_string, ".str1189", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1205->setUnnamedAddr(true);
	globals[1205] = cv1205;
	
	Constant* var1206_string = ConstantDataArray::getString(context, "vsqrtsd", true);
	GlobalVariable* cv1206 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1206_string, ".str1190", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1206->setUnnamedAddr(true);
	globals[1206] = cv1206;
	
	Constant* var1207_string = ConstantDataArray::getString(context, "vsqrtss", true);
	GlobalVariable* cv1207 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1207_string, ".str1191", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1207->setUnnamedAddr(true);
	globals[1207] = cv1207;
	
	Constant* var1208_string = ConstantDataArray::getString(context, "vstmxcsr", true);
	GlobalVariable* cv1208 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1208_string, ".str1192", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1208->setUnnamedAddr(true);
	globals[1208] = cv1208;
	
	Constant* var1209_string = ConstantDataArray::getString(context, "vsubpd", true);
	GlobalVariable* cv1209 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1209_string, ".str1193", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1209->setUnnamedAddr(true);
	globals[1209] = cv1209;
	
	Constant* var1210_string = ConstantDataArray::getString(context, "vsubps", true);
	GlobalVariable* cv1210 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1210_string, ".str1194", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1210->setUnnamedAddr(true);
	globals[1210] = cv1210;
	
	Constant* var1211_string = ConstantDataArray::getString(context, "vsubsd", true);
	GlobalVariable* cv1211 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1211_string, ".str1195", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1211->setUnnamedAddr(true);
	globals[1211] = cv1211;
	
	Constant* var1212_string = ConstantDataArray::getString(context, "vsubss", true);
	GlobalVariable* cv1212 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1212_string, ".str1196", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1212->setUnnamedAddr(true);
	globals[1212] = cv1212;
	
	Constant* var1213_string = ConstantDataArray::getString(context, "vtestpd", true);
	GlobalVariable* cv1213 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1213_string, ".str1197", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1213->setUnnamedAddr(true);
	globals[1213] = cv1213;
	
	Constant* var1214_string = ConstantDataArray::getString(context, "vtestps", true);
	GlobalVariable* cv1214 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1214_string, ".str1198", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1214->setUnnamedAddr(true);
	globals[1214] = cv1214;
	
	Constant* var1215_string = ConstantDataArray::getString(context, "vucomisd", true);
	GlobalVariable* cv1215 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1215_string, ".str1199", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1215->setUnnamedAddr(true);
	globals[1215] = cv1215;
	
	Constant* var1216_string = ConstantDataArray::getString(context, "vucomiss", true);
	GlobalVariable* cv1216 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1216_string, ".str1200", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1216->setUnnamedAddr(true);
	globals[1216] = cv1216;
	
	Constant* var1217_string = ConstantDataArray::getString(context, "vunpckhpd", true);
	GlobalVariable* cv1217 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1217_string, ".str1201", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1217->setUnnamedAddr(true);
	globals[1217] = cv1217;
	
	Constant* var1218_string = ConstantDataArray::getString(context, "vunpckhps", true);
	GlobalVariable* cv1218 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1218_string, ".str1202", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1218->setUnnamedAddr(true);
	globals[1218] = cv1218;
	
	Constant* var1219_string = ConstantDataArray::getString(context, "vunpcklpd", true);
	GlobalVariable* cv1219 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1219_string, ".str1203", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1219->setUnnamedAddr(true);
	globals[1219] = cv1219;
	
	Constant* var1220_string = ConstantDataArray::getString(context, "vunpcklps", true);
	GlobalVariable* cv1220 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1220_string, ".str1204", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1220->setUnnamedAddr(true);
	globals[1220] = cv1220;
	
	Constant* var1221_string = ConstantDataArray::getString(context, "vxorpd", true);
	GlobalVariable* cv1221 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1221_string, ".str1205", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1221->setUnnamedAddr(true);
	globals[1221] = cv1221;
	
	Constant* var1222_string = ConstantDataArray::getString(context, "vxorps", true);
	GlobalVariable* cv1222 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1222_string, ".str1206", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1222->setUnnamedAddr(true);
	globals[1222] = cv1222;
	
	Constant* var1223_string = ConstantDataArray::getString(context, "vzeroall", true);
	GlobalVariable* cv1223 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1223_string, ".str1207", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1223->setUnnamedAddr(true);
	globals[1223] = cv1223;
	
	Constant* var1224_string = ConstantDataArray::getString(context, "vzeroupper", true);
	GlobalVariable* cv1224 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1224_string, ".str1208", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1224->setUnnamedAddr(true);
	globals[1224] = cv1224;
	
	Constant* var1225_string = ConstantDataArray::getString(context, "wait", true);
	GlobalVariable* cv1225 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var1225_string, ".str1209", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1225->setUnnamedAddr(true);
	globals[1225] = cv1225;
	
	Constant* var1226_string = ConstantDataArray::getString(context, "wbinvd", true);
	GlobalVariable* cv1226 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1226_string, ".str1210", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1226->setUnnamedAddr(true);
	globals[1226] = cv1226;
	
	Constant* var1227_string = ConstantDataArray::getString(context, "wrfsbase", true);
	GlobalVariable* cv1227 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1227_string, ".str1211", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1227->setUnnamedAddr(true);
	globals[1227] = cv1227;
	
	Constant* var1228_string = ConstantDataArray::getString(context, "wrgsbase", true);
	GlobalVariable* cv1228 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1228_string, ".str1212", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1228->setUnnamedAddr(true);
	globals[1228] = cv1228;
	
	Constant* var1229_string = ConstantDataArray::getString(context, "wrmsr", true);
	GlobalVariable* cv1229 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1229_string, ".str1213", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1229->setUnnamedAddr(true);
	globals[1229] = cv1229;
	
	Constant* var1230_string = ConstantDataArray::getString(context, "xabort", true);
	GlobalVariable* cv1230 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1230_string, ".str1214", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1230->setUnnamedAddr(true);
	globals[1230] = cv1230;
	
	Constant* var1231_string = ConstantDataArray::getString(context, "xacquire", true);
	GlobalVariable* cv1231 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1231_string, ".str1215", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1231->setUnnamedAddr(true);
	globals[1231] = cv1231;
	
	Constant* var1232_string = ConstantDataArray::getString(context, "xadd", true);
	GlobalVariable* cv1232 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var1232_string, ".str1216", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1232->setUnnamedAddr(true);
	globals[1232] = cv1232;
	
	Constant* var1233_string = ConstantDataArray::getString(context, "xbegin", true);
	GlobalVariable* cv1233 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1233_string, ".str1217", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1233->setUnnamedAddr(true);
	globals[1233] = cv1233;
	
	Constant* var1234_string = ConstantDataArray::getString(context, "xchg", true);
	GlobalVariable* cv1234 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var1234_string, ".str1218", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1234->setUnnamedAddr(true);
	globals[1234] = cv1234;
	
	Constant* var1235_string = ConstantDataArray::getString(context, "xcryptcbc", true);
	GlobalVariable* cv1235 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1235_string, ".str1219", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1235->setUnnamedAddr(true);
	globals[1235] = cv1235;
	
	Constant* var1236_string = ConstantDataArray::getString(context, "xcryptcfb", true);
	GlobalVariable* cv1236 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1236_string, ".str1220", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1236->setUnnamedAddr(true);
	globals[1236] = cv1236;
	
	Constant* var1237_string = ConstantDataArray::getString(context, "xcryptctr", true);
	GlobalVariable* cv1237 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1237_string, ".str1221", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1237->setUnnamedAddr(true);
	globals[1237] = cv1237;
	
	Constant* var1238_string = ConstantDataArray::getString(context, "xcryptecb", true);
	GlobalVariable* cv1238 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1238_string, ".str1222", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1238->setUnnamedAddr(true);
	globals[1238] = cv1238;
	
	Constant* var1239_string = ConstantDataArray::getString(context, "xcryptofb", true);
	GlobalVariable* cv1239 = new GlobalVariable(module, types[52], true, GlobalValue::PrivateLinkage, var1239_string, ".str1223", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1239->setUnnamedAddr(true);
	globals[1239] = cv1239;
	
	Constant* var1240_string = ConstantDataArray::getString(context, "xend", true);
	GlobalVariable* cv1240 = new GlobalVariable(module, types[43], true, GlobalValue::PrivateLinkage, var1240_string, ".str1224", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1240->setUnnamedAddr(true);
	globals[1240] = cv1240;
	
	Constant* var1241_string = ConstantDataArray::getString(context, "xgetbv", true);
	GlobalVariable* cv1241 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1241_string, ".str1225", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1241->setUnnamedAddr(true);
	globals[1241] = cv1241;
	
	Constant* var1242_string = ConstantDataArray::getString(context, "xlatb", true);
	GlobalVariable* cv1242 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1242_string, ".str1226", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1242->setUnnamedAddr(true);
	globals[1242] = cv1242;
	
	Constant* var1243_string = ConstantDataArray::getString(context, "xorpd", true);
	GlobalVariable* cv1243 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1243_string, ".str1227", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1243->setUnnamedAddr(true);
	globals[1243] = cv1243;
	
	Constant* var1244_string = ConstantDataArray::getString(context, "xorps", true);
	GlobalVariable* cv1244 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1244_string, ".str1228", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1244->setUnnamedAddr(true);
	globals[1244] = cv1244;
	
	Constant* var1245_string = ConstantDataArray::getString(context, "xrelease", true);
	GlobalVariable* cv1245 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1245_string, ".str1229", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1245->setUnnamedAddr(true);
	globals[1245] = cv1245;
	
	Constant* var1246_string = ConstantDataArray::getString(context, "xrstor", true);
	GlobalVariable* cv1246 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1246_string, ".str1230", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1246->setUnnamedAddr(true);
	globals[1246] = cv1246;
	
	Constant* var1247_string = ConstantDataArray::getString(context, "xrstor64", true);
	GlobalVariable* cv1247 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1247_string, ".str1231", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1247->setUnnamedAddr(true);
	globals[1247] = cv1247;
	
	Constant* var1248_string = ConstantDataArray::getString(context, "xsave", true);
	GlobalVariable* cv1248 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1248_string, ".str1232", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1248->setUnnamedAddr(true);
	globals[1248] = cv1248;
	
	Constant* var1249_string = ConstantDataArray::getString(context, "xsave64", true);
	GlobalVariable* cv1249 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1249_string, ".str1233", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1249->setUnnamedAddr(true);
	globals[1249] = cv1249;
	
	Constant* var1250_string = ConstantDataArray::getString(context, "xsaveopt", true);
	GlobalVariable* cv1250 = new GlobalVariable(module, types[45], true, GlobalValue::PrivateLinkage, var1250_string, ".str1234", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1250->setUnnamedAddr(true);
	globals[1250] = cv1250;
	
	Constant* var1251_string = ConstantDataArray::getString(context, "xsaveopt64", true);
	GlobalVariable* cv1251 = new GlobalVariable(module, types[47], true, GlobalValue::PrivateLinkage, var1251_string, ".str1235", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1251->setUnnamedAddr(true);
	globals[1251] = cv1251;
	
	Constant* var1252_string = ConstantDataArray::getString(context, "xsetbv", true);
	GlobalVariable* cv1252 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1252_string, ".str1236", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1252->setUnnamedAddr(true);
	globals[1252] = cv1252;
	
	Constant* var1253_string = ConstantDataArray::getString(context, "xsha1", true);
	GlobalVariable* cv1253 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1253_string, ".str1237", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1253->setUnnamedAddr(true);
	globals[1253] = cv1253;
	
	Constant* var1254_string = ConstantDataArray::getString(context, "xsha256", true);
	GlobalVariable* cv1254 = new GlobalVariable(module, types[49], true, GlobalValue::PrivateLinkage, var1254_string, ".str1238", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1254->setUnnamedAddr(true);
	globals[1254] = cv1254;
	
	Constant* var1255_string = ConstantDataArray::getString(context, "xstore", true);
	GlobalVariable* cv1255 = new GlobalVariable(module, types[46], true, GlobalValue::PrivateLinkage, var1255_string, ".str1239", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1255->setUnnamedAddr(true);
	globals[1255] = cv1255;
	
	Constant* var1256_string = ConstantDataArray::getString(context, "xtest", true);
	GlobalVariable* cv1256 = new GlobalVariable(module, types[44], true, GlobalValue::PrivateLinkage, var1256_string, ".str1240", nullptr, GlobalValue::NotThreadLocal, 0, false);
	cv1256->setUnnamedAddr(true);
	globals[1256] = cv1256;
	
}

void x86::start_function(llvm::FunctionType& type, const std::string& name)
{
	assert(function == nullptr && "unterminated function");
	assert(type.getReturnType()->isVoidTy() && "created functions must return void");
	function = llvm::Function::Create(&type, llvm::GlobalValue::ExternalLinkage, name, &module);
	builder.ClearInsertionPoint();
	start_block();
}

llvm::Function* x86::end_function()
{
	if (llvm::BasicBlock* block = builder.GetInsertBlock())
	{
		if (builder.GetInsertBlock()->getTerminator() == nullptr)
		{
			builder.CreateRetVoid();
		}
	}
	auto fn = function;
	function = nullptr;
	return fn;
}

llvm::BasicBlock* x86::start_block(const std::string& name)
{
	llvm::BasicBlock* newBlock = llvm::BasicBlock::Create(context, name, function);
	if (builder.GetInsertBlock() != nullptr)
	{
		builder.CreateBr(newBlock);
	}
	builder.SetInsertPoint(newBlock);
	return newBlock;
}

llvm::Type* x86::type_by_name(const std::string& name)
{
	auto iter = struct_types.find(name);
	assert(iter != struct_types.end());
	return iter->second;
}

llvm::Value* x86::_Z9make_maskm(llvm::Value* arg0)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* binop1_val1_int = ConstantInt::get(types[0], 64u);
	Value* binop1_var = BinaryOperator::Create(Instruction::Sub, binop1_val1_int, arg0, "", builder.GetInsertBlock());
	Constant* binop3_val3_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop3_var = BinaryOperator::Create(Instruction::LShr, binop3_val3_int, binop1_var, "", builder.GetInsertBlock());
	return binop3_var;
}

llvm::Value* x86::_Z15make_mask_bytesm(llvm::Value* arg0)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* binop1_val1_int = ConstantInt::get(types[0], 3u);
	Value* binop1_var = BinaryOperator::Create(Instruction::Shl, arg0, binop1_val1_int, "", builder.GetInsertBlock());
	Constant* binop3_val3_int = ConstantInt::get(types[0], 64u);
	Value* binop3_var = BinaryOperator::Create(Instruction::Sub, binop3_val3_int, binop1_var, "", builder.GetInsertBlock());
	Constant* binop5_val5_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop5_var = BinaryOperator::Create(Instruction::LShr, binop5_val5_int, binop3_var, "", builder.GetInsertBlock());
	return binop5_var;
}

void x86::x86_aaa(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aad(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[2], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aam(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[3], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aas(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[4], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_adc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	BasicBlock* block84 = BasicBlock::Create(context, "", function);
	BasicBlock* block85 = BasicBlock::Create(context, "", function);
	BasicBlock* block86 = BasicBlock::Create(context, "", function);
	BasicBlock* block87 = BasicBlock::Create(context, "", function);
	BasicBlock* block88 = BasicBlock::Create(context, "", function);
	BasicBlock* block89 = BasicBlock::Create(context, "", function);
	BasicBlock* block90 = BasicBlock::Create(context, "", function);
	BasicBlock* block91 = BasicBlock::Create(context, "", function);
	BasicBlock* block92 = BasicBlock::Create(context, "", function);
	BasicBlock* block93 = BasicBlock::Create(context, "", function);
	BasicBlock* block94 = BasicBlock::Create(context, "", function);
	BasicBlock* block95 = BasicBlock::Create(context, "", function);
	BasicBlock* block96 = BasicBlock::Create(context, "", function);
	BasicBlock* block97 = BasicBlock::Create(context, "", function);
	BasicBlock* block98 = BasicBlock::Create(context, "", function);
	BasicBlock* block99 = BasicBlock::Create(context, "", function);
	BasicBlock* block100 = BasicBlock::Create(context, "", function);
	BasicBlock* block101 = BasicBlock::Create(context, "", function);
	BasicBlock* block102 = BasicBlock::Create(context, "", function);
	BasicBlock* block103 = BasicBlock::Create(context, "", function);
	BasicBlock* block104 = BasicBlock::Create(context, "", function);
	BasicBlock* block105 = BasicBlock::Create(context, "", function);
	BasicBlock* block106 = BasicBlock::Create(context, "", function);
	BasicBlock* block107 = BasicBlock::Create(context, "", function);
	BasicBlock* block108 = BasicBlock::Create(context, "", function);
	BasicBlock* block109 = BasicBlock::Create(context, "", function);
	BasicBlock* block110 = BasicBlock::Create(context, "", function);
	BasicBlock* block111 = BasicBlock::Create(context, "", function);
	BasicBlock* block112 = BasicBlock::Create(context, "", function);
	BasicBlock* block113 = BasicBlock::Create(context, "", function);
	BasicBlock* block114 = BasicBlock::Create(context, "", function);
	BasicBlock* block115 = BasicBlock::Create(context, "", function);
	BasicBlock* block116 = BasicBlock::Create(context, "", function);
	BasicBlock* block117 = BasicBlock::Create(context, "", function);
	BasicBlock* block118 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block39, 2);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block9);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep11_var = builder.CreateGEP(arg3, gep11_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep11_var, false);
	load12_var->setAlignment(4);
	Value* cast13_var = builder.CreateCast(Instruction::ZExt, load12_var, types[0]);
	ArrayRef<Value*> gep14_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(globals[5], gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast13_var, switch9_val9_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep18_var, false);
	load19_var->setAlignment(16);
	Constant* cmp20_val20_int = ConstantInt::get(types[0], 8u);
	Value* cmp20_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp20_val20_int);
	builder.CreateCondBr(cmp20_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep22_array { load16_var, };
	Value* gep22_var = builder.CreateInBoundsGEP(cast17_var, gep22_array);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, gep22_var, types[27]);
	llvm::LoadInst* load24_var = builder.CreateLoad(cast23_var, false);
	load24_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(8);
	Value* binop27_var = BinaryOperator::Create(Instruction::Add, load26_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 4u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { binop27_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast17_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[28]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(4);
	Value* cast33_var = builder.CreateCast(Instruction::ZExt, load32_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block5);
	Constant* gep34_val34_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep34_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop27_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load19_var, block8, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block6);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load45_var = builder.CreateLoad(gep44_var, false);
	load45_var->setAlignment(8);
	Value* binop46_var = BinaryOperator::Create(Instruction::Add, load45_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep47_array { binop46_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast17_var, gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(1);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep51_array { gep4_val4_int, gep4_val4_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[7], gep51_array);
	CallInst* call50_var = builder.CreateCall(globals[6], gep51_var);
	call50_var->setTailCall();
	call50_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val6_int);
	builder.CreateCondBr(cmp56_var, block18, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, switch9_val9_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp20_val20_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch38_val38_int), block15);
	switch78_var->addCase(cast<ConstantInt>(switch38_val39_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep51_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, gep4_val6_int);
	builder.CreateCondBr(cmp92_var, block28, block19);
	
	builder.SetInsertPoint(block19);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast93_var, switch9_val9_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp20_val20_int);
	builder.CreateCondBr(cmp99_var, block20, block21);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep100_array { load95_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast96_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[27]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(8);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(8);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, load95_var, "", builder.GetInsertBlock());
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { binop105_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast96_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[28]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(4);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop105_var, "", builder.GetInsertBlock());
	SwitchInst* switch114_var = builder.CreateSwitch(load98_var, block26, 2);
	switch114_var->addCase(cast<ConstantInt>(switch38_val38_int), block24);
	switch114_var->addCase(cast<ConstantInt>(switch38_val39_int), block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast96_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[30]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(2);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(8);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop113_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast96_var, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(1);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block26);
	CallInst* call124_var = builder.CreateCall(globals[6], gep51_var);
	call124_var->setTailCall();
	call124_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block27);
	PHINode* phi125_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep126_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(arg3, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(4);
	Value* cast128_var = builder.CreateCast(Instruction::SExt, load127_var, types[0]);
	Value* binop129_var = BinaryOperator::Create(Instruction::Mul, cast128_var, phi125_var, "", builder.GetInsertBlock());
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, binop129_var, phi89_var, "", builder.GetInsertBlock());
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep132_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, gep4_val6_int);
	builder.CreateCondBr(cmp134_var, block38, block29);
	
	builder.SetInsertPoint(block29);
	Value* cast135_var = builder.CreateCast(Instruction::ZExt, load133_var, types[0]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast135_var, switch9_val9_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp20_val20_int);
	builder.CreateCondBr(cmp141_var, block30, block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep142_array { load137_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast138_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[27]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(8);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(8);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, load137_var, "", builder.GetInsertBlock());
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { binop147_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast138_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[28]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(4);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop147_var, "", builder.GetInsertBlock());
	SwitchInst* switch156_var = builder.CreateSwitch(load140_var, block36, 2);
	switch156_var->addCase(cast<ConstantInt>(switch38_val38_int), block34);
	switch156_var->addCase(cast<ConstantInt>(switch38_val39_int), block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast138_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[30]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(2);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(8);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop155_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast138_var, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block36);
	CallInst* call166_var = builder.CreateCall(globals[6], gep51_var);
	call166_var->setTailCall();
	call166_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block37);
	PHINode* phi167_var = builder.CreatePHI(types[0], 4);
	Value* binop168_var = BinaryOperator::Create(Instruction::Add, phi167_var, phi131_var, "", builder.GetInsertBlock());
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block38);
	PHINode* phi169_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep170_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(arg3, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	CallInst* call173_var = builder.CreateCall2(globals[8], phi169_var, cast172_var);
	call173_var->setTailCall();
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val4_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[9], gep175_array);
	CallInst* call175_var = builder.CreateCall(globals[6], gep175_var);
	call175_var->setTailCall();
	call175_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi178_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep179_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep4_val6_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(arg3, gep179_array);
	llvm::LoadInst* load180_var = builder.CreateLoad(gep179_var, false);
	load180_var->setAlignment(4);
	SwitchInst* switch181_var = builder.CreateSwitch(load180_var, block80, 3);
	switch181_var->addCase(cast<ConstantInt>(gep34_val34_int), block41);
	switch181_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch181_var->addCase(cast<ConstantInt>(switch9_val10_int), block50);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep181_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(arg3, gep181_array);
	Value* cast182_var = builder.CreateCast(Instruction::BitCast, gep181_var, types[27]);
	llvm::LoadInst* load183_var = builder.CreateLoad(cast182_var, false);
	load183_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Value* cast189_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast186_var, switch9_val9_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp20_val20_int);
	builder.CreateCondBr(cmp192_var, block43, block44);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep193_array { load188_var, };
	Value* gep193_var = builder.CreateInBoundsGEP(cast189_var, gep193_array);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, gep193_var, types[27]);
	llvm::LoadInst* load195_var = builder.CreateLoad(cast194_var, false);
	load195_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(8);
	Value* binop198_var = BinaryOperator::Create(Instruction::Add, load197_var, load188_var, "", builder.GetInsertBlock());
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp28_val28_int);
	builder.CreateCondBr(cmp199_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep200_array { binop198_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast189_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[28]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(4);
	Value* cast203_var = builder.CreateCast(Instruction::ZExt, load202_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep204_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep204_var = builder.CreateInBoundsGEP(globals[5], gep204_array);
	llvm::LoadInst* load205_var = builder.CreateLoad(gep204_var, false);
	load205_var->setAlignment(16);
	Value* binop206_var = BinaryOperator::Create(Instruction::Add, load205_var, binop198_var, "", builder.GetInsertBlock());
	SwitchInst* switch207_var = builder.CreateSwitch(load191_var, block49, 2);
	switch207_var->addCase(cast<ConstantInt>(switch38_val38_int), block47);
	switch207_var->addCase(cast<ConstantInt>(switch38_val39_int), block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { binop206_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast189_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[30]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(2);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(8);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop206_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast189_var, gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(1);
	Value* cast216_var = builder.CreateCast(Instruction::ZExt, load215_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block49);
	CallInst* call217_var = builder.CreateCall(globals[6], gep51_var);
	call217_var->setTailCall();
	call217_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep218_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(arg3, gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(4);
	Value* cmp220_var = builder.CreateICmp(CmpInst::ICMP_EQ, load219_var, gep4_val6_int);
	builder.CreateCondBr(cmp220_var, block59, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load219_var, types[0]);
	ArrayRef<Value*> gep222_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep222_var = builder.CreateInBoundsGEP(globals[5], gep222_array);
	llvm::LoadInst* load223_var = builder.CreateLoad(gep222_var, false);
	load223_var->setAlignment(16);
	Value* cast224_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast221_var, switch9_val9_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cmp227_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp20_val20_int);
	builder.CreateCondBr(cmp227_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep228_array { load223_var, };
	Value* gep228_var = builder.CreateInBoundsGEP(cast224_var, gep228_array);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, gep228_var, types[27]);
	llvm::LoadInst* load230_var = builder.CreateLoad(cast229_var, false);
	load230_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep231_var = builder.CreateInBoundsGEP(globals[5], gep231_array);
	llvm::LoadInst* load232_var = builder.CreateLoad(gep231_var, false);
	load232_var->setAlignment(8);
	Value* binop233_var = BinaryOperator::Create(Instruction::Add, load232_var, load223_var, "", builder.GetInsertBlock());
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp28_val28_int);
	builder.CreateCondBr(cmp234_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep235_array { binop233_var, };
	Value* gep235_var = builder.CreateInBoundsGEP(cast224_var, gep235_array);
	Value* cast236_var = builder.CreateCast(Instruction::BitCast, gep235_var, types[28]);
	llvm::LoadInst* load237_var = builder.CreateLoad(cast236_var, false);
	load237_var->setAlignment(4);
	Value* cast238_var = builder.CreateCast(Instruction::ZExt, load237_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* binop241_var = BinaryOperator::Create(Instruction::Add, load240_var, binop233_var, "", builder.GetInsertBlock());
	SwitchInst* switch242_var = builder.CreateSwitch(load226_var, block58, 2);
	switch242_var->addCase(cast<ConstantInt>(switch38_val38_int), block56);
	switch242_var->addCase(cast<ConstantInt>(switch38_val39_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { binop241_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast224_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[30]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(2);
	Value* cast245_var = builder.CreateCast(Instruction::ZExt, load244_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep246_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep246_var = builder.CreateInBoundsGEP(globals[5], gep246_array);
	llvm::LoadInst* load247_var = builder.CreateLoad(gep246_var, false);
	load247_var->setAlignment(8);
	Value* binop248_var = BinaryOperator::Create(Instruction::Add, load247_var, binop241_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep249_array { binop248_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast224_var, gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(1);
	Value* cast251_var = builder.CreateCast(Instruction::ZExt, load250_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call252_var = builder.CreateCall(globals[6], gep51_var);
	call252_var->setTailCall();
	call252_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi253_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep254_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep254_var = builder.CreateInBoundsGEP(arg3, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(4);
	Value* cmp256_var = builder.CreateICmp(CmpInst::ICMP_EQ, load255_var, gep4_val6_int);
	builder.CreateCondBr(cmp256_var, block69, block60);
	
	builder.SetInsertPoint(block60);
	Value* cast257_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	ArrayRef<Value*> gep258_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep258_var = builder.CreateInBoundsGEP(globals[5], gep258_array);
	llvm::LoadInst* load259_var = builder.CreateLoad(gep258_var, false);
	load259_var->setAlignment(16);
	Value* cast260_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast257_var, switch9_val9_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cmp263_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp20_val20_int);
	builder.CreateCondBr(cmp263_var, block61, block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep264_array { load259_var, };
	Value* gep264_var = builder.CreateInBoundsGEP(cast260_var, gep264_array);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, gep264_var, types[27]);
	llvm::LoadInst* load266_var = builder.CreateLoad(cast265_var, false);
	load266_var->setAlignment(8);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep267_var = builder.CreateInBoundsGEP(globals[5], gep267_array);
	llvm::LoadInst* load268_var = builder.CreateLoad(gep267_var, false);
	load268_var->setAlignment(8);
	Value* binop269_var = BinaryOperator::Create(Instruction::Add, load268_var, load259_var, "", builder.GetInsertBlock());
	Value* cmp270_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp28_val28_int);
	builder.CreateCondBr(cmp270_var, block63, block64);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep271_array { binop269_var, };
	Value* gep271_var = builder.CreateInBoundsGEP(cast260_var, gep271_array);
	Value* cast272_var = builder.CreateCast(Instruction::BitCast, gep271_var, types[28]);
	llvm::LoadInst* load273_var = builder.CreateLoad(cast272_var, false);
	load273_var->setAlignment(4);
	Value* cast274_var = builder.CreateCast(Instruction::ZExt, load273_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep275_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[5], gep275_array);
	llvm::LoadInst* load276_var = builder.CreateLoad(gep275_var, false);
	load276_var->setAlignment(16);
	Value* binop277_var = BinaryOperator::Create(Instruction::Add, load276_var, binop269_var, "", builder.GetInsertBlock());
	SwitchInst* switch278_var = builder.CreateSwitch(load262_var, block67, 2);
	switch278_var->addCase(cast<ConstantInt>(switch38_val38_int), block65);
	switch278_var->addCase(cast<ConstantInt>(switch38_val39_int), block66);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { binop277_var, };
	Value* gep278_var = builder.CreateInBoundsGEP(cast260_var, gep278_array);
	Value* cast279_var = builder.CreateCast(Instruction::BitCast, gep278_var, types[30]);
	llvm::LoadInst* load280_var = builder.CreateLoad(cast279_var, false);
	load280_var->setAlignment(2);
	Value* cast281_var = builder.CreateCast(Instruction::ZExt, load280_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep282_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep282_var = builder.CreateInBoundsGEP(globals[5], gep282_array);
	llvm::LoadInst* load283_var = builder.CreateLoad(gep282_var, false);
	load283_var->setAlignment(8);
	Value* binop284_var = BinaryOperator::Create(Instruction::Add, load283_var, binop277_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep285_array { binop284_var, };
	Value* gep285_var = builder.CreateInBoundsGEP(cast260_var, gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(1);
	Value* cast287_var = builder.CreateCast(Instruction::ZExt, load286_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block67);
	CallInst* call288_var = builder.CreateCall(globals[6], gep51_var);
	call288_var->setTailCall();
	call288_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block68);
	PHINode* phi289_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep290_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep290_var = builder.CreateInBoundsGEP(arg3, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(4);
	Value* cast292_var = builder.CreateCast(Instruction::SExt, load291_var, types[0]);
	Value* binop293_var = BinaryOperator::Create(Instruction::Mul, cast292_var, phi289_var, "", builder.GetInsertBlock());
	Value* binop294_var = BinaryOperator::Create(Instruction::Add, binop293_var, phi253_var, "", builder.GetInsertBlock());
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block69);
	PHINode* phi295_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep296_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep296_var = builder.CreateInBoundsGEP(arg3, gep296_array);
	llvm::LoadInst* load297_var = builder.CreateLoad(gep296_var, false);
	load297_var->setAlignment(4);
	Value* cmp298_var = builder.CreateICmp(CmpInst::ICMP_EQ, load297_var, gep4_val6_int);
	builder.CreateCondBr(cmp298_var, block79, block70);
	
	builder.SetInsertPoint(block70);
	Value* cast299_var = builder.CreateCast(Instruction::ZExt, load297_var, types[0]);
	ArrayRef<Value*> gep300_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep300_var = builder.CreateInBoundsGEP(globals[5], gep300_array);
	llvm::LoadInst* load301_var = builder.CreateLoad(gep300_var, false);
	load301_var->setAlignment(16);
	Value* cast302_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast299_var, switch9_val9_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cmp305_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp20_val20_int);
	builder.CreateCondBr(cmp305_var, block71, block72);
	
	builder.SetInsertPoint(block71);
	ArrayRef<Value*> gep306_array { load301_var, };
	Value* gep306_var = builder.CreateInBoundsGEP(cast302_var, gep306_array);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, gep306_var, types[27]);
	llvm::LoadInst* load308_var = builder.CreateLoad(cast307_var, false);
	load308_var->setAlignment(8);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep309_var = builder.CreateInBoundsGEP(globals[5], gep309_array);
	llvm::LoadInst* load310_var = builder.CreateLoad(gep309_var, false);
	load310_var->setAlignment(8);
	Value* binop311_var = BinaryOperator::Create(Instruction::Add, load310_var, load301_var, "", builder.GetInsertBlock());
	Value* cmp312_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp28_val28_int);
	builder.CreateCondBr(cmp312_var, block73, block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep313_array { binop311_var, };
	Value* gep313_var = builder.CreateInBoundsGEP(cast302_var, gep313_array);
	Value* cast314_var = builder.CreateCast(Instruction::BitCast, gep313_var, types[28]);
	llvm::LoadInst* load315_var = builder.CreateLoad(cast314_var, false);
	load315_var->setAlignment(4);
	Value* cast316_var = builder.CreateCast(Instruction::ZExt, load315_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep317_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep317_var = builder.CreateInBoundsGEP(globals[5], gep317_array);
	llvm::LoadInst* load318_var = builder.CreateLoad(gep317_var, false);
	load318_var->setAlignment(16);
	Value* binop319_var = BinaryOperator::Create(Instruction::Add, load318_var, binop311_var, "", builder.GetInsertBlock());
	SwitchInst* switch320_var = builder.CreateSwitch(load304_var, block77, 2);
	switch320_var->addCase(cast<ConstantInt>(switch38_val38_int), block75);
	switch320_var->addCase(cast<ConstantInt>(switch38_val39_int), block76);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { binop319_var, };
	Value* gep320_var = builder.CreateInBoundsGEP(cast302_var, gep320_array);
	Value* cast321_var = builder.CreateCast(Instruction::BitCast, gep320_var, types[30]);
	llvm::LoadInst* load322_var = builder.CreateLoad(cast321_var, false);
	load322_var->setAlignment(2);
	Value* cast323_var = builder.CreateCast(Instruction::ZExt, load322_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep324_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep324_var = builder.CreateInBoundsGEP(globals[5], gep324_array);
	llvm::LoadInst* load325_var = builder.CreateLoad(gep324_var, false);
	load325_var->setAlignment(8);
	Value* binop326_var = BinaryOperator::Create(Instruction::Add, load325_var, binop319_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep327_array { binop326_var, };
	Value* gep327_var = builder.CreateInBoundsGEP(cast302_var, gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(1);
	Value* cast329_var = builder.CreateCast(Instruction::ZExt, load328_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block77);
	CallInst* call330_var = builder.CreateCall(globals[6], gep51_var);
	call330_var->setTailCall();
	call330_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block78);
	PHINode* phi331_var = builder.CreatePHI(types[0], 4);
	Value* binop332_var = BinaryOperator::Create(Instruction::Add, phi331_var, phi295_var, "", builder.GetInsertBlock());
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block79);
	PHINode* phi333_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep334_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep34_val34_int, };
	Value* gep334_var = builder.CreateInBoundsGEP(arg3, gep334_array);
	llvm::LoadInst* load335_var = builder.CreateLoad(gep334_var, false);
	load335_var->setAlignment(1);
	Value* cast336_var = builder.CreateCast(Instruction::ZExt, load335_var, types[0]);
	CallInst* call337_var = builder.CreateCall2(globals[8], phi333_var, cast336_var);
	call337_var->setTailCall();
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block80);
	ArrayRef<Value*> gep338_array { gep4_val4_int, gep4_val4_int, };
	Value* gep338_var = builder.CreateInBoundsGEP(globals[10], gep338_array);
	CallInst* call338_var = builder.CreateCall(globals[6], gep338_var);
	call338_var->setTailCall();
	call338_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block81);
	PHINode* phi341_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep342_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep342_var = builder.CreateInBoundsGEP(arg3, gep342_array);
	llvm::LoadInst* load343_var = builder.CreateLoad(gep342_var, false);
	load343_var->setAlignment(1);
	Value* cast344_var = builder.CreateCast(Instruction::ZExt, load343_var, types[0]);
	ArrayRef<Value*> gep345_array { gep4_val4_int, gep4_val6_int, };
	Value* gep345_var = builder.CreateInBoundsGEP(arg2, gep345_array);
	llvm::LoadInst* load346_var = builder.CreateLoad(gep345_var, false);
	load346_var->setAlignment(1);
	CallInst* call347_var = builder.CreateCall2(globals[11], phi178_var, phi341_var);
	call347_var->setTailCall();
	call347_var->setDoesNotThrow();
	call347_var->setDoesNotAccessMemory();
	ArrayRef<unsigned> extr349_array { 0, };
	Value* extr349_var = builder.CreateExtractValue(call347_var, extr349_array);
	Value* cast350_var = builder.CreateCast(Instruction::ZExt, load346_var, types[0]);
	CallInst* call351_var = builder.CreateCall2(globals[11], extr349_var, cast350_var);
	call351_var->setTailCall();
	call351_var->setDoesNotThrow();
	call351_var->setDoesNotAccessMemory();
	ArrayRef<unsigned> extr352_array { 0, };
	Value* extr352_var = builder.CreateExtractValue(call351_var, extr352_array);
	SwitchInst* switch353_var = builder.CreateSwitch(cast344_var, block84, 4);
	switch353_var->addCase(cast<ConstantInt>(cmp28_val28_int), block82);
	switch353_var->addCase(cast<ConstantInt>(switch38_val38_int), block82);
	switch353_var->addCase(cast<ConstantInt>(switch38_val39_int), block82);
	switch353_var->addCase(cast<ConstantInt>(cmp20_val20_int), block83);
	
	builder.SetInsertPoint(block82);
	Constant* binop353_val353_int = ConstantInt::get(types[0], 3u);
	Value* binop353_var = BinaryOperator::CreateNSW(Instruction::Shl, cast344_var, binop353_val353_int, "", builder.GetInsertBlock());
	Value* binop355_var = BinaryOperator::Create(Instruction::Shl, switch38_val39_int, binop353_var, "", builder.GetInsertBlock());
	Value* binop356_var = BinaryOperator::Create(Instruction::And, extr352_var, binop355_var, "", builder.GetInsertBlock());
	Value* cmp357_var = builder.CreateICmp(CmpInst::ICMP_NE, binop356_var, gep4_val4_int);
	Value* cast358_var = builder.CreateCast(Instruction::ZExt, cmp357_var, types[11]);
	Constant* binop359_val359_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop359_var = BinaryOperator::CreateNSW(Instruction::Add, binop353_var, binop359_val359_int, "", builder.GetInsertBlock());
	Value* binop361_var = BinaryOperator::Create(Instruction::Shl, switch38_val39_int, binop359_var, "", builder.GetInsertBlock());
	Value* binop362_var = BinaryOperator::Create(Instruction::And, extr352_var, binop361_var, "", builder.GetInsertBlock());
	Value* cmp363_var = builder.CreateICmp(CmpInst::ICMP_NE, binop362_var, gep4_val4_int);
	Value* cast364_var = builder.CreateCast(Instruction::ZExt, cmp363_var, types[11]);
	builder.CreateBr(block85);
	
	builder.SetInsertPoint(block83);
	ArrayRef<unsigned> extr365_array { 1, };
	Value* extr365_var = builder.CreateExtractValue(call351_var, extr365_array);
	ArrayRef<unsigned> extr366_array { 1, };
	Value* extr366_var = builder.CreateExtractValue(call347_var, extr366_array);
	Value* binop367_var = BinaryOperator::Create(Instruction::Or, extr366_var, extr365_var, "", builder.GetInsertBlock());
	Value* cast368_var = builder.CreateCast(Instruction::ZExt, binop367_var, types[11]);
	Constant* binop369_val369_int = ConstantInt::get(types[0], 63u);
	Value* binop369_var = BinaryOperator::Create(Instruction::LShr, extr352_var, binop369_val369_int, "", builder.GetInsertBlock());
	Value* cast371_var = builder.CreateCast(Instruction::Trunc, binop369_var, types[11]);
	builder.CreateBr(block85);
	
	builder.SetInsertPoint(block84);
	ArrayRef<Value*> gep372_array { gep4_val4_int, gep4_val4_int, };
	Value* gep372_var = builder.CreateInBoundsGEP(globals[12], gep372_array);
	CallInst* call372_var = builder.CreateCall(globals[6], gep372_var);
	call372_var->setTailCall();
	call372_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block85);
	PHINode* phi375_var = builder.CreatePHI(types[11], 2);
	PHINode* phi376_var = builder.CreatePHI(types[11], 2);
	llvm::StoreInst* store377_var = builder.CreateStore(phi375_var, gep345_var, false);
	store377_var->setAlignment(1);
	Constant* binop378_val378_int = ConstantInt::get(types[11], 1u);
	Value* binop378_var = BinaryOperator::Create(Instruction::And, phi376_var, binop378_val378_int, "", builder.GetInsertBlock());
	Constant* gep380_val380_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep380_array { gep4_val4_int, gep380_val380_int, };
	Value* gep380_var = builder.CreateInBoundsGEP(arg2, gep380_array);
	llvm::StoreInst* store382_var = builder.CreateStore(binop378_var, gep380_var, false);
	store382_var->setAlignment(1);
	CallInst* call383_var = builder.CreateCall(globals[13], extr352_var);
	call383_var->setTailCall();
	call383_var->setDoesNotThrow();
	call383_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep385_array { gep4_val4_int, switch9_val9_int, };
	Value* gep385_var = builder.CreateInBoundsGEP(arg2, gep385_array);
	Value* cast386_var = builder.CreateCast(Instruction::Trunc, call383_var, types[11]);
	Value* binop387_var = BinaryOperator::Create(Instruction::And, cast386_var, binop378_val378_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store388_var = builder.CreateStore(binop387_var, gep385_var, false);
	store388_var->setAlignment(1);
	Constant* binop389_val389_int = ConstantInt::get(types[0], 15u);
	Value* binop389_var = BinaryOperator::Create(Instruction::And, phi178_var, binop389_val389_int, "", builder.GetInsertBlock());
	Value* binop391_var = BinaryOperator::Create(Instruction::And, phi341_var, binop389_val389_int, "", builder.GetInsertBlock());
	Value* binop392_var = BinaryOperator::CreateNSW(Instruction::Add, binop391_var, binop389_var, "", builder.GetInsertBlock());
	Value* binop393_var = BinaryOperator::Create(Instruction::And, extr349_var, binop389_val389_int, "", builder.GetInsertBlock());
	Value* binop394_var = BinaryOperator::CreateNSW(Instruction::Add, binop393_var, cast350_var, "", builder.GetInsertBlock());
	Value* binop395_var = BinaryOperator::Create(Instruction::Or, binop394_var, binop392_var, "", builder.GetInsertBlock());
	Value* cmp396_var = builder.CreateICmp(CmpInst::ICMP_UGT, binop395_var, binop389_val389_int);
	ArrayRef<Value*> gep397_array { gep4_val4_int, gep34_val34_int, };
	Value* gep397_var = builder.CreateInBoundsGEP(arg2, gep397_array);
	Value* cast398_var = builder.CreateCast(Instruction::ZExt, cmp396_var, types[11]);
	llvm::StoreInst* store399_var = builder.CreateStore(cast398_var, gep397_var, false);
	store399_var->setAlignment(1);
	Value* cmp400_var = builder.CreateICmp(CmpInst::ICMP_EQ, extr352_var, gep4_val4_int);
	ArrayRef<Value*> gep401_array { gep4_val4_int, switch9_val10_int, };
	Value* gep401_var = builder.CreateInBoundsGEP(arg2, gep401_array);
	Value* cast402_var = builder.CreateCast(Instruction::ZExt, cmp400_var, types[11]);
	llvm::StoreInst* store403_var = builder.CreateStore(cast402_var, gep401_var, false);
	store403_var->setAlignment(1);
	Constant* gep404_val404_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep404_array { gep4_val4_int, gep404_val404_int, };
	Value* gep404_var = builder.CreateInBoundsGEP(arg2, gep404_array);
	Value* binop406_var = BinaryOperator::Create(Instruction::Xor, binop378_var, phi375_var, "", builder.GetInsertBlock());
	llvm::StoreInst* store407_var = builder.CreateStore(binop406_var, gep404_var, false);
	store407_var->setAlignment(1);
	llvm::LoadInst* load408_var = builder.CreateLoad(gep4_var, false);
	load408_var->setAlignment(4);
	SwitchInst* switch409_var = builder.CreateSwitch(load408_var, block117, 2);
	switch409_var->addCase(cast<ConstantInt>(switch9_val9_int), block86);
	switch409_var->addCase(cast<ConstantInt>(switch9_val10_int), block87);
	
	builder.SetInsertPoint(block86);
	ArrayRef<Value*> gep409_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep409_var = builder.CreateGEP(arg3, gep409_array);
	llvm::LoadInst* load410_var = builder.CreateLoad(gep409_var, false);
	load410_var->setAlignment(4);
	Value* cast411_var = builder.CreateCast(Instruction::ZExt, load410_var, types[0]);
	ArrayRef<Value*> gep412_array { gep4_val4_int, cast411_var, switch9_val9_int, };
	Value* gep412_var = builder.CreateInBoundsGEP(globals[5], gep412_array);
	llvm::LoadInst* load413_var = builder.CreateLoad(gep412_var, false);
	load413_var->setAlignment(16);
	Value* binop414_var = BinaryOperator::Create(Instruction::Shl, load413_var, binop353_val353_int, "", builder.GetInsertBlock());
	Constant* binop415_val415_int = ConstantInt::get(types[0], 64u);
	Value* binop415_var = BinaryOperator::Create(Instruction::Sub, binop415_val415_int, binop414_var, "", builder.GetInsertBlock());
	Value* binop417_var = BinaryOperator::Create(Instruction::LShr, binop359_val359_int, binop415_var, "", builder.GetInsertBlock());
	Value* binop418_var = BinaryOperator::Create(Instruction::And, binop417_var, extr352_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep419_array { gep4_val4_int, cast411_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep419_var = builder.CreateInBoundsGEP(globals[5], gep419_array);
	llvm::LoadInst* load420_var = builder.CreateLoad(gep419_var, false);
	load420_var->setAlignment(16);
	Value* cast421_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep422_array { load420_var, };
	Value* gep422_var = builder.CreateInBoundsGEP(cast421_var, gep422_array);
	Value* cast423_var = builder.CreateCast(Instruction::BitCast, gep422_var, types[27]);
	llvm::StoreInst* store424_var = builder.CreateStore(binop418_var, cast423_var, false);
	store424_var->setAlignment(8);
	builder.CreateBr(block118);
	
	builder.SetInsertPoint(block87);
	ArrayRef<Value*> gep425_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep425_var = builder.CreateInBoundsGEP(arg3, gep425_array);
	llvm::LoadInst* load426_var = builder.CreateLoad(gep425_var, false);
	load426_var->setAlignment(4);
	Value* cmp427_var = builder.CreateICmp(CmpInst::ICMP_EQ, load426_var, gep4_val6_int);
	builder.CreateCondBr(cmp427_var, block96, block88);
	
	builder.SetInsertPoint(block88);
	Value* cast428_var = builder.CreateCast(Instruction::ZExt, load426_var, types[0]);
	ArrayRef<Value*> gep429_array { gep4_val4_int, cast428_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep429_var = builder.CreateInBoundsGEP(globals[5], gep429_array);
	llvm::LoadInst* load430_var = builder.CreateLoad(gep429_var, false);
	load430_var->setAlignment(16);
	Value* cast431_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep432_array { gep4_val4_int, cast428_var, switch9_val9_int, };
	Value* gep432_var = builder.CreateInBoundsGEP(globals[5], gep432_array);
	llvm::LoadInst* load433_var = builder.CreateLoad(gep432_var, false);
	load433_var->setAlignment(16);
	Value* cmp434_var = builder.CreateICmp(CmpInst::ICMP_EQ, load433_var, cmp20_val20_int);
	builder.CreateCondBr(cmp434_var, block89, block90);
	
	builder.SetInsertPoint(block89);
	ArrayRef<Value*> gep435_array { load430_var, };
	Value* gep435_var = builder.CreateInBoundsGEP(cast431_var, gep435_array);
	Value* cast436_var = builder.CreateCast(Instruction::BitCast, gep435_var, types[27]);
	llvm::LoadInst* load437_var = builder.CreateLoad(cast436_var, false);
	load437_var->setAlignment(8);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block90);
	ArrayRef<Value*> gep438_array { gep4_val4_int, cast428_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep438_var = builder.CreateInBoundsGEP(globals[5], gep438_array);
	llvm::LoadInst* load439_var = builder.CreateLoad(gep438_var, false);
	load439_var->setAlignment(8);
	Value* binop440_var = BinaryOperator::Create(Instruction::Add, load439_var, load430_var, "", builder.GetInsertBlock());
	Value* cmp441_var = builder.CreateICmp(CmpInst::ICMP_EQ, load433_var, cmp28_val28_int);
	builder.CreateCondBr(cmp441_var, block91, block92);
	
	builder.SetInsertPoint(block91);
	ArrayRef<Value*> gep442_array { binop440_var, };
	Value* gep442_var = builder.CreateInBoundsGEP(cast431_var, gep442_array);
	Value* cast443_var = builder.CreateCast(Instruction::BitCast, gep442_var, types[28]);
	llvm::LoadInst* load444_var = builder.CreateLoad(cast443_var, false);
	load444_var->setAlignment(4);
	Value* cast445_var = builder.CreateCast(Instruction::ZExt, load444_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block92);
	ArrayRef<Value*> gep446_array { gep4_val4_int, cast428_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep446_var = builder.CreateInBoundsGEP(globals[5], gep446_array);
	llvm::LoadInst* load447_var = builder.CreateLoad(gep446_var, false);
	load447_var->setAlignment(16);
	Value* binop448_var = BinaryOperator::Create(Instruction::Add, load447_var, binop440_var, "", builder.GetInsertBlock());
	SwitchInst* switch449_var = builder.CreateSwitch(load433_var, block95, 2);
	switch449_var->addCase(cast<ConstantInt>(switch38_val38_int), block93);
	switch449_var->addCase(cast<ConstantInt>(switch38_val39_int), block94);
	
	builder.SetInsertPoint(block93);
	ArrayRef<Value*> gep449_array { binop448_var, };
	Value* gep449_var = builder.CreateInBoundsGEP(cast431_var, gep449_array);
	Value* cast450_var = builder.CreateCast(Instruction::BitCast, gep449_var, types[30]);
	llvm::LoadInst* load451_var = builder.CreateLoad(cast450_var, false);
	load451_var->setAlignment(2);
	Value* cast452_var = builder.CreateCast(Instruction::ZExt, load451_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block94);
	ArrayRef<Value*> gep453_array { gep4_val4_int, cast428_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep453_var = builder.CreateInBoundsGEP(globals[5], gep453_array);
	llvm::LoadInst* load454_var = builder.CreateLoad(gep453_var, false);
	load454_var->setAlignment(8);
	Value* binop455_var = BinaryOperator::Create(Instruction::Add, load454_var, binop448_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep456_array { binop455_var, };
	Value* gep456_var = builder.CreateInBoundsGEP(cast431_var, gep456_array);
	llvm::LoadInst* load457_var = builder.CreateLoad(gep456_var, false);
	load457_var->setAlignment(1);
	Value* cast458_var = builder.CreateCast(Instruction::ZExt, load457_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block95);
	CallInst* call459_var = builder.CreateCall(globals[6], gep51_var);
	call459_var->setTailCall();
	call459_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block96);
	PHINode* phi460_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep461_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep461_var = builder.CreateInBoundsGEP(arg3, gep461_array);
	llvm::LoadInst* load462_var = builder.CreateLoad(gep461_var, false);
	load462_var->setAlignment(4);
	Value* cmp463_var = builder.CreateICmp(CmpInst::ICMP_EQ, load462_var, gep4_val6_int);
	builder.CreateCondBr(cmp463_var, block106, block97);
	
	builder.SetInsertPoint(block97);
	Value* cast464_var = builder.CreateCast(Instruction::ZExt, load462_var, types[0]);
	ArrayRef<Value*> gep465_array { gep4_val4_int, cast464_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep465_var = builder.CreateInBoundsGEP(globals[5], gep465_array);
	llvm::LoadInst* load466_var = builder.CreateLoad(gep465_var, false);
	load466_var->setAlignment(16);
	Value* cast467_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep468_array { gep4_val4_int, cast464_var, switch9_val9_int, };
	Value* gep468_var = builder.CreateInBoundsGEP(globals[5], gep468_array);
	llvm::LoadInst* load469_var = builder.CreateLoad(gep468_var, false);
	load469_var->setAlignment(16);
	Value* cmp470_var = builder.CreateICmp(CmpInst::ICMP_EQ, load469_var, cmp20_val20_int);
	builder.CreateCondBr(cmp470_var, block98, block99);
	
	builder.SetInsertPoint(block98);
	ArrayRef<Value*> gep471_array { load466_var, };
	Value* gep471_var = builder.CreateInBoundsGEP(cast467_var, gep471_array);
	Value* cast472_var = builder.CreateCast(Instruction::BitCast, gep471_var, types[27]);
	llvm::LoadInst* load473_var = builder.CreateLoad(cast472_var, false);
	load473_var->setAlignment(8);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block99);
	ArrayRef<Value*> gep474_array { gep4_val4_int, cast464_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep474_var = builder.CreateInBoundsGEP(globals[5], gep474_array);
	llvm::LoadInst* load475_var = builder.CreateLoad(gep474_var, false);
	load475_var->setAlignment(8);
	Value* binop476_var = BinaryOperator::Create(Instruction::Add, load475_var, load466_var, "", builder.GetInsertBlock());
	Value* cmp477_var = builder.CreateICmp(CmpInst::ICMP_EQ, load469_var, cmp28_val28_int);
	builder.CreateCondBr(cmp477_var, block100, block101);
	
	builder.SetInsertPoint(block100);
	ArrayRef<Value*> gep478_array { binop476_var, };
	Value* gep478_var = builder.CreateInBoundsGEP(cast467_var, gep478_array);
	Value* cast479_var = builder.CreateCast(Instruction::BitCast, gep478_var, types[28]);
	llvm::LoadInst* load480_var = builder.CreateLoad(cast479_var, false);
	load480_var->setAlignment(4);
	Value* cast481_var = builder.CreateCast(Instruction::ZExt, load480_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block101);
	ArrayRef<Value*> gep482_array { gep4_val4_int, cast464_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep482_var = builder.CreateInBoundsGEP(globals[5], gep482_array);
	llvm::LoadInst* load483_var = builder.CreateLoad(gep482_var, false);
	load483_var->setAlignment(16);
	Value* binop484_var = BinaryOperator::Create(Instruction::Add, load483_var, binop476_var, "", builder.GetInsertBlock());
	SwitchInst* switch485_var = builder.CreateSwitch(load469_var, block104, 2);
	switch485_var->addCase(cast<ConstantInt>(switch38_val38_int), block102);
	switch485_var->addCase(cast<ConstantInt>(switch38_val39_int), block103);
	
	builder.SetInsertPoint(block102);
	ArrayRef<Value*> gep485_array { binop484_var, };
	Value* gep485_var = builder.CreateInBoundsGEP(cast467_var, gep485_array);
	Value* cast486_var = builder.CreateCast(Instruction::BitCast, gep485_var, types[30]);
	llvm::LoadInst* load487_var = builder.CreateLoad(cast486_var, false);
	load487_var->setAlignment(2);
	Value* cast488_var = builder.CreateCast(Instruction::ZExt, load487_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block103);
	ArrayRef<Value*> gep489_array { gep4_val4_int, cast464_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep489_var = builder.CreateInBoundsGEP(globals[5], gep489_array);
	llvm::LoadInst* load490_var = builder.CreateLoad(gep489_var, false);
	load490_var->setAlignment(8);
	Value* binop491_var = BinaryOperator::Create(Instruction::Add, load490_var, binop484_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep492_array { binop491_var, };
	Value* gep492_var = builder.CreateInBoundsGEP(cast467_var, gep492_array);
	llvm::LoadInst* load493_var = builder.CreateLoad(gep492_var, false);
	load493_var->setAlignment(1);
	Value* cast494_var = builder.CreateCast(Instruction::ZExt, load493_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block104);
	CallInst* call495_var = builder.CreateCall(globals[6], gep51_var);
	call495_var->setTailCall();
	call495_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block105);
	PHINode* phi496_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep497_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep497_var = builder.CreateInBoundsGEP(arg3, gep497_array);
	llvm::LoadInst* load498_var = builder.CreateLoad(gep497_var, false);
	load498_var->setAlignment(4);
	Value* cast499_var = builder.CreateCast(Instruction::SExt, load498_var, types[0]);
	Value* binop500_var = BinaryOperator::Create(Instruction::Mul, cast499_var, phi496_var, "", builder.GetInsertBlock());
	Value* binop501_var = BinaryOperator::Create(Instruction::Add, binop500_var, phi460_var, "", builder.GetInsertBlock());
	builder.CreateBr(block106);
	
	builder.SetInsertPoint(block106);
	PHINode* phi502_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep503_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep503_var = builder.CreateInBoundsGEP(arg3, gep503_array);
	llvm::LoadInst* load504_var = builder.CreateLoad(gep503_var, false);
	load504_var->setAlignment(4);
	Value* cmp505_var = builder.CreateICmp(CmpInst::ICMP_EQ, load504_var, gep4_val6_int);
	builder.CreateCondBr(cmp505_var, block116, block107);
	
	builder.SetInsertPoint(block107);
	Value* cast506_var = builder.CreateCast(Instruction::ZExt, load504_var, types[0]);
	ArrayRef<Value*> gep507_array { gep4_val4_int, cast506_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep507_var = builder.CreateInBoundsGEP(globals[5], gep507_array);
	llvm::LoadInst* load508_var = builder.CreateLoad(gep507_var, false);
	load508_var->setAlignment(16);
	Value* cast509_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep510_array { gep4_val4_int, cast506_var, switch9_val9_int, };
	Value* gep510_var = builder.CreateInBoundsGEP(globals[5], gep510_array);
	llvm::LoadInst* load511_var = builder.CreateLoad(gep510_var, false);
	load511_var->setAlignment(16);
	Value* cmp512_var = builder.CreateICmp(CmpInst::ICMP_EQ, load511_var, cmp20_val20_int);
	builder.CreateCondBr(cmp512_var, block108, block109);
	
	builder.SetInsertPoint(block108);
	ArrayRef<Value*> gep513_array { load508_var, };
	Value* gep513_var = builder.CreateInBoundsGEP(cast509_var, gep513_array);
	Value* cast514_var = builder.CreateCast(Instruction::BitCast, gep513_var, types[27]);
	llvm::LoadInst* load515_var = builder.CreateLoad(cast514_var, false);
	load515_var->setAlignment(8);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block109);
	ArrayRef<Value*> gep516_array { gep4_val4_int, cast506_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep516_var = builder.CreateInBoundsGEP(globals[5], gep516_array);
	llvm::LoadInst* load517_var = builder.CreateLoad(gep516_var, false);
	load517_var->setAlignment(8);
	Value* binop518_var = BinaryOperator::Create(Instruction::Add, load517_var, load508_var, "", builder.GetInsertBlock());
	Value* cmp519_var = builder.CreateICmp(CmpInst::ICMP_EQ, load511_var, cmp28_val28_int);
	builder.CreateCondBr(cmp519_var, block110, block111);
	
	builder.SetInsertPoint(block110);
	ArrayRef<Value*> gep520_array { binop518_var, };
	Value* gep520_var = builder.CreateInBoundsGEP(cast509_var, gep520_array);
	Value* cast521_var = builder.CreateCast(Instruction::BitCast, gep520_var, types[28]);
	llvm::LoadInst* load522_var = builder.CreateLoad(cast521_var, false);
	load522_var->setAlignment(4);
	Value* cast523_var = builder.CreateCast(Instruction::ZExt, load522_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block111);
	ArrayRef<Value*> gep524_array { gep4_val4_int, cast506_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep524_var = builder.CreateInBoundsGEP(globals[5], gep524_array);
	llvm::LoadInst* load525_var = builder.CreateLoad(gep524_var, false);
	load525_var->setAlignment(16);
	Value* binop526_var = BinaryOperator::Create(Instruction::Add, load525_var, binop518_var, "", builder.GetInsertBlock());
	SwitchInst* switch527_var = builder.CreateSwitch(load511_var, block114, 2);
	switch527_var->addCase(cast<ConstantInt>(switch38_val38_int), block112);
	switch527_var->addCase(cast<ConstantInt>(switch38_val39_int), block113);
	
	builder.SetInsertPoint(block112);
	ArrayRef<Value*> gep527_array { binop526_var, };
	Value* gep527_var = builder.CreateInBoundsGEP(cast509_var, gep527_array);
	Value* cast528_var = builder.CreateCast(Instruction::BitCast, gep527_var, types[30]);
	llvm::LoadInst* load529_var = builder.CreateLoad(cast528_var, false);
	load529_var->setAlignment(2);
	Value* cast530_var = builder.CreateCast(Instruction::ZExt, load529_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block113);
	ArrayRef<Value*> gep531_array { gep4_val4_int, cast506_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep531_var = builder.CreateInBoundsGEP(globals[5], gep531_array);
	llvm::LoadInst* load532_var = builder.CreateLoad(gep531_var, false);
	load532_var->setAlignment(8);
	Value* binop533_var = BinaryOperator::Create(Instruction::Add, load532_var, binop526_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep534_array { binop533_var, };
	Value* gep534_var = builder.CreateInBoundsGEP(cast509_var, gep534_array);
	llvm::LoadInst* load535_var = builder.CreateLoad(gep534_var, false);
	load535_var->setAlignment(1);
	Value* cast536_var = builder.CreateCast(Instruction::ZExt, load535_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block114);
	CallInst* call537_var = builder.CreateCall(globals[6], gep51_var);
	call537_var->setTailCall();
	call537_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block115);
	PHINode* phi538_var = builder.CreatePHI(types[0], 4);
	Value* binop539_var = BinaryOperator::Create(Instruction::Add, phi538_var, phi502_var, "", builder.GetInsertBlock());
	builder.CreateBr(block116);
	
	builder.SetInsertPoint(block116);
	PHINode* phi540_var = builder.CreatePHI(types[0], 2);
	CallInst* call541_var = builder.CreateCall3(globals[14], phi540_var, cast344_var, extr352_var);
	call541_var->setTailCall();
	builder.CreateBr(block118);
	
	builder.SetInsertPoint(block117);
	ArrayRef<Value*> gep543_array { gep4_val4_int, gep4_val4_int, };
	Value* gep543_var = builder.CreateInBoundsGEP(globals[15], gep543_array);
	CallInst* call543_var = builder.CreateCall(globals[6], gep543_var);
	call543_var->setTailCall();
	call543_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block118);
	phi89_var->addIncoming(gep4_val4_int, block9);
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi125_var->addIncoming(load102_var, block20);
	phi125_var->addIncoming(cast110_var, block22);
	phi125_var->addIncoming(cast117_var, block24);
	phi125_var->addIncoming(cast123_var, block25);
	
	phi131_var->addIncoming(binop130_var, block27);
	phi131_var->addIncoming(phi89_var, block18);
	
	phi167_var->addIncoming(load144_var, block30);
	phi167_var->addIncoming(cast152_var, block32);
	phi167_var->addIncoming(cast159_var, block34);
	phi167_var->addIncoming(cast165_var, block35);
	
	phi169_var->addIncoming(binop168_var, block37);
	phi169_var->addIncoming(phi131_var, block28);
	
	phi178_var->addIncoming(call173_var, block38);
	phi178_var->addIncoming(load24_var, block2);
	phi178_var->addIncoming(cast33_var, block4);
	phi178_var->addIncoming(cast43_var, block6);
	phi178_var->addIncoming(cast49_var, block7);
	
	phi253_var->addIncoming(gep4_val4_int, block50);
	phi253_var->addIncoming(load230_var, block52);
	phi253_var->addIncoming(cast238_var, block54);
	phi253_var->addIncoming(cast245_var, block56);
	phi253_var->addIncoming(cast251_var, block57);
	
	phi289_var->addIncoming(load266_var, block61);
	phi289_var->addIncoming(cast274_var, block63);
	phi289_var->addIncoming(cast281_var, block65);
	phi289_var->addIncoming(cast287_var, block66);
	
	phi295_var->addIncoming(binop294_var, block68);
	phi295_var->addIncoming(phi253_var, block59);
	
	phi331_var->addIncoming(load308_var, block71);
	phi331_var->addIncoming(cast316_var, block73);
	phi331_var->addIncoming(cast323_var, block75);
	phi331_var->addIncoming(cast329_var, block76);
	
	phi333_var->addIncoming(binop332_var, block78);
	phi333_var->addIncoming(phi295_var, block69);
	
	phi341_var->addIncoming(call337_var, block79);
	phi341_var->addIncoming(load183_var, block41);
	phi341_var->addIncoming(load195_var, block43);
	phi341_var->addIncoming(cast203_var, block45);
	phi341_var->addIncoming(cast210_var, block47);
	phi341_var->addIncoming(cast216_var, block48);
	
	phi375_var->addIncoming(cast358_var, block82);
	phi375_var->addIncoming(cast368_var, block83);
	
	phi376_var->addIncoming(cast364_var, block82);
	phi376_var->addIncoming(cast371_var, block83);
	
	phi460_var->addIncoming(gep4_val4_int, block87);
	phi460_var->addIncoming(load437_var, block89);
	phi460_var->addIncoming(cast445_var, block91);
	phi460_var->addIncoming(cast452_var, block93);
	phi460_var->addIncoming(cast458_var, block94);
	
	phi496_var->addIncoming(load473_var, block98);
	phi496_var->addIncoming(cast481_var, block100);
	phi496_var->addIncoming(cast488_var, block102);
	phi496_var->addIncoming(cast494_var, block103);
	
	phi502_var->addIncoming(binop501_var, block105);
	phi502_var->addIncoming(phi460_var, block96);
	
	phi538_var->addIncoming(load515_var, block108);
	phi538_var->addIncoming(cast523_var, block110);
	phi538_var->addIncoming(cast530_var, block112);
	phi538_var->addIncoming(cast536_var, block113);
	
	phi540_var->addIncoming(binop539_var, block115);
	phi540_var->addIncoming(phi502_var, block106);
	
	return;
}

void x86::x86_adcx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[16], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_add(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	BasicBlock* block84 = BasicBlock::Create(context, "", function);
	BasicBlock* block85 = BasicBlock::Create(context, "", function);
	BasicBlock* block86 = BasicBlock::Create(context, "", function);
	BasicBlock* block87 = BasicBlock::Create(context, "", function);
	BasicBlock* block88 = BasicBlock::Create(context, "", function);
	BasicBlock* block89 = BasicBlock::Create(context, "", function);
	BasicBlock* block90 = BasicBlock::Create(context, "", function);
	BasicBlock* block91 = BasicBlock::Create(context, "", function);
	BasicBlock* block92 = BasicBlock::Create(context, "", function);
	BasicBlock* block93 = BasicBlock::Create(context, "", function);
	BasicBlock* block94 = BasicBlock::Create(context, "", function);
	BasicBlock* block95 = BasicBlock::Create(context, "", function);
	BasicBlock* block96 = BasicBlock::Create(context, "", function);
	BasicBlock* block97 = BasicBlock::Create(context, "", function);
	BasicBlock* block98 = BasicBlock::Create(context, "", function);
	BasicBlock* block99 = BasicBlock::Create(context, "", function);
	BasicBlock* block100 = BasicBlock::Create(context, "", function);
	BasicBlock* block101 = BasicBlock::Create(context, "", function);
	BasicBlock* block102 = BasicBlock::Create(context, "", function);
	BasicBlock* block103 = BasicBlock::Create(context, "", function);
	BasicBlock* block104 = BasicBlock::Create(context, "", function);
	BasicBlock* block105 = BasicBlock::Create(context, "", function);
	BasicBlock* block106 = BasicBlock::Create(context, "", function);
	BasicBlock* block107 = BasicBlock::Create(context, "", function);
	BasicBlock* block108 = BasicBlock::Create(context, "", function);
	BasicBlock* block109 = BasicBlock::Create(context, "", function);
	BasicBlock* block110 = BasicBlock::Create(context, "", function);
	BasicBlock* block111 = BasicBlock::Create(context, "", function);
	BasicBlock* block112 = BasicBlock::Create(context, "", function);
	BasicBlock* block113 = BasicBlock::Create(context, "", function);
	BasicBlock* block114 = BasicBlock::Create(context, "", function);
	BasicBlock* block115 = BasicBlock::Create(context, "", function);
	BasicBlock* block116 = BasicBlock::Create(context, "", function);
	BasicBlock* block117 = BasicBlock::Create(context, "", function);
	BasicBlock* block118 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block39, 2);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block9);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep11_var = builder.CreateGEP(arg3, gep11_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep11_var, false);
	load12_var->setAlignment(4);
	Value* cast13_var = builder.CreateCast(Instruction::ZExt, load12_var, types[0]);
	ArrayRef<Value*> gep14_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(globals[5], gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast13_var, switch9_val9_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep18_var, false);
	load19_var->setAlignment(16);
	Constant* cmp20_val20_int = ConstantInt::get(types[0], 8u);
	Value* cmp20_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp20_val20_int);
	builder.CreateCondBr(cmp20_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep22_array { load16_var, };
	Value* gep22_var = builder.CreateInBoundsGEP(cast17_var, gep22_array);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, gep22_var, types[27]);
	llvm::LoadInst* load24_var = builder.CreateLoad(cast23_var, false);
	load24_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(8);
	Value* binop27_var = BinaryOperator::Create(Instruction::Add, load26_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 4u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { binop27_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast17_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[28]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(4);
	Value* cast33_var = builder.CreateCast(Instruction::ZExt, load32_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block5);
	Constant* gep34_val34_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep34_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop27_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load19_var, block8, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block6);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load45_var = builder.CreateLoad(gep44_var, false);
	load45_var->setAlignment(8);
	Value* binop46_var = BinaryOperator::Create(Instruction::Add, load45_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep47_array { binop46_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast17_var, gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(1);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep51_array { gep4_val4_int, gep4_val4_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[7], gep51_array);
	CallInst* call50_var = builder.CreateCall(globals[6], gep51_var);
	call50_var->setTailCall();
	call50_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val6_int);
	builder.CreateCondBr(cmp56_var, block18, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, switch9_val9_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp20_val20_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch38_val38_int), block15);
	switch78_var->addCase(cast<ConstantInt>(switch38_val39_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep51_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, gep4_val6_int);
	builder.CreateCondBr(cmp92_var, block28, block19);
	
	builder.SetInsertPoint(block19);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast93_var, switch9_val9_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp20_val20_int);
	builder.CreateCondBr(cmp99_var, block20, block21);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep100_array { load95_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast96_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[27]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(8);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(8);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, load95_var, "", builder.GetInsertBlock());
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { binop105_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast96_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[28]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(4);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop105_var, "", builder.GetInsertBlock());
	SwitchInst* switch114_var = builder.CreateSwitch(load98_var, block26, 2);
	switch114_var->addCase(cast<ConstantInt>(switch38_val38_int), block24);
	switch114_var->addCase(cast<ConstantInt>(switch38_val39_int), block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast96_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[30]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(2);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(8);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop113_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast96_var, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(1);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block26);
	CallInst* call124_var = builder.CreateCall(globals[6], gep51_var);
	call124_var->setTailCall();
	call124_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block27);
	PHINode* phi125_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep126_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(arg3, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(4);
	Value* cast128_var = builder.CreateCast(Instruction::SExt, load127_var, types[0]);
	Value* binop129_var = BinaryOperator::Create(Instruction::Mul, cast128_var, phi125_var, "", builder.GetInsertBlock());
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, binop129_var, phi89_var, "", builder.GetInsertBlock());
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep132_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, gep4_val6_int);
	builder.CreateCondBr(cmp134_var, block38, block29);
	
	builder.SetInsertPoint(block29);
	Value* cast135_var = builder.CreateCast(Instruction::ZExt, load133_var, types[0]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast135_var, switch9_val9_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp20_val20_int);
	builder.CreateCondBr(cmp141_var, block30, block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep142_array { load137_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast138_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[27]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(8);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(8);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, load137_var, "", builder.GetInsertBlock());
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { binop147_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast138_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[28]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(4);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop147_var, "", builder.GetInsertBlock());
	SwitchInst* switch156_var = builder.CreateSwitch(load140_var, block36, 2);
	switch156_var->addCase(cast<ConstantInt>(switch38_val38_int), block34);
	switch156_var->addCase(cast<ConstantInt>(switch38_val39_int), block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast138_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[30]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(2);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(8);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop155_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast138_var, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block36);
	CallInst* call166_var = builder.CreateCall(globals[6], gep51_var);
	call166_var->setTailCall();
	call166_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block37);
	PHINode* phi167_var = builder.CreatePHI(types[0], 4);
	Value* binop168_var = BinaryOperator::Create(Instruction::Add, phi167_var, phi131_var, "", builder.GetInsertBlock());
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block38);
	PHINode* phi169_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep170_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(arg3, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	CallInst* call173_var = builder.CreateCall2(globals[8], phi169_var, cast172_var);
	call173_var->setTailCall();
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val4_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[9], gep175_array);
	CallInst* call175_var = builder.CreateCall(globals[6], gep175_var);
	call175_var->setTailCall();
	call175_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi178_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep179_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep4_val6_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(arg3, gep179_array);
	llvm::LoadInst* load180_var = builder.CreateLoad(gep179_var, false);
	load180_var->setAlignment(4);
	SwitchInst* switch181_var = builder.CreateSwitch(load180_var, block80, 3);
	switch181_var->addCase(cast<ConstantInt>(gep34_val34_int), block41);
	switch181_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch181_var->addCase(cast<ConstantInt>(switch9_val10_int), block50);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep181_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(arg3, gep181_array);
	Value* cast182_var = builder.CreateCast(Instruction::BitCast, gep181_var, types[27]);
	llvm::LoadInst* load183_var = builder.CreateLoad(cast182_var, false);
	load183_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Value* cast189_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast186_var, switch9_val9_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp20_val20_int);
	builder.CreateCondBr(cmp192_var, block43, block44);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep193_array { load188_var, };
	Value* gep193_var = builder.CreateInBoundsGEP(cast189_var, gep193_array);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, gep193_var, types[27]);
	llvm::LoadInst* load195_var = builder.CreateLoad(cast194_var, false);
	load195_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(8);
	Value* binop198_var = BinaryOperator::Create(Instruction::Add, load197_var, load188_var, "", builder.GetInsertBlock());
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp28_val28_int);
	builder.CreateCondBr(cmp199_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep200_array { binop198_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast189_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[28]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(4);
	Value* cast203_var = builder.CreateCast(Instruction::ZExt, load202_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep204_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep204_var = builder.CreateInBoundsGEP(globals[5], gep204_array);
	llvm::LoadInst* load205_var = builder.CreateLoad(gep204_var, false);
	load205_var->setAlignment(16);
	Value* binop206_var = BinaryOperator::Create(Instruction::Add, load205_var, binop198_var, "", builder.GetInsertBlock());
	SwitchInst* switch207_var = builder.CreateSwitch(load191_var, block49, 2);
	switch207_var->addCase(cast<ConstantInt>(switch38_val38_int), block47);
	switch207_var->addCase(cast<ConstantInt>(switch38_val39_int), block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { binop206_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast189_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[30]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(2);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(8);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop206_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast189_var, gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(1);
	Value* cast216_var = builder.CreateCast(Instruction::ZExt, load215_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block49);
	CallInst* call217_var = builder.CreateCall(globals[6], gep51_var);
	call217_var->setTailCall();
	call217_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep218_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(arg3, gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(4);
	Value* cmp220_var = builder.CreateICmp(CmpInst::ICMP_EQ, load219_var, gep4_val6_int);
	builder.CreateCondBr(cmp220_var, block59, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load219_var, types[0]);
	ArrayRef<Value*> gep222_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep222_var = builder.CreateInBoundsGEP(globals[5], gep222_array);
	llvm::LoadInst* load223_var = builder.CreateLoad(gep222_var, false);
	load223_var->setAlignment(16);
	Value* cast224_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast221_var, switch9_val9_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cmp227_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp20_val20_int);
	builder.CreateCondBr(cmp227_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep228_array { load223_var, };
	Value* gep228_var = builder.CreateInBoundsGEP(cast224_var, gep228_array);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, gep228_var, types[27]);
	llvm::LoadInst* load230_var = builder.CreateLoad(cast229_var, false);
	load230_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep231_var = builder.CreateInBoundsGEP(globals[5], gep231_array);
	llvm::LoadInst* load232_var = builder.CreateLoad(gep231_var, false);
	load232_var->setAlignment(8);
	Value* binop233_var = BinaryOperator::Create(Instruction::Add, load232_var, load223_var, "", builder.GetInsertBlock());
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp28_val28_int);
	builder.CreateCondBr(cmp234_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep235_array { binop233_var, };
	Value* gep235_var = builder.CreateInBoundsGEP(cast224_var, gep235_array);
	Value* cast236_var = builder.CreateCast(Instruction::BitCast, gep235_var, types[28]);
	llvm::LoadInst* load237_var = builder.CreateLoad(cast236_var, false);
	load237_var->setAlignment(4);
	Value* cast238_var = builder.CreateCast(Instruction::ZExt, load237_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* binop241_var = BinaryOperator::Create(Instruction::Add, load240_var, binop233_var, "", builder.GetInsertBlock());
	SwitchInst* switch242_var = builder.CreateSwitch(load226_var, block58, 2);
	switch242_var->addCase(cast<ConstantInt>(switch38_val38_int), block56);
	switch242_var->addCase(cast<ConstantInt>(switch38_val39_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { binop241_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast224_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[30]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(2);
	Value* cast245_var = builder.CreateCast(Instruction::ZExt, load244_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep246_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep246_var = builder.CreateInBoundsGEP(globals[5], gep246_array);
	llvm::LoadInst* load247_var = builder.CreateLoad(gep246_var, false);
	load247_var->setAlignment(8);
	Value* binop248_var = BinaryOperator::Create(Instruction::Add, load247_var, binop241_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep249_array { binop248_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast224_var, gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(1);
	Value* cast251_var = builder.CreateCast(Instruction::ZExt, load250_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call252_var = builder.CreateCall(globals[6], gep51_var);
	call252_var->setTailCall();
	call252_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi253_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep254_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep254_var = builder.CreateInBoundsGEP(arg3, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(4);
	Value* cmp256_var = builder.CreateICmp(CmpInst::ICMP_EQ, load255_var, gep4_val6_int);
	builder.CreateCondBr(cmp256_var, block69, block60);
	
	builder.SetInsertPoint(block60);
	Value* cast257_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	ArrayRef<Value*> gep258_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep258_var = builder.CreateInBoundsGEP(globals[5], gep258_array);
	llvm::LoadInst* load259_var = builder.CreateLoad(gep258_var, false);
	load259_var->setAlignment(16);
	Value* cast260_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast257_var, switch9_val9_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cmp263_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp20_val20_int);
	builder.CreateCondBr(cmp263_var, block61, block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep264_array { load259_var, };
	Value* gep264_var = builder.CreateInBoundsGEP(cast260_var, gep264_array);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, gep264_var, types[27]);
	llvm::LoadInst* load266_var = builder.CreateLoad(cast265_var, false);
	load266_var->setAlignment(8);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep267_var = builder.CreateInBoundsGEP(globals[5], gep267_array);
	llvm::LoadInst* load268_var = builder.CreateLoad(gep267_var, false);
	load268_var->setAlignment(8);
	Value* binop269_var = BinaryOperator::Create(Instruction::Add, load268_var, load259_var, "", builder.GetInsertBlock());
	Value* cmp270_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp28_val28_int);
	builder.CreateCondBr(cmp270_var, block63, block64);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep271_array { binop269_var, };
	Value* gep271_var = builder.CreateInBoundsGEP(cast260_var, gep271_array);
	Value* cast272_var = builder.CreateCast(Instruction::BitCast, gep271_var, types[28]);
	llvm::LoadInst* load273_var = builder.CreateLoad(cast272_var, false);
	load273_var->setAlignment(4);
	Value* cast274_var = builder.CreateCast(Instruction::ZExt, load273_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep275_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[5], gep275_array);
	llvm::LoadInst* load276_var = builder.CreateLoad(gep275_var, false);
	load276_var->setAlignment(16);
	Value* binop277_var = BinaryOperator::Create(Instruction::Add, load276_var, binop269_var, "", builder.GetInsertBlock());
	SwitchInst* switch278_var = builder.CreateSwitch(load262_var, block67, 2);
	switch278_var->addCase(cast<ConstantInt>(switch38_val38_int), block65);
	switch278_var->addCase(cast<ConstantInt>(switch38_val39_int), block66);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { binop277_var, };
	Value* gep278_var = builder.CreateInBoundsGEP(cast260_var, gep278_array);
	Value* cast279_var = builder.CreateCast(Instruction::BitCast, gep278_var, types[30]);
	llvm::LoadInst* load280_var = builder.CreateLoad(cast279_var, false);
	load280_var->setAlignment(2);
	Value* cast281_var = builder.CreateCast(Instruction::ZExt, load280_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep282_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep282_var = builder.CreateInBoundsGEP(globals[5], gep282_array);
	llvm::LoadInst* load283_var = builder.CreateLoad(gep282_var, false);
	load283_var->setAlignment(8);
	Value* binop284_var = BinaryOperator::Create(Instruction::Add, load283_var, binop277_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep285_array { binop284_var, };
	Value* gep285_var = builder.CreateInBoundsGEP(cast260_var, gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(1);
	Value* cast287_var = builder.CreateCast(Instruction::ZExt, load286_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block67);
	CallInst* call288_var = builder.CreateCall(globals[6], gep51_var);
	call288_var->setTailCall();
	call288_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block68);
	PHINode* phi289_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep290_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep290_var = builder.CreateInBoundsGEP(arg3, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(4);
	Value* cast292_var = builder.CreateCast(Instruction::SExt, load291_var, types[0]);
	Value* binop293_var = BinaryOperator::Create(Instruction::Mul, cast292_var, phi289_var, "", builder.GetInsertBlock());
	Value* binop294_var = BinaryOperator::Create(Instruction::Add, binop293_var, phi253_var, "", builder.GetInsertBlock());
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block69);
	PHINode* phi295_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep296_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep296_var = builder.CreateInBoundsGEP(arg3, gep296_array);
	llvm::LoadInst* load297_var = builder.CreateLoad(gep296_var, false);
	load297_var->setAlignment(4);
	Value* cmp298_var = builder.CreateICmp(CmpInst::ICMP_EQ, load297_var, gep4_val6_int);
	builder.CreateCondBr(cmp298_var, block79, block70);
	
	builder.SetInsertPoint(block70);
	Value* cast299_var = builder.CreateCast(Instruction::ZExt, load297_var, types[0]);
	ArrayRef<Value*> gep300_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep300_var = builder.CreateInBoundsGEP(globals[5], gep300_array);
	llvm::LoadInst* load301_var = builder.CreateLoad(gep300_var, false);
	load301_var->setAlignment(16);
	Value* cast302_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast299_var, switch9_val9_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cmp305_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp20_val20_int);
	builder.CreateCondBr(cmp305_var, block71, block72);
	
	builder.SetInsertPoint(block71);
	ArrayRef<Value*> gep306_array { load301_var, };
	Value* gep306_var = builder.CreateInBoundsGEP(cast302_var, gep306_array);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, gep306_var, types[27]);
	llvm::LoadInst* load308_var = builder.CreateLoad(cast307_var, false);
	load308_var->setAlignment(8);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep309_var = builder.CreateInBoundsGEP(globals[5], gep309_array);
	llvm::LoadInst* load310_var = builder.CreateLoad(gep309_var, false);
	load310_var->setAlignment(8);
	Value* binop311_var = BinaryOperator::Create(Instruction::Add, load310_var, load301_var, "", builder.GetInsertBlock());
	Value* cmp312_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp28_val28_int);
	builder.CreateCondBr(cmp312_var, block73, block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep313_array { binop311_var, };
	Value* gep313_var = builder.CreateInBoundsGEP(cast302_var, gep313_array);
	Value* cast314_var = builder.CreateCast(Instruction::BitCast, gep313_var, types[28]);
	llvm::LoadInst* load315_var = builder.CreateLoad(cast314_var, false);
	load315_var->setAlignment(4);
	Value* cast316_var = builder.CreateCast(Instruction::ZExt, load315_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep317_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep317_var = builder.CreateInBoundsGEP(globals[5], gep317_array);
	llvm::LoadInst* load318_var = builder.CreateLoad(gep317_var, false);
	load318_var->setAlignment(16);
	Value* binop319_var = BinaryOperator::Create(Instruction::Add, load318_var, binop311_var, "", builder.GetInsertBlock());
	SwitchInst* switch320_var = builder.CreateSwitch(load304_var, block77, 2);
	switch320_var->addCase(cast<ConstantInt>(switch38_val38_int), block75);
	switch320_var->addCase(cast<ConstantInt>(switch38_val39_int), block76);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { binop319_var, };
	Value* gep320_var = builder.CreateInBoundsGEP(cast302_var, gep320_array);
	Value* cast321_var = builder.CreateCast(Instruction::BitCast, gep320_var, types[30]);
	llvm::LoadInst* load322_var = builder.CreateLoad(cast321_var, false);
	load322_var->setAlignment(2);
	Value* cast323_var = builder.CreateCast(Instruction::ZExt, load322_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep324_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep324_var = builder.CreateInBoundsGEP(globals[5], gep324_array);
	llvm::LoadInst* load325_var = builder.CreateLoad(gep324_var, false);
	load325_var->setAlignment(8);
	Value* binop326_var = BinaryOperator::Create(Instruction::Add, load325_var, binop319_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep327_array { binop326_var, };
	Value* gep327_var = builder.CreateInBoundsGEP(cast302_var, gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(1);
	Value* cast329_var = builder.CreateCast(Instruction::ZExt, load328_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block77);
	CallInst* call330_var = builder.CreateCall(globals[6], gep51_var);
	call330_var->setTailCall();
	call330_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block78);
	PHINode* phi331_var = builder.CreatePHI(types[0], 4);
	Value* binop332_var = BinaryOperator::Create(Instruction::Add, phi331_var, phi295_var, "", builder.GetInsertBlock());
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block79);
	PHINode* phi333_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep334_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep34_val34_int, };
	Value* gep334_var = builder.CreateInBoundsGEP(arg3, gep334_array);
	llvm::LoadInst* load335_var = builder.CreateLoad(gep334_var, false);
	load335_var->setAlignment(1);
	Value* cast336_var = builder.CreateCast(Instruction::ZExt, load335_var, types[0]);
	CallInst* call337_var = builder.CreateCall2(globals[8], phi333_var, cast336_var);
	call337_var->setTailCall();
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block80);
	ArrayRef<Value*> gep338_array { gep4_val4_int, gep4_val4_int, };
	Value* gep338_var = builder.CreateInBoundsGEP(globals[10], gep338_array);
	CallInst* call338_var = builder.CreateCall(globals[6], gep338_var);
	call338_var->setTailCall();
	call338_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block81);
	PHINode* phi341_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep342_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep342_var = builder.CreateInBoundsGEP(arg3, gep342_array);
	llvm::LoadInst* load343_var = builder.CreateLoad(gep342_var, false);
	load343_var->setAlignment(1);
	Value* cast344_var = builder.CreateCast(Instruction::ZExt, load343_var, types[0]);
	CallInst* call345_var = builder.CreateCall2(globals[11], phi178_var, phi341_var);
	call345_var->setTailCall();
	call345_var->setDoesNotThrow();
	call345_var->setDoesNotAccessMemory();
	ArrayRef<unsigned> extr347_array { 0, };
	Value* extr347_var = builder.CreateExtractValue(call345_var, extr347_array);
	SwitchInst* switch348_var = builder.CreateSwitch(cast344_var, block84, 4);
	switch348_var->addCase(cast<ConstantInt>(cmp28_val28_int), block82);
	switch348_var->addCase(cast<ConstantInt>(switch38_val38_int), block82);
	switch348_var->addCase(cast<ConstantInt>(switch38_val39_int), block82);
	switch348_var->addCase(cast<ConstantInt>(cmp20_val20_int), block83);
	
	builder.SetInsertPoint(block82);
	Constant* binop348_val348_int = ConstantInt::get(types[0], 3u);
	Value* binop348_var = BinaryOperator::CreateNSW(Instruction::Shl, cast344_var, binop348_val348_int, "", builder.GetInsertBlock());
	Value* binop350_var = BinaryOperator::Create(Instruction::Shl, switch38_val39_int, binop348_var, "", builder.GetInsertBlock());
	Value* binop351_var = BinaryOperator::Create(Instruction::And, binop350_var, extr347_var, "", builder.GetInsertBlock());
	Value* cmp352_var = builder.CreateICmp(CmpInst::ICMP_NE, binop351_var, gep4_val4_int);
	Value* cast353_var = builder.CreateCast(Instruction::ZExt, cmp352_var, types[11]);
	Constant* binop354_val354_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop354_var = BinaryOperator::CreateNSW(Instruction::Add, binop348_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop356_var = BinaryOperator::Create(Instruction::Shl, switch38_val39_int, binop354_var, "", builder.GetInsertBlock());
	Value* binop357_var = BinaryOperator::Create(Instruction::And, binop356_var, extr347_var, "", builder.GetInsertBlock());
	Value* cmp358_var = builder.CreateICmp(CmpInst::ICMP_NE, binop357_var, gep4_val4_int);
	Value* cast359_var = builder.CreateCast(Instruction::ZExt, cmp358_var, types[11]);
	builder.CreateBr(block85);
	
	builder.SetInsertPoint(block83);
	ArrayRef<unsigned> extr360_array { 1, };
	Value* extr360_var = builder.CreateExtractValue(call345_var, extr360_array);
	Value* cast361_var = builder.CreateCast(Instruction::ZExt, extr360_var, types[11]);
	Constant* binop362_val362_int = ConstantInt::get(types[0], 63u);
	Value* binop362_var = BinaryOperator::Create(Instruction::LShr, extr347_var, binop362_val362_int, "", builder.GetInsertBlock());
	Value* cast364_var = builder.CreateCast(Instruction::Trunc, binop362_var, types[11]);
	builder.CreateBr(block85);
	
	builder.SetInsertPoint(block84);
	ArrayRef<Value*> gep365_array { gep4_val4_int, gep4_val4_int, };
	Value* gep365_var = builder.CreateInBoundsGEP(globals[12], gep365_array);
	CallInst* call365_var = builder.CreateCall(globals[6], gep365_var);
	call365_var->setTailCall();
	call365_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block85);
	PHINode* phi368_var = builder.CreatePHI(types[11], 2);
	PHINode* phi369_var = builder.CreatePHI(types[11], 2);
	ArrayRef<Value*> gep370_array { gep4_val4_int, gep4_val6_int, };
	Value* gep370_var = builder.CreateInBoundsGEP(arg2, gep370_array);
	llvm::StoreInst* store371_var = builder.CreateStore(phi368_var, gep370_var, false);
	store371_var->setAlignment(1);
	Constant* binop372_val372_int = ConstantInt::get(types[11], 1u);
	Value* binop372_var = BinaryOperator::Create(Instruction::And, phi369_var, binop372_val372_int, "", builder.GetInsertBlock());
	Constant* gep374_val374_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep374_array { gep4_val4_int, gep374_val374_int, };
	Value* gep374_var = builder.CreateInBoundsGEP(arg2, gep374_array);
	llvm::StoreInst* store376_var = builder.CreateStore(binop372_var, gep374_var, false);
	store376_var->setAlignment(1);
	CallInst* call377_var = builder.CreateCall(globals[13], extr347_var);
	call377_var->setTailCall();
	call377_var->setDoesNotThrow();
	call377_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep379_array { gep4_val4_int, switch9_val9_int, };
	Value* gep379_var = builder.CreateInBoundsGEP(arg2, gep379_array);
	Value* cast380_var = builder.CreateCast(Instruction::Trunc, call377_var, types[11]);
	Value* binop381_var = BinaryOperator::Create(Instruction::And, cast380_var, binop372_val372_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store382_var = builder.CreateStore(binop381_var, gep379_var, false);
	store382_var->setAlignment(1);
	Constant* binop383_val383_int = ConstantInt::get(types[0], 15u);
	Value* binop383_var = BinaryOperator::Create(Instruction::And, phi178_var, binop383_val383_int, "", builder.GetInsertBlock());
	Value* binop385_var = BinaryOperator::Create(Instruction::And, phi341_var, binop383_val383_int, "", builder.GetInsertBlock());
	Value* binop386_var = BinaryOperator::CreateNSW(Instruction::Add, binop385_var, binop383_var, "", builder.GetInsertBlock());
	Value* cmp387_var = builder.CreateICmp(CmpInst::ICMP_UGT, binop386_var, binop383_val383_int);
	ArrayRef<Value*> gep388_array { gep4_val4_int, gep34_val34_int, };
	Value* gep388_var = builder.CreateInBoundsGEP(arg2, gep388_array);
	Value* cast389_var = builder.CreateCast(Instruction::ZExt, cmp387_var, types[11]);
	llvm::StoreInst* store390_var = builder.CreateStore(cast389_var, gep388_var, false);
	store390_var->setAlignment(1);
	Value* cmp391_var = builder.CreateICmp(CmpInst::ICMP_EQ, extr347_var, gep4_val4_int);
	ArrayRef<Value*> gep392_array { gep4_val4_int, switch9_val10_int, };
	Value* gep392_var = builder.CreateInBoundsGEP(arg2, gep392_array);
	Value* cast393_var = builder.CreateCast(Instruction::ZExt, cmp391_var, types[11]);
	llvm::StoreInst* store394_var = builder.CreateStore(cast393_var, gep392_var, false);
	store394_var->setAlignment(1);
	Constant* gep395_val395_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep395_array { gep4_val4_int, gep395_val395_int, };
	Value* gep395_var = builder.CreateInBoundsGEP(arg2, gep395_array);
	Value* binop397_var = BinaryOperator::Create(Instruction::Xor, binop372_var, phi368_var, "", builder.GetInsertBlock());
	llvm::StoreInst* store398_var = builder.CreateStore(binop397_var, gep395_var, false);
	store398_var->setAlignment(1);
	llvm::LoadInst* load399_var = builder.CreateLoad(gep4_var, false);
	load399_var->setAlignment(4);
	SwitchInst* switch400_var = builder.CreateSwitch(load399_var, block117, 2);
	switch400_var->addCase(cast<ConstantInt>(switch9_val9_int), block86);
	switch400_var->addCase(cast<ConstantInt>(switch9_val10_int), block87);
	
	builder.SetInsertPoint(block86);
	ArrayRef<Value*> gep400_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep400_var = builder.CreateGEP(arg3, gep400_array);
	llvm::LoadInst* load401_var = builder.CreateLoad(gep400_var, false);
	load401_var->setAlignment(4);
	Value* cast402_var = builder.CreateCast(Instruction::ZExt, load401_var, types[0]);
	ArrayRef<Value*> gep403_array { gep4_val4_int, cast402_var, switch9_val9_int, };
	Value* gep403_var = builder.CreateInBoundsGEP(globals[5], gep403_array);
	llvm::LoadInst* load404_var = builder.CreateLoad(gep403_var, false);
	load404_var->setAlignment(16);
	Value* binop405_var = BinaryOperator::Create(Instruction::Shl, load404_var, binop348_val348_int, "", builder.GetInsertBlock());
	Constant* binop406_val406_int = ConstantInt::get(types[0], 64u);
	Value* binop406_var = BinaryOperator::Create(Instruction::Sub, binop406_val406_int, binop405_var, "", builder.GetInsertBlock());
	Value* binop408_var = BinaryOperator::Create(Instruction::LShr, binop354_val354_int, binop406_var, "", builder.GetInsertBlock());
	Value* binop409_var = BinaryOperator::Create(Instruction::And, binop408_var, extr347_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep410_array { gep4_val4_int, cast402_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep410_var = builder.CreateInBoundsGEP(globals[5], gep410_array);
	llvm::LoadInst* load411_var = builder.CreateLoad(gep410_var, false);
	load411_var->setAlignment(16);
	Value* cast412_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep413_array { load411_var, };
	Value* gep413_var = builder.CreateInBoundsGEP(cast412_var, gep413_array);
	Value* cast414_var = builder.CreateCast(Instruction::BitCast, gep413_var, types[27]);
	llvm::StoreInst* store415_var = builder.CreateStore(binop409_var, cast414_var, false);
	store415_var->setAlignment(8);
	builder.CreateBr(block118);
	
	builder.SetInsertPoint(block87);
	ArrayRef<Value*> gep416_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep416_var = builder.CreateInBoundsGEP(arg3, gep416_array);
	llvm::LoadInst* load417_var = builder.CreateLoad(gep416_var, false);
	load417_var->setAlignment(4);
	Value* cmp418_var = builder.CreateICmp(CmpInst::ICMP_EQ, load417_var, gep4_val6_int);
	builder.CreateCondBr(cmp418_var, block96, block88);
	
	builder.SetInsertPoint(block88);
	Value* cast419_var = builder.CreateCast(Instruction::ZExt, load417_var, types[0]);
	ArrayRef<Value*> gep420_array { gep4_val4_int, cast419_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep420_var = builder.CreateInBoundsGEP(globals[5], gep420_array);
	llvm::LoadInst* load421_var = builder.CreateLoad(gep420_var, false);
	load421_var->setAlignment(16);
	Value* cast422_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep423_array { gep4_val4_int, cast419_var, switch9_val9_int, };
	Value* gep423_var = builder.CreateInBoundsGEP(globals[5], gep423_array);
	llvm::LoadInst* load424_var = builder.CreateLoad(gep423_var, false);
	load424_var->setAlignment(16);
	Value* cmp425_var = builder.CreateICmp(CmpInst::ICMP_EQ, load424_var, cmp20_val20_int);
	builder.CreateCondBr(cmp425_var, block89, block90);
	
	builder.SetInsertPoint(block89);
	ArrayRef<Value*> gep426_array { load421_var, };
	Value* gep426_var = builder.CreateInBoundsGEP(cast422_var, gep426_array);
	Value* cast427_var = builder.CreateCast(Instruction::BitCast, gep426_var, types[27]);
	llvm::LoadInst* load428_var = builder.CreateLoad(cast427_var, false);
	load428_var->setAlignment(8);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block90);
	ArrayRef<Value*> gep429_array { gep4_val4_int, cast419_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep429_var = builder.CreateInBoundsGEP(globals[5], gep429_array);
	llvm::LoadInst* load430_var = builder.CreateLoad(gep429_var, false);
	load430_var->setAlignment(8);
	Value* binop431_var = BinaryOperator::Create(Instruction::Add, load430_var, load421_var, "", builder.GetInsertBlock());
	Value* cmp432_var = builder.CreateICmp(CmpInst::ICMP_EQ, load424_var, cmp28_val28_int);
	builder.CreateCondBr(cmp432_var, block91, block92);
	
	builder.SetInsertPoint(block91);
	ArrayRef<Value*> gep433_array { binop431_var, };
	Value* gep433_var = builder.CreateInBoundsGEP(cast422_var, gep433_array);
	Value* cast434_var = builder.CreateCast(Instruction::BitCast, gep433_var, types[28]);
	llvm::LoadInst* load435_var = builder.CreateLoad(cast434_var, false);
	load435_var->setAlignment(4);
	Value* cast436_var = builder.CreateCast(Instruction::ZExt, load435_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block92);
	ArrayRef<Value*> gep437_array { gep4_val4_int, cast419_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep437_var = builder.CreateInBoundsGEP(globals[5], gep437_array);
	llvm::LoadInst* load438_var = builder.CreateLoad(gep437_var, false);
	load438_var->setAlignment(16);
	Value* binop439_var = BinaryOperator::Create(Instruction::Add, load438_var, binop431_var, "", builder.GetInsertBlock());
	SwitchInst* switch440_var = builder.CreateSwitch(load424_var, block95, 2);
	switch440_var->addCase(cast<ConstantInt>(switch38_val38_int), block93);
	switch440_var->addCase(cast<ConstantInt>(switch38_val39_int), block94);
	
	builder.SetInsertPoint(block93);
	ArrayRef<Value*> gep440_array { binop439_var, };
	Value* gep440_var = builder.CreateInBoundsGEP(cast422_var, gep440_array);
	Value* cast441_var = builder.CreateCast(Instruction::BitCast, gep440_var, types[30]);
	llvm::LoadInst* load442_var = builder.CreateLoad(cast441_var, false);
	load442_var->setAlignment(2);
	Value* cast443_var = builder.CreateCast(Instruction::ZExt, load442_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block94);
	ArrayRef<Value*> gep444_array { gep4_val4_int, cast419_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep444_var = builder.CreateInBoundsGEP(globals[5], gep444_array);
	llvm::LoadInst* load445_var = builder.CreateLoad(gep444_var, false);
	load445_var->setAlignment(8);
	Value* binop446_var = BinaryOperator::Create(Instruction::Add, load445_var, binop439_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep447_array { binop446_var, };
	Value* gep447_var = builder.CreateInBoundsGEP(cast422_var, gep447_array);
	llvm::LoadInst* load448_var = builder.CreateLoad(gep447_var, false);
	load448_var->setAlignment(1);
	Value* cast449_var = builder.CreateCast(Instruction::ZExt, load448_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block95);
	CallInst* call450_var = builder.CreateCall(globals[6], gep51_var);
	call450_var->setTailCall();
	call450_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block96);
	PHINode* phi451_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep452_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep452_var = builder.CreateInBoundsGEP(arg3, gep452_array);
	llvm::LoadInst* load453_var = builder.CreateLoad(gep452_var, false);
	load453_var->setAlignment(4);
	Value* cmp454_var = builder.CreateICmp(CmpInst::ICMP_EQ, load453_var, gep4_val6_int);
	builder.CreateCondBr(cmp454_var, block106, block97);
	
	builder.SetInsertPoint(block97);
	Value* cast455_var = builder.CreateCast(Instruction::ZExt, load453_var, types[0]);
	ArrayRef<Value*> gep456_array { gep4_val4_int, cast455_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep456_var = builder.CreateInBoundsGEP(globals[5], gep456_array);
	llvm::LoadInst* load457_var = builder.CreateLoad(gep456_var, false);
	load457_var->setAlignment(16);
	Value* cast458_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep459_array { gep4_val4_int, cast455_var, switch9_val9_int, };
	Value* gep459_var = builder.CreateInBoundsGEP(globals[5], gep459_array);
	llvm::LoadInst* load460_var = builder.CreateLoad(gep459_var, false);
	load460_var->setAlignment(16);
	Value* cmp461_var = builder.CreateICmp(CmpInst::ICMP_EQ, load460_var, cmp20_val20_int);
	builder.CreateCondBr(cmp461_var, block98, block99);
	
	builder.SetInsertPoint(block98);
	ArrayRef<Value*> gep462_array { load457_var, };
	Value* gep462_var = builder.CreateInBoundsGEP(cast458_var, gep462_array);
	Value* cast463_var = builder.CreateCast(Instruction::BitCast, gep462_var, types[27]);
	llvm::LoadInst* load464_var = builder.CreateLoad(cast463_var, false);
	load464_var->setAlignment(8);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block99);
	ArrayRef<Value*> gep465_array { gep4_val4_int, cast455_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep465_var = builder.CreateInBoundsGEP(globals[5], gep465_array);
	llvm::LoadInst* load466_var = builder.CreateLoad(gep465_var, false);
	load466_var->setAlignment(8);
	Value* binop467_var = BinaryOperator::Create(Instruction::Add, load466_var, load457_var, "", builder.GetInsertBlock());
	Value* cmp468_var = builder.CreateICmp(CmpInst::ICMP_EQ, load460_var, cmp28_val28_int);
	builder.CreateCondBr(cmp468_var, block100, block101);
	
	builder.SetInsertPoint(block100);
	ArrayRef<Value*> gep469_array { binop467_var, };
	Value* gep469_var = builder.CreateInBoundsGEP(cast458_var, gep469_array);
	Value* cast470_var = builder.CreateCast(Instruction::BitCast, gep469_var, types[28]);
	llvm::LoadInst* load471_var = builder.CreateLoad(cast470_var, false);
	load471_var->setAlignment(4);
	Value* cast472_var = builder.CreateCast(Instruction::ZExt, load471_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block101);
	ArrayRef<Value*> gep473_array { gep4_val4_int, cast455_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep473_var = builder.CreateInBoundsGEP(globals[5], gep473_array);
	llvm::LoadInst* load474_var = builder.CreateLoad(gep473_var, false);
	load474_var->setAlignment(16);
	Value* binop475_var = BinaryOperator::Create(Instruction::Add, load474_var, binop467_var, "", builder.GetInsertBlock());
	SwitchInst* switch476_var = builder.CreateSwitch(load460_var, block104, 2);
	switch476_var->addCase(cast<ConstantInt>(switch38_val38_int), block102);
	switch476_var->addCase(cast<ConstantInt>(switch38_val39_int), block103);
	
	builder.SetInsertPoint(block102);
	ArrayRef<Value*> gep476_array { binop475_var, };
	Value* gep476_var = builder.CreateInBoundsGEP(cast458_var, gep476_array);
	Value* cast477_var = builder.CreateCast(Instruction::BitCast, gep476_var, types[30]);
	llvm::LoadInst* load478_var = builder.CreateLoad(cast477_var, false);
	load478_var->setAlignment(2);
	Value* cast479_var = builder.CreateCast(Instruction::ZExt, load478_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block103);
	ArrayRef<Value*> gep480_array { gep4_val4_int, cast455_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep480_var = builder.CreateInBoundsGEP(globals[5], gep480_array);
	llvm::LoadInst* load481_var = builder.CreateLoad(gep480_var, false);
	load481_var->setAlignment(8);
	Value* binop482_var = BinaryOperator::Create(Instruction::Add, load481_var, binop475_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep483_array { binop482_var, };
	Value* gep483_var = builder.CreateInBoundsGEP(cast458_var, gep483_array);
	llvm::LoadInst* load484_var = builder.CreateLoad(gep483_var, false);
	load484_var->setAlignment(1);
	Value* cast485_var = builder.CreateCast(Instruction::ZExt, load484_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block104);
	CallInst* call486_var = builder.CreateCall(globals[6], gep51_var);
	call486_var->setTailCall();
	call486_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block105);
	PHINode* phi487_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep488_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep488_var = builder.CreateInBoundsGEP(arg3, gep488_array);
	llvm::LoadInst* load489_var = builder.CreateLoad(gep488_var, false);
	load489_var->setAlignment(4);
	Value* cast490_var = builder.CreateCast(Instruction::SExt, load489_var, types[0]);
	Value* binop491_var = BinaryOperator::Create(Instruction::Mul, cast490_var, phi487_var, "", builder.GetInsertBlock());
	Value* binop492_var = BinaryOperator::Create(Instruction::Add, binop491_var, phi451_var, "", builder.GetInsertBlock());
	builder.CreateBr(block106);
	
	builder.SetInsertPoint(block106);
	PHINode* phi493_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep494_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep494_var = builder.CreateInBoundsGEP(arg3, gep494_array);
	llvm::LoadInst* load495_var = builder.CreateLoad(gep494_var, false);
	load495_var->setAlignment(4);
	Value* cmp496_var = builder.CreateICmp(CmpInst::ICMP_EQ, load495_var, gep4_val6_int);
	builder.CreateCondBr(cmp496_var, block116, block107);
	
	builder.SetInsertPoint(block107);
	Value* cast497_var = builder.CreateCast(Instruction::ZExt, load495_var, types[0]);
	ArrayRef<Value*> gep498_array { gep4_val4_int, cast497_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep498_var = builder.CreateInBoundsGEP(globals[5], gep498_array);
	llvm::LoadInst* load499_var = builder.CreateLoad(gep498_var, false);
	load499_var->setAlignment(16);
	Value* cast500_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep501_array { gep4_val4_int, cast497_var, switch9_val9_int, };
	Value* gep501_var = builder.CreateInBoundsGEP(globals[5], gep501_array);
	llvm::LoadInst* load502_var = builder.CreateLoad(gep501_var, false);
	load502_var->setAlignment(16);
	Value* cmp503_var = builder.CreateICmp(CmpInst::ICMP_EQ, load502_var, cmp20_val20_int);
	builder.CreateCondBr(cmp503_var, block108, block109);
	
	builder.SetInsertPoint(block108);
	ArrayRef<Value*> gep504_array { load499_var, };
	Value* gep504_var = builder.CreateInBoundsGEP(cast500_var, gep504_array);
	Value* cast505_var = builder.CreateCast(Instruction::BitCast, gep504_var, types[27]);
	llvm::LoadInst* load506_var = builder.CreateLoad(cast505_var, false);
	load506_var->setAlignment(8);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block109);
	ArrayRef<Value*> gep507_array { gep4_val4_int, cast497_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep507_var = builder.CreateInBoundsGEP(globals[5], gep507_array);
	llvm::LoadInst* load508_var = builder.CreateLoad(gep507_var, false);
	load508_var->setAlignment(8);
	Value* binop509_var = BinaryOperator::Create(Instruction::Add, load508_var, load499_var, "", builder.GetInsertBlock());
	Value* cmp510_var = builder.CreateICmp(CmpInst::ICMP_EQ, load502_var, cmp28_val28_int);
	builder.CreateCondBr(cmp510_var, block110, block111);
	
	builder.SetInsertPoint(block110);
	ArrayRef<Value*> gep511_array { binop509_var, };
	Value* gep511_var = builder.CreateInBoundsGEP(cast500_var, gep511_array);
	Value* cast512_var = builder.CreateCast(Instruction::BitCast, gep511_var, types[28]);
	llvm::LoadInst* load513_var = builder.CreateLoad(cast512_var, false);
	load513_var->setAlignment(4);
	Value* cast514_var = builder.CreateCast(Instruction::ZExt, load513_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block111);
	ArrayRef<Value*> gep515_array { gep4_val4_int, cast497_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep515_var = builder.CreateInBoundsGEP(globals[5], gep515_array);
	llvm::LoadInst* load516_var = builder.CreateLoad(gep515_var, false);
	load516_var->setAlignment(16);
	Value* binop517_var = BinaryOperator::Create(Instruction::Add, load516_var, binop509_var, "", builder.GetInsertBlock());
	SwitchInst* switch518_var = builder.CreateSwitch(load502_var, block114, 2);
	switch518_var->addCase(cast<ConstantInt>(switch38_val38_int), block112);
	switch518_var->addCase(cast<ConstantInt>(switch38_val39_int), block113);
	
	builder.SetInsertPoint(block112);
	ArrayRef<Value*> gep518_array { binop517_var, };
	Value* gep518_var = builder.CreateInBoundsGEP(cast500_var, gep518_array);
	Value* cast519_var = builder.CreateCast(Instruction::BitCast, gep518_var, types[30]);
	llvm::LoadInst* load520_var = builder.CreateLoad(cast519_var, false);
	load520_var->setAlignment(2);
	Value* cast521_var = builder.CreateCast(Instruction::ZExt, load520_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block113);
	ArrayRef<Value*> gep522_array { gep4_val4_int, cast497_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep522_var = builder.CreateInBoundsGEP(globals[5], gep522_array);
	llvm::LoadInst* load523_var = builder.CreateLoad(gep522_var, false);
	load523_var->setAlignment(8);
	Value* binop524_var = BinaryOperator::Create(Instruction::Add, load523_var, binop517_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep525_array { binop524_var, };
	Value* gep525_var = builder.CreateInBoundsGEP(cast500_var, gep525_array);
	llvm::LoadInst* load526_var = builder.CreateLoad(gep525_var, false);
	load526_var->setAlignment(1);
	Value* cast527_var = builder.CreateCast(Instruction::ZExt, load526_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block114);
	CallInst* call528_var = builder.CreateCall(globals[6], gep51_var);
	call528_var->setTailCall();
	call528_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block115);
	PHINode* phi529_var = builder.CreatePHI(types[0], 4);
	Value* binop530_var = BinaryOperator::Create(Instruction::Add, phi529_var, phi493_var, "", builder.GetInsertBlock());
	builder.CreateBr(block116);
	
	builder.SetInsertPoint(block116);
	PHINode* phi531_var = builder.CreatePHI(types[0], 2);
	CallInst* call532_var = builder.CreateCall3(globals[14], phi531_var, cast344_var, extr347_var);
	call532_var->setTailCall();
	builder.CreateBr(block118);
	
	builder.SetInsertPoint(block117);
	ArrayRef<Value*> gep534_array { gep4_val4_int, gep4_val4_int, };
	Value* gep534_var = builder.CreateInBoundsGEP(globals[15], gep534_array);
	CallInst* call534_var = builder.CreateCall(globals[6], gep534_var);
	call534_var->setTailCall();
	call534_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block118);
	phi89_var->addIncoming(gep4_val4_int, block9);
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi125_var->addIncoming(load102_var, block20);
	phi125_var->addIncoming(cast110_var, block22);
	phi125_var->addIncoming(cast117_var, block24);
	phi125_var->addIncoming(cast123_var, block25);
	
	phi131_var->addIncoming(binop130_var, block27);
	phi131_var->addIncoming(phi89_var, block18);
	
	phi167_var->addIncoming(load144_var, block30);
	phi167_var->addIncoming(cast152_var, block32);
	phi167_var->addIncoming(cast159_var, block34);
	phi167_var->addIncoming(cast165_var, block35);
	
	phi169_var->addIncoming(binop168_var, block37);
	phi169_var->addIncoming(phi131_var, block28);
	
	phi178_var->addIncoming(call173_var, block38);
	phi178_var->addIncoming(load24_var, block2);
	phi178_var->addIncoming(cast33_var, block4);
	phi178_var->addIncoming(cast43_var, block6);
	phi178_var->addIncoming(cast49_var, block7);
	
	phi253_var->addIncoming(gep4_val4_int, block50);
	phi253_var->addIncoming(load230_var, block52);
	phi253_var->addIncoming(cast238_var, block54);
	phi253_var->addIncoming(cast245_var, block56);
	phi253_var->addIncoming(cast251_var, block57);
	
	phi289_var->addIncoming(load266_var, block61);
	phi289_var->addIncoming(cast274_var, block63);
	phi289_var->addIncoming(cast281_var, block65);
	phi289_var->addIncoming(cast287_var, block66);
	
	phi295_var->addIncoming(binop294_var, block68);
	phi295_var->addIncoming(phi253_var, block59);
	
	phi331_var->addIncoming(load308_var, block71);
	phi331_var->addIncoming(cast316_var, block73);
	phi331_var->addIncoming(cast323_var, block75);
	phi331_var->addIncoming(cast329_var, block76);
	
	phi333_var->addIncoming(binop332_var, block78);
	phi333_var->addIncoming(phi295_var, block69);
	
	phi341_var->addIncoming(call337_var, block79);
	phi341_var->addIncoming(load183_var, block41);
	phi341_var->addIncoming(load195_var, block43);
	phi341_var->addIncoming(cast203_var, block45);
	phi341_var->addIncoming(cast210_var, block47);
	phi341_var->addIncoming(cast216_var, block48);
	
	phi368_var->addIncoming(cast353_var, block82);
	phi368_var->addIncoming(cast361_var, block83);
	
	phi369_var->addIncoming(cast359_var, block82);
	phi369_var->addIncoming(cast364_var, block83);
	
	phi451_var->addIncoming(gep4_val4_int, block87);
	phi451_var->addIncoming(load428_var, block89);
	phi451_var->addIncoming(cast436_var, block91);
	phi451_var->addIncoming(cast443_var, block93);
	phi451_var->addIncoming(cast449_var, block94);
	
	phi487_var->addIncoming(load464_var, block98);
	phi487_var->addIncoming(cast472_var, block100);
	phi487_var->addIncoming(cast479_var, block102);
	phi487_var->addIncoming(cast485_var, block103);
	
	phi493_var->addIncoming(binop492_var, block105);
	phi493_var->addIncoming(phi451_var, block96);
	
	phi529_var->addIncoming(load506_var, block108);
	phi529_var->addIncoming(cast514_var, block110);
	phi529_var->addIncoming(cast521_var, block112);
	phi529_var->addIncoming(cast527_var, block113);
	
	phi531_var->addIncoming(binop530_var, block115);
	phi531_var->addIncoming(phi493_var, block106);
	
	return;
}

void x86::x86_addpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[17], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_addps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[18], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_addsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[19], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_addss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[20], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_addsubpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[21], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_addsubps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[22], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_adox(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[23], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aesdec(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[24], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aesdeclast(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[25], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aesenc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[26], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aesenclast(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[27], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aesimc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[28], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_aeskeygenassist(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[29], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_and(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	BasicBlock* block84 = BasicBlock::Create(context, "", function);
	BasicBlock* block85 = BasicBlock::Create(context, "", function);
	BasicBlock* block86 = BasicBlock::Create(context, "", function);
	BasicBlock* block87 = BasicBlock::Create(context, "", function);
	BasicBlock* block88 = BasicBlock::Create(context, "", function);
	BasicBlock* block89 = BasicBlock::Create(context, "", function);
	BasicBlock* block90 = BasicBlock::Create(context, "", function);
	BasicBlock* block91 = BasicBlock::Create(context, "", function);
	BasicBlock* block92 = BasicBlock::Create(context, "", function);
	BasicBlock* block93 = BasicBlock::Create(context, "", function);
	BasicBlock* block94 = BasicBlock::Create(context, "", function);
	BasicBlock* block95 = BasicBlock::Create(context, "", function);
	BasicBlock* block96 = BasicBlock::Create(context, "", function);
	BasicBlock* block97 = BasicBlock::Create(context, "", function);
	BasicBlock* block98 = BasicBlock::Create(context, "", function);
	BasicBlock* block99 = BasicBlock::Create(context, "", function);
	BasicBlock* block100 = BasicBlock::Create(context, "", function);
	BasicBlock* block101 = BasicBlock::Create(context, "", function);
	BasicBlock* block102 = BasicBlock::Create(context, "", function);
	BasicBlock* block103 = BasicBlock::Create(context, "", function);
	BasicBlock* block104 = BasicBlock::Create(context, "", function);
	BasicBlock* block105 = BasicBlock::Create(context, "", function);
	BasicBlock* block106 = BasicBlock::Create(context, "", function);
	BasicBlock* block107 = BasicBlock::Create(context, "", function);
	BasicBlock* block108 = BasicBlock::Create(context, "", function);
	BasicBlock* block109 = BasicBlock::Create(context, "", function);
	BasicBlock* block110 = BasicBlock::Create(context, "", function);
	BasicBlock* block111 = BasicBlock::Create(context, "", function);
	BasicBlock* block112 = BasicBlock::Create(context, "", function);
	BasicBlock* block113 = BasicBlock::Create(context, "", function);
	BasicBlock* block114 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block39, 2);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block9);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep11_var = builder.CreateGEP(arg3, gep11_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep11_var, false);
	load12_var->setAlignment(4);
	Value* cast13_var = builder.CreateCast(Instruction::ZExt, load12_var, types[0]);
	ArrayRef<Value*> gep14_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(globals[5], gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast13_var, switch9_val9_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep18_var, false);
	load19_var->setAlignment(16);
	Constant* cmp20_val20_int = ConstantInt::get(types[0], 8u);
	Value* cmp20_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp20_val20_int);
	builder.CreateCondBr(cmp20_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep22_array { load16_var, };
	Value* gep22_var = builder.CreateInBoundsGEP(cast17_var, gep22_array);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, gep22_var, types[27]);
	llvm::LoadInst* load24_var = builder.CreateLoad(cast23_var, false);
	load24_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(8);
	Value* binop27_var = BinaryOperator::Create(Instruction::Add, load26_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 4u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { binop27_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast17_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[28]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(4);
	Value* cast33_var = builder.CreateCast(Instruction::ZExt, load32_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block5);
	Constant* gep34_val34_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep34_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop27_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load19_var, block8, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block6);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load45_var = builder.CreateLoad(gep44_var, false);
	load45_var->setAlignment(8);
	Value* binop46_var = BinaryOperator::Create(Instruction::Add, load45_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep47_array { binop46_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast17_var, gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(1);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep51_array { gep4_val4_int, gep4_val4_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[7], gep51_array);
	CallInst* call50_var = builder.CreateCall(globals[6], gep51_var);
	call50_var->setTailCall();
	call50_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val6_int);
	builder.CreateCondBr(cmp56_var, block18, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, switch9_val9_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp20_val20_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch38_val38_int), block15);
	switch78_var->addCase(cast<ConstantInt>(switch38_val39_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep51_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, gep4_val6_int);
	builder.CreateCondBr(cmp92_var, block28, block19);
	
	builder.SetInsertPoint(block19);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast93_var, switch9_val9_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp20_val20_int);
	builder.CreateCondBr(cmp99_var, block20, block21);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep100_array { load95_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast96_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[27]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(8);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(8);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, load95_var, "", builder.GetInsertBlock());
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { binop105_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast96_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[28]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(4);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop105_var, "", builder.GetInsertBlock());
	SwitchInst* switch114_var = builder.CreateSwitch(load98_var, block26, 2);
	switch114_var->addCase(cast<ConstantInt>(switch38_val38_int), block24);
	switch114_var->addCase(cast<ConstantInt>(switch38_val39_int), block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast96_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[30]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(2);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(8);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop113_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast96_var, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(1);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block26);
	CallInst* call124_var = builder.CreateCall(globals[6], gep51_var);
	call124_var->setTailCall();
	call124_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block27);
	PHINode* phi125_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep126_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(arg3, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(4);
	Value* cast128_var = builder.CreateCast(Instruction::SExt, load127_var, types[0]);
	Value* binop129_var = BinaryOperator::Create(Instruction::Mul, cast128_var, phi125_var, "", builder.GetInsertBlock());
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, binop129_var, phi89_var, "", builder.GetInsertBlock());
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep132_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, gep4_val6_int);
	builder.CreateCondBr(cmp134_var, block38, block29);
	
	builder.SetInsertPoint(block29);
	Value* cast135_var = builder.CreateCast(Instruction::ZExt, load133_var, types[0]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast135_var, switch9_val9_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp20_val20_int);
	builder.CreateCondBr(cmp141_var, block30, block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep142_array { load137_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast138_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[27]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(8);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(8);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, load137_var, "", builder.GetInsertBlock());
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { binop147_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast138_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[28]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(4);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop147_var, "", builder.GetInsertBlock());
	SwitchInst* switch156_var = builder.CreateSwitch(load140_var, block36, 2);
	switch156_var->addCase(cast<ConstantInt>(switch38_val38_int), block34);
	switch156_var->addCase(cast<ConstantInt>(switch38_val39_int), block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast138_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[30]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(2);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(8);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop155_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast138_var, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block36);
	CallInst* call166_var = builder.CreateCall(globals[6], gep51_var);
	call166_var->setTailCall();
	call166_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block37);
	PHINode* phi167_var = builder.CreatePHI(types[0], 4);
	Value* binop168_var = BinaryOperator::Create(Instruction::Add, phi167_var, phi131_var, "", builder.GetInsertBlock());
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block38);
	PHINode* phi169_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep170_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(arg3, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	CallInst* call173_var = builder.CreateCall2(globals[8], phi169_var, cast172_var);
	call173_var->setTailCall();
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val4_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[9], gep175_array);
	CallInst* call175_var = builder.CreateCall(globals[6], gep175_var);
	call175_var->setTailCall();
	call175_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi178_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep179_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep4_val6_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(arg3, gep179_array);
	llvm::LoadInst* load180_var = builder.CreateLoad(gep179_var, false);
	load180_var->setAlignment(4);
	SwitchInst* switch181_var = builder.CreateSwitch(load180_var, block80, 3);
	switch181_var->addCase(cast<ConstantInt>(gep34_val34_int), block41);
	switch181_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch181_var->addCase(cast<ConstantInt>(switch9_val10_int), block50);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep181_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(arg3, gep181_array);
	Value* cast182_var = builder.CreateCast(Instruction::BitCast, gep181_var, types[27]);
	llvm::LoadInst* load183_var = builder.CreateLoad(cast182_var, false);
	load183_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Value* cast189_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast186_var, switch9_val9_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp20_val20_int);
	builder.CreateCondBr(cmp192_var, block43, block44);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep193_array { load188_var, };
	Value* gep193_var = builder.CreateInBoundsGEP(cast189_var, gep193_array);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, gep193_var, types[27]);
	llvm::LoadInst* load195_var = builder.CreateLoad(cast194_var, false);
	load195_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(8);
	Value* binop198_var = BinaryOperator::Create(Instruction::Add, load197_var, load188_var, "", builder.GetInsertBlock());
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp28_val28_int);
	builder.CreateCondBr(cmp199_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep200_array { binop198_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast189_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[28]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(4);
	Value* cast203_var = builder.CreateCast(Instruction::ZExt, load202_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep204_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep204_var = builder.CreateInBoundsGEP(globals[5], gep204_array);
	llvm::LoadInst* load205_var = builder.CreateLoad(gep204_var, false);
	load205_var->setAlignment(16);
	Value* binop206_var = BinaryOperator::Create(Instruction::Add, load205_var, binop198_var, "", builder.GetInsertBlock());
	SwitchInst* switch207_var = builder.CreateSwitch(load191_var, block49, 2);
	switch207_var->addCase(cast<ConstantInt>(switch38_val38_int), block47);
	switch207_var->addCase(cast<ConstantInt>(switch38_val39_int), block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { binop206_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast189_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[30]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(2);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(8);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop206_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast189_var, gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(1);
	Value* cast216_var = builder.CreateCast(Instruction::ZExt, load215_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block49);
	CallInst* call217_var = builder.CreateCall(globals[6], gep51_var);
	call217_var->setTailCall();
	call217_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep218_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(arg3, gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(4);
	Value* cmp220_var = builder.CreateICmp(CmpInst::ICMP_EQ, load219_var, gep4_val6_int);
	builder.CreateCondBr(cmp220_var, block59, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load219_var, types[0]);
	ArrayRef<Value*> gep222_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep222_var = builder.CreateInBoundsGEP(globals[5], gep222_array);
	llvm::LoadInst* load223_var = builder.CreateLoad(gep222_var, false);
	load223_var->setAlignment(16);
	Value* cast224_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast221_var, switch9_val9_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cmp227_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp20_val20_int);
	builder.CreateCondBr(cmp227_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep228_array { load223_var, };
	Value* gep228_var = builder.CreateInBoundsGEP(cast224_var, gep228_array);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, gep228_var, types[27]);
	llvm::LoadInst* load230_var = builder.CreateLoad(cast229_var, false);
	load230_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep231_var = builder.CreateInBoundsGEP(globals[5], gep231_array);
	llvm::LoadInst* load232_var = builder.CreateLoad(gep231_var, false);
	load232_var->setAlignment(8);
	Value* binop233_var = BinaryOperator::Create(Instruction::Add, load232_var, load223_var, "", builder.GetInsertBlock());
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp28_val28_int);
	builder.CreateCondBr(cmp234_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep235_array { binop233_var, };
	Value* gep235_var = builder.CreateInBoundsGEP(cast224_var, gep235_array);
	Value* cast236_var = builder.CreateCast(Instruction::BitCast, gep235_var, types[28]);
	llvm::LoadInst* load237_var = builder.CreateLoad(cast236_var, false);
	load237_var->setAlignment(4);
	Value* cast238_var = builder.CreateCast(Instruction::ZExt, load237_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* binop241_var = BinaryOperator::Create(Instruction::Add, load240_var, binop233_var, "", builder.GetInsertBlock());
	SwitchInst* switch242_var = builder.CreateSwitch(load226_var, block58, 2);
	switch242_var->addCase(cast<ConstantInt>(switch38_val38_int), block56);
	switch242_var->addCase(cast<ConstantInt>(switch38_val39_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { binop241_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast224_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[30]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(2);
	Value* cast245_var = builder.CreateCast(Instruction::ZExt, load244_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep246_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep246_var = builder.CreateInBoundsGEP(globals[5], gep246_array);
	llvm::LoadInst* load247_var = builder.CreateLoad(gep246_var, false);
	load247_var->setAlignment(8);
	Value* binop248_var = BinaryOperator::Create(Instruction::Add, load247_var, binop241_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep249_array { binop248_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast224_var, gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(1);
	Value* cast251_var = builder.CreateCast(Instruction::ZExt, load250_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call252_var = builder.CreateCall(globals[6], gep51_var);
	call252_var->setTailCall();
	call252_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi253_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep254_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep254_var = builder.CreateInBoundsGEP(arg3, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(4);
	Value* cmp256_var = builder.CreateICmp(CmpInst::ICMP_EQ, load255_var, gep4_val6_int);
	builder.CreateCondBr(cmp256_var, block69, block60);
	
	builder.SetInsertPoint(block60);
	Value* cast257_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	ArrayRef<Value*> gep258_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep258_var = builder.CreateInBoundsGEP(globals[5], gep258_array);
	llvm::LoadInst* load259_var = builder.CreateLoad(gep258_var, false);
	load259_var->setAlignment(16);
	Value* cast260_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast257_var, switch9_val9_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cmp263_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp20_val20_int);
	builder.CreateCondBr(cmp263_var, block61, block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep264_array { load259_var, };
	Value* gep264_var = builder.CreateInBoundsGEP(cast260_var, gep264_array);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, gep264_var, types[27]);
	llvm::LoadInst* load266_var = builder.CreateLoad(cast265_var, false);
	load266_var->setAlignment(8);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep267_var = builder.CreateInBoundsGEP(globals[5], gep267_array);
	llvm::LoadInst* load268_var = builder.CreateLoad(gep267_var, false);
	load268_var->setAlignment(8);
	Value* binop269_var = BinaryOperator::Create(Instruction::Add, load268_var, load259_var, "", builder.GetInsertBlock());
	Value* cmp270_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp28_val28_int);
	builder.CreateCondBr(cmp270_var, block63, block64);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep271_array { binop269_var, };
	Value* gep271_var = builder.CreateInBoundsGEP(cast260_var, gep271_array);
	Value* cast272_var = builder.CreateCast(Instruction::BitCast, gep271_var, types[28]);
	llvm::LoadInst* load273_var = builder.CreateLoad(cast272_var, false);
	load273_var->setAlignment(4);
	Value* cast274_var = builder.CreateCast(Instruction::ZExt, load273_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep275_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[5], gep275_array);
	llvm::LoadInst* load276_var = builder.CreateLoad(gep275_var, false);
	load276_var->setAlignment(16);
	Value* binop277_var = BinaryOperator::Create(Instruction::Add, load276_var, binop269_var, "", builder.GetInsertBlock());
	SwitchInst* switch278_var = builder.CreateSwitch(load262_var, block67, 2);
	switch278_var->addCase(cast<ConstantInt>(switch38_val38_int), block65);
	switch278_var->addCase(cast<ConstantInt>(switch38_val39_int), block66);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { binop277_var, };
	Value* gep278_var = builder.CreateInBoundsGEP(cast260_var, gep278_array);
	Value* cast279_var = builder.CreateCast(Instruction::BitCast, gep278_var, types[30]);
	llvm::LoadInst* load280_var = builder.CreateLoad(cast279_var, false);
	load280_var->setAlignment(2);
	Value* cast281_var = builder.CreateCast(Instruction::ZExt, load280_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep282_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep282_var = builder.CreateInBoundsGEP(globals[5], gep282_array);
	llvm::LoadInst* load283_var = builder.CreateLoad(gep282_var, false);
	load283_var->setAlignment(8);
	Value* binop284_var = BinaryOperator::Create(Instruction::Add, load283_var, binop277_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep285_array { binop284_var, };
	Value* gep285_var = builder.CreateInBoundsGEP(cast260_var, gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(1);
	Value* cast287_var = builder.CreateCast(Instruction::ZExt, load286_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block67);
	CallInst* call288_var = builder.CreateCall(globals[6], gep51_var);
	call288_var->setTailCall();
	call288_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block68);
	PHINode* phi289_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep290_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep290_var = builder.CreateInBoundsGEP(arg3, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(4);
	Value* cast292_var = builder.CreateCast(Instruction::SExt, load291_var, types[0]);
	Value* binop293_var = BinaryOperator::Create(Instruction::Mul, cast292_var, phi289_var, "", builder.GetInsertBlock());
	Value* binop294_var = BinaryOperator::Create(Instruction::Add, binop293_var, phi253_var, "", builder.GetInsertBlock());
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block69);
	PHINode* phi295_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep296_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep296_var = builder.CreateInBoundsGEP(arg3, gep296_array);
	llvm::LoadInst* load297_var = builder.CreateLoad(gep296_var, false);
	load297_var->setAlignment(4);
	Value* cmp298_var = builder.CreateICmp(CmpInst::ICMP_EQ, load297_var, gep4_val6_int);
	builder.CreateCondBr(cmp298_var, block79, block70);
	
	builder.SetInsertPoint(block70);
	Value* cast299_var = builder.CreateCast(Instruction::ZExt, load297_var, types[0]);
	ArrayRef<Value*> gep300_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep300_var = builder.CreateInBoundsGEP(globals[5], gep300_array);
	llvm::LoadInst* load301_var = builder.CreateLoad(gep300_var, false);
	load301_var->setAlignment(16);
	Value* cast302_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast299_var, switch9_val9_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cmp305_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp20_val20_int);
	builder.CreateCondBr(cmp305_var, block71, block72);
	
	builder.SetInsertPoint(block71);
	ArrayRef<Value*> gep306_array { load301_var, };
	Value* gep306_var = builder.CreateInBoundsGEP(cast302_var, gep306_array);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, gep306_var, types[27]);
	llvm::LoadInst* load308_var = builder.CreateLoad(cast307_var, false);
	load308_var->setAlignment(8);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep309_var = builder.CreateInBoundsGEP(globals[5], gep309_array);
	llvm::LoadInst* load310_var = builder.CreateLoad(gep309_var, false);
	load310_var->setAlignment(8);
	Value* binop311_var = BinaryOperator::Create(Instruction::Add, load310_var, load301_var, "", builder.GetInsertBlock());
	Value* cmp312_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp28_val28_int);
	builder.CreateCondBr(cmp312_var, block73, block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep313_array { binop311_var, };
	Value* gep313_var = builder.CreateInBoundsGEP(cast302_var, gep313_array);
	Value* cast314_var = builder.CreateCast(Instruction::BitCast, gep313_var, types[28]);
	llvm::LoadInst* load315_var = builder.CreateLoad(cast314_var, false);
	load315_var->setAlignment(4);
	Value* cast316_var = builder.CreateCast(Instruction::ZExt, load315_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep317_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep317_var = builder.CreateInBoundsGEP(globals[5], gep317_array);
	llvm::LoadInst* load318_var = builder.CreateLoad(gep317_var, false);
	load318_var->setAlignment(16);
	Value* binop319_var = BinaryOperator::Create(Instruction::Add, load318_var, binop311_var, "", builder.GetInsertBlock());
	SwitchInst* switch320_var = builder.CreateSwitch(load304_var, block77, 2);
	switch320_var->addCase(cast<ConstantInt>(switch38_val38_int), block75);
	switch320_var->addCase(cast<ConstantInt>(switch38_val39_int), block76);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { binop319_var, };
	Value* gep320_var = builder.CreateInBoundsGEP(cast302_var, gep320_array);
	Value* cast321_var = builder.CreateCast(Instruction::BitCast, gep320_var, types[30]);
	llvm::LoadInst* load322_var = builder.CreateLoad(cast321_var, false);
	load322_var->setAlignment(2);
	Value* cast323_var = builder.CreateCast(Instruction::ZExt, load322_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep324_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep324_var = builder.CreateInBoundsGEP(globals[5], gep324_array);
	llvm::LoadInst* load325_var = builder.CreateLoad(gep324_var, false);
	load325_var->setAlignment(8);
	Value* binop326_var = BinaryOperator::Create(Instruction::Add, load325_var, binop319_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep327_array { binop326_var, };
	Value* gep327_var = builder.CreateInBoundsGEP(cast302_var, gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(1);
	Value* cast329_var = builder.CreateCast(Instruction::ZExt, load328_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block77);
	CallInst* call330_var = builder.CreateCall(globals[6], gep51_var);
	call330_var->setTailCall();
	call330_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block78);
	PHINode* phi331_var = builder.CreatePHI(types[0], 4);
	Value* binop332_var = BinaryOperator::Create(Instruction::Add, phi331_var, phi295_var, "", builder.GetInsertBlock());
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block79);
	PHINode* phi333_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep334_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep34_val34_int, };
	Value* gep334_var = builder.CreateInBoundsGEP(arg3, gep334_array);
	llvm::LoadInst* load335_var = builder.CreateLoad(gep334_var, false);
	load335_var->setAlignment(1);
	Value* cast336_var = builder.CreateCast(Instruction::ZExt, load335_var, types[0]);
	CallInst* call337_var = builder.CreateCall2(globals[8], phi333_var, cast336_var);
	call337_var->setTailCall();
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block80);
	ArrayRef<Value*> gep338_array { gep4_val4_int, gep4_val4_int, };
	Value* gep338_var = builder.CreateInBoundsGEP(globals[10], gep338_array);
	CallInst* call338_var = builder.CreateCall(globals[6], gep338_var);
	call338_var->setTailCall();
	call338_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block81);
	PHINode* phi341_var = builder.CreatePHI(types[0], 6);
	Value* binop342_var = BinaryOperator::Create(Instruction::And, phi341_var, phi178_var, "", builder.GetInsertBlock());
	Constant* gep343_val343_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep343_array { gep4_val4_int, gep343_val343_int, };
	Value* gep343_var = builder.CreateInBoundsGEP(arg2, gep343_array);
	Constant* store345_val345_int = ConstantInt::get(types[11], 0u);
	llvm::StoreInst* store345_var = builder.CreateStore(store345_val345_int, gep343_var, false);
	store345_var->setAlignment(1);
	ArrayRef<Value*> gep347_array { gep4_val4_int, gep4_val6_int, };
	Value* gep347_var = builder.CreateInBoundsGEP(arg2, gep347_array);
	llvm::StoreInst* store348_var = builder.CreateStore(store345_val345_int, gep347_var, false);
	store348_var->setAlignment(1);
	ArrayRef<Value*> gep349_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep349_var = builder.CreateInBoundsGEP(arg3, gep349_array);
	llvm::LoadInst* load350_var = builder.CreateLoad(gep349_var, false);
	load350_var->setAlignment(1);
	Value* cast351_var = builder.CreateCast(Instruction::ZExt, load350_var, types[0]);
	Constant* binop352_val352_int = ConstantInt::get(types[0], 3u);
	Value* binop352_var = BinaryOperator::CreateNSW(Instruction::Shl, cast351_var, binop352_val352_int, "", builder.GetInsertBlock());
	Constant* binop354_val354_int = ConstantInt::get(types[0], 4294967295u);
	Value* binop354_var = BinaryOperator::CreateNSW(Instruction::Add, binop352_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop356_var = BinaryOperator::Create(Instruction::And, binop354_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop357_var = BinaryOperator::Create(Instruction::LShr, binop342_var, binop356_var, "", builder.GetInsertBlock());
	Value* cmp358_var = builder.CreateICmp(CmpInst::ICMP_NE, binop357_var, gep4_val4_int);
	Constant* gep359_val359_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep359_array { gep4_val4_int, gep359_val359_int, };
	Value* gep359_var = builder.CreateInBoundsGEP(arg2, gep359_array);
	Value* cast361_var = builder.CreateCast(Instruction::ZExt, cmp358_var, types[11]);
	llvm::StoreInst* store362_var = builder.CreateStore(cast361_var, gep359_var, false);
	store362_var->setAlignment(1);
	CallInst* call363_var = builder.CreateCall(globals[13], binop342_var);
	call363_var->setTailCall();
	call363_var->setDoesNotThrow();
	call363_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep365_array { gep4_val4_int, switch9_val9_int, };
	Value* gep365_var = builder.CreateInBoundsGEP(arg2, gep365_array);
	Value* cast366_var = builder.CreateCast(Instruction::Trunc, call363_var, types[11]);
	Constant* binop367_val367_int = ConstantInt::get(types[11], 1u);
	Value* binop367_var = BinaryOperator::Create(Instruction::And, cast366_var, binop367_val367_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store369_var = builder.CreateStore(binop367_var, gep365_var, false);
	store369_var->setAlignment(1);
	Value* cmp370_var = builder.CreateICmp(CmpInst::ICMP_EQ, binop342_var, gep4_val4_int);
	ArrayRef<Value*> gep371_array { gep4_val4_int, switch9_val10_int, };
	Value* gep371_var = builder.CreateInBoundsGEP(arg2, gep371_array);
	Value* cast372_var = builder.CreateCast(Instruction::ZExt, cmp370_var, types[11]);
	llvm::StoreInst* store373_var = builder.CreateStore(cast372_var, gep371_var, false);
	store373_var->setAlignment(1);
	ArrayRef<Value*> gep374_array { gep4_val4_int, gep34_val34_int, };
	Value* gep374_var = builder.CreateInBoundsGEP(arg2, gep374_array);
	llvm::StoreInst* store375_var = builder.CreateStore(store345_val345_int, gep374_var, false);
	store375_var->setAlignment(1);
	llvm::LoadInst* load376_var = builder.CreateLoad(gep4_var, false);
	load376_var->setAlignment(4);
	SwitchInst* switch377_var = builder.CreateSwitch(load376_var, block113, 2);
	switch377_var->addCase(cast<ConstantInt>(switch9_val9_int), block82);
	switch377_var->addCase(cast<ConstantInt>(switch9_val10_int), block83);
	
	builder.SetInsertPoint(block82);
	ArrayRef<Value*> gep377_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep377_var = builder.CreateGEP(arg3, gep377_array);
	llvm::LoadInst* load378_var = builder.CreateLoad(gep377_var, false);
	load378_var->setAlignment(4);
	Value* cast379_var = builder.CreateCast(Instruction::ZExt, load378_var, types[0]);
	ArrayRef<Value*> gep380_array { gep4_val4_int, cast379_var, switch9_val9_int, };
	Value* gep380_var = builder.CreateInBoundsGEP(globals[5], gep380_array);
	llvm::LoadInst* load381_var = builder.CreateLoad(gep380_var, false);
	load381_var->setAlignment(16);
	Value* binop382_var = BinaryOperator::Create(Instruction::Shl, load381_var, binop352_val352_int, "", builder.GetInsertBlock());
	Constant* binop383_val383_int = ConstantInt::get(types[0], 64u);
	Value* binop383_var = BinaryOperator::Create(Instruction::Sub, binop383_val383_int, binop382_var, "", builder.GetInsertBlock());
	Constant* binop385_val385_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop385_var = BinaryOperator::Create(Instruction::LShr, binop385_val385_int, binop383_var, "", builder.GetInsertBlock());
	Value* binop387_var = BinaryOperator::Create(Instruction::And, binop385_var, binop342_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep388_array { gep4_val4_int, cast379_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep388_var = builder.CreateInBoundsGEP(globals[5], gep388_array);
	llvm::LoadInst* load389_var = builder.CreateLoad(gep388_var, false);
	load389_var->setAlignment(16);
	Value* cast390_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep391_array { load389_var, };
	Value* gep391_var = builder.CreateInBoundsGEP(cast390_var, gep391_array);
	Value* cast392_var = builder.CreateCast(Instruction::BitCast, gep391_var, types[27]);
	llvm::StoreInst* store393_var = builder.CreateStore(binop387_var, cast392_var, false);
	store393_var->setAlignment(8);
	builder.CreateBr(block114);
	
	builder.SetInsertPoint(block83);
	ArrayRef<Value*> gep394_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep394_var = builder.CreateInBoundsGEP(arg3, gep394_array);
	llvm::LoadInst* load395_var = builder.CreateLoad(gep394_var, false);
	load395_var->setAlignment(4);
	Value* cmp396_var = builder.CreateICmp(CmpInst::ICMP_EQ, load395_var, gep4_val6_int);
	builder.CreateCondBr(cmp396_var, block92, block84);
	
	builder.SetInsertPoint(block84);
	Value* cast397_var = builder.CreateCast(Instruction::ZExt, load395_var, types[0]);
	ArrayRef<Value*> gep398_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep398_var = builder.CreateInBoundsGEP(globals[5], gep398_array);
	llvm::LoadInst* load399_var = builder.CreateLoad(gep398_var, false);
	load399_var->setAlignment(16);
	Value* cast400_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep401_array { gep4_val4_int, cast397_var, switch9_val9_int, };
	Value* gep401_var = builder.CreateInBoundsGEP(globals[5], gep401_array);
	llvm::LoadInst* load402_var = builder.CreateLoad(gep401_var, false);
	load402_var->setAlignment(16);
	Value* cmp403_var = builder.CreateICmp(CmpInst::ICMP_EQ, load402_var, cmp20_val20_int);
	builder.CreateCondBr(cmp403_var, block85, block86);
	
	builder.SetInsertPoint(block85);
	ArrayRef<Value*> gep404_array { load399_var, };
	Value* gep404_var = builder.CreateInBoundsGEP(cast400_var, gep404_array);
	Value* cast405_var = builder.CreateCast(Instruction::BitCast, gep404_var, types[27]);
	llvm::LoadInst* load406_var = builder.CreateLoad(cast405_var, false);
	load406_var->setAlignment(8);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block86);
	ArrayRef<Value*> gep407_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep407_var = builder.CreateInBoundsGEP(globals[5], gep407_array);
	llvm::LoadInst* load408_var = builder.CreateLoad(gep407_var, false);
	load408_var->setAlignment(8);
	Value* binop409_var = BinaryOperator::Create(Instruction::Add, load408_var, load399_var, "", builder.GetInsertBlock());
	Value* cmp410_var = builder.CreateICmp(CmpInst::ICMP_EQ, load402_var, cmp28_val28_int);
	builder.CreateCondBr(cmp410_var, block87, block88);
	
	builder.SetInsertPoint(block87);
	ArrayRef<Value*> gep411_array { binop409_var, };
	Value* gep411_var = builder.CreateInBoundsGEP(cast400_var, gep411_array);
	Value* cast412_var = builder.CreateCast(Instruction::BitCast, gep411_var, types[28]);
	llvm::LoadInst* load413_var = builder.CreateLoad(cast412_var, false);
	load413_var->setAlignment(4);
	Value* cast414_var = builder.CreateCast(Instruction::ZExt, load413_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block88);
	ArrayRef<Value*> gep415_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep415_var = builder.CreateInBoundsGEP(globals[5], gep415_array);
	llvm::LoadInst* load416_var = builder.CreateLoad(gep415_var, false);
	load416_var->setAlignment(16);
	Value* binop417_var = BinaryOperator::Create(Instruction::Add, load416_var, binop409_var, "", builder.GetInsertBlock());
	SwitchInst* switch418_var = builder.CreateSwitch(load402_var, block91, 2);
	switch418_var->addCase(cast<ConstantInt>(switch38_val38_int), block89);
	switch418_var->addCase(cast<ConstantInt>(switch38_val39_int), block90);
	
	builder.SetInsertPoint(block89);
	ArrayRef<Value*> gep418_array { binop417_var, };
	Value* gep418_var = builder.CreateInBoundsGEP(cast400_var, gep418_array);
	Value* cast419_var = builder.CreateCast(Instruction::BitCast, gep418_var, types[30]);
	llvm::LoadInst* load420_var = builder.CreateLoad(cast419_var, false);
	load420_var->setAlignment(2);
	Value* cast421_var = builder.CreateCast(Instruction::ZExt, load420_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block90);
	ArrayRef<Value*> gep422_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep422_var = builder.CreateInBoundsGEP(globals[5], gep422_array);
	llvm::LoadInst* load423_var = builder.CreateLoad(gep422_var, false);
	load423_var->setAlignment(8);
	Value* binop424_var = BinaryOperator::Create(Instruction::Add, load423_var, binop417_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep425_array { binop424_var, };
	Value* gep425_var = builder.CreateInBoundsGEP(cast400_var, gep425_array);
	llvm::LoadInst* load426_var = builder.CreateLoad(gep425_var, false);
	load426_var->setAlignment(1);
	Value* cast427_var = builder.CreateCast(Instruction::ZExt, load426_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block91);
	CallInst* call428_var = builder.CreateCall(globals[6], gep51_var);
	call428_var->setTailCall();
	call428_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block92);
	PHINode* phi429_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep430_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep430_var = builder.CreateInBoundsGEP(arg3, gep430_array);
	llvm::LoadInst* load431_var = builder.CreateLoad(gep430_var, false);
	load431_var->setAlignment(4);
	Value* cmp432_var = builder.CreateICmp(CmpInst::ICMP_EQ, load431_var, gep4_val6_int);
	builder.CreateCondBr(cmp432_var, block102, block93);
	
	builder.SetInsertPoint(block93);
	Value* cast433_var = builder.CreateCast(Instruction::ZExt, load431_var, types[0]);
	ArrayRef<Value*> gep434_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep434_var = builder.CreateInBoundsGEP(globals[5], gep434_array);
	llvm::LoadInst* load435_var = builder.CreateLoad(gep434_var, false);
	load435_var->setAlignment(16);
	Value* cast436_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep437_array { gep4_val4_int, cast433_var, switch9_val9_int, };
	Value* gep437_var = builder.CreateInBoundsGEP(globals[5], gep437_array);
	llvm::LoadInst* load438_var = builder.CreateLoad(gep437_var, false);
	load438_var->setAlignment(16);
	Value* cmp439_var = builder.CreateICmp(CmpInst::ICMP_EQ, load438_var, cmp20_val20_int);
	builder.CreateCondBr(cmp439_var, block94, block95);
	
	builder.SetInsertPoint(block94);
	ArrayRef<Value*> gep440_array { load435_var, };
	Value* gep440_var = builder.CreateInBoundsGEP(cast436_var, gep440_array);
	Value* cast441_var = builder.CreateCast(Instruction::BitCast, gep440_var, types[27]);
	llvm::LoadInst* load442_var = builder.CreateLoad(cast441_var, false);
	load442_var->setAlignment(8);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block95);
	ArrayRef<Value*> gep443_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep443_var = builder.CreateInBoundsGEP(globals[5], gep443_array);
	llvm::LoadInst* load444_var = builder.CreateLoad(gep443_var, false);
	load444_var->setAlignment(8);
	Value* binop445_var = BinaryOperator::Create(Instruction::Add, load444_var, load435_var, "", builder.GetInsertBlock());
	Value* cmp446_var = builder.CreateICmp(CmpInst::ICMP_EQ, load438_var, cmp28_val28_int);
	builder.CreateCondBr(cmp446_var, block96, block97);
	
	builder.SetInsertPoint(block96);
	ArrayRef<Value*> gep447_array { binop445_var, };
	Value* gep447_var = builder.CreateInBoundsGEP(cast436_var, gep447_array);
	Value* cast448_var = builder.CreateCast(Instruction::BitCast, gep447_var, types[28]);
	llvm::LoadInst* load449_var = builder.CreateLoad(cast448_var, false);
	load449_var->setAlignment(4);
	Value* cast450_var = builder.CreateCast(Instruction::ZExt, load449_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block97);
	ArrayRef<Value*> gep451_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep451_var = builder.CreateInBoundsGEP(globals[5], gep451_array);
	llvm::LoadInst* load452_var = builder.CreateLoad(gep451_var, false);
	load452_var->setAlignment(16);
	Value* binop453_var = BinaryOperator::Create(Instruction::Add, load452_var, binop445_var, "", builder.GetInsertBlock());
	SwitchInst* switch454_var = builder.CreateSwitch(load438_var, block100, 2);
	switch454_var->addCase(cast<ConstantInt>(switch38_val38_int), block98);
	switch454_var->addCase(cast<ConstantInt>(switch38_val39_int), block99);
	
	builder.SetInsertPoint(block98);
	ArrayRef<Value*> gep454_array { binop453_var, };
	Value* gep454_var = builder.CreateInBoundsGEP(cast436_var, gep454_array);
	Value* cast455_var = builder.CreateCast(Instruction::BitCast, gep454_var, types[30]);
	llvm::LoadInst* load456_var = builder.CreateLoad(cast455_var, false);
	load456_var->setAlignment(2);
	Value* cast457_var = builder.CreateCast(Instruction::ZExt, load456_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block99);
	ArrayRef<Value*> gep458_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep458_var = builder.CreateInBoundsGEP(globals[5], gep458_array);
	llvm::LoadInst* load459_var = builder.CreateLoad(gep458_var, false);
	load459_var->setAlignment(8);
	Value* binop460_var = BinaryOperator::Create(Instruction::Add, load459_var, binop453_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep461_array { binop460_var, };
	Value* gep461_var = builder.CreateInBoundsGEP(cast436_var, gep461_array);
	llvm::LoadInst* load462_var = builder.CreateLoad(gep461_var, false);
	load462_var->setAlignment(1);
	Value* cast463_var = builder.CreateCast(Instruction::ZExt, load462_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block100);
	CallInst* call464_var = builder.CreateCall(globals[6], gep51_var);
	call464_var->setTailCall();
	call464_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block101);
	PHINode* phi465_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep466_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep466_var = builder.CreateInBoundsGEP(arg3, gep466_array);
	llvm::LoadInst* load467_var = builder.CreateLoad(gep466_var, false);
	load467_var->setAlignment(4);
	Value* cast468_var = builder.CreateCast(Instruction::SExt, load467_var, types[0]);
	Value* binop469_var = BinaryOperator::Create(Instruction::Mul, cast468_var, phi465_var, "", builder.GetInsertBlock());
	Value* binop470_var = BinaryOperator::Create(Instruction::Add, binop469_var, phi429_var, "", builder.GetInsertBlock());
	builder.CreateBr(block102);
	
	builder.SetInsertPoint(block102);
	PHINode* phi471_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep472_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep472_var = builder.CreateInBoundsGEP(arg3, gep472_array);
	llvm::LoadInst* load473_var = builder.CreateLoad(gep472_var, false);
	load473_var->setAlignment(4);
	Value* cmp474_var = builder.CreateICmp(CmpInst::ICMP_EQ, load473_var, gep4_val6_int);
	builder.CreateCondBr(cmp474_var, block112, block103);
	
	builder.SetInsertPoint(block103);
	Value* cast475_var = builder.CreateCast(Instruction::ZExt, load473_var, types[0]);
	ArrayRef<Value*> gep476_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep476_var = builder.CreateInBoundsGEP(globals[5], gep476_array);
	llvm::LoadInst* load477_var = builder.CreateLoad(gep476_var, false);
	load477_var->setAlignment(16);
	Value* cast478_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep479_array { gep4_val4_int, cast475_var, switch9_val9_int, };
	Value* gep479_var = builder.CreateInBoundsGEP(globals[5], gep479_array);
	llvm::LoadInst* load480_var = builder.CreateLoad(gep479_var, false);
	load480_var->setAlignment(16);
	Value* cmp481_var = builder.CreateICmp(CmpInst::ICMP_EQ, load480_var, cmp20_val20_int);
	builder.CreateCondBr(cmp481_var, block104, block105);
	
	builder.SetInsertPoint(block104);
	ArrayRef<Value*> gep482_array { load477_var, };
	Value* gep482_var = builder.CreateInBoundsGEP(cast478_var, gep482_array);
	Value* cast483_var = builder.CreateCast(Instruction::BitCast, gep482_var, types[27]);
	llvm::LoadInst* load484_var = builder.CreateLoad(cast483_var, false);
	load484_var->setAlignment(8);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block105);
	ArrayRef<Value*> gep485_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep485_var = builder.CreateInBoundsGEP(globals[5], gep485_array);
	llvm::LoadInst* load486_var = builder.CreateLoad(gep485_var, false);
	load486_var->setAlignment(8);
	Value* binop487_var = BinaryOperator::Create(Instruction::Add, load486_var, load477_var, "", builder.GetInsertBlock());
	Value* cmp488_var = builder.CreateICmp(CmpInst::ICMP_EQ, load480_var, cmp28_val28_int);
	builder.CreateCondBr(cmp488_var, block106, block107);
	
	builder.SetInsertPoint(block106);
	ArrayRef<Value*> gep489_array { binop487_var, };
	Value* gep489_var = builder.CreateInBoundsGEP(cast478_var, gep489_array);
	Value* cast490_var = builder.CreateCast(Instruction::BitCast, gep489_var, types[28]);
	llvm::LoadInst* load491_var = builder.CreateLoad(cast490_var, false);
	load491_var->setAlignment(4);
	Value* cast492_var = builder.CreateCast(Instruction::ZExt, load491_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block107);
	ArrayRef<Value*> gep493_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep493_var = builder.CreateInBoundsGEP(globals[5], gep493_array);
	llvm::LoadInst* load494_var = builder.CreateLoad(gep493_var, false);
	load494_var->setAlignment(16);
	Value* binop495_var = BinaryOperator::Create(Instruction::Add, load494_var, binop487_var, "", builder.GetInsertBlock());
	SwitchInst* switch496_var = builder.CreateSwitch(load480_var, block110, 2);
	switch496_var->addCase(cast<ConstantInt>(switch38_val38_int), block108);
	switch496_var->addCase(cast<ConstantInt>(switch38_val39_int), block109);
	
	builder.SetInsertPoint(block108);
	ArrayRef<Value*> gep496_array { binop495_var, };
	Value* gep496_var = builder.CreateInBoundsGEP(cast478_var, gep496_array);
	Value* cast497_var = builder.CreateCast(Instruction::BitCast, gep496_var, types[30]);
	llvm::LoadInst* load498_var = builder.CreateLoad(cast497_var, false);
	load498_var->setAlignment(2);
	Value* cast499_var = builder.CreateCast(Instruction::ZExt, load498_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block109);
	ArrayRef<Value*> gep500_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep500_var = builder.CreateInBoundsGEP(globals[5], gep500_array);
	llvm::LoadInst* load501_var = builder.CreateLoad(gep500_var, false);
	load501_var->setAlignment(8);
	Value* binop502_var = BinaryOperator::Create(Instruction::Add, load501_var, binop495_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep503_array { binop502_var, };
	Value* gep503_var = builder.CreateInBoundsGEP(cast478_var, gep503_array);
	llvm::LoadInst* load504_var = builder.CreateLoad(gep503_var, false);
	load504_var->setAlignment(1);
	Value* cast505_var = builder.CreateCast(Instruction::ZExt, load504_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block110);
	CallInst* call506_var = builder.CreateCall(globals[6], gep51_var);
	call506_var->setTailCall();
	call506_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block111);
	PHINode* phi507_var = builder.CreatePHI(types[0], 4);
	Value* binop508_var = BinaryOperator::Create(Instruction::Add, phi507_var, phi471_var, "", builder.GetInsertBlock());
	builder.CreateBr(block112);
	
	builder.SetInsertPoint(block112);
	PHINode* phi509_var = builder.CreatePHI(types[0], 2);
	CallInst* call510_var = builder.CreateCall3(globals[14], phi509_var, cast351_var, binop342_var);
	call510_var->setTailCall();
	builder.CreateBr(block114);
	
	builder.SetInsertPoint(block113);
	ArrayRef<Value*> gep512_array { gep4_val4_int, gep4_val4_int, };
	Value* gep512_var = builder.CreateInBoundsGEP(globals[15], gep512_array);
	CallInst* call512_var = builder.CreateCall(globals[6], gep512_var);
	call512_var->setTailCall();
	call512_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block114);
	phi89_var->addIncoming(gep4_val4_int, block9);
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi125_var->addIncoming(load102_var, block20);
	phi125_var->addIncoming(cast110_var, block22);
	phi125_var->addIncoming(cast117_var, block24);
	phi125_var->addIncoming(cast123_var, block25);
	
	phi131_var->addIncoming(binop130_var, block27);
	phi131_var->addIncoming(phi89_var, block18);
	
	phi167_var->addIncoming(load144_var, block30);
	phi167_var->addIncoming(cast152_var, block32);
	phi167_var->addIncoming(cast159_var, block34);
	phi167_var->addIncoming(cast165_var, block35);
	
	phi169_var->addIncoming(binop168_var, block37);
	phi169_var->addIncoming(phi131_var, block28);
	
	phi178_var->addIncoming(call173_var, block38);
	phi178_var->addIncoming(load24_var, block2);
	phi178_var->addIncoming(cast33_var, block4);
	phi178_var->addIncoming(cast43_var, block6);
	phi178_var->addIncoming(cast49_var, block7);
	
	phi253_var->addIncoming(gep4_val4_int, block50);
	phi253_var->addIncoming(load230_var, block52);
	phi253_var->addIncoming(cast238_var, block54);
	phi253_var->addIncoming(cast245_var, block56);
	phi253_var->addIncoming(cast251_var, block57);
	
	phi289_var->addIncoming(load266_var, block61);
	phi289_var->addIncoming(cast274_var, block63);
	phi289_var->addIncoming(cast281_var, block65);
	phi289_var->addIncoming(cast287_var, block66);
	
	phi295_var->addIncoming(binop294_var, block68);
	phi295_var->addIncoming(phi253_var, block59);
	
	phi331_var->addIncoming(load308_var, block71);
	phi331_var->addIncoming(cast316_var, block73);
	phi331_var->addIncoming(cast323_var, block75);
	phi331_var->addIncoming(cast329_var, block76);
	
	phi333_var->addIncoming(binop332_var, block78);
	phi333_var->addIncoming(phi295_var, block69);
	
	phi341_var->addIncoming(call337_var, block79);
	phi341_var->addIncoming(load183_var, block41);
	phi341_var->addIncoming(load195_var, block43);
	phi341_var->addIncoming(cast203_var, block45);
	phi341_var->addIncoming(cast210_var, block47);
	phi341_var->addIncoming(cast216_var, block48);
	
	phi429_var->addIncoming(gep4_val4_int, block83);
	phi429_var->addIncoming(load406_var, block85);
	phi429_var->addIncoming(cast414_var, block87);
	phi429_var->addIncoming(cast421_var, block89);
	phi429_var->addIncoming(cast427_var, block90);
	
	phi465_var->addIncoming(load442_var, block94);
	phi465_var->addIncoming(cast450_var, block96);
	phi465_var->addIncoming(cast457_var, block98);
	phi465_var->addIncoming(cast463_var, block99);
	
	phi471_var->addIncoming(binop470_var, block101);
	phi471_var->addIncoming(phi429_var, block92);
	
	phi507_var->addIncoming(load484_var, block104);
	phi507_var->addIncoming(cast492_var, block106);
	phi507_var->addIncoming(cast499_var, block108);
	phi507_var->addIncoming(cast505_var, block109);
	
	phi509_var->addIncoming(binop508_var, block111);
	phi509_var->addIncoming(phi471_var, block102);
	
	return;
}

void x86::x86_andn(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[30], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_andnpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[31], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_andnps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[32], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_andpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[33], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_andps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[34], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_arpl(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[35], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_bextr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[36], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blcfill(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[37], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blci(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[38], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blcic(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[39], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blcmsk(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[40], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blcs(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[41], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blendpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[42], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blendps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[43], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blendvpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[44], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blendvps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[45], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blsfill(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[46], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blsi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[47], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blsic(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[48], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blsmsk(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[49], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_blsr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[50], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_bound(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[51], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_bsf(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[52], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_bsr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[53], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_bswap(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[54], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_bt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[55], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_btc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[56], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_btr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[57], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_bts(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[58], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_bzhi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[59], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_call(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block40, 3);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 2u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block2);
	Constant* switch9_val11_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val11_int), block10);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep12_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg3, gep12_array);
	Value* cast13_var = builder.CreateCast(Instruction::BitCast, gep12_var, types[27]);
	llvm::LoadInst* load14_var = builder.CreateLoad(cast13_var, false);
	load14_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep15_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep15_var = builder.CreateGEP(arg3, gep15_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep15_var, false);
	load16_var->setAlignment(4);
	Value* cast17_var = builder.CreateCast(Instruction::ZExt, load16_var, types[0]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep18_var, false);
	load20_var->setAlignment(16);
	Value* cast21_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast17_var, switch9_val10_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load23_var = builder.CreateLoad(gep22_var, false);
	load23_var->setAlignment(16);
	Constant* cmp24_val24_int = ConstantInt::get(types[0], 8u);
	Value* cmp24_var = builder.CreateICmp(CmpInst::ICMP_EQ, load23_var, cmp24_val24_int);
	builder.CreateCondBr(cmp24_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep26_array { load20_var, };
	Value* gep26_var = builder.CreateInBoundsGEP(cast21_var, gep26_array);
	Value* cast27_var = builder.CreateCast(Instruction::BitCast, gep26_var, types[27]);
	llvm::LoadInst* load28_var = builder.CreateLoad(cast27_var, false);
	load28_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(8);
	Value* binop31_var = BinaryOperator::Create(Instruction::Add, load30_var, load20_var, "", builder.GetInsertBlock());
	Constant* cmp32_val32_int = ConstantInt::get(types[0], 4u);
	Value* cmp32_var = builder.CreateICmp(CmpInst::ICMP_EQ, load23_var, cmp32_val32_int);
	builder.CreateCondBr(cmp32_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { binop31_var, };
	Value* gep34_var = builder.CreateInBoundsGEP(cast21_var, gep34_array);
	Value* cast35_var = builder.CreateCast(Instruction::BitCast, gep34_var, types[28]);
	llvm::LoadInst* load36_var = builder.CreateLoad(cast35_var, false);
	load36_var->setAlignment(4);
	Value* cast37_var = builder.CreateCast(Instruction::ZExt, load36_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep38_var = builder.CreateInBoundsGEP(globals[5], gep38_array);
	llvm::LoadInst* load39_var = builder.CreateLoad(gep38_var, false);
	load39_var->setAlignment(16);
	Value* binop40_var = BinaryOperator::Create(Instruction::Add, load39_var, binop31_var, "", builder.GetInsertBlock());
	SwitchInst* switch41_var = builder.CreateSwitch(load23_var, block9, 2);
	Constant* switch41_val41_int = ConstantInt::get(types[0], 2u);
	switch41_var->addCase(cast<ConstantInt>(switch41_val41_int), block7);
	Constant* switch41_val42_int = ConstantInt::get(types[0], 1u);
	switch41_var->addCase(cast<ConstantInt>(switch41_val42_int), block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { binop40_var, };
	Value* gep43_var = builder.CreateInBoundsGEP(cast21_var, gep43_array);
	Value* cast44_var = builder.CreateCast(Instruction::BitCast, gep43_var, types[30]);
	llvm::LoadInst* load45_var = builder.CreateLoad(cast44_var, false);
	load45_var->setAlignment(2);
	Value* cast46_var = builder.CreateCast(Instruction::ZExt, load45_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, binop40_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep50_array { binop49_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast21_var, gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(1);
	Value* cast52_var = builder.CreateCast(Instruction::ZExt, load51_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val4_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[7], gep54_array);
	CallInst* call53_var = builder.CreateCall(globals[6], gep54_var);
	call53_var->setTailCall();
	call53_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep57_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(arg3, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(4);
	Value* cmp59_var = builder.CreateICmp(CmpInst::ICMP_EQ, load58_var, gep4_val6_int);
	builder.CreateCondBr(cmp59_var, block19, block11);
	
	builder.SetInsertPoint(block11);
	Value* cast60_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep64_array { gep4_val4_int, cast60_var, switch9_val10_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(globals[5], gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(16);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp24_val24_int);
	builder.CreateCondBr(cmp66_var, block12, block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { load62_var, };
	Value* gep67_var = builder.CreateInBoundsGEP(cast63_var, gep67_array);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, gep67_var, types[27]);
	llvm::LoadInst* load69_var = builder.CreateLoad(cast68_var, false);
	load69_var->setAlignment(8);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep70_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep70_var = builder.CreateInBoundsGEP(globals[5], gep70_array);
	llvm::LoadInst* load71_var = builder.CreateLoad(gep70_var, false);
	load71_var->setAlignment(8);
	Value* binop72_var = BinaryOperator::Create(Instruction::Add, load71_var, load62_var, "", builder.GetInsertBlock());
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp32_val32_int);
	builder.CreateCondBr(cmp73_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { binop72_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast63_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[28]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(4);
	Value* cast77_var = builder.CreateCast(Instruction::ZExt, load76_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(globals[5], gep78_array);
	llvm::LoadInst* load79_var = builder.CreateLoad(gep78_var, false);
	load79_var->setAlignment(16);
	Value* binop80_var = BinaryOperator::Create(Instruction::Add, load79_var, binop72_var, "", builder.GetInsertBlock());
	SwitchInst* switch81_var = builder.CreateSwitch(load65_var, block18, 2);
	switch81_var->addCase(cast<ConstantInt>(switch41_val41_int), block16);
	switch81_var->addCase(cast<ConstantInt>(switch41_val42_int), block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { binop80_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast63_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[30]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(2);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(8);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop80_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast63_var, gep88_array);
	llvm::LoadInst* load89_var = builder.CreateLoad(gep88_var, false);
	load89_var->setAlignment(1);
	Value* cast90_var = builder.CreateCast(Instruction::ZExt, load89_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block18);
	CallInst* call91_var = builder.CreateCall(globals[6], gep54_var);
	call91_var->setTailCall();
	call91_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block19);
	PHINode* phi92_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep93_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val9_int, };
	Value* gep93_var = builder.CreateInBoundsGEP(arg3, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(4);
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load94_var, gep4_val6_int);
	builder.CreateCondBr(cmp95_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast96_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cast99_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast96_var, switch9_val10_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp24_val24_int);
	builder.CreateCondBr(cmp102_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { load98_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast99_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[27]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep106_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep106_var = builder.CreateInBoundsGEP(globals[5], gep106_array);
	llvm::LoadInst* load107_var = builder.CreateLoad(gep106_var, false);
	load107_var->setAlignment(8);
	Value* binop108_var = BinaryOperator::Create(Instruction::Add, load107_var, load98_var, "", builder.GetInsertBlock());
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp32_val32_int);
	builder.CreateCondBr(cmp109_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { binop108_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast99_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[28]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(4);
	Value* cast113_var = builder.CreateCast(Instruction::ZExt, load112_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep114_var = builder.CreateInBoundsGEP(globals[5], gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(16);
	Value* binop116_var = BinaryOperator::Create(Instruction::Add, load115_var, binop108_var, "", builder.GetInsertBlock());
	SwitchInst* switch117_var = builder.CreateSwitch(load101_var, block27, 2);
	switch117_var->addCase(cast<ConstantInt>(switch41_val41_int), block25);
	switch117_var->addCase(cast<ConstantInt>(switch41_val42_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { binop116_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast99_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[30]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(2);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(8);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop116_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast99_var, gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(1);
	Value* cast126_var = builder.CreateCast(Instruction::ZExt, load125_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call127_var = builder.CreateCall(globals[6], gep54_var);
	call127_var->setTailCall();
	call127_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi128_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep129_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val11_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(arg3, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(4);
	Value* cast131_var = builder.CreateCast(Instruction::SExt, load130_var, types[0]);
	Value* binop132_var = BinaryOperator::Create(Instruction::Mul, cast131_var, phi128_var, "", builder.GetInsertBlock());
	Value* binop133_var = BinaryOperator::Create(Instruction::Add, binop132_var, phi92_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi134_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep135_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val10_int, };
	Value* gep135_var = builder.CreateInBoundsGEP(arg3, gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(4);
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load136_var, gep4_val6_int);
	builder.CreateCondBr(cmp137_var, block39, block30);
	
	builder.SetInsertPoint(block30);
	Value* cast138_var = builder.CreateCast(Instruction::ZExt, load136_var, types[0]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cast141_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast138_var, switch9_val10_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp24_val24_int);
	builder.CreateCondBr(cmp144_var, block31, block32);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { load140_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast141_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[27]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(8);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, load140_var, "", builder.GetInsertBlock());
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp32_val32_int);
	builder.CreateCondBr(cmp151_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { binop150_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast141_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[28]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(4);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep156_var = builder.CreateInBoundsGEP(globals[5], gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(16);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, load157_var, binop150_var, "", builder.GetInsertBlock());
	SwitchInst* switch159_var = builder.CreateSwitch(load143_var, block37, 2);
	switch159_var->addCase(cast<ConstantInt>(switch41_val41_int), block35);
	switch159_var->addCase(cast<ConstantInt>(switch41_val42_int), block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep159_array { binop158_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast141_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[30]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(2);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(8);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop158_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast141_var, gep166_array);
	llvm::LoadInst* load167_var = builder.CreateLoad(gep166_var, false);
	load167_var->setAlignment(1);
	Value* cast168_var = builder.CreateCast(Instruction::ZExt, load167_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block37);
	CallInst* call169_var = builder.CreateCall(globals[6], gep54_var);
	call169_var->setTailCall();
	call169_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block38);
	PHINode* phi170_var = builder.CreatePHI(types[0], 4);
	Value* binop171_var = BinaryOperator::Create(Instruction::Add, phi170_var, phi134_var, "", builder.GetInsertBlock());
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block39);
	PHINode* phi172_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep173_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, };
	Value* gep173_var = builder.CreateInBoundsGEP(arg3, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	CallInst* call176_var = builder.CreateCall2(globals[8], phi172_var, cast175_var);
	call176_var->setTailCall();
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block40);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep4_val4_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(globals[10], gep178_array);
	CallInst* call178_var = builder.CreateCall(globals[6], gep178_var);
	call178_var->setTailCall();
	call178_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block41);
	PHINode* phi181_var = builder.CreatePHI(types[0], 6);
	CallInst* call182_var = builder.CreateCall3(globals[60], arg0, arg1, phi181_var);
	call182_var->setTailCall();
	phi92_var->addIncoming(gep4_val4_int, block10);
	phi92_var->addIncoming(load69_var, block12);
	phi92_var->addIncoming(cast77_var, block14);
	phi92_var->addIncoming(cast84_var, block16);
	phi92_var->addIncoming(cast90_var, block17);
	
	phi128_var->addIncoming(load105_var, block21);
	phi128_var->addIncoming(cast113_var, block23);
	phi128_var->addIncoming(cast120_var, block25);
	phi128_var->addIncoming(cast126_var, block26);
	
	phi134_var->addIncoming(binop133_var, block28);
	phi134_var->addIncoming(phi92_var, block19);
	
	phi170_var->addIncoming(load147_var, block31);
	phi170_var->addIncoming(cast155_var, block33);
	phi170_var->addIncoming(cast162_var, block35);
	phi170_var->addIncoming(cast168_var, block36);
	
	phi172_var->addIncoming(binop171_var, block38);
	phi172_var->addIncoming(phi134_var, block29);
	
	phi181_var->addIncoming(call176_var, block39);
	phi181_var->addIncoming(load14_var, block1);
	phi181_var->addIncoming(load28_var, block3);
	phi181_var->addIncoming(cast37_var, block5);
	phi181_var->addIncoming(cast46_var, block7);
	phi181_var->addIncoming(cast52_var, block8);
	
	return;
}

void x86::x86_cbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[61], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[62], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cdqe(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[63], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_clac(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[64], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_clc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[65], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[66], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_clflush(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[67], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_clgi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[68], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cli(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[69], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_clts(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[70], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[71], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmova(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[72], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovae(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[73], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[74], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovbe(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[75], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmove(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[76], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovg(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[77], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovge(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[78], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovl(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[79], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovle(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[80], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovne(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[81], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovno(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[82], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovnp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[83], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovns(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[84], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovo(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[85], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[86], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmovs(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[87], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	BasicBlock* block84 = BasicBlock::Create(context, "", function);
	BasicBlock* block85 = BasicBlock::Create(context, "", function);
	BasicBlock* block86 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block40, 3);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 2u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block2);
	Constant* switch9_val11_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val11_int), block10);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep12_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg3, gep12_array);
	Value* cast13_var = builder.CreateCast(Instruction::BitCast, gep12_var, types[27]);
	llvm::LoadInst* load14_var = builder.CreateLoad(cast13_var, false);
	load14_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep15_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep15_var = builder.CreateGEP(arg3, gep15_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep15_var, false);
	load16_var->setAlignment(4);
	Value* cast17_var = builder.CreateCast(Instruction::ZExt, load16_var, types[0]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep18_var, false);
	load20_var->setAlignment(16);
	Value* cast21_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast17_var, switch9_val10_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load23_var = builder.CreateLoad(gep22_var, false);
	load23_var->setAlignment(16);
	Constant* cmp24_val24_int = ConstantInt::get(types[0], 8u);
	Value* cmp24_var = builder.CreateICmp(CmpInst::ICMP_EQ, load23_var, cmp24_val24_int);
	builder.CreateCondBr(cmp24_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep26_array { load20_var, };
	Value* gep26_var = builder.CreateInBoundsGEP(cast21_var, gep26_array);
	Value* cast27_var = builder.CreateCast(Instruction::BitCast, gep26_var, types[27]);
	llvm::LoadInst* load28_var = builder.CreateLoad(cast27_var, false);
	load28_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(8);
	Value* binop31_var = BinaryOperator::Create(Instruction::Add, load30_var, load20_var, "", builder.GetInsertBlock());
	Constant* cmp32_val32_int = ConstantInt::get(types[0], 4u);
	Value* cmp32_var = builder.CreateICmp(CmpInst::ICMP_EQ, load23_var, cmp32_val32_int);
	builder.CreateCondBr(cmp32_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { binop31_var, };
	Value* gep34_var = builder.CreateInBoundsGEP(cast21_var, gep34_array);
	Value* cast35_var = builder.CreateCast(Instruction::BitCast, gep34_var, types[28]);
	llvm::LoadInst* load36_var = builder.CreateLoad(cast35_var, false);
	load36_var->setAlignment(4);
	Value* cast37_var = builder.CreateCast(Instruction::ZExt, load36_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep38_var = builder.CreateInBoundsGEP(globals[5], gep38_array);
	llvm::LoadInst* load39_var = builder.CreateLoad(gep38_var, false);
	load39_var->setAlignment(16);
	Value* binop40_var = BinaryOperator::Create(Instruction::Add, load39_var, binop31_var, "", builder.GetInsertBlock());
	SwitchInst* switch41_var = builder.CreateSwitch(load23_var, block9, 2);
	Constant* switch41_val41_int = ConstantInt::get(types[0], 2u);
	switch41_var->addCase(cast<ConstantInt>(switch41_val41_int), block7);
	Constant* switch41_val42_int = ConstantInt::get(types[0], 1u);
	switch41_var->addCase(cast<ConstantInt>(switch41_val42_int), block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { binop40_var, };
	Value* gep43_var = builder.CreateInBoundsGEP(cast21_var, gep43_array);
	Value* cast44_var = builder.CreateCast(Instruction::BitCast, gep43_var, types[30]);
	llvm::LoadInst* load45_var = builder.CreateLoad(cast44_var, false);
	load45_var->setAlignment(2);
	Value* cast46_var = builder.CreateCast(Instruction::ZExt, load45_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, binop40_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep50_array { binop49_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast21_var, gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(1);
	Value* cast52_var = builder.CreateCast(Instruction::ZExt, load51_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val4_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[7], gep54_array);
	CallInst* call53_var = builder.CreateCall(globals[6], gep54_var);
	call53_var->setTailCall();
	call53_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep57_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(arg3, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(4);
	Value* cmp59_var = builder.CreateICmp(CmpInst::ICMP_EQ, load58_var, gep4_val6_int);
	builder.CreateCondBr(cmp59_var, block19, block11);
	
	builder.SetInsertPoint(block11);
	Value* cast60_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep64_array { gep4_val4_int, cast60_var, switch9_val10_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(globals[5], gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(16);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp24_val24_int);
	builder.CreateCondBr(cmp66_var, block12, block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { load62_var, };
	Value* gep67_var = builder.CreateInBoundsGEP(cast63_var, gep67_array);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, gep67_var, types[27]);
	llvm::LoadInst* load69_var = builder.CreateLoad(cast68_var, false);
	load69_var->setAlignment(8);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep70_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep70_var = builder.CreateInBoundsGEP(globals[5], gep70_array);
	llvm::LoadInst* load71_var = builder.CreateLoad(gep70_var, false);
	load71_var->setAlignment(8);
	Value* binop72_var = BinaryOperator::Create(Instruction::Add, load71_var, load62_var, "", builder.GetInsertBlock());
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp32_val32_int);
	builder.CreateCondBr(cmp73_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { binop72_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast63_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[28]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(4);
	Value* cast77_var = builder.CreateCast(Instruction::ZExt, load76_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(globals[5], gep78_array);
	llvm::LoadInst* load79_var = builder.CreateLoad(gep78_var, false);
	load79_var->setAlignment(16);
	Value* binop80_var = BinaryOperator::Create(Instruction::Add, load79_var, binop72_var, "", builder.GetInsertBlock());
	SwitchInst* switch81_var = builder.CreateSwitch(load65_var, block18, 2);
	switch81_var->addCase(cast<ConstantInt>(switch41_val41_int), block16);
	switch81_var->addCase(cast<ConstantInt>(switch41_val42_int), block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { binop80_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast63_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[30]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(2);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(8);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop80_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast63_var, gep88_array);
	llvm::LoadInst* load89_var = builder.CreateLoad(gep88_var, false);
	load89_var->setAlignment(1);
	Value* cast90_var = builder.CreateCast(Instruction::ZExt, load89_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block18);
	CallInst* call91_var = builder.CreateCall(globals[6], gep54_var);
	call91_var->setTailCall();
	call91_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block19);
	PHINode* phi92_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep93_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val9_int, };
	Value* gep93_var = builder.CreateInBoundsGEP(arg3, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(4);
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load94_var, gep4_val6_int);
	builder.CreateCondBr(cmp95_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast96_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cast99_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast96_var, switch9_val10_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp24_val24_int);
	builder.CreateCondBr(cmp102_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { load98_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast99_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[27]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep106_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep106_var = builder.CreateInBoundsGEP(globals[5], gep106_array);
	llvm::LoadInst* load107_var = builder.CreateLoad(gep106_var, false);
	load107_var->setAlignment(8);
	Value* binop108_var = BinaryOperator::Create(Instruction::Add, load107_var, load98_var, "", builder.GetInsertBlock());
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp32_val32_int);
	builder.CreateCondBr(cmp109_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { binop108_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast99_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[28]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(4);
	Value* cast113_var = builder.CreateCast(Instruction::ZExt, load112_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep114_var = builder.CreateInBoundsGEP(globals[5], gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(16);
	Value* binop116_var = BinaryOperator::Create(Instruction::Add, load115_var, binop108_var, "", builder.GetInsertBlock());
	SwitchInst* switch117_var = builder.CreateSwitch(load101_var, block27, 2);
	switch117_var->addCase(cast<ConstantInt>(switch41_val41_int), block25);
	switch117_var->addCase(cast<ConstantInt>(switch41_val42_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { binop116_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast99_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[30]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(2);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(8);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop116_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast99_var, gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(1);
	Value* cast126_var = builder.CreateCast(Instruction::ZExt, load125_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call127_var = builder.CreateCall(globals[6], gep54_var);
	call127_var->setTailCall();
	call127_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi128_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep129_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val11_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(arg3, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(4);
	Value* cast131_var = builder.CreateCast(Instruction::SExt, load130_var, types[0]);
	Value* binop132_var = BinaryOperator::Create(Instruction::Mul, cast131_var, phi128_var, "", builder.GetInsertBlock());
	Value* binop133_var = BinaryOperator::Create(Instruction::Add, binop132_var, phi92_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi134_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep135_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val10_int, };
	Value* gep135_var = builder.CreateInBoundsGEP(arg3, gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(4);
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load136_var, gep4_val6_int);
	builder.CreateCondBr(cmp137_var, block39, block30);
	
	builder.SetInsertPoint(block30);
	Value* cast138_var = builder.CreateCast(Instruction::ZExt, load136_var, types[0]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cast141_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast138_var, switch9_val10_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp24_val24_int);
	builder.CreateCondBr(cmp144_var, block31, block32);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { load140_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast141_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[27]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(8);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, load140_var, "", builder.GetInsertBlock());
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp32_val32_int);
	builder.CreateCondBr(cmp151_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { binop150_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast141_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[28]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(4);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep156_var = builder.CreateInBoundsGEP(globals[5], gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(16);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, load157_var, binop150_var, "", builder.GetInsertBlock());
	SwitchInst* switch159_var = builder.CreateSwitch(load143_var, block37, 2);
	switch159_var->addCase(cast<ConstantInt>(switch41_val41_int), block35);
	switch159_var->addCase(cast<ConstantInt>(switch41_val42_int), block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep159_array { binop158_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast141_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[30]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(2);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(8);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop158_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast141_var, gep166_array);
	llvm::LoadInst* load167_var = builder.CreateLoad(gep166_var, false);
	load167_var->setAlignment(1);
	Value* cast168_var = builder.CreateCast(Instruction::ZExt, load167_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block37);
	CallInst* call169_var = builder.CreateCall(globals[6], gep54_var);
	call169_var->setTailCall();
	call169_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block38);
	PHINode* phi170_var = builder.CreatePHI(types[0], 4);
	Value* binop171_var = BinaryOperator::Create(Instruction::Add, phi170_var, phi134_var, "", builder.GetInsertBlock());
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block39);
	PHINode* phi172_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep173_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, };
	Value* gep173_var = builder.CreateInBoundsGEP(arg3, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	CallInst* call176_var = builder.CreateCall2(globals[8], phi172_var, cast175_var);
	call176_var->setTailCall();
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block40);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep4_val4_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(globals[10], gep178_array);
	CallInst* call178_var = builder.CreateCall(globals[6], gep178_var);
	call178_var->setTailCall();
	call178_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block41);
	PHINode* phi181_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val5_int, switch41_val42_int, gep4_val6_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(arg3, gep182_array);
	llvm::LoadInst* load183_var = builder.CreateLoad(gep182_var, false);
	load183_var->setAlignment(4);
	SwitchInst* switch184_var = builder.CreateSwitch(load183_var, block81, 3);
	switch184_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch184_var->addCase(cast<ConstantInt>(switch9_val10_int), block43);
	switch184_var->addCase(cast<ConstantInt>(switch9_val11_int), block51);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch41_val42_int, switch9_val10_int, };
	Value* gep184_var = builder.CreateInBoundsGEP(arg3, gep184_array);
	Value* cast185_var = builder.CreateCast(Instruction::BitCast, gep184_var, types[27]);
	llvm::LoadInst* load186_var = builder.CreateLoad(cast185_var, false);
	load186_var->setAlignment(8);
	builder.CreateBr(block82);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep187_array { gep4_val4_int, gep4_val5_int, switch41_val42_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateGEP(arg3, gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(4);
	Value* cast189_var = builder.CreateCast(Instruction::ZExt, load188_var, types[0]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast189_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cast192_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep193_array { gep4_val4_int, cast189_var, switch9_val10_int, };
	Value* gep193_var = builder.CreateInBoundsGEP(globals[5], gep193_array);
	llvm::LoadInst* load194_var = builder.CreateLoad(gep193_var, false);
	load194_var->setAlignment(16);
	Value* cmp195_var = builder.CreateICmp(CmpInst::ICMP_EQ, load194_var, cmp24_val24_int);
	builder.CreateCondBr(cmp195_var, block44, block45);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { load191_var, };
	Value* gep196_var = builder.CreateInBoundsGEP(cast192_var, gep196_array);
	Value* cast197_var = builder.CreateCast(Instruction::BitCast, gep196_var, types[27]);
	llvm::LoadInst* load198_var = builder.CreateLoad(cast197_var, false);
	load198_var->setAlignment(8);
	builder.CreateBr(block82);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep199_array { gep4_val4_int, cast189_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep199_var = builder.CreateInBoundsGEP(globals[5], gep199_array);
	llvm::LoadInst* load200_var = builder.CreateLoad(gep199_var, false);
	load200_var->setAlignment(8);
	Value* binop201_var = BinaryOperator::Create(Instruction::Add, load200_var, load191_var, "", builder.GetInsertBlock());
	Value* cmp202_var = builder.CreateICmp(CmpInst::ICMP_EQ, load194_var, cmp32_val32_int);
	builder.CreateCondBr(cmp202_var, block46, block47);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep203_array { binop201_var, };
	Value* gep203_var = builder.CreateInBoundsGEP(cast192_var, gep203_array);
	Value* cast204_var = builder.CreateCast(Instruction::BitCast, gep203_var, types[28]);
	llvm::LoadInst* load205_var = builder.CreateLoad(cast204_var, false);
	load205_var->setAlignment(4);
	Value* cast206_var = builder.CreateCast(Instruction::ZExt, load205_var, types[0]);
	builder.CreateBr(block82);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { gep4_val4_int, cast189_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep207_var = builder.CreateInBoundsGEP(globals[5], gep207_array);
	llvm::LoadInst* load208_var = builder.CreateLoad(gep207_var, false);
	load208_var->setAlignment(16);
	Value* binop209_var = BinaryOperator::Create(Instruction::Add, load208_var, binop201_var, "", builder.GetInsertBlock());
	SwitchInst* switch210_var = builder.CreateSwitch(load194_var, block50, 2);
	switch210_var->addCase(cast<ConstantInt>(switch41_val41_int), block48);
	switch210_var->addCase(cast<ConstantInt>(switch41_val42_int), block49);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep210_array { binop209_var, };
	Value* gep210_var = builder.CreateInBoundsGEP(cast192_var, gep210_array);
	Value* cast211_var = builder.CreateCast(Instruction::BitCast, gep210_var, types[30]);
	llvm::LoadInst* load212_var = builder.CreateLoad(cast211_var, false);
	load212_var->setAlignment(2);
	Value* cast213_var = builder.CreateCast(Instruction::ZExt, load212_var, types[0]);
	builder.CreateBr(block82);
	
	builder.SetInsertPoint(block49);
	ArrayRef<Value*> gep214_array { gep4_val4_int, cast189_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep214_var = builder.CreateInBoundsGEP(globals[5], gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(8);
	Value* binop216_var = BinaryOperator::Create(Instruction::Add, load215_var, binop209_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep217_array { binop216_var, };
	Value* gep217_var = builder.CreateInBoundsGEP(cast192_var, gep217_array);
	llvm::LoadInst* load218_var = builder.CreateLoad(gep217_var, false);
	load218_var->setAlignment(1);
	Value* cast219_var = builder.CreateCast(Instruction::ZExt, load218_var, types[0]);
	builder.CreateBr(block82);
	
	builder.SetInsertPoint(block50);
	CallInst* call220_var = builder.CreateCall(globals[6], gep54_var);
	call220_var->setTailCall();
	call220_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block51);
	ArrayRef<Value*> gep221_array { gep4_val4_int, gep4_val5_int, switch41_val42_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep221_var = builder.CreateInBoundsGEP(arg3, gep221_array);
	llvm::LoadInst* load222_var = builder.CreateLoad(gep221_var, false);
	load222_var->setAlignment(4);
	Value* cmp223_var = builder.CreateICmp(CmpInst::ICMP_EQ, load222_var, gep4_val6_int);
	builder.CreateCondBr(cmp223_var, block60, block52);
	
	builder.SetInsertPoint(block52);
	Value* cast224_var = builder.CreateCast(Instruction::ZExt, load222_var, types[0]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast224_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cast227_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep228_array { gep4_val4_int, cast224_var, switch9_val10_int, };
	Value* gep228_var = builder.CreateInBoundsGEP(globals[5], gep228_array);
	llvm::LoadInst* load229_var = builder.CreateLoad(gep228_var, false);
	load229_var->setAlignment(16);
	Value* cmp230_var = builder.CreateICmp(CmpInst::ICMP_EQ, load229_var, cmp24_val24_int);
	builder.CreateCondBr(cmp230_var, block53, block54);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { load226_var, };
	Value* gep231_var = builder.CreateInBoundsGEP(cast227_var, gep231_array);
	Value* cast232_var = builder.CreateCast(Instruction::BitCast, gep231_var, types[27]);
	llvm::LoadInst* load233_var = builder.CreateLoad(cast232_var, false);
	load233_var->setAlignment(8);
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep234_array { gep4_val4_int, cast224_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep234_var = builder.CreateInBoundsGEP(globals[5], gep234_array);
	llvm::LoadInst* load235_var = builder.CreateLoad(gep234_var, false);
	load235_var->setAlignment(8);
	Value* binop236_var = BinaryOperator::Create(Instruction::Add, load235_var, load226_var, "", builder.GetInsertBlock());
	Value* cmp237_var = builder.CreateICmp(CmpInst::ICMP_EQ, load229_var, cmp32_val32_int);
	builder.CreateCondBr(cmp237_var, block55, block56);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep238_array { binop236_var, };
	Value* gep238_var = builder.CreateInBoundsGEP(cast227_var, gep238_array);
	Value* cast239_var = builder.CreateCast(Instruction::BitCast, gep238_var, types[28]);
	llvm::LoadInst* load240_var = builder.CreateLoad(cast239_var, false);
	load240_var->setAlignment(4);
	Value* cast241_var = builder.CreateCast(Instruction::ZExt, load240_var, types[0]);
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { gep4_val4_int, cast224_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep242_var = builder.CreateInBoundsGEP(globals[5], gep242_array);
	llvm::LoadInst* load243_var = builder.CreateLoad(gep242_var, false);
	load243_var->setAlignment(16);
	Value* binop244_var = BinaryOperator::Create(Instruction::Add, load243_var, binop236_var, "", builder.GetInsertBlock());
	SwitchInst* switch245_var = builder.CreateSwitch(load229_var, block59, 2);
	switch245_var->addCase(cast<ConstantInt>(switch41_val41_int), block57);
	switch245_var->addCase(cast<ConstantInt>(switch41_val42_int), block58);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep245_array { binop244_var, };
	Value* gep245_var = builder.CreateInBoundsGEP(cast227_var, gep245_array);
	Value* cast246_var = builder.CreateCast(Instruction::BitCast, gep245_var, types[30]);
	llvm::LoadInst* load247_var = builder.CreateLoad(cast246_var, false);
	load247_var->setAlignment(2);
	Value* cast248_var = builder.CreateCast(Instruction::ZExt, load247_var, types[0]);
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block58);
	ArrayRef<Value*> gep249_array { gep4_val4_int, cast224_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep249_var = builder.CreateInBoundsGEP(globals[5], gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(8);
	Value* binop251_var = BinaryOperator::Create(Instruction::Add, load250_var, binop244_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep252_array { binop251_var, };
	Value* gep252_var = builder.CreateInBoundsGEP(cast227_var, gep252_array);
	llvm::LoadInst* load253_var = builder.CreateLoad(gep252_var, false);
	load253_var->setAlignment(1);
	Value* cast254_var = builder.CreateCast(Instruction::ZExt, load253_var, types[0]);
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block59);
	CallInst* call255_var = builder.CreateCall(globals[6], gep54_var);
	call255_var->setTailCall();
	call255_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block60);
	PHINode* phi256_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep257_array { gep4_val4_int, gep4_val5_int, switch41_val42_int, switch9_val10_int, gep4_val6_int, switch9_val9_int, };
	Value* gep257_var = builder.CreateInBoundsGEP(arg3, gep257_array);
	llvm::LoadInst* load258_var = builder.CreateLoad(gep257_var, false);
	load258_var->setAlignment(4);
	Value* cmp259_var = builder.CreateICmp(CmpInst::ICMP_EQ, load258_var, gep4_val6_int);
	builder.CreateCondBr(cmp259_var, block70, block61);
	
	builder.SetInsertPoint(block61);
	Value* cast260_var = builder.CreateCast(Instruction::ZExt, load258_var, types[0]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast260_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cast263_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep264_array { gep4_val4_int, cast260_var, switch9_val10_int, };
	Value* gep264_var = builder.CreateInBoundsGEP(globals[5], gep264_array);
	llvm::LoadInst* load265_var = builder.CreateLoad(gep264_var, false);
	load265_var->setAlignment(16);
	Value* cmp266_var = builder.CreateICmp(CmpInst::ICMP_EQ, load265_var, cmp24_val24_int);
	builder.CreateCondBr(cmp266_var, block62, block63);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { load262_var, };
	Value* gep267_var = builder.CreateInBoundsGEP(cast263_var, gep267_array);
	Value* cast268_var = builder.CreateCast(Instruction::BitCast, gep267_var, types[27]);
	llvm::LoadInst* load269_var = builder.CreateLoad(cast268_var, false);
	load269_var->setAlignment(8);
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep270_array { gep4_val4_int, cast260_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep270_var = builder.CreateInBoundsGEP(globals[5], gep270_array);
	llvm::LoadInst* load271_var = builder.CreateLoad(gep270_var, false);
	load271_var->setAlignment(8);
	Value* binop272_var = BinaryOperator::Create(Instruction::Add, load271_var, load262_var, "", builder.GetInsertBlock());
	Value* cmp273_var = builder.CreateICmp(CmpInst::ICMP_EQ, load265_var, cmp32_val32_int);
	builder.CreateCondBr(cmp273_var, block64, block65);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep274_array { binop272_var, };
	Value* gep274_var = builder.CreateInBoundsGEP(cast263_var, gep274_array);
	Value* cast275_var = builder.CreateCast(Instruction::BitCast, gep274_var, types[28]);
	llvm::LoadInst* load276_var = builder.CreateLoad(cast275_var, false);
	load276_var->setAlignment(4);
	Value* cast277_var = builder.CreateCast(Instruction::ZExt, load276_var, types[0]);
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { gep4_val4_int, cast260_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep278_var = builder.CreateInBoundsGEP(globals[5], gep278_array);
	llvm::LoadInst* load279_var = builder.CreateLoad(gep278_var, false);
	load279_var->setAlignment(16);
	Value* binop280_var = BinaryOperator::Create(Instruction::Add, load279_var, binop272_var, "", builder.GetInsertBlock());
	SwitchInst* switch281_var = builder.CreateSwitch(load265_var, block68, 2);
	switch281_var->addCase(cast<ConstantInt>(switch41_val41_int), block66);
	switch281_var->addCase(cast<ConstantInt>(switch41_val42_int), block67);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep281_array { binop280_var, };
	Value* gep281_var = builder.CreateInBoundsGEP(cast263_var, gep281_array);
	Value* cast282_var = builder.CreateCast(Instruction::BitCast, gep281_var, types[30]);
	llvm::LoadInst* load283_var = builder.CreateLoad(cast282_var, false);
	load283_var->setAlignment(2);
	Value* cast284_var = builder.CreateCast(Instruction::ZExt, load283_var, types[0]);
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block67);
	ArrayRef<Value*> gep285_array { gep4_val4_int, cast260_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep285_var = builder.CreateInBoundsGEP(globals[5], gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(8);
	Value* binop287_var = BinaryOperator::Create(Instruction::Add, load286_var, binop280_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep288_array { binop287_var, };
	Value* gep288_var = builder.CreateInBoundsGEP(cast263_var, gep288_array);
	llvm::LoadInst* load289_var = builder.CreateLoad(gep288_var, false);
	load289_var->setAlignment(1);
	Value* cast290_var = builder.CreateCast(Instruction::ZExt, load289_var, types[0]);
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block68);
	CallInst* call291_var = builder.CreateCall(globals[6], gep54_var);
	call291_var->setTailCall();
	call291_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block69);
	PHINode* phi292_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep293_array { gep4_val4_int, gep4_val5_int, switch41_val42_int, switch9_val10_int, gep4_val6_int, switch9_val11_int, };
	Value* gep293_var = builder.CreateInBoundsGEP(arg3, gep293_array);
	llvm::LoadInst* load294_var = builder.CreateLoad(gep293_var, false);
	load294_var->setAlignment(4);
	Value* cast295_var = builder.CreateCast(Instruction::SExt, load294_var, types[0]);
	Value* binop296_var = BinaryOperator::Create(Instruction::Mul, cast295_var, phi292_var, "", builder.GetInsertBlock());
	Value* binop297_var = BinaryOperator::Create(Instruction::Add, binop296_var, phi256_var, "", builder.GetInsertBlock());
	builder.CreateBr(block70);
	
	builder.SetInsertPoint(block70);
	PHINode* phi298_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep299_array { gep4_val4_int, gep4_val5_int, switch41_val42_int, switch9_val10_int, gep4_val6_int, switch9_val10_int, };
	Value* gep299_var = builder.CreateInBoundsGEP(arg3, gep299_array);
	llvm::LoadInst* load300_var = builder.CreateLoad(gep299_var, false);
	load300_var->setAlignment(4);
	Value* cmp301_var = builder.CreateICmp(CmpInst::ICMP_EQ, load300_var, gep4_val6_int);
	builder.CreateCondBr(cmp301_var, block80, block71);
	
	builder.SetInsertPoint(block71);
	Value* cast302_var = builder.CreateCast(Instruction::ZExt, load300_var, types[0]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast302_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cast305_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep306_array { gep4_val4_int, cast302_var, switch9_val10_int, };
	Value* gep306_var = builder.CreateInBoundsGEP(globals[5], gep306_array);
	llvm::LoadInst* load307_var = builder.CreateLoad(gep306_var, false);
	load307_var->setAlignment(16);
	Value* cmp308_var = builder.CreateICmp(CmpInst::ICMP_EQ, load307_var, cmp24_val24_int);
	builder.CreateCondBr(cmp308_var, block72, block73);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { load304_var, };
	Value* gep309_var = builder.CreateInBoundsGEP(cast305_var, gep309_array);
	Value* cast310_var = builder.CreateCast(Instruction::BitCast, gep309_var, types[27]);
	llvm::LoadInst* load311_var = builder.CreateLoad(cast310_var, false);
	load311_var->setAlignment(8);
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep312_array { gep4_val4_int, cast302_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep312_var = builder.CreateInBoundsGEP(globals[5], gep312_array);
	llvm::LoadInst* load313_var = builder.CreateLoad(gep312_var, false);
	load313_var->setAlignment(8);
	Value* binop314_var = BinaryOperator::Create(Instruction::Add, load313_var, load304_var, "", builder.GetInsertBlock());
	Value* cmp315_var = builder.CreateICmp(CmpInst::ICMP_EQ, load307_var, cmp32_val32_int);
	builder.CreateCondBr(cmp315_var, block74, block75);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep316_array { binop314_var, };
	Value* gep316_var = builder.CreateInBoundsGEP(cast305_var, gep316_array);
	Value* cast317_var = builder.CreateCast(Instruction::BitCast, gep316_var, types[28]);
	llvm::LoadInst* load318_var = builder.CreateLoad(cast317_var, false);
	load318_var->setAlignment(4);
	Value* cast319_var = builder.CreateCast(Instruction::ZExt, load318_var, types[0]);
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { gep4_val4_int, cast302_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep320_var = builder.CreateInBoundsGEP(globals[5], gep320_array);
	llvm::LoadInst* load321_var = builder.CreateLoad(gep320_var, false);
	load321_var->setAlignment(16);
	Value* binop322_var = BinaryOperator::Create(Instruction::Add, load321_var, binop314_var, "", builder.GetInsertBlock());
	SwitchInst* switch323_var = builder.CreateSwitch(load307_var, block78, 2);
	switch323_var->addCase(cast<ConstantInt>(switch41_val41_int), block76);
	switch323_var->addCase(cast<ConstantInt>(switch41_val42_int), block77);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep323_array { binop322_var, };
	Value* gep323_var = builder.CreateInBoundsGEP(cast305_var, gep323_array);
	Value* cast324_var = builder.CreateCast(Instruction::BitCast, gep323_var, types[30]);
	llvm::LoadInst* load325_var = builder.CreateLoad(cast324_var, false);
	load325_var->setAlignment(2);
	Value* cast326_var = builder.CreateCast(Instruction::ZExt, load325_var, types[0]);
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block77);
	ArrayRef<Value*> gep327_array { gep4_val4_int, cast302_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep327_var = builder.CreateInBoundsGEP(globals[5], gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(8);
	Value* binop329_var = BinaryOperator::Create(Instruction::Add, load328_var, binop322_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep330_array { binop329_var, };
	Value* gep330_var = builder.CreateInBoundsGEP(cast305_var, gep330_array);
	llvm::LoadInst* load331_var = builder.CreateLoad(gep330_var, false);
	load331_var->setAlignment(1);
	Value* cast332_var = builder.CreateCast(Instruction::ZExt, load331_var, types[0]);
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block78);
	CallInst* call333_var = builder.CreateCall(globals[6], gep54_var);
	call333_var->setTailCall();
	call333_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block79);
	PHINode* phi334_var = builder.CreatePHI(types[0], 4);
	Value* binop335_var = BinaryOperator::Create(Instruction::Add, phi334_var, phi298_var, "", builder.GetInsertBlock());
	builder.CreateBr(block80);
	
	builder.SetInsertPoint(block80);
	PHINode* phi336_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep337_array { gep4_val4_int, gep4_val5_int, switch41_val42_int, switch9_val9_int, };
	Value* gep337_var = builder.CreateInBoundsGEP(arg3, gep337_array);
	llvm::LoadInst* load338_var = builder.CreateLoad(gep337_var, false);
	load338_var->setAlignment(1);
	Value* cast339_var = builder.CreateCast(Instruction::ZExt, load338_var, types[0]);
	CallInst* call340_var = builder.CreateCall2(globals[8], phi336_var, cast339_var);
	call340_var->setTailCall();
	builder.CreateBr(block82);
	
	builder.SetInsertPoint(block81);
	CallInst* call341_var = builder.CreateCall(globals[6], gep178_var);
	call341_var->setTailCall();
	call341_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block82);
	PHINode* phi342_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep343_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, };
	Value* gep343_var = builder.CreateInBoundsGEP(arg3, gep343_array);
	llvm::LoadInst* load344_var = builder.CreateLoad(gep343_var, false);
	load344_var->setAlignment(1);
	Value* cast345_var = builder.CreateCast(Instruction::ZExt, load344_var, types[0]);
	Value* binop346_var = BinaryOperator::Create(Instruction::Sub, gep4_val4_int, phi342_var, "", builder.GetInsertBlock());
	CallInst* call347_var = builder.CreateCall2(globals[11], phi181_var, binop346_var);
	call347_var->setTailCall();
	call347_var->setDoesNotThrow();
	call347_var->setDoesNotAccessMemory();
	ArrayRef<unsigned> extr349_array { 0, };
	Value* extr349_var = builder.CreateExtractValue(call347_var, extr349_array);
	SwitchInst* switch350_var = builder.CreateSwitch(cast345_var, block85, 4);
	switch350_var->addCase(cast<ConstantInt>(cmp32_val32_int), block83);
	switch350_var->addCase(cast<ConstantInt>(switch41_val41_int), block83);
	switch350_var->addCase(cast<ConstantInt>(switch41_val42_int), block83);
	switch350_var->addCase(cast<ConstantInt>(cmp24_val24_int), block84);
	
	builder.SetInsertPoint(block83);
	Constant* binop350_val350_int = ConstantInt::get(types[0], 3u);
	Value* binop350_var = BinaryOperator::CreateNSW(Instruction::Shl, cast345_var, binop350_val350_int, "", builder.GetInsertBlock());
	Value* binop352_var = BinaryOperator::Create(Instruction::Shl, switch41_val42_int, binop350_var, "", builder.GetInsertBlock());
	Value* binop353_var = BinaryOperator::Create(Instruction::And, binop352_var, extr349_var, "", builder.GetInsertBlock());
	Value* cmp354_var = builder.CreateICmp(CmpInst::ICMP_NE, binop353_var, gep4_val4_int);
	Value* cast355_var = builder.CreateCast(Instruction::ZExt, cmp354_var, types[11]);
	Constant* binop356_val356_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop356_var = BinaryOperator::CreateNSW(Instruction::Add, binop350_var, binop356_val356_int, "", builder.GetInsertBlock());
	Value* binop358_var = BinaryOperator::Create(Instruction::Shl, switch41_val42_int, binop356_var, "", builder.GetInsertBlock());
	Value* binop359_var = BinaryOperator::Create(Instruction::And, binop358_var, extr349_var, "", builder.GetInsertBlock());
	Value* cmp360_var = builder.CreateICmp(CmpInst::ICMP_NE, binop359_var, gep4_val4_int);
	Value* cast361_var = builder.CreateCast(Instruction::ZExt, cmp360_var, types[11]);
	builder.CreateBr(block86);
	
	builder.SetInsertPoint(block84);
	ArrayRef<unsigned> extr362_array { 1, };
	Value* extr362_var = builder.CreateExtractValue(call347_var, extr362_array);
	Value* cast363_var = builder.CreateCast(Instruction::ZExt, extr362_var, types[11]);
	Constant* binop364_val364_int = ConstantInt::get(types[0], 63u);
	Value* binop364_var = BinaryOperator::Create(Instruction::LShr, extr349_var, binop364_val364_int, "", builder.GetInsertBlock());
	Value* cast366_var = builder.CreateCast(Instruction::Trunc, binop364_var, types[11]);
	builder.CreateBr(block86);
	
	builder.SetInsertPoint(block85);
	ArrayRef<Value*> gep367_array { gep4_val4_int, gep4_val4_int, };
	Value* gep367_var = builder.CreateInBoundsGEP(globals[12], gep367_array);
	CallInst* call367_var = builder.CreateCall(globals[6], gep367_var);
	call367_var->setTailCall();
	call367_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block86);
	PHINode* phi370_var = builder.CreatePHI(types[11], 2);
	PHINode* phi371_var = builder.CreatePHI(types[11], 2);
	ArrayRef<Value*> gep372_array { gep4_val4_int, gep4_val6_int, };
	Value* gep372_var = builder.CreateInBoundsGEP(arg2, gep372_array);
	Constant* binop373_val373_int = ConstantInt::get(types[11], 1u);
	Value* binop373_var = BinaryOperator::Create(Instruction::And, phi371_var, binop373_val373_int, "", builder.GetInsertBlock());
	Constant* gep375_val375_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep375_array { gep4_val4_int, gep375_val375_int, };
	Value* gep375_var = builder.CreateInBoundsGEP(arg2, gep375_array);
	llvm::StoreInst* store377_var = builder.CreateStore(binop373_var, gep375_var, false);
	store377_var->setAlignment(1);
	CallInst* call378_var = builder.CreateCall(globals[13], extr349_var);
	call378_var->setTailCall();
	call378_var->setDoesNotThrow();
	call378_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep380_array { gep4_val4_int, switch9_val10_int, };
	Value* gep380_var = builder.CreateInBoundsGEP(arg2, gep380_array);
	Value* cast381_var = builder.CreateCast(Instruction::Trunc, call378_var, types[11]);
	Value* binop382_var = BinaryOperator::Create(Instruction::And, cast381_var, binop373_val373_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store383_var = builder.CreateStore(binop382_var, gep380_var, false);
	store383_var->setAlignment(1);
	Constant* binop384_val384_int = ConstantInt::get(types[0], 15u);
	Value* binop384_var = BinaryOperator::Create(Instruction::And, phi181_var, binop384_val384_int, "", builder.GetInsertBlock());
	Value* binop386_var = BinaryOperator::Create(Instruction::And, binop346_var, binop384_val384_int, "", builder.GetInsertBlock());
	Value* binop387_var = BinaryOperator::CreateNSW(Instruction::Add, binop386_var, binop384_var, "", builder.GetInsertBlock());
	Constant* cmp388_val388_int = ConstantInt::get(types[0], 16u);
	Value* cmp388_var = builder.CreateICmp(CmpInst::ICMP_ULT, binop387_var, cmp388_val388_int);
	ArrayRef<Value*> gep390_array { gep4_val4_int, switch9_val9_int, };
	Value* gep390_var = builder.CreateInBoundsGEP(arg2, gep390_array);
	Value* cmp391_var = builder.CreateICmp(CmpInst::ICMP_EQ, extr349_var, gep4_val4_int);
	ArrayRef<Value*> gep392_array { gep4_val4_int, switch9_val11_int, };
	Value* gep392_var = builder.CreateInBoundsGEP(arg2, gep392_array);
	Value* cast393_var = builder.CreateCast(Instruction::ZExt, cmp391_var, types[11]);
	llvm::StoreInst* store394_var = builder.CreateStore(cast393_var, gep392_var, false);
	store394_var->setAlignment(1);
	Constant* gep395_val395_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep395_array { gep4_val4_int, gep395_val395_int, };
	Value* gep395_var = builder.CreateInBoundsGEP(arg2, gep395_array);
	Value* binop397_var = BinaryOperator::Create(Instruction::Xor, binop373_var, phi370_var, "", builder.GetInsertBlock());
	llvm::StoreInst* store398_var = builder.CreateStore(binop397_var, gep395_var, false);
	store398_var->setAlignment(1);
	Value* binop399_var = BinaryOperator::Create(Instruction::Xor, phi370_var, binop373_val373_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store400_var = builder.CreateStore(binop399_var, gep372_var, false);
	store400_var->setAlignment(1);
	Value* cast401_var = builder.CreateCast(Instruction::ZExt, cmp388_var, types[11]);
	llvm::StoreInst* store402_var = builder.CreateStore(cast401_var, gep390_var, false);
	store402_var->setAlignment(1);
	phi92_var->addIncoming(gep4_val4_int, block10);
	phi92_var->addIncoming(load69_var, block12);
	phi92_var->addIncoming(cast77_var, block14);
	phi92_var->addIncoming(cast84_var, block16);
	phi92_var->addIncoming(cast90_var, block17);
	
	phi128_var->addIncoming(load105_var, block21);
	phi128_var->addIncoming(cast113_var, block23);
	phi128_var->addIncoming(cast120_var, block25);
	phi128_var->addIncoming(cast126_var, block26);
	
	phi134_var->addIncoming(binop133_var, block28);
	phi134_var->addIncoming(phi92_var, block19);
	
	phi170_var->addIncoming(load147_var, block31);
	phi170_var->addIncoming(cast155_var, block33);
	phi170_var->addIncoming(cast162_var, block35);
	phi170_var->addIncoming(cast168_var, block36);
	
	phi172_var->addIncoming(binop171_var, block38);
	phi172_var->addIncoming(phi134_var, block29);
	
	phi181_var->addIncoming(call176_var, block39);
	phi181_var->addIncoming(load14_var, block1);
	phi181_var->addIncoming(load28_var, block3);
	phi181_var->addIncoming(cast37_var, block5);
	phi181_var->addIncoming(cast46_var, block7);
	phi181_var->addIncoming(cast52_var, block8);
	
	phi256_var->addIncoming(gep4_val4_int, block51);
	phi256_var->addIncoming(load233_var, block53);
	phi256_var->addIncoming(cast241_var, block55);
	phi256_var->addIncoming(cast248_var, block57);
	phi256_var->addIncoming(cast254_var, block58);
	
	phi292_var->addIncoming(load269_var, block62);
	phi292_var->addIncoming(cast277_var, block64);
	phi292_var->addIncoming(cast284_var, block66);
	phi292_var->addIncoming(cast290_var, block67);
	
	phi298_var->addIncoming(binop297_var, block69);
	phi298_var->addIncoming(phi256_var, block60);
	
	phi334_var->addIncoming(load311_var, block72);
	phi334_var->addIncoming(cast319_var, block74);
	phi334_var->addIncoming(cast326_var, block76);
	phi334_var->addIncoming(cast332_var, block77);
	
	phi336_var->addIncoming(binop335_var, block79);
	phi336_var->addIncoming(phi298_var, block70);
	
	phi342_var->addIncoming(call340_var, block80);
	phi342_var->addIncoming(load186_var, block42);
	phi342_var->addIncoming(load198_var, block44);
	phi342_var->addIncoming(cast206_var, block46);
	phi342_var->addIncoming(cast213_var, block48);
	phi342_var->addIncoming(cast219_var, block49);
	
	phi370_var->addIncoming(cast355_var, block83);
	phi370_var->addIncoming(cast363_var, block84);
	
	phi371_var->addIncoming(cast361_var, block83);
	phi371_var->addIncoming(cast366_var, block84);
	
	return;
}

void x86::x86_cmppd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[88], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[89], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[90], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[91], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpsq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[92], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[93], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[94], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpxchg(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[95], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpxchg16b(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[96], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cmpxchg8b(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[97], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_comisd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[98], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_comiss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[99], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cpuid(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[100], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cqo(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[101], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_crc32(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[102], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtdq2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[103], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtdq2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[104], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtpd2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[105], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtpd2pi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[106], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtpd2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[107], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtpi2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[108], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtpi2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[109], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtps2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[110], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtps2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[111], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtps2pi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[112], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtsd2si(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[113], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtsd2ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[114], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtsi2sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[115], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtsi2ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[116], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtss2sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[117], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvtss2si(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[118], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvttpd2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[119], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvttpd2pi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[120], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvttps2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[121], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvttps2pi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[122], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvttsd2si(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[123], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cvttss2si(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[124], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[125], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_cwde(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[126], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_daa(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[127], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_das(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[128], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_data16(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[129], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_dec(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[130], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_div(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[131], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_divpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[132], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_divps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[133], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_divsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[134], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_divss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[135], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_dppd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[136], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_dpps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[137], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_emms(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[138], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_encls(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[139], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_enclu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[140], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_enter(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[141], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_extractps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[142], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_extrq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[143], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_f2xm1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[144], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fabs(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[145], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fadd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[146], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_faddp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[147], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fbld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[148], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fbstp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[149], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fchs(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[150], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcmovb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[151], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcmovbe(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[152], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcmove(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[153], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcmovnb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[154], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcmovnbe(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[155], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcmovne(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[156], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcmovnu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[157], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcmovu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[158], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcom(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[159], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcomi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[160], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcomp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[161], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcompi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[162], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcompp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[163], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fcos(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[164], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fdecstp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[165], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fdiv(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[166], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fdivp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[167], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fdivr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[168], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fdivrp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[169], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_femms(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[170], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ffree(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[171], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fiadd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[172], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ficom(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[173], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ficomp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[174], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fidiv(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[175], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fidivr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[176], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fild(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[177], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fimul(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[178], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fincstp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[179], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fist(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[180], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fistp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[181], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fisttp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[182], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fisub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[183], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fisubr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[184], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[185], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fld1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[186], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fldcw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[187], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fldenv(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[188], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fldl2e(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[189], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fldl2t(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[190], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fldlg2(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[191], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fldln2(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[192], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fldpi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[193], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fldz(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[194], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fmul(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[195], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fmulp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[196], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fnclex(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[197], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fninit(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[198], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fnop(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[199], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fnsave(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[200], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fnstcw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[201], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fnstenv(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[202], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fnstsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[203], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fpatan(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[204], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fprem(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[205], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fprem1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[206], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fptan(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[207], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_frndint(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[208], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_frstor(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[209], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fscale(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[210], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fsetpm(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[211], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fsin(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[212], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fsincos(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[213], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fsqrt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[214], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fst(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[215], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fstp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[216], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fstpnce(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[217], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fsub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[218], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fsubp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[219], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fsubr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[220], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fsubrp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[221], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ftst(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[222], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fucom(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[223], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fucomi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[224], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fucomp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[225], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fucompi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[226], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fucompp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[227], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fxam(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[228], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fxch(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[229], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fxrstor(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[230], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fxrstor64(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[231], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fxsave(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[232], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fxsave64(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[233], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fxtract(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[234], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fyl2x(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[235], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_fyl2xp1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[236], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_getsec(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[237], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_haddpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[238], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_haddps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[239], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_hlt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[240], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_hsubpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[241], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_hsubps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[242], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_idiv(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[243], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_imul(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	BasicBlock* block84 = BasicBlock::Create(context, "", function);
	BasicBlock* block85 = BasicBlock::Create(context, "", function);
	BasicBlock* block86 = BasicBlock::Create(context, "", function);
	BasicBlock* block87 = BasicBlock::Create(context, "", function);
	BasicBlock* block88 = BasicBlock::Create(context, "", function);
	BasicBlock* block89 = BasicBlock::Create(context, "", function);
	BasicBlock* block90 = BasicBlock::Create(context, "", function);
	BasicBlock* block91 = BasicBlock::Create(context, "", function);
	BasicBlock* block92 = BasicBlock::Create(context, "", function);
	BasicBlock* block93 = BasicBlock::Create(context, "", function);
	BasicBlock* block94 = BasicBlock::Create(context, "", function);
	BasicBlock* block95 = BasicBlock::Create(context, "", function);
	BasicBlock* block96 = BasicBlock::Create(context, "", function);
	BasicBlock* block97 = BasicBlock::Create(context, "", function);
	BasicBlock* block98 = BasicBlock::Create(context, "", function);
	BasicBlock* block99 = BasicBlock::Create(context, "", function);
	BasicBlock* block100 = BasicBlock::Create(context, "", function);
	BasicBlock* block101 = BasicBlock::Create(context, "", function);
	BasicBlock* block102 = BasicBlock::Create(context, "", function);
	BasicBlock* block103 = BasicBlock::Create(context, "", function);
	BasicBlock* block104 = BasicBlock::Create(context, "", function);
	BasicBlock* block105 = BasicBlock::Create(context, "", function);
	BasicBlock* block106 = BasicBlock::Create(context, "", function);
	BasicBlock* block107 = BasicBlock::Create(context, "", function);
	BasicBlock* block108 = BasicBlock::Create(context, "", function);
	BasicBlock* block109 = BasicBlock::Create(context, "", function);
	BasicBlock* block110 = BasicBlock::Create(context, "", function);
	BasicBlock* block111 = BasicBlock::Create(context, "", function);
	BasicBlock* block112 = BasicBlock::Create(context, "", function);
	BasicBlock* block113 = BasicBlock::Create(context, "", function);
	BasicBlock* block114 = BasicBlock::Create(context, "", function);
	BasicBlock* block115 = BasicBlock::Create(context, "", function);
	BasicBlock* block116 = BasicBlock::Create(context, "", function);
	BasicBlock* block117 = BasicBlock::Create(context, "", function);
	BasicBlock* block118 = BasicBlock::Create(context, "", function);
	BasicBlock* block119 = BasicBlock::Create(context, "", function);
	BasicBlock* block120 = BasicBlock::Create(context, "", function);
	BasicBlock* block121 = BasicBlock::Create(context, "", function);
	BasicBlock* block122 = BasicBlock::Create(context, "", function);
	BasicBlock* block123 = BasicBlock::Create(context, "", function);
	BasicBlock* block124 = BasicBlock::Create(context, "", function);
	BasicBlock* block125 = BasicBlock::Create(context, "", function);
	BasicBlock* block126 = BasicBlock::Create(context, "", function);
	BasicBlock* block127 = BasicBlock::Create(context, "", function);
	BasicBlock* block128 = BasicBlock::Create(context, "", function);
	BasicBlock* block129 = BasicBlock::Create(context, "", function);
	BasicBlock* block130 = BasicBlock::Create(context, "", function);
	BasicBlock* block131 = BasicBlock::Create(context, "", function);
	BasicBlock* block132 = BasicBlock::Create(context, "", function);
	BasicBlock* block133 = BasicBlock::Create(context, "", function);
	BasicBlock* block134 = BasicBlock::Create(context, "", function);
	BasicBlock* block135 = BasicBlock::Create(context, "", function);
	BasicBlock* block136 = BasicBlock::Create(context, "", function);
	BasicBlock* block137 = BasicBlock::Create(context, "", function);
	BasicBlock* block138 = BasicBlock::Create(context, "", function);
	BasicBlock* block139 = BasicBlock::Create(context, "", function);
	BasicBlock* block140 = BasicBlock::Create(context, "", function);
	BasicBlock* block141 = BasicBlock::Create(context, "", function);
	BasicBlock* block142 = BasicBlock::Create(context, "", function);
	BasicBlock* block143 = BasicBlock::Create(context, "", function);
	BasicBlock* block144 = BasicBlock::Create(context, "", function);
	BasicBlock* block145 = BasicBlock::Create(context, "", function);
	BasicBlock* block146 = BasicBlock::Create(context, "", function);
	BasicBlock* block147 = BasicBlock::Create(context, "", function);
	BasicBlock* block148 = BasicBlock::Create(context, "", function);
	BasicBlock* block149 = BasicBlock::Create(context, "", function);
	BasicBlock* block150 = BasicBlock::Create(context, "", function);
	BasicBlock* block151 = BasicBlock::Create(context, "", function);
	BasicBlock* block152 = BasicBlock::Create(context, "", function);
	BasicBlock* block153 = BasicBlock::Create(context, "", function);
	BasicBlock* block154 = BasicBlock::Create(context, "", function);
	BasicBlock* block155 = BasicBlock::Create(context, "", function);
	BasicBlock* block156 = BasicBlock::Create(context, "", function);
	BasicBlock* block157 = BasicBlock::Create(context, "", function);
	BasicBlock* block158 = BasicBlock::Create(context, "", function);
	BasicBlock* block159 = BasicBlock::Create(context, "", function);
	BasicBlock* block160 = BasicBlock::Create(context, "", function);
	BasicBlock* block161 = BasicBlock::Create(context, "", function);
	BasicBlock* block162 = BasicBlock::Create(context, "", function);
	BasicBlock* block163 = BasicBlock::Create(context, "", function);
	BasicBlock* block164 = BasicBlock::Create(context, "", function);
	BasicBlock* block165 = BasicBlock::Create(context, "", function);
	BasicBlock* block166 = BasicBlock::Create(context, "", function);
	BasicBlock* block167 = BasicBlock::Create(context, "", function);
	BasicBlock* block168 = BasicBlock::Create(context, "", function);
	BasicBlock* block169 = BasicBlock::Create(context, "", function);
	BasicBlock* block170 = BasicBlock::Create(context, "", function);
	BasicBlock* block171 = BasicBlock::Create(context, "", function);
	BasicBlock* block172 = BasicBlock::Create(context, "", function);
	BasicBlock* block173 = BasicBlock::Create(context, "", function);
	BasicBlock* block174 = BasicBlock::Create(context, "", function);
	BasicBlock* block175 = BasicBlock::Create(context, "", function);
	BasicBlock* block176 = BasicBlock::Create(context, "", function);
	BasicBlock* block177 = BasicBlock::Create(context, "", function);
	BasicBlock* block178 = BasicBlock::Create(context, "", function);
	BasicBlock* block179 = BasicBlock::Create(context, "", function);
	BasicBlock* block180 = BasicBlock::Create(context, "", function);
	BasicBlock* block181 = BasicBlock::Create(context, "", function);
	BasicBlock* block182 = BasicBlock::Create(context, "", function);
	BasicBlock* block183 = BasicBlock::Create(context, "", function);
	BasicBlock* block184 = BasicBlock::Create(context, "", function);
	BasicBlock* block185 = BasicBlock::Create(context, "", function);
	BasicBlock* block186 = BasicBlock::Create(context, "", function);
	BasicBlock* block187 = BasicBlock::Create(context, "", function);
	BasicBlock* block188 = BasicBlock::Create(context, "", function);
	BasicBlock* block189 = BasicBlock::Create(context, "", function);
	BasicBlock* block190 = BasicBlock::Create(context, "", function);
	BasicBlock* block191 = BasicBlock::Create(context, "", function);
	BasicBlock* block192 = BasicBlock::Create(context, "", function);
	BasicBlock* block193 = BasicBlock::Create(context, "", function);
	BasicBlock* block194 = BasicBlock::Create(context, "", function);
	BasicBlock* block195 = BasicBlock::Create(context, "", function);
	BasicBlock* block196 = BasicBlock::Create(context, "", function);
	BasicBlock* block197 = BasicBlock::Create(context, "", function);
	BasicBlock* block198 = BasicBlock::Create(context, "", function);
	BasicBlock* block199 = BasicBlock::Create(context, "", function);
	BasicBlock* block200 = BasicBlock::Create(context, "", function);
	BasicBlock* block201 = BasicBlock::Create(context, "", function);
	BasicBlock* block202 = BasicBlock::Create(context, "", function);
	BasicBlock* block203 = BasicBlock::Create(context, "", function);
	BasicBlock* block204 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	Constant* gep7_val7_int = ConstantInt::get(types[2], 14u);
	ArrayRef<Value*> gep7_array { gep4_val4_int, gep7_val7_int, };
	Value* gep7_var = builder.CreateInBoundsGEP(arg3, gep7_array);
	llvm::LoadInst* load9_var = builder.CreateLoad(gep7_var, false);
	load9_var->setAlignment(1);
	Value* cast10_var = builder.CreateCast(Instruction::ZExt, load9_var, types[2]);
	SwitchInst* switch11_var = builder.CreateSwitch(cast10_var, block164, 2);
	Constant* switch11_val11_int = ConstantInt::get(types[2], 2u);
	switch11_var->addCase(cast<ConstantInt>(switch11_val11_int), block1);
	Constant* switch11_val12_int = ConstantInt::get(types[2], 3u);
	switch11_var->addCase(cast<ConstantInt>(switch11_val12_int), block82);
	
	builder.SetInsertPoint(block1);
	Constant* gep13_val13_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep13_val13_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(gep4_var, gep13_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep13_var, false);
	load15_var->setAlignment(4);
	SwitchInst* switch16_var = builder.CreateSwitch(load15_var, block40, 2);
	Constant* switch16_val16_int = ConstantInt::get(types[2], 1u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val16_int), block2);
	switch16_var->addCase(cast<ConstantInt>(switch11_val12_int), block10);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep17_var = builder.CreateGEP(arg3, gep17_array);
	llvm::LoadInst* load18_var = builder.CreateLoad(gep17_var, false);
	load18_var->setAlignment(4);
	Value* cast19_var = builder.CreateCast(Instruction::ZExt, load18_var, types[0]);
	ArrayRef<Value*> gep20_array { gep4_val4_int, cast19_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep20_var = builder.CreateInBoundsGEP(globals[5], gep20_array);
	llvm::LoadInst* load22_var = builder.CreateLoad(gep20_var, false);
	load22_var->setAlignment(16);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep24_array { gep4_val4_int, cast19_var, switch16_val16_int, };
	Value* gep24_var = builder.CreateInBoundsGEP(globals[5], gep24_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep24_var, false);
	load25_var->setAlignment(16);
	Constant* cmp26_val26_int = ConstantInt::get(types[0], 8u);
	Value* cmp26_var = builder.CreateICmp(CmpInst::ICMP_EQ, load25_var, cmp26_val26_int);
	builder.CreateCondBr(cmp26_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep28_array { load22_var, };
	Value* gep28_var = builder.CreateInBoundsGEP(cast23_var, gep28_array);
	Value* cast29_var = builder.CreateCast(Instruction::BitCast, gep28_var, types[27]);
	llvm::LoadInst* load30_var = builder.CreateLoad(cast29_var, false);
	load30_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep31_array { gep4_val4_int, cast19_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep31_var = builder.CreateInBoundsGEP(globals[5], gep31_array);
	llvm::LoadInst* load32_var = builder.CreateLoad(gep31_var, false);
	load32_var->setAlignment(8);
	Value* binop33_var = BinaryOperator::Create(Instruction::Add, load32_var, load22_var, "", builder.GetInsertBlock());
	Constant* cmp34_val34_int = ConstantInt::get(types[0], 4u);
	Value* cmp34_var = builder.CreateICmp(CmpInst::ICMP_EQ, load25_var, cmp34_val34_int);
	builder.CreateCondBr(cmp34_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep36_array { binop33_var, };
	Value* gep36_var = builder.CreateInBoundsGEP(cast23_var, gep36_array);
	Value* cast37_var = builder.CreateCast(Instruction::BitCast, gep36_var, types[28]);
	llvm::LoadInst* load38_var = builder.CreateLoad(cast37_var, false);
	load38_var->setAlignment(4);
	Value* cast39_var = builder.CreateCast(Instruction::ZExt, load38_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { gep4_val4_int, cast19_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep40_var = builder.CreateInBoundsGEP(globals[5], gep40_array);
	llvm::LoadInst* load41_var = builder.CreateLoad(gep40_var, false);
	load41_var->setAlignment(16);
	Value* binop42_var = BinaryOperator::Create(Instruction::Add, load41_var, binop33_var, "", builder.GetInsertBlock());
	SwitchInst* switch43_var = builder.CreateSwitch(load25_var, block9, 2);
	Constant* switch43_val43_int = ConstantInt::get(types[0], 2u);
	switch43_var->addCase(cast<ConstantInt>(switch43_val43_int), block7);
	Constant* switch43_val44_int = ConstantInt::get(types[0], 1u);
	switch43_var->addCase(cast<ConstantInt>(switch43_val44_int), block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep45_array { binop42_var, };
	Value* gep45_var = builder.CreateInBoundsGEP(cast23_var, gep45_array);
	Value* cast46_var = builder.CreateCast(Instruction::BitCast, gep45_var, types[30]);
	llvm::LoadInst* load47_var = builder.CreateLoad(cast46_var, false);
	load47_var->setAlignment(2);
	Value* cast48_var = builder.CreateCast(Instruction::ZExt, load47_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep49_array { gep4_val4_int, cast19_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep49_var = builder.CreateInBoundsGEP(globals[5], gep49_array);
	llvm::LoadInst* load50_var = builder.CreateLoad(gep49_var, false);
	load50_var->setAlignment(8);
	Value* binop51_var = BinaryOperator::Create(Instruction::Add, load50_var, binop42_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep52_array { binop51_var, };
	Value* gep52_var = builder.CreateInBoundsGEP(cast23_var, gep52_array);
	llvm::LoadInst* load53_var = builder.CreateLoad(gep52_var, false);
	load53_var->setAlignment(1);
	Value* cast54_var = builder.CreateCast(Instruction::ZExt, load53_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep56_array { gep4_val4_int, gep4_val4_int, };
	Value* gep56_var = builder.CreateInBoundsGEP(globals[7], gep56_array);
	CallInst* call55_var = builder.CreateCall(globals[6], gep56_var);
	call55_var->setTailCall();
	call55_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep59_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep59_var = builder.CreateInBoundsGEP(arg3, gep59_array);
	llvm::LoadInst* load60_var = builder.CreateLoad(gep59_var, false);
	load60_var->setAlignment(4);
	Value* cmp61_var = builder.CreateICmp(CmpInst::ICMP_EQ, load60_var, gep13_val13_int);
	builder.CreateCondBr(cmp61_var, block19, block11);
	
	builder.SetInsertPoint(block11);
	Value* cast62_var = builder.CreateCast(Instruction::ZExt, load60_var, types[0]);
	ArrayRef<Value*> gep63_array { gep4_val4_int, cast62_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep63_var = builder.CreateInBoundsGEP(globals[5], gep63_array);
	llvm::LoadInst* load64_var = builder.CreateLoad(gep63_var, false);
	load64_var->setAlignment(16);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast62_var, switch16_val16_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(16);
	Value* cmp68_var = builder.CreateICmp(CmpInst::ICMP_EQ, load67_var, cmp26_val26_int);
	builder.CreateCondBr(cmp68_var, block12, block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep69_array { load64_var, };
	Value* gep69_var = builder.CreateInBoundsGEP(cast65_var, gep69_array);
	Value* cast70_var = builder.CreateCast(Instruction::BitCast, gep69_var, types[27]);
	llvm::LoadInst* load71_var = builder.CreateLoad(cast70_var, false);
	load71_var->setAlignment(8);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep72_array { gep4_val4_int, cast62_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep72_var = builder.CreateInBoundsGEP(globals[5], gep72_array);
	llvm::LoadInst* load73_var = builder.CreateLoad(gep72_var, false);
	load73_var->setAlignment(8);
	Value* binop74_var = BinaryOperator::Create(Instruction::Add, load73_var, load64_var, "", builder.GetInsertBlock());
	Value* cmp75_var = builder.CreateICmp(CmpInst::ICMP_EQ, load67_var, cmp34_val34_int);
	builder.CreateCondBr(cmp75_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep76_array { binop74_var, };
	Value* gep76_var = builder.CreateInBoundsGEP(cast65_var, gep76_array);
	Value* cast77_var = builder.CreateCast(Instruction::BitCast, gep76_var, types[28]);
	llvm::LoadInst* load78_var = builder.CreateLoad(cast77_var, false);
	load78_var->setAlignment(4);
	Value* cast79_var = builder.CreateCast(Instruction::ZExt, load78_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep80_array { gep4_val4_int, cast62_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep80_var = builder.CreateInBoundsGEP(globals[5], gep80_array);
	llvm::LoadInst* load81_var = builder.CreateLoad(gep80_var, false);
	load81_var->setAlignment(16);
	Value* binop82_var = BinaryOperator::Create(Instruction::Add, load81_var, binop74_var, "", builder.GetInsertBlock());
	SwitchInst* switch83_var = builder.CreateSwitch(load67_var, block18, 2);
	switch83_var->addCase(cast<ConstantInt>(switch43_val43_int), block16);
	switch83_var->addCase(cast<ConstantInt>(switch43_val44_int), block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep83_array { binop82_var, };
	Value* gep83_var = builder.CreateInBoundsGEP(cast65_var, gep83_array);
	Value* cast84_var = builder.CreateCast(Instruction::BitCast, gep83_var, types[30]);
	llvm::LoadInst* load85_var = builder.CreateLoad(cast84_var, false);
	load85_var->setAlignment(2);
	Value* cast86_var = builder.CreateCast(Instruction::ZExt, load85_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep87_array { gep4_val4_int, cast62_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep87_var = builder.CreateInBoundsGEP(globals[5], gep87_array);
	llvm::LoadInst* load88_var = builder.CreateLoad(gep87_var, false);
	load88_var->setAlignment(8);
	Value* binop89_var = BinaryOperator::Create(Instruction::Add, load88_var, binop82_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep90_array { binop89_var, };
	Value* gep90_var = builder.CreateInBoundsGEP(cast65_var, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(1);
	Value* cast92_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block18);
	CallInst* call93_var = builder.CreateCall(globals[6], gep56_var);
	call93_var->setTailCall();
	call93_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block19);
	PHINode* phi94_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep95_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, switch11_val11_int, };
	Value* gep95_var = builder.CreateInBoundsGEP(arg3, gep95_array);
	llvm::LoadInst* load96_var = builder.CreateLoad(gep95_var, false);
	load96_var->setAlignment(4);
	Value* cmp97_var = builder.CreateICmp(CmpInst::ICMP_EQ, load96_var, gep13_val13_int);
	builder.CreateCondBr(cmp97_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast98_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	ArrayRef<Value*> gep99_array { gep4_val4_int, cast98_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep99_var = builder.CreateInBoundsGEP(globals[5], gep99_array);
	llvm::LoadInst* load100_var = builder.CreateLoad(gep99_var, false);
	load100_var->setAlignment(16);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep102_array { gep4_val4_int, cast98_var, switch16_val16_int, };
	Value* gep102_var = builder.CreateInBoundsGEP(globals[5], gep102_array);
	llvm::LoadInst* load103_var = builder.CreateLoad(gep102_var, false);
	load103_var->setAlignment(16);
	Value* cmp104_var = builder.CreateICmp(CmpInst::ICMP_EQ, load103_var, cmp26_val26_int);
	builder.CreateCondBr(cmp104_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep105_array { load100_var, };
	Value* gep105_var = builder.CreateInBoundsGEP(cast101_var, gep105_array);
	Value* cast106_var = builder.CreateCast(Instruction::BitCast, gep105_var, types[27]);
	llvm::LoadInst* load107_var = builder.CreateLoad(cast106_var, false);
	load107_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep108_array { gep4_val4_int, cast98_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep108_var = builder.CreateInBoundsGEP(globals[5], gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(8);
	Value* binop110_var = BinaryOperator::Create(Instruction::Add, load109_var, load100_var, "", builder.GetInsertBlock());
	Value* cmp111_var = builder.CreateICmp(CmpInst::ICMP_EQ, load103_var, cmp34_val34_int);
	builder.CreateCondBr(cmp111_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep112_array { binop110_var, };
	Value* gep112_var = builder.CreateInBoundsGEP(cast101_var, gep112_array);
	Value* cast113_var = builder.CreateCast(Instruction::BitCast, gep112_var, types[28]);
	llvm::LoadInst* load114_var = builder.CreateLoad(cast113_var, false);
	load114_var->setAlignment(4);
	Value* cast115_var = builder.CreateCast(Instruction::ZExt, load114_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep116_array { gep4_val4_int, cast98_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep116_var = builder.CreateInBoundsGEP(globals[5], gep116_array);
	llvm::LoadInst* load117_var = builder.CreateLoad(gep116_var, false);
	load117_var->setAlignment(16);
	Value* binop118_var = BinaryOperator::Create(Instruction::Add, load117_var, binop110_var, "", builder.GetInsertBlock());
	SwitchInst* switch119_var = builder.CreateSwitch(load103_var, block27, 2);
	switch119_var->addCase(cast<ConstantInt>(switch43_val43_int), block25);
	switch119_var->addCase(cast<ConstantInt>(switch43_val44_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep119_array { binop118_var, };
	Value* gep119_var = builder.CreateInBoundsGEP(cast101_var, gep119_array);
	Value* cast120_var = builder.CreateCast(Instruction::BitCast, gep119_var, types[30]);
	llvm::LoadInst* load121_var = builder.CreateLoad(cast120_var, false);
	load121_var->setAlignment(2);
	Value* cast122_var = builder.CreateCast(Instruction::ZExt, load121_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep123_array { gep4_val4_int, cast98_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep123_var = builder.CreateInBoundsGEP(globals[5], gep123_array);
	llvm::LoadInst* load124_var = builder.CreateLoad(gep123_var, false);
	load124_var->setAlignment(8);
	Value* binop125_var = BinaryOperator::Create(Instruction::Add, load124_var, binop118_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep126_array { binop125_var, };
	Value* gep126_var = builder.CreateInBoundsGEP(cast101_var, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(1);
	Value* cast128_var = builder.CreateCast(Instruction::ZExt, load127_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call129_var = builder.CreateCall(globals[6], gep56_var);
	call129_var->setTailCall();
	call129_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi130_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep131_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, switch11_val12_int, };
	Value* gep131_var = builder.CreateInBoundsGEP(arg3, gep131_array);
	llvm::LoadInst* load132_var = builder.CreateLoad(gep131_var, false);
	load132_var->setAlignment(4);
	Value* cast133_var = builder.CreateCast(Instruction::SExt, load132_var, types[0]);
	Value* binop134_var = BinaryOperator::Create(Instruction::Mul, cast133_var, phi130_var, "", builder.GetInsertBlock());
	Value* binop135_var = BinaryOperator::Create(Instruction::Add, binop134_var, phi94_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi136_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep137_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, switch16_val16_int, };
	Value* gep137_var = builder.CreateInBoundsGEP(arg3, gep137_array);
	llvm::LoadInst* load138_var = builder.CreateLoad(gep137_var, false);
	load138_var->setAlignment(4);
	Value* cmp139_var = builder.CreateICmp(CmpInst::ICMP_EQ, load138_var, gep13_val13_int);
	builder.CreateCondBr(cmp139_var, block39, block30);
	
	builder.SetInsertPoint(block30);
	Value* cast140_var = builder.CreateCast(Instruction::ZExt, load138_var, types[0]);
	ArrayRef<Value*> gep141_array { gep4_val4_int, cast140_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep141_var = builder.CreateInBoundsGEP(globals[5], gep141_array);
	llvm::LoadInst* load142_var = builder.CreateLoad(gep141_var, false);
	load142_var->setAlignment(16);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep144_array { gep4_val4_int, cast140_var, switch16_val16_int, };
	Value* gep144_var = builder.CreateInBoundsGEP(globals[5], gep144_array);
	llvm::LoadInst* load145_var = builder.CreateLoad(gep144_var, false);
	load145_var->setAlignment(16);
	Value* cmp146_var = builder.CreateICmp(CmpInst::ICMP_EQ, load145_var, cmp26_val26_int);
	builder.CreateCondBr(cmp146_var, block31, block32);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep147_array { load142_var, };
	Value* gep147_var = builder.CreateInBoundsGEP(cast143_var, gep147_array);
	Value* cast148_var = builder.CreateCast(Instruction::BitCast, gep147_var, types[27]);
	llvm::LoadInst* load149_var = builder.CreateLoad(cast148_var, false);
	load149_var->setAlignment(8);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep150_array { gep4_val4_int, cast140_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep150_var = builder.CreateInBoundsGEP(globals[5], gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(8);
	Value* binop152_var = BinaryOperator::Create(Instruction::Add, load151_var, load142_var, "", builder.GetInsertBlock());
	Value* cmp153_var = builder.CreateICmp(CmpInst::ICMP_EQ, load145_var, cmp34_val34_int);
	builder.CreateCondBr(cmp153_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep154_array { binop152_var, };
	Value* gep154_var = builder.CreateInBoundsGEP(cast143_var, gep154_array);
	Value* cast155_var = builder.CreateCast(Instruction::BitCast, gep154_var, types[28]);
	llvm::LoadInst* load156_var = builder.CreateLoad(cast155_var, false);
	load156_var->setAlignment(4);
	Value* cast157_var = builder.CreateCast(Instruction::ZExt, load156_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep158_array { gep4_val4_int, cast140_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep158_var = builder.CreateInBoundsGEP(globals[5], gep158_array);
	llvm::LoadInst* load159_var = builder.CreateLoad(gep158_var, false);
	load159_var->setAlignment(16);
	Value* binop160_var = BinaryOperator::Create(Instruction::Add, load159_var, binop152_var, "", builder.GetInsertBlock());
	SwitchInst* switch161_var = builder.CreateSwitch(load145_var, block37, 2);
	switch161_var->addCase(cast<ConstantInt>(switch43_val43_int), block35);
	switch161_var->addCase(cast<ConstantInt>(switch43_val44_int), block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep161_array { binop160_var, };
	Value* gep161_var = builder.CreateInBoundsGEP(cast143_var, gep161_array);
	Value* cast162_var = builder.CreateCast(Instruction::BitCast, gep161_var, types[30]);
	llvm::LoadInst* load163_var = builder.CreateLoad(cast162_var, false);
	load163_var->setAlignment(2);
	Value* cast164_var = builder.CreateCast(Instruction::ZExt, load163_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep165_array { gep4_val4_int, cast140_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep165_var = builder.CreateInBoundsGEP(globals[5], gep165_array);
	llvm::LoadInst* load166_var = builder.CreateLoad(gep165_var, false);
	load166_var->setAlignment(8);
	Value* binop167_var = BinaryOperator::Create(Instruction::Add, load166_var, binop160_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep168_array { binop167_var, };
	Value* gep168_var = builder.CreateInBoundsGEP(cast143_var, gep168_array);
	llvm::LoadInst* load169_var = builder.CreateLoad(gep168_var, false);
	load169_var->setAlignment(1);
	Value* cast170_var = builder.CreateCast(Instruction::ZExt, load169_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block37);
	CallInst* call171_var = builder.CreateCall(globals[6], gep56_var);
	call171_var->setTailCall();
	call171_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block38);
	PHINode* phi172_var = builder.CreatePHI(types[0], 4);
	Value* binop173_var = BinaryOperator::Create(Instruction::Add, phi172_var, phi136_var, "", builder.GetInsertBlock());
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block39);
	PHINode* phi174_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch11_val11_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(arg3, gep175_array);
	llvm::LoadInst* load176_var = builder.CreateLoad(gep175_var, false);
	load176_var->setAlignment(1);
	Value* cast177_var = builder.CreateCast(Instruction::ZExt, load176_var, types[0]);
	CallInst* call178_var = builder.CreateCall2(globals[8], phi174_var, cast177_var);
	call178_var->setTailCall();
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block40);
	ArrayRef<Value*> gep180_array { gep4_val4_int, gep4_val4_int, };
	Value* gep180_var = builder.CreateInBoundsGEP(globals[9], gep180_array);
	CallInst* call180_var = builder.CreateCall(globals[6], gep180_var);
	call180_var->setTailCall();
	call180_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block41);
	PHINode* phi183_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, gep13_val13_int, };
	Value* gep184_var = builder.CreateInBoundsGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	SwitchInst* switch186_var = builder.CreateSwitch(load185_var, block81, 3);
	switch186_var->addCase(cast<ConstantInt>(switch11_val11_int), block42);
	switch186_var->addCase(cast<ConstantInt>(switch16_val16_int), block43);
	switch186_var->addCase(cast<ConstantInt>(switch11_val12_int), block51);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep186_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, };
	Value* gep186_var = builder.CreateInBoundsGEP(arg3, gep186_array);
	Value* cast187_var = builder.CreateCast(Instruction::BitCast, gep186_var, types[27]);
	llvm::LoadInst* load188_var = builder.CreateLoad(cast187_var, false);
	load188_var->setAlignment(8);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep189_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep189_var = builder.CreateGEP(arg3, gep189_array);
	llvm::LoadInst* load190_var = builder.CreateLoad(gep189_var, false);
	load190_var->setAlignment(4);
	Value* cast191_var = builder.CreateCast(Instruction::ZExt, load190_var, types[0]);
	ArrayRef<Value*> gep192_array { gep4_val4_int, cast191_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep192_var = builder.CreateInBoundsGEP(globals[5], gep192_array);
	llvm::LoadInst* load193_var = builder.CreateLoad(gep192_var, false);
	load193_var->setAlignment(16);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep195_array { gep4_val4_int, cast191_var, switch16_val16_int, };
	Value* gep195_var = builder.CreateInBoundsGEP(globals[5], gep195_array);
	llvm::LoadInst* load196_var = builder.CreateLoad(gep195_var, false);
	load196_var->setAlignment(16);
	Value* cmp197_var = builder.CreateICmp(CmpInst::ICMP_EQ, load196_var, cmp26_val26_int);
	builder.CreateCondBr(cmp197_var, block44, block45);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep198_array { load193_var, };
	Value* gep198_var = builder.CreateInBoundsGEP(cast194_var, gep198_array);
	Value* cast199_var = builder.CreateCast(Instruction::BitCast, gep198_var, types[27]);
	llvm::LoadInst* load200_var = builder.CreateLoad(cast199_var, false);
	load200_var->setAlignment(8);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep201_array { gep4_val4_int, cast191_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep201_var = builder.CreateInBoundsGEP(globals[5], gep201_array);
	llvm::LoadInst* load202_var = builder.CreateLoad(gep201_var, false);
	load202_var->setAlignment(8);
	Value* binop203_var = BinaryOperator::Create(Instruction::Add, load202_var, load193_var, "", builder.GetInsertBlock());
	Value* cmp204_var = builder.CreateICmp(CmpInst::ICMP_EQ, load196_var, cmp34_val34_int);
	builder.CreateCondBr(cmp204_var, block46, block47);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep205_array { binop203_var, };
	Value* gep205_var = builder.CreateInBoundsGEP(cast194_var, gep205_array);
	Value* cast206_var = builder.CreateCast(Instruction::BitCast, gep205_var, types[28]);
	llvm::LoadInst* load207_var = builder.CreateLoad(cast206_var, false);
	load207_var->setAlignment(4);
	Value* cast208_var = builder.CreateCast(Instruction::ZExt, load207_var, types[0]);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep209_array { gep4_val4_int, cast191_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep209_var = builder.CreateInBoundsGEP(globals[5], gep209_array);
	llvm::LoadInst* load210_var = builder.CreateLoad(gep209_var, false);
	load210_var->setAlignment(16);
	Value* binop211_var = BinaryOperator::Create(Instruction::Add, load210_var, binop203_var, "", builder.GetInsertBlock());
	SwitchInst* switch212_var = builder.CreateSwitch(load196_var, block50, 2);
	switch212_var->addCase(cast<ConstantInt>(switch43_val43_int), block48);
	switch212_var->addCase(cast<ConstantInt>(switch43_val44_int), block49);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep212_array { binop211_var, };
	Value* gep212_var = builder.CreateInBoundsGEP(cast194_var, gep212_array);
	Value* cast213_var = builder.CreateCast(Instruction::BitCast, gep212_var, types[30]);
	llvm::LoadInst* load214_var = builder.CreateLoad(cast213_var, false);
	load214_var->setAlignment(2);
	Value* cast215_var = builder.CreateCast(Instruction::ZExt, load214_var, types[0]);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block49);
	ArrayRef<Value*> gep216_array { gep4_val4_int, cast191_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep216_var = builder.CreateInBoundsGEP(globals[5], gep216_array);
	llvm::LoadInst* load217_var = builder.CreateLoad(gep216_var, false);
	load217_var->setAlignment(8);
	Value* binop218_var = BinaryOperator::Create(Instruction::Add, load217_var, binop211_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep219_array { binop218_var, };
	Value* gep219_var = builder.CreateInBoundsGEP(cast194_var, gep219_array);
	llvm::LoadInst* load220_var = builder.CreateLoad(gep219_var, false);
	load220_var->setAlignment(1);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load220_var, types[0]);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block50);
	CallInst* call222_var = builder.CreateCall(globals[6], gep56_var);
	call222_var->setTailCall();
	call222_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block51);
	ArrayRef<Value*> gep223_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep223_var = builder.CreateInBoundsGEP(arg3, gep223_array);
	llvm::LoadInst* load224_var = builder.CreateLoad(gep223_var, false);
	load224_var->setAlignment(4);
	Value* cmp225_var = builder.CreateICmp(CmpInst::ICMP_EQ, load224_var, gep13_val13_int);
	builder.CreateCondBr(cmp225_var, block60, block52);
	
	builder.SetInsertPoint(block52);
	Value* cast226_var = builder.CreateCast(Instruction::ZExt, load224_var, types[0]);
	ArrayRef<Value*> gep227_array { gep4_val4_int, cast226_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep227_var = builder.CreateInBoundsGEP(globals[5], gep227_array);
	llvm::LoadInst* load228_var = builder.CreateLoad(gep227_var, false);
	load228_var->setAlignment(16);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep230_array { gep4_val4_int, cast226_var, switch16_val16_int, };
	Value* gep230_var = builder.CreateInBoundsGEP(globals[5], gep230_array);
	llvm::LoadInst* load231_var = builder.CreateLoad(gep230_var, false);
	load231_var->setAlignment(16);
	Value* cmp232_var = builder.CreateICmp(CmpInst::ICMP_EQ, load231_var, cmp26_val26_int);
	builder.CreateCondBr(cmp232_var, block53, block54);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep233_array { load228_var, };
	Value* gep233_var = builder.CreateInBoundsGEP(cast229_var, gep233_array);
	Value* cast234_var = builder.CreateCast(Instruction::BitCast, gep233_var, types[27]);
	llvm::LoadInst* load235_var = builder.CreateLoad(cast234_var, false);
	load235_var->setAlignment(8);
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep236_array { gep4_val4_int, cast226_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep236_var = builder.CreateInBoundsGEP(globals[5], gep236_array);
	llvm::LoadInst* load237_var = builder.CreateLoad(gep236_var, false);
	load237_var->setAlignment(8);
	Value* binop238_var = BinaryOperator::Create(Instruction::Add, load237_var, load228_var, "", builder.GetInsertBlock());
	Value* cmp239_var = builder.CreateICmp(CmpInst::ICMP_EQ, load231_var, cmp34_val34_int);
	builder.CreateCondBr(cmp239_var, block55, block56);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep240_array { binop238_var, };
	Value* gep240_var = builder.CreateInBoundsGEP(cast229_var, gep240_array);
	Value* cast241_var = builder.CreateCast(Instruction::BitCast, gep240_var, types[28]);
	llvm::LoadInst* load242_var = builder.CreateLoad(cast241_var, false);
	load242_var->setAlignment(4);
	Value* cast243_var = builder.CreateCast(Instruction::ZExt, load242_var, types[0]);
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep244_array { gep4_val4_int, cast226_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep244_var = builder.CreateInBoundsGEP(globals[5], gep244_array);
	llvm::LoadInst* load245_var = builder.CreateLoad(gep244_var, false);
	load245_var->setAlignment(16);
	Value* binop246_var = BinaryOperator::Create(Instruction::Add, load245_var, binop238_var, "", builder.GetInsertBlock());
	SwitchInst* switch247_var = builder.CreateSwitch(load231_var, block59, 2);
	switch247_var->addCase(cast<ConstantInt>(switch43_val43_int), block57);
	switch247_var->addCase(cast<ConstantInt>(switch43_val44_int), block58);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep247_array { binop246_var, };
	Value* gep247_var = builder.CreateInBoundsGEP(cast229_var, gep247_array);
	Value* cast248_var = builder.CreateCast(Instruction::BitCast, gep247_var, types[30]);
	llvm::LoadInst* load249_var = builder.CreateLoad(cast248_var, false);
	load249_var->setAlignment(2);
	Value* cast250_var = builder.CreateCast(Instruction::ZExt, load249_var, types[0]);
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block58);
	ArrayRef<Value*> gep251_array { gep4_val4_int, cast226_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep251_var = builder.CreateInBoundsGEP(globals[5], gep251_array);
	llvm::LoadInst* load252_var = builder.CreateLoad(gep251_var, false);
	load252_var->setAlignment(8);
	Value* binop253_var = BinaryOperator::Create(Instruction::Add, load252_var, binop246_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep254_array { binop253_var, };
	Value* gep254_var = builder.CreateInBoundsGEP(cast229_var, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(1);
	Value* cast256_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block59);
	CallInst* call257_var = builder.CreateCall(globals[6], gep56_var);
	call257_var->setTailCall();
	call257_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block60);
	PHINode* phi258_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep259_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, switch11_val11_int, };
	Value* gep259_var = builder.CreateInBoundsGEP(arg3, gep259_array);
	llvm::LoadInst* load260_var = builder.CreateLoad(gep259_var, false);
	load260_var->setAlignment(4);
	Value* cmp261_var = builder.CreateICmp(CmpInst::ICMP_EQ, load260_var, gep13_val13_int);
	builder.CreateCondBr(cmp261_var, block70, block61);
	
	builder.SetInsertPoint(block61);
	Value* cast262_var = builder.CreateCast(Instruction::ZExt, load260_var, types[0]);
	ArrayRef<Value*> gep263_array { gep4_val4_int, cast262_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep263_var = builder.CreateInBoundsGEP(globals[5], gep263_array);
	llvm::LoadInst* load264_var = builder.CreateLoad(gep263_var, false);
	load264_var->setAlignment(16);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep266_array { gep4_val4_int, cast262_var, switch16_val16_int, };
	Value* gep266_var = builder.CreateInBoundsGEP(globals[5], gep266_array);
	llvm::LoadInst* load267_var = builder.CreateLoad(gep266_var, false);
	load267_var->setAlignment(16);
	Value* cmp268_var = builder.CreateICmp(CmpInst::ICMP_EQ, load267_var, cmp26_val26_int);
	builder.CreateCondBr(cmp268_var, block62, block63);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep269_array { load264_var, };
	Value* gep269_var = builder.CreateInBoundsGEP(cast265_var, gep269_array);
	Value* cast270_var = builder.CreateCast(Instruction::BitCast, gep269_var, types[27]);
	llvm::LoadInst* load271_var = builder.CreateLoad(cast270_var, false);
	load271_var->setAlignment(8);
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep272_array { gep4_val4_int, cast262_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep272_var = builder.CreateInBoundsGEP(globals[5], gep272_array);
	llvm::LoadInst* load273_var = builder.CreateLoad(gep272_var, false);
	load273_var->setAlignment(8);
	Value* binop274_var = BinaryOperator::Create(Instruction::Add, load273_var, load264_var, "", builder.GetInsertBlock());
	Value* cmp275_var = builder.CreateICmp(CmpInst::ICMP_EQ, load267_var, cmp34_val34_int);
	builder.CreateCondBr(cmp275_var, block64, block65);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep276_array { binop274_var, };
	Value* gep276_var = builder.CreateInBoundsGEP(cast265_var, gep276_array);
	Value* cast277_var = builder.CreateCast(Instruction::BitCast, gep276_var, types[28]);
	llvm::LoadInst* load278_var = builder.CreateLoad(cast277_var, false);
	load278_var->setAlignment(4);
	Value* cast279_var = builder.CreateCast(Instruction::ZExt, load278_var, types[0]);
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep280_array { gep4_val4_int, cast262_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep280_var = builder.CreateInBoundsGEP(globals[5], gep280_array);
	llvm::LoadInst* load281_var = builder.CreateLoad(gep280_var, false);
	load281_var->setAlignment(16);
	Value* binop282_var = BinaryOperator::Create(Instruction::Add, load281_var, binop274_var, "", builder.GetInsertBlock());
	SwitchInst* switch283_var = builder.CreateSwitch(load267_var, block68, 2);
	switch283_var->addCase(cast<ConstantInt>(switch43_val43_int), block66);
	switch283_var->addCase(cast<ConstantInt>(switch43_val44_int), block67);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep283_array { binop282_var, };
	Value* gep283_var = builder.CreateInBoundsGEP(cast265_var, gep283_array);
	Value* cast284_var = builder.CreateCast(Instruction::BitCast, gep283_var, types[30]);
	llvm::LoadInst* load285_var = builder.CreateLoad(cast284_var, false);
	load285_var->setAlignment(2);
	Value* cast286_var = builder.CreateCast(Instruction::ZExt, load285_var, types[0]);
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block67);
	ArrayRef<Value*> gep287_array { gep4_val4_int, cast262_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep287_var = builder.CreateInBoundsGEP(globals[5], gep287_array);
	llvm::LoadInst* load288_var = builder.CreateLoad(gep287_var, false);
	load288_var->setAlignment(8);
	Value* binop289_var = BinaryOperator::Create(Instruction::Add, load288_var, binop282_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep290_array { binop289_var, };
	Value* gep290_var = builder.CreateInBoundsGEP(cast265_var, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(1);
	Value* cast292_var = builder.CreateCast(Instruction::ZExt, load291_var, types[0]);
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block68);
	CallInst* call293_var = builder.CreateCall(globals[6], gep56_var);
	call293_var->setTailCall();
	call293_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block69);
	PHINode* phi294_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep295_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, switch11_val12_int, };
	Value* gep295_var = builder.CreateInBoundsGEP(arg3, gep295_array);
	llvm::LoadInst* load296_var = builder.CreateLoad(gep295_var, false);
	load296_var->setAlignment(4);
	Value* cast297_var = builder.CreateCast(Instruction::SExt, load296_var, types[0]);
	Value* binop298_var = BinaryOperator::Create(Instruction::Mul, cast297_var, phi294_var, "", builder.GetInsertBlock());
	Value* binop299_var = BinaryOperator::Create(Instruction::Add, binop298_var, phi258_var, "", builder.GetInsertBlock());
	builder.CreateBr(block70);
	
	builder.SetInsertPoint(block70);
	PHINode* phi300_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep301_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, switch16_val16_int, };
	Value* gep301_var = builder.CreateInBoundsGEP(arg3, gep301_array);
	llvm::LoadInst* load302_var = builder.CreateLoad(gep301_var, false);
	load302_var->setAlignment(4);
	Value* cmp303_var = builder.CreateICmp(CmpInst::ICMP_EQ, load302_var, gep13_val13_int);
	builder.CreateCondBr(cmp303_var, block80, block71);
	
	builder.SetInsertPoint(block71);
	Value* cast304_var = builder.CreateCast(Instruction::ZExt, load302_var, types[0]);
	ArrayRef<Value*> gep305_array { gep4_val4_int, cast304_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep305_var = builder.CreateInBoundsGEP(globals[5], gep305_array);
	llvm::LoadInst* load306_var = builder.CreateLoad(gep305_var, false);
	load306_var->setAlignment(16);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep308_array { gep4_val4_int, cast304_var, switch16_val16_int, };
	Value* gep308_var = builder.CreateInBoundsGEP(globals[5], gep308_array);
	llvm::LoadInst* load309_var = builder.CreateLoad(gep308_var, false);
	load309_var->setAlignment(16);
	Value* cmp310_var = builder.CreateICmp(CmpInst::ICMP_EQ, load309_var, cmp26_val26_int);
	builder.CreateCondBr(cmp310_var, block72, block73);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep311_array { load306_var, };
	Value* gep311_var = builder.CreateInBoundsGEP(cast307_var, gep311_array);
	Value* cast312_var = builder.CreateCast(Instruction::BitCast, gep311_var, types[27]);
	llvm::LoadInst* load313_var = builder.CreateLoad(cast312_var, false);
	load313_var->setAlignment(8);
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep314_array { gep4_val4_int, cast304_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep314_var = builder.CreateInBoundsGEP(globals[5], gep314_array);
	llvm::LoadInst* load315_var = builder.CreateLoad(gep314_var, false);
	load315_var->setAlignment(8);
	Value* binop316_var = BinaryOperator::Create(Instruction::Add, load315_var, load306_var, "", builder.GetInsertBlock());
	Value* cmp317_var = builder.CreateICmp(CmpInst::ICMP_EQ, load309_var, cmp34_val34_int);
	builder.CreateCondBr(cmp317_var, block74, block75);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep318_array { binop316_var, };
	Value* gep318_var = builder.CreateInBoundsGEP(cast307_var, gep318_array);
	Value* cast319_var = builder.CreateCast(Instruction::BitCast, gep318_var, types[28]);
	llvm::LoadInst* load320_var = builder.CreateLoad(cast319_var, false);
	load320_var->setAlignment(4);
	Value* cast321_var = builder.CreateCast(Instruction::ZExt, load320_var, types[0]);
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep322_array { gep4_val4_int, cast304_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep322_var = builder.CreateInBoundsGEP(globals[5], gep322_array);
	llvm::LoadInst* load323_var = builder.CreateLoad(gep322_var, false);
	load323_var->setAlignment(16);
	Value* binop324_var = BinaryOperator::Create(Instruction::Add, load323_var, binop316_var, "", builder.GetInsertBlock());
	SwitchInst* switch325_var = builder.CreateSwitch(load309_var, block78, 2);
	switch325_var->addCase(cast<ConstantInt>(switch43_val43_int), block76);
	switch325_var->addCase(cast<ConstantInt>(switch43_val44_int), block77);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep325_array { binop324_var, };
	Value* gep325_var = builder.CreateInBoundsGEP(cast307_var, gep325_array);
	Value* cast326_var = builder.CreateCast(Instruction::BitCast, gep325_var, types[30]);
	llvm::LoadInst* load327_var = builder.CreateLoad(cast326_var, false);
	load327_var->setAlignment(2);
	Value* cast328_var = builder.CreateCast(Instruction::ZExt, load327_var, types[0]);
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block77);
	ArrayRef<Value*> gep329_array { gep4_val4_int, cast304_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep329_var = builder.CreateInBoundsGEP(globals[5], gep329_array);
	llvm::LoadInst* load330_var = builder.CreateLoad(gep329_var, false);
	load330_var->setAlignment(8);
	Value* binop331_var = BinaryOperator::Create(Instruction::Add, load330_var, binop324_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep332_array { binop331_var, };
	Value* gep332_var = builder.CreateInBoundsGEP(cast307_var, gep332_array);
	llvm::LoadInst* load333_var = builder.CreateLoad(gep332_var, false);
	load333_var->setAlignment(1);
	Value* cast334_var = builder.CreateCast(Instruction::ZExt, load333_var, types[0]);
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block78);
	CallInst* call335_var = builder.CreateCall(globals[6], gep56_var);
	call335_var->setTailCall();
	call335_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block79);
	PHINode* phi336_var = builder.CreatePHI(types[0], 4);
	Value* binop337_var = BinaryOperator::Create(Instruction::Add, phi336_var, phi300_var, "", builder.GetInsertBlock());
	builder.CreateBr(block80);
	
	builder.SetInsertPoint(block80);
	PHINode* phi338_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep339_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch11_val11_int, };
	Value* gep339_var = builder.CreateInBoundsGEP(arg3, gep339_array);
	llvm::LoadInst* load340_var = builder.CreateLoad(gep339_var, false);
	load340_var->setAlignment(1);
	Value* cast341_var = builder.CreateCast(Instruction::ZExt, load340_var, types[0]);
	CallInst* call342_var = builder.CreateCall2(globals[8], phi338_var, cast341_var);
	call342_var->setTailCall();
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block81);
	ArrayRef<Value*> gep343_array { gep4_val4_int, gep4_val4_int, };
	Value* gep343_var = builder.CreateInBoundsGEP(globals[10], gep343_array);
	CallInst* call343_var = builder.CreateCall(globals[6], gep343_var);
	call343_var->setTailCall();
	call343_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block82);
	ArrayRef<Value*> gep346_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, gep13_val13_int, };
	Value* gep346_var = builder.CreateInBoundsGEP(arg3, gep346_array);
	llvm::LoadInst* load347_var = builder.CreateLoad(gep346_var, false);
	load347_var->setAlignment(4);
	SwitchInst* switch348_var = builder.CreateSwitch(load347_var, block122, 3);
	switch348_var->addCase(cast<ConstantInt>(switch11_val11_int), block83);
	switch348_var->addCase(cast<ConstantInt>(switch16_val16_int), block84);
	switch348_var->addCase(cast<ConstantInt>(switch11_val12_int), block92);
	
	builder.SetInsertPoint(block83);
	ArrayRef<Value*> gep348_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, };
	Value* gep348_var = builder.CreateInBoundsGEP(arg3, gep348_array);
	Value* cast349_var = builder.CreateCast(Instruction::BitCast, gep348_var, types[27]);
	llvm::LoadInst* load350_var = builder.CreateLoad(cast349_var, false);
	load350_var->setAlignment(8);
	builder.CreateBr(block123);
	
	builder.SetInsertPoint(block84);
	ArrayRef<Value*> gep351_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep351_var = builder.CreateGEP(arg3, gep351_array);
	llvm::LoadInst* load352_var = builder.CreateLoad(gep351_var, false);
	load352_var->setAlignment(4);
	Value* cast353_var = builder.CreateCast(Instruction::ZExt, load352_var, types[0]);
	ArrayRef<Value*> gep354_array { gep4_val4_int, cast353_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep354_var = builder.CreateInBoundsGEP(globals[5], gep354_array);
	llvm::LoadInst* load355_var = builder.CreateLoad(gep354_var, false);
	load355_var->setAlignment(16);
	Value* cast356_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep357_array { gep4_val4_int, cast353_var, switch16_val16_int, };
	Value* gep357_var = builder.CreateInBoundsGEP(globals[5], gep357_array);
	llvm::LoadInst* load358_var = builder.CreateLoad(gep357_var, false);
	load358_var->setAlignment(16);
	Value* cmp359_var = builder.CreateICmp(CmpInst::ICMP_EQ, load358_var, cmp26_val26_int);
	builder.CreateCondBr(cmp359_var, block85, block86);
	
	builder.SetInsertPoint(block85);
	ArrayRef<Value*> gep360_array { load355_var, };
	Value* gep360_var = builder.CreateInBoundsGEP(cast356_var, gep360_array);
	Value* cast361_var = builder.CreateCast(Instruction::BitCast, gep360_var, types[27]);
	llvm::LoadInst* load362_var = builder.CreateLoad(cast361_var, false);
	load362_var->setAlignment(8);
	builder.CreateBr(block123);
	
	builder.SetInsertPoint(block86);
	ArrayRef<Value*> gep363_array { gep4_val4_int, cast353_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep363_var = builder.CreateInBoundsGEP(globals[5], gep363_array);
	llvm::LoadInst* load364_var = builder.CreateLoad(gep363_var, false);
	load364_var->setAlignment(8);
	Value* binop365_var = BinaryOperator::Create(Instruction::Add, load364_var, load355_var, "", builder.GetInsertBlock());
	Value* cmp366_var = builder.CreateICmp(CmpInst::ICMP_EQ, load358_var, cmp34_val34_int);
	builder.CreateCondBr(cmp366_var, block87, block88);
	
	builder.SetInsertPoint(block87);
	ArrayRef<Value*> gep367_array { binop365_var, };
	Value* gep367_var = builder.CreateInBoundsGEP(cast356_var, gep367_array);
	Value* cast368_var = builder.CreateCast(Instruction::BitCast, gep367_var, types[28]);
	llvm::LoadInst* load369_var = builder.CreateLoad(cast368_var, false);
	load369_var->setAlignment(4);
	Value* cast370_var = builder.CreateCast(Instruction::ZExt, load369_var, types[0]);
	builder.CreateBr(block123);
	
	builder.SetInsertPoint(block88);
	ArrayRef<Value*> gep371_array { gep4_val4_int, cast353_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep371_var = builder.CreateInBoundsGEP(globals[5], gep371_array);
	llvm::LoadInst* load372_var = builder.CreateLoad(gep371_var, false);
	load372_var->setAlignment(16);
	Value* binop373_var = BinaryOperator::Create(Instruction::Add, load372_var, binop365_var, "", builder.GetInsertBlock());
	SwitchInst* switch374_var = builder.CreateSwitch(load358_var, block91, 2);
	switch374_var->addCase(cast<ConstantInt>(switch43_val43_int), block89);
	switch374_var->addCase(cast<ConstantInt>(switch43_val44_int), block90);
	
	builder.SetInsertPoint(block89);
	ArrayRef<Value*> gep374_array { binop373_var, };
	Value* gep374_var = builder.CreateInBoundsGEP(cast356_var, gep374_array);
	Value* cast375_var = builder.CreateCast(Instruction::BitCast, gep374_var, types[30]);
	llvm::LoadInst* load376_var = builder.CreateLoad(cast375_var, false);
	load376_var->setAlignment(2);
	Value* cast377_var = builder.CreateCast(Instruction::ZExt, load376_var, types[0]);
	builder.CreateBr(block123);
	
	builder.SetInsertPoint(block90);
	ArrayRef<Value*> gep378_array { gep4_val4_int, cast353_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep378_var = builder.CreateInBoundsGEP(globals[5], gep378_array);
	llvm::LoadInst* load379_var = builder.CreateLoad(gep378_var, false);
	load379_var->setAlignment(8);
	Value* binop380_var = BinaryOperator::Create(Instruction::Add, load379_var, binop373_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep381_array { binop380_var, };
	Value* gep381_var = builder.CreateInBoundsGEP(cast356_var, gep381_array);
	llvm::LoadInst* load382_var = builder.CreateLoad(gep381_var, false);
	load382_var->setAlignment(1);
	Value* cast383_var = builder.CreateCast(Instruction::ZExt, load382_var, types[0]);
	builder.CreateBr(block123);
	
	builder.SetInsertPoint(block91);
	CallInst* call384_var = builder.CreateCall(globals[6], gep56_var);
	call384_var->setTailCall();
	call384_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block92);
	ArrayRef<Value*> gep385_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep385_var = builder.CreateInBoundsGEP(arg3, gep385_array);
	llvm::LoadInst* load386_var = builder.CreateLoad(gep385_var, false);
	load386_var->setAlignment(4);
	Value* cmp387_var = builder.CreateICmp(CmpInst::ICMP_EQ, load386_var, gep13_val13_int);
	builder.CreateCondBr(cmp387_var, block101, block93);
	
	builder.SetInsertPoint(block93);
	Value* cast388_var = builder.CreateCast(Instruction::ZExt, load386_var, types[0]);
	ArrayRef<Value*> gep389_array { gep4_val4_int, cast388_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep389_var = builder.CreateInBoundsGEP(globals[5], gep389_array);
	llvm::LoadInst* load390_var = builder.CreateLoad(gep389_var, false);
	load390_var->setAlignment(16);
	Value* cast391_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep392_array { gep4_val4_int, cast388_var, switch16_val16_int, };
	Value* gep392_var = builder.CreateInBoundsGEP(globals[5], gep392_array);
	llvm::LoadInst* load393_var = builder.CreateLoad(gep392_var, false);
	load393_var->setAlignment(16);
	Value* cmp394_var = builder.CreateICmp(CmpInst::ICMP_EQ, load393_var, cmp26_val26_int);
	builder.CreateCondBr(cmp394_var, block94, block95);
	
	builder.SetInsertPoint(block94);
	ArrayRef<Value*> gep395_array { load390_var, };
	Value* gep395_var = builder.CreateInBoundsGEP(cast391_var, gep395_array);
	Value* cast396_var = builder.CreateCast(Instruction::BitCast, gep395_var, types[27]);
	llvm::LoadInst* load397_var = builder.CreateLoad(cast396_var, false);
	load397_var->setAlignment(8);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block95);
	ArrayRef<Value*> gep398_array { gep4_val4_int, cast388_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep398_var = builder.CreateInBoundsGEP(globals[5], gep398_array);
	llvm::LoadInst* load399_var = builder.CreateLoad(gep398_var, false);
	load399_var->setAlignment(8);
	Value* binop400_var = BinaryOperator::Create(Instruction::Add, load399_var, load390_var, "", builder.GetInsertBlock());
	Value* cmp401_var = builder.CreateICmp(CmpInst::ICMP_EQ, load393_var, cmp34_val34_int);
	builder.CreateCondBr(cmp401_var, block96, block97);
	
	builder.SetInsertPoint(block96);
	ArrayRef<Value*> gep402_array { binop400_var, };
	Value* gep402_var = builder.CreateInBoundsGEP(cast391_var, gep402_array);
	Value* cast403_var = builder.CreateCast(Instruction::BitCast, gep402_var, types[28]);
	llvm::LoadInst* load404_var = builder.CreateLoad(cast403_var, false);
	load404_var->setAlignment(4);
	Value* cast405_var = builder.CreateCast(Instruction::ZExt, load404_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block97);
	ArrayRef<Value*> gep406_array { gep4_val4_int, cast388_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep406_var = builder.CreateInBoundsGEP(globals[5], gep406_array);
	llvm::LoadInst* load407_var = builder.CreateLoad(gep406_var, false);
	load407_var->setAlignment(16);
	Value* binop408_var = BinaryOperator::Create(Instruction::Add, load407_var, binop400_var, "", builder.GetInsertBlock());
	SwitchInst* switch409_var = builder.CreateSwitch(load393_var, block100, 2);
	switch409_var->addCase(cast<ConstantInt>(switch43_val43_int), block98);
	switch409_var->addCase(cast<ConstantInt>(switch43_val44_int), block99);
	
	builder.SetInsertPoint(block98);
	ArrayRef<Value*> gep409_array { binop408_var, };
	Value* gep409_var = builder.CreateInBoundsGEP(cast391_var, gep409_array);
	Value* cast410_var = builder.CreateCast(Instruction::BitCast, gep409_var, types[30]);
	llvm::LoadInst* load411_var = builder.CreateLoad(cast410_var, false);
	load411_var->setAlignment(2);
	Value* cast412_var = builder.CreateCast(Instruction::ZExt, load411_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block99);
	ArrayRef<Value*> gep413_array { gep4_val4_int, cast388_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep413_var = builder.CreateInBoundsGEP(globals[5], gep413_array);
	llvm::LoadInst* load414_var = builder.CreateLoad(gep413_var, false);
	load414_var->setAlignment(8);
	Value* binop415_var = BinaryOperator::Create(Instruction::Add, load414_var, binop408_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep416_array { binop415_var, };
	Value* gep416_var = builder.CreateInBoundsGEP(cast391_var, gep416_array);
	llvm::LoadInst* load417_var = builder.CreateLoad(gep416_var, false);
	load417_var->setAlignment(1);
	Value* cast418_var = builder.CreateCast(Instruction::ZExt, load417_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block100);
	CallInst* call419_var = builder.CreateCall(globals[6], gep56_var);
	call419_var->setTailCall();
	call419_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block101);
	PHINode* phi420_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep421_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, switch11_val11_int, };
	Value* gep421_var = builder.CreateInBoundsGEP(arg3, gep421_array);
	llvm::LoadInst* load422_var = builder.CreateLoad(gep421_var, false);
	load422_var->setAlignment(4);
	Value* cmp423_var = builder.CreateICmp(CmpInst::ICMP_EQ, load422_var, gep13_val13_int);
	builder.CreateCondBr(cmp423_var, block111, block102);
	
	builder.SetInsertPoint(block102);
	Value* cast424_var = builder.CreateCast(Instruction::ZExt, load422_var, types[0]);
	ArrayRef<Value*> gep425_array { gep4_val4_int, cast424_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep425_var = builder.CreateInBoundsGEP(globals[5], gep425_array);
	llvm::LoadInst* load426_var = builder.CreateLoad(gep425_var, false);
	load426_var->setAlignment(16);
	Value* cast427_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep428_array { gep4_val4_int, cast424_var, switch16_val16_int, };
	Value* gep428_var = builder.CreateInBoundsGEP(globals[5], gep428_array);
	llvm::LoadInst* load429_var = builder.CreateLoad(gep428_var, false);
	load429_var->setAlignment(16);
	Value* cmp430_var = builder.CreateICmp(CmpInst::ICMP_EQ, load429_var, cmp26_val26_int);
	builder.CreateCondBr(cmp430_var, block103, block104);
	
	builder.SetInsertPoint(block103);
	ArrayRef<Value*> gep431_array { load426_var, };
	Value* gep431_var = builder.CreateInBoundsGEP(cast427_var, gep431_array);
	Value* cast432_var = builder.CreateCast(Instruction::BitCast, gep431_var, types[27]);
	llvm::LoadInst* load433_var = builder.CreateLoad(cast432_var, false);
	load433_var->setAlignment(8);
	builder.CreateBr(block110);
	
	builder.SetInsertPoint(block104);
	ArrayRef<Value*> gep434_array { gep4_val4_int, cast424_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep434_var = builder.CreateInBoundsGEP(globals[5], gep434_array);
	llvm::LoadInst* load435_var = builder.CreateLoad(gep434_var, false);
	load435_var->setAlignment(8);
	Value* binop436_var = BinaryOperator::Create(Instruction::Add, load435_var, load426_var, "", builder.GetInsertBlock());
	Value* cmp437_var = builder.CreateICmp(CmpInst::ICMP_EQ, load429_var, cmp34_val34_int);
	builder.CreateCondBr(cmp437_var, block105, block106);
	
	builder.SetInsertPoint(block105);
	ArrayRef<Value*> gep438_array { binop436_var, };
	Value* gep438_var = builder.CreateInBoundsGEP(cast427_var, gep438_array);
	Value* cast439_var = builder.CreateCast(Instruction::BitCast, gep438_var, types[28]);
	llvm::LoadInst* load440_var = builder.CreateLoad(cast439_var, false);
	load440_var->setAlignment(4);
	Value* cast441_var = builder.CreateCast(Instruction::ZExt, load440_var, types[0]);
	builder.CreateBr(block110);
	
	builder.SetInsertPoint(block106);
	ArrayRef<Value*> gep442_array { gep4_val4_int, cast424_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep442_var = builder.CreateInBoundsGEP(globals[5], gep442_array);
	llvm::LoadInst* load443_var = builder.CreateLoad(gep442_var, false);
	load443_var->setAlignment(16);
	Value* binop444_var = BinaryOperator::Create(Instruction::Add, load443_var, binop436_var, "", builder.GetInsertBlock());
	SwitchInst* switch445_var = builder.CreateSwitch(load429_var, block109, 2);
	switch445_var->addCase(cast<ConstantInt>(switch43_val43_int), block107);
	switch445_var->addCase(cast<ConstantInt>(switch43_val44_int), block108);
	
	builder.SetInsertPoint(block107);
	ArrayRef<Value*> gep445_array { binop444_var, };
	Value* gep445_var = builder.CreateInBoundsGEP(cast427_var, gep445_array);
	Value* cast446_var = builder.CreateCast(Instruction::BitCast, gep445_var, types[30]);
	llvm::LoadInst* load447_var = builder.CreateLoad(cast446_var, false);
	load447_var->setAlignment(2);
	Value* cast448_var = builder.CreateCast(Instruction::ZExt, load447_var, types[0]);
	builder.CreateBr(block110);
	
	builder.SetInsertPoint(block108);
	ArrayRef<Value*> gep449_array { gep4_val4_int, cast424_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep449_var = builder.CreateInBoundsGEP(globals[5], gep449_array);
	llvm::LoadInst* load450_var = builder.CreateLoad(gep449_var, false);
	load450_var->setAlignment(8);
	Value* binop451_var = BinaryOperator::Create(Instruction::Add, load450_var, binop444_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep452_array { binop451_var, };
	Value* gep452_var = builder.CreateInBoundsGEP(cast427_var, gep452_array);
	llvm::LoadInst* load453_var = builder.CreateLoad(gep452_var, false);
	load453_var->setAlignment(1);
	Value* cast454_var = builder.CreateCast(Instruction::ZExt, load453_var, types[0]);
	builder.CreateBr(block110);
	
	builder.SetInsertPoint(block109);
	CallInst* call455_var = builder.CreateCall(globals[6], gep56_var);
	call455_var->setTailCall();
	call455_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block110);
	PHINode* phi456_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep457_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, switch11_val12_int, };
	Value* gep457_var = builder.CreateInBoundsGEP(arg3, gep457_array);
	llvm::LoadInst* load458_var = builder.CreateLoad(gep457_var, false);
	load458_var->setAlignment(4);
	Value* cast459_var = builder.CreateCast(Instruction::SExt, load458_var, types[0]);
	Value* binop460_var = BinaryOperator::Create(Instruction::Mul, cast459_var, phi456_var, "", builder.GetInsertBlock());
	Value* binop461_var = BinaryOperator::Create(Instruction::Add, binop460_var, phi420_var, "", builder.GetInsertBlock());
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block111);
	PHINode* phi462_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep463_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch16_val16_int, gep13_val13_int, switch16_val16_int, };
	Value* gep463_var = builder.CreateInBoundsGEP(arg3, gep463_array);
	llvm::LoadInst* load464_var = builder.CreateLoad(gep463_var, false);
	load464_var->setAlignment(4);
	Value* cmp465_var = builder.CreateICmp(CmpInst::ICMP_EQ, load464_var, gep13_val13_int);
	builder.CreateCondBr(cmp465_var, block121, block112);
	
	builder.SetInsertPoint(block112);
	Value* cast466_var = builder.CreateCast(Instruction::ZExt, load464_var, types[0]);
	ArrayRef<Value*> gep467_array { gep4_val4_int, cast466_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep467_var = builder.CreateInBoundsGEP(globals[5], gep467_array);
	llvm::LoadInst* load468_var = builder.CreateLoad(gep467_var, false);
	load468_var->setAlignment(16);
	Value* cast469_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep470_array { gep4_val4_int, cast466_var, switch16_val16_int, };
	Value* gep470_var = builder.CreateInBoundsGEP(globals[5], gep470_array);
	llvm::LoadInst* load471_var = builder.CreateLoad(gep470_var, false);
	load471_var->setAlignment(16);
	Value* cmp472_var = builder.CreateICmp(CmpInst::ICMP_EQ, load471_var, cmp26_val26_int);
	builder.CreateCondBr(cmp472_var, block113, block114);
	
	builder.SetInsertPoint(block113);
	ArrayRef<Value*> gep473_array { load468_var, };
	Value* gep473_var = builder.CreateInBoundsGEP(cast469_var, gep473_array);
	Value* cast474_var = builder.CreateCast(Instruction::BitCast, gep473_var, types[27]);
	llvm::LoadInst* load475_var = builder.CreateLoad(cast474_var, false);
	load475_var->setAlignment(8);
	builder.CreateBr(block120);
	
	builder.SetInsertPoint(block114);
	ArrayRef<Value*> gep476_array { gep4_val4_int, cast466_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep476_var = builder.CreateInBoundsGEP(globals[5], gep476_array);
	llvm::LoadInst* load477_var = builder.CreateLoad(gep476_var, false);
	load477_var->setAlignment(8);
	Value* binop478_var = BinaryOperator::Create(Instruction::Add, load477_var, load468_var, "", builder.GetInsertBlock());
	Value* cmp479_var = builder.CreateICmp(CmpInst::ICMP_EQ, load471_var, cmp34_val34_int);
	builder.CreateCondBr(cmp479_var, block115, block116);
	
	builder.SetInsertPoint(block115);
	ArrayRef<Value*> gep480_array { binop478_var, };
	Value* gep480_var = builder.CreateInBoundsGEP(cast469_var, gep480_array);
	Value* cast481_var = builder.CreateCast(Instruction::BitCast, gep480_var, types[28]);
	llvm::LoadInst* load482_var = builder.CreateLoad(cast481_var, false);
	load482_var->setAlignment(4);
	Value* cast483_var = builder.CreateCast(Instruction::ZExt, load482_var, types[0]);
	builder.CreateBr(block120);
	
	builder.SetInsertPoint(block116);
	ArrayRef<Value*> gep484_array { gep4_val4_int, cast466_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep484_var = builder.CreateInBoundsGEP(globals[5], gep484_array);
	llvm::LoadInst* load485_var = builder.CreateLoad(gep484_var, false);
	load485_var->setAlignment(16);
	Value* binop486_var = BinaryOperator::Create(Instruction::Add, load485_var, binop478_var, "", builder.GetInsertBlock());
	SwitchInst* switch487_var = builder.CreateSwitch(load471_var, block119, 2);
	switch487_var->addCase(cast<ConstantInt>(switch43_val43_int), block117);
	switch487_var->addCase(cast<ConstantInt>(switch43_val44_int), block118);
	
	builder.SetInsertPoint(block117);
	ArrayRef<Value*> gep487_array { binop486_var, };
	Value* gep487_var = builder.CreateInBoundsGEP(cast469_var, gep487_array);
	Value* cast488_var = builder.CreateCast(Instruction::BitCast, gep487_var, types[30]);
	llvm::LoadInst* load489_var = builder.CreateLoad(cast488_var, false);
	load489_var->setAlignment(2);
	Value* cast490_var = builder.CreateCast(Instruction::ZExt, load489_var, types[0]);
	builder.CreateBr(block120);
	
	builder.SetInsertPoint(block118);
	ArrayRef<Value*> gep491_array { gep4_val4_int, cast466_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep491_var = builder.CreateInBoundsGEP(globals[5], gep491_array);
	llvm::LoadInst* load492_var = builder.CreateLoad(gep491_var, false);
	load492_var->setAlignment(8);
	Value* binop493_var = BinaryOperator::Create(Instruction::Add, load492_var, binop486_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep494_array { binop493_var, };
	Value* gep494_var = builder.CreateInBoundsGEP(cast469_var, gep494_array);
	llvm::LoadInst* load495_var = builder.CreateLoad(gep494_var, false);
	load495_var->setAlignment(1);
	Value* cast496_var = builder.CreateCast(Instruction::ZExt, load495_var, types[0]);
	builder.CreateBr(block120);
	
	builder.SetInsertPoint(block119);
	CallInst* call497_var = builder.CreateCall(globals[6], gep56_var);
	call497_var->setTailCall();
	call497_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block120);
	PHINode* phi498_var = builder.CreatePHI(types[0], 4);
	Value* binop499_var = BinaryOperator::Create(Instruction::Add, phi498_var, phi462_var, "", builder.GetInsertBlock());
	builder.CreateBr(block121);
	
	builder.SetInsertPoint(block121);
	PHINode* phi500_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep501_array { gep4_val4_int, gep4_val5_int, switch43_val44_int, switch11_val11_int, };
	Value* gep501_var = builder.CreateInBoundsGEP(arg3, gep501_array);
	llvm::LoadInst* load502_var = builder.CreateLoad(gep501_var, false);
	load502_var->setAlignment(1);
	Value* cast503_var = builder.CreateCast(Instruction::ZExt, load502_var, types[0]);
	CallInst* call504_var = builder.CreateCall2(globals[8], phi500_var, cast503_var);
	call504_var->setTailCall();
	builder.CreateBr(block123);
	
	builder.SetInsertPoint(block122);
	CallInst* call505_var = builder.CreateCall(globals[6], gep343_var);
	call505_var->setTailCall();
	call505_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block123);
	PHINode* phi506_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep507_array { gep4_val4_int, gep4_val5_int, switch43_val43_int, gep13_val13_int, };
	Value* gep507_var = builder.CreateInBoundsGEP(arg3, gep507_array);
	llvm::LoadInst* load508_var = builder.CreateLoad(gep507_var, false);
	load508_var->setAlignment(4);
	SwitchInst* switch509_var = builder.CreateSwitch(load508_var, block163, 3);
	switch509_var->addCase(cast<ConstantInt>(switch11_val11_int), block124);
	switch509_var->addCase(cast<ConstantInt>(switch16_val16_int), block125);
	switch509_var->addCase(cast<ConstantInt>(switch11_val12_int), block133);
	
	builder.SetInsertPoint(block124);
	ArrayRef<Value*> gep509_array { gep4_val4_int, gep4_val5_int, switch43_val43_int, switch16_val16_int, };
	Value* gep509_var = builder.CreateInBoundsGEP(arg3, gep509_array);
	Value* cast510_var = builder.CreateCast(Instruction::BitCast, gep509_var, types[27]);
	llvm::LoadInst* load511_var = builder.CreateLoad(cast510_var, false);
	load511_var->setAlignment(8);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block125);
	ArrayRef<Value*> gep512_array { gep4_val4_int, gep4_val5_int, switch43_val43_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep512_var = builder.CreateGEP(arg3, gep512_array);
	llvm::LoadInst* load513_var = builder.CreateLoad(gep512_var, false);
	load513_var->setAlignment(4);
	Value* cast514_var = builder.CreateCast(Instruction::ZExt, load513_var, types[0]);
	ArrayRef<Value*> gep515_array { gep4_val4_int, cast514_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep515_var = builder.CreateInBoundsGEP(globals[5], gep515_array);
	llvm::LoadInst* load516_var = builder.CreateLoad(gep515_var, false);
	load516_var->setAlignment(16);
	Value* cast517_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep518_array { gep4_val4_int, cast514_var, switch16_val16_int, };
	Value* gep518_var = builder.CreateInBoundsGEP(globals[5], gep518_array);
	llvm::LoadInst* load519_var = builder.CreateLoad(gep518_var, false);
	load519_var->setAlignment(16);
	Value* cmp520_var = builder.CreateICmp(CmpInst::ICMP_EQ, load519_var, cmp26_val26_int);
	builder.CreateCondBr(cmp520_var, block126, block127);
	
	builder.SetInsertPoint(block126);
	ArrayRef<Value*> gep521_array { load516_var, };
	Value* gep521_var = builder.CreateInBoundsGEP(cast517_var, gep521_array);
	Value* cast522_var = builder.CreateCast(Instruction::BitCast, gep521_var, types[27]);
	llvm::LoadInst* load523_var = builder.CreateLoad(cast522_var, false);
	load523_var->setAlignment(8);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block127);
	ArrayRef<Value*> gep524_array { gep4_val4_int, cast514_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep524_var = builder.CreateInBoundsGEP(globals[5], gep524_array);
	llvm::LoadInst* load525_var = builder.CreateLoad(gep524_var, false);
	load525_var->setAlignment(8);
	Value* binop526_var = BinaryOperator::Create(Instruction::Add, load525_var, load516_var, "", builder.GetInsertBlock());
	Value* cmp527_var = builder.CreateICmp(CmpInst::ICMP_EQ, load519_var, cmp34_val34_int);
	builder.CreateCondBr(cmp527_var, block128, block129);
	
	builder.SetInsertPoint(block128);
	ArrayRef<Value*> gep528_array { binop526_var, };
	Value* gep528_var = builder.CreateInBoundsGEP(cast517_var, gep528_array);
	Value* cast529_var = builder.CreateCast(Instruction::BitCast, gep528_var, types[28]);
	llvm::LoadInst* load530_var = builder.CreateLoad(cast529_var, false);
	load530_var->setAlignment(4);
	Value* cast531_var = builder.CreateCast(Instruction::ZExt, load530_var, types[0]);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block129);
	ArrayRef<Value*> gep532_array { gep4_val4_int, cast514_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep532_var = builder.CreateInBoundsGEP(globals[5], gep532_array);
	llvm::LoadInst* load533_var = builder.CreateLoad(gep532_var, false);
	load533_var->setAlignment(16);
	Value* binop534_var = BinaryOperator::Create(Instruction::Add, load533_var, binop526_var, "", builder.GetInsertBlock());
	SwitchInst* switch535_var = builder.CreateSwitch(load519_var, block132, 2);
	switch535_var->addCase(cast<ConstantInt>(switch43_val43_int), block130);
	switch535_var->addCase(cast<ConstantInt>(switch43_val44_int), block131);
	
	builder.SetInsertPoint(block130);
	ArrayRef<Value*> gep535_array { binop534_var, };
	Value* gep535_var = builder.CreateInBoundsGEP(cast517_var, gep535_array);
	Value* cast536_var = builder.CreateCast(Instruction::BitCast, gep535_var, types[30]);
	llvm::LoadInst* load537_var = builder.CreateLoad(cast536_var, false);
	load537_var->setAlignment(2);
	Value* cast538_var = builder.CreateCast(Instruction::ZExt, load537_var, types[0]);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block131);
	ArrayRef<Value*> gep539_array { gep4_val4_int, cast514_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep539_var = builder.CreateInBoundsGEP(globals[5], gep539_array);
	llvm::LoadInst* load540_var = builder.CreateLoad(gep539_var, false);
	load540_var->setAlignment(8);
	Value* binop541_var = BinaryOperator::Create(Instruction::Add, load540_var, binop534_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep542_array { binop541_var, };
	Value* gep542_var = builder.CreateInBoundsGEP(cast517_var, gep542_array);
	llvm::LoadInst* load543_var = builder.CreateLoad(gep542_var, false);
	load543_var->setAlignment(1);
	Value* cast544_var = builder.CreateCast(Instruction::ZExt, load543_var, types[0]);
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block132);
	CallInst* call545_var = builder.CreateCall(globals[6], gep56_var);
	call545_var->setTailCall();
	call545_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block133);
	ArrayRef<Value*> gep546_array { gep4_val4_int, gep4_val5_int, switch43_val43_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep546_var = builder.CreateInBoundsGEP(arg3, gep546_array);
	llvm::LoadInst* load547_var = builder.CreateLoad(gep546_var, false);
	load547_var->setAlignment(4);
	Value* cmp548_var = builder.CreateICmp(CmpInst::ICMP_EQ, load547_var, gep13_val13_int);
	builder.CreateCondBr(cmp548_var, block142, block134);
	
	builder.SetInsertPoint(block134);
	Value* cast549_var = builder.CreateCast(Instruction::ZExt, load547_var, types[0]);
	ArrayRef<Value*> gep550_array { gep4_val4_int, cast549_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep550_var = builder.CreateInBoundsGEP(globals[5], gep550_array);
	llvm::LoadInst* load551_var = builder.CreateLoad(gep550_var, false);
	load551_var->setAlignment(16);
	Value* cast552_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep553_array { gep4_val4_int, cast549_var, switch16_val16_int, };
	Value* gep553_var = builder.CreateInBoundsGEP(globals[5], gep553_array);
	llvm::LoadInst* load554_var = builder.CreateLoad(gep553_var, false);
	load554_var->setAlignment(16);
	Value* cmp555_var = builder.CreateICmp(CmpInst::ICMP_EQ, load554_var, cmp26_val26_int);
	builder.CreateCondBr(cmp555_var, block135, block136);
	
	builder.SetInsertPoint(block135);
	ArrayRef<Value*> gep556_array { load551_var, };
	Value* gep556_var = builder.CreateInBoundsGEP(cast552_var, gep556_array);
	Value* cast557_var = builder.CreateCast(Instruction::BitCast, gep556_var, types[27]);
	llvm::LoadInst* load558_var = builder.CreateLoad(cast557_var, false);
	load558_var->setAlignment(8);
	builder.CreateBr(block142);
	
	builder.SetInsertPoint(block136);
	ArrayRef<Value*> gep559_array { gep4_val4_int, cast549_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep559_var = builder.CreateInBoundsGEP(globals[5], gep559_array);
	llvm::LoadInst* load560_var = builder.CreateLoad(gep559_var, false);
	load560_var->setAlignment(8);
	Value* binop561_var = BinaryOperator::Create(Instruction::Add, load560_var, load551_var, "", builder.GetInsertBlock());
	Value* cmp562_var = builder.CreateICmp(CmpInst::ICMP_EQ, load554_var, cmp34_val34_int);
	builder.CreateCondBr(cmp562_var, block137, block138);
	
	builder.SetInsertPoint(block137);
	ArrayRef<Value*> gep563_array { binop561_var, };
	Value* gep563_var = builder.CreateInBoundsGEP(cast552_var, gep563_array);
	Value* cast564_var = builder.CreateCast(Instruction::BitCast, gep563_var, types[28]);
	llvm::LoadInst* load565_var = builder.CreateLoad(cast564_var, false);
	load565_var->setAlignment(4);
	Value* cast566_var = builder.CreateCast(Instruction::ZExt, load565_var, types[0]);
	builder.CreateBr(block142);
	
	builder.SetInsertPoint(block138);
	ArrayRef<Value*> gep567_array { gep4_val4_int, cast549_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep567_var = builder.CreateInBoundsGEP(globals[5], gep567_array);
	llvm::LoadInst* load568_var = builder.CreateLoad(gep567_var, false);
	load568_var->setAlignment(16);
	Value* binop569_var = BinaryOperator::Create(Instruction::Add, load568_var, binop561_var, "", builder.GetInsertBlock());
	SwitchInst* switch570_var = builder.CreateSwitch(load554_var, block141, 2);
	switch570_var->addCase(cast<ConstantInt>(switch43_val43_int), block139);
	switch570_var->addCase(cast<ConstantInt>(switch43_val44_int), block140);
	
	builder.SetInsertPoint(block139);
	ArrayRef<Value*> gep570_array { binop569_var, };
	Value* gep570_var = builder.CreateInBoundsGEP(cast552_var, gep570_array);
	Value* cast571_var = builder.CreateCast(Instruction::BitCast, gep570_var, types[30]);
	llvm::LoadInst* load572_var = builder.CreateLoad(cast571_var, false);
	load572_var->setAlignment(2);
	Value* cast573_var = builder.CreateCast(Instruction::ZExt, load572_var, types[0]);
	builder.CreateBr(block142);
	
	builder.SetInsertPoint(block140);
	ArrayRef<Value*> gep574_array { gep4_val4_int, cast549_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep574_var = builder.CreateInBoundsGEP(globals[5], gep574_array);
	llvm::LoadInst* load575_var = builder.CreateLoad(gep574_var, false);
	load575_var->setAlignment(8);
	Value* binop576_var = BinaryOperator::Create(Instruction::Add, load575_var, binop569_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep577_array { binop576_var, };
	Value* gep577_var = builder.CreateInBoundsGEP(cast552_var, gep577_array);
	llvm::LoadInst* load578_var = builder.CreateLoad(gep577_var, false);
	load578_var->setAlignment(1);
	Value* cast579_var = builder.CreateCast(Instruction::ZExt, load578_var, types[0]);
	builder.CreateBr(block142);
	
	builder.SetInsertPoint(block141);
	CallInst* call580_var = builder.CreateCall(globals[6], gep56_var);
	call580_var->setTailCall();
	call580_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block142);
	PHINode* phi581_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep582_array { gep4_val4_int, gep4_val5_int, switch43_val43_int, switch16_val16_int, gep13_val13_int, switch11_val11_int, };
	Value* gep582_var = builder.CreateInBoundsGEP(arg3, gep582_array);
	llvm::LoadInst* load583_var = builder.CreateLoad(gep582_var, false);
	load583_var->setAlignment(4);
	Value* cmp584_var = builder.CreateICmp(CmpInst::ICMP_EQ, load583_var, gep13_val13_int);
	builder.CreateCondBr(cmp584_var, block152, block143);
	
	builder.SetInsertPoint(block143);
	Value* cast585_var = builder.CreateCast(Instruction::ZExt, load583_var, types[0]);
	ArrayRef<Value*> gep586_array { gep4_val4_int, cast585_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep586_var = builder.CreateInBoundsGEP(globals[5], gep586_array);
	llvm::LoadInst* load587_var = builder.CreateLoad(gep586_var, false);
	load587_var->setAlignment(16);
	Value* cast588_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep589_array { gep4_val4_int, cast585_var, switch16_val16_int, };
	Value* gep589_var = builder.CreateInBoundsGEP(globals[5], gep589_array);
	llvm::LoadInst* load590_var = builder.CreateLoad(gep589_var, false);
	load590_var->setAlignment(16);
	Value* cmp591_var = builder.CreateICmp(CmpInst::ICMP_EQ, load590_var, cmp26_val26_int);
	builder.CreateCondBr(cmp591_var, block144, block145);
	
	builder.SetInsertPoint(block144);
	ArrayRef<Value*> gep592_array { load587_var, };
	Value* gep592_var = builder.CreateInBoundsGEP(cast588_var, gep592_array);
	Value* cast593_var = builder.CreateCast(Instruction::BitCast, gep592_var, types[27]);
	llvm::LoadInst* load594_var = builder.CreateLoad(cast593_var, false);
	load594_var->setAlignment(8);
	builder.CreateBr(block151);
	
	builder.SetInsertPoint(block145);
	ArrayRef<Value*> gep595_array { gep4_val4_int, cast585_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep595_var = builder.CreateInBoundsGEP(globals[5], gep595_array);
	llvm::LoadInst* load596_var = builder.CreateLoad(gep595_var, false);
	load596_var->setAlignment(8);
	Value* binop597_var = BinaryOperator::Create(Instruction::Add, load596_var, load587_var, "", builder.GetInsertBlock());
	Value* cmp598_var = builder.CreateICmp(CmpInst::ICMP_EQ, load590_var, cmp34_val34_int);
	builder.CreateCondBr(cmp598_var, block146, block147);
	
	builder.SetInsertPoint(block146);
	ArrayRef<Value*> gep599_array { binop597_var, };
	Value* gep599_var = builder.CreateInBoundsGEP(cast588_var, gep599_array);
	Value* cast600_var = builder.CreateCast(Instruction::BitCast, gep599_var, types[28]);
	llvm::LoadInst* load601_var = builder.CreateLoad(cast600_var, false);
	load601_var->setAlignment(4);
	Value* cast602_var = builder.CreateCast(Instruction::ZExt, load601_var, types[0]);
	builder.CreateBr(block151);
	
	builder.SetInsertPoint(block147);
	ArrayRef<Value*> gep603_array { gep4_val4_int, cast585_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep603_var = builder.CreateInBoundsGEP(globals[5], gep603_array);
	llvm::LoadInst* load604_var = builder.CreateLoad(gep603_var, false);
	load604_var->setAlignment(16);
	Value* binop605_var = BinaryOperator::Create(Instruction::Add, load604_var, binop597_var, "", builder.GetInsertBlock());
	SwitchInst* switch606_var = builder.CreateSwitch(load590_var, block150, 2);
	switch606_var->addCase(cast<ConstantInt>(switch43_val43_int), block148);
	switch606_var->addCase(cast<ConstantInt>(switch43_val44_int), block149);
	
	builder.SetInsertPoint(block148);
	ArrayRef<Value*> gep606_array { binop605_var, };
	Value* gep606_var = builder.CreateInBoundsGEP(cast588_var, gep606_array);
	Value* cast607_var = builder.CreateCast(Instruction::BitCast, gep606_var, types[30]);
	llvm::LoadInst* load608_var = builder.CreateLoad(cast607_var, false);
	load608_var->setAlignment(2);
	Value* cast609_var = builder.CreateCast(Instruction::ZExt, load608_var, types[0]);
	builder.CreateBr(block151);
	
	builder.SetInsertPoint(block149);
	ArrayRef<Value*> gep610_array { gep4_val4_int, cast585_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep610_var = builder.CreateInBoundsGEP(globals[5], gep610_array);
	llvm::LoadInst* load611_var = builder.CreateLoad(gep610_var, false);
	load611_var->setAlignment(8);
	Value* binop612_var = BinaryOperator::Create(Instruction::Add, load611_var, binop605_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep613_array { binop612_var, };
	Value* gep613_var = builder.CreateInBoundsGEP(cast588_var, gep613_array);
	llvm::LoadInst* load614_var = builder.CreateLoad(gep613_var, false);
	load614_var->setAlignment(1);
	Value* cast615_var = builder.CreateCast(Instruction::ZExt, load614_var, types[0]);
	builder.CreateBr(block151);
	
	builder.SetInsertPoint(block150);
	CallInst* call616_var = builder.CreateCall(globals[6], gep56_var);
	call616_var->setTailCall();
	call616_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block151);
	PHINode* phi617_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep618_array { gep4_val4_int, gep4_val5_int, switch43_val43_int, switch16_val16_int, gep13_val13_int, switch11_val12_int, };
	Value* gep618_var = builder.CreateInBoundsGEP(arg3, gep618_array);
	llvm::LoadInst* load619_var = builder.CreateLoad(gep618_var, false);
	load619_var->setAlignment(4);
	Value* cast620_var = builder.CreateCast(Instruction::SExt, load619_var, types[0]);
	Value* binop621_var = BinaryOperator::Create(Instruction::Mul, cast620_var, phi617_var, "", builder.GetInsertBlock());
	Value* binop622_var = BinaryOperator::Create(Instruction::Add, binop621_var, phi581_var, "", builder.GetInsertBlock());
	builder.CreateBr(block152);
	
	builder.SetInsertPoint(block152);
	PHINode* phi623_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep624_array { gep4_val4_int, gep4_val5_int, switch43_val43_int, switch16_val16_int, gep13_val13_int, switch16_val16_int, };
	Value* gep624_var = builder.CreateInBoundsGEP(arg3, gep624_array);
	llvm::LoadInst* load625_var = builder.CreateLoad(gep624_var, false);
	load625_var->setAlignment(4);
	Value* cmp626_var = builder.CreateICmp(CmpInst::ICMP_EQ, load625_var, gep13_val13_int);
	builder.CreateCondBr(cmp626_var, block162, block153);
	
	builder.SetInsertPoint(block153);
	Value* cast627_var = builder.CreateCast(Instruction::ZExt, load625_var, types[0]);
	ArrayRef<Value*> gep628_array { gep4_val4_int, cast627_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep628_var = builder.CreateInBoundsGEP(globals[5], gep628_array);
	llvm::LoadInst* load629_var = builder.CreateLoad(gep628_var, false);
	load629_var->setAlignment(16);
	Value* cast630_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep631_array { gep4_val4_int, cast627_var, switch16_val16_int, };
	Value* gep631_var = builder.CreateInBoundsGEP(globals[5], gep631_array);
	llvm::LoadInst* load632_var = builder.CreateLoad(gep631_var, false);
	load632_var->setAlignment(16);
	Value* cmp633_var = builder.CreateICmp(CmpInst::ICMP_EQ, load632_var, cmp26_val26_int);
	builder.CreateCondBr(cmp633_var, block154, block155);
	
	builder.SetInsertPoint(block154);
	ArrayRef<Value*> gep634_array { load629_var, };
	Value* gep634_var = builder.CreateInBoundsGEP(cast630_var, gep634_array);
	Value* cast635_var = builder.CreateCast(Instruction::BitCast, gep634_var, types[27]);
	llvm::LoadInst* load636_var = builder.CreateLoad(cast635_var, false);
	load636_var->setAlignment(8);
	builder.CreateBr(block161);
	
	builder.SetInsertPoint(block155);
	ArrayRef<Value*> gep637_array { gep4_val4_int, cast627_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep637_var = builder.CreateInBoundsGEP(globals[5], gep637_array);
	llvm::LoadInst* load638_var = builder.CreateLoad(gep637_var, false);
	load638_var->setAlignment(8);
	Value* binop639_var = BinaryOperator::Create(Instruction::Add, load638_var, load629_var, "", builder.GetInsertBlock());
	Value* cmp640_var = builder.CreateICmp(CmpInst::ICMP_EQ, load632_var, cmp34_val34_int);
	builder.CreateCondBr(cmp640_var, block156, block157);
	
	builder.SetInsertPoint(block156);
	ArrayRef<Value*> gep641_array { binop639_var, };
	Value* gep641_var = builder.CreateInBoundsGEP(cast630_var, gep641_array);
	Value* cast642_var = builder.CreateCast(Instruction::BitCast, gep641_var, types[28]);
	llvm::LoadInst* load643_var = builder.CreateLoad(cast642_var, false);
	load643_var->setAlignment(4);
	Value* cast644_var = builder.CreateCast(Instruction::ZExt, load643_var, types[0]);
	builder.CreateBr(block161);
	
	builder.SetInsertPoint(block157);
	ArrayRef<Value*> gep645_array { gep4_val4_int, cast627_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep645_var = builder.CreateInBoundsGEP(globals[5], gep645_array);
	llvm::LoadInst* load646_var = builder.CreateLoad(gep645_var, false);
	load646_var->setAlignment(16);
	Value* binop647_var = BinaryOperator::Create(Instruction::Add, load646_var, binop639_var, "", builder.GetInsertBlock());
	SwitchInst* switch648_var = builder.CreateSwitch(load632_var, block160, 2);
	switch648_var->addCase(cast<ConstantInt>(switch43_val43_int), block158);
	switch648_var->addCase(cast<ConstantInt>(switch43_val44_int), block159);
	
	builder.SetInsertPoint(block158);
	ArrayRef<Value*> gep648_array { binop647_var, };
	Value* gep648_var = builder.CreateInBoundsGEP(cast630_var, gep648_array);
	Value* cast649_var = builder.CreateCast(Instruction::BitCast, gep648_var, types[30]);
	llvm::LoadInst* load650_var = builder.CreateLoad(cast649_var, false);
	load650_var->setAlignment(2);
	Value* cast651_var = builder.CreateCast(Instruction::ZExt, load650_var, types[0]);
	builder.CreateBr(block161);
	
	builder.SetInsertPoint(block159);
	ArrayRef<Value*> gep652_array { gep4_val4_int, cast627_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep652_var = builder.CreateInBoundsGEP(globals[5], gep652_array);
	llvm::LoadInst* load653_var = builder.CreateLoad(gep652_var, false);
	load653_var->setAlignment(8);
	Value* binop654_var = BinaryOperator::Create(Instruction::Add, load653_var, binop647_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep655_array { binop654_var, };
	Value* gep655_var = builder.CreateInBoundsGEP(cast630_var, gep655_array);
	llvm::LoadInst* load656_var = builder.CreateLoad(gep655_var, false);
	load656_var->setAlignment(1);
	Value* cast657_var = builder.CreateCast(Instruction::ZExt, load656_var, types[0]);
	builder.CreateBr(block161);
	
	builder.SetInsertPoint(block160);
	CallInst* call658_var = builder.CreateCall(globals[6], gep56_var);
	call658_var->setTailCall();
	call658_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block161);
	PHINode* phi659_var = builder.CreatePHI(types[0], 4);
	Value* binop660_var = BinaryOperator::Create(Instruction::Add, phi659_var, phi623_var, "", builder.GetInsertBlock());
	builder.CreateBr(block162);
	
	builder.SetInsertPoint(block162);
	PHINode* phi661_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep662_array { gep4_val4_int, gep4_val5_int, switch43_val43_int, switch11_val11_int, };
	Value* gep662_var = builder.CreateInBoundsGEP(arg3, gep662_array);
	llvm::LoadInst* load663_var = builder.CreateLoad(gep662_var, false);
	load663_var->setAlignment(1);
	Value* cast664_var = builder.CreateCast(Instruction::ZExt, load663_var, types[0]);
	CallInst* call665_var = builder.CreateCall2(globals[8], phi661_var, cast664_var);
	call665_var->setTailCall();
	builder.CreateBr(block165);
	
	builder.SetInsertPoint(block163);
	CallInst* call666_var = builder.CreateCall(globals[6], gep343_var);
	call666_var->setTailCall();
	call666_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block164);
	ArrayRef<Value*> gep667_array { gep4_val4_int, gep4_val4_int, };
	Value* gep667_var = builder.CreateInBoundsGEP(globals[244], gep667_array);
	CallInst* call667_var = builder.CreateCall(globals[6], gep667_var);
	call667_var->setTailCall();
	call667_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block165);
	PHINode* phi670_var = builder.CreatePHI(types[0], 12);
	PHINode* phi671_var = builder.CreatePHI(types[0], 12);
	ArrayRef<Value*> gep672_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch11_val11_int, };
	Value* gep672_var = builder.CreateInBoundsGEP(arg3, gep672_array);
	llvm::LoadInst* load673_var = builder.CreateLoad(gep672_var, false);
	load673_var->setAlignment(1);
	Value* cast674_var = builder.CreateCast(Instruction::ZExt, load673_var, types[2]);
	SwitchInst* switch675_var = builder.CreateSwitch(cast674_var, block170, 4);
	switch675_var->addCase(cast<ConstantInt>(switch16_val16_int), block166);
	switch675_var->addCase(cast<ConstantInt>(switch11_val11_int), block167);
	Constant* switch675_val675_int = ConstantInt::get(types[2], 4u);
	switch675_var->addCase(cast<ConstantInt>(switch675_val675_int), block168);
	Constant* switch675_val676_int = ConstantInt::get(types[2], 8u);
	switch675_var->addCase(cast<ConstantInt>(switch675_val676_int), block169);
	
	builder.SetInsertPoint(block166);
	Constant* binop677_val677_int = ConstantInt::get(types[0], 56u);
	Value* binop677_var = BinaryOperator::Create(Instruction::Shl, phi671_var, binop677_val677_int, "", builder.GetInsertBlock());
	Value* binop679_var = BinaryOperator::CreateExact(Instruction::AShr, binop677_var, binop677_val677_int, "", builder.GetInsertBlock());
	Value* binop680_var = BinaryOperator::Create(Instruction::Shl, phi670_var, binop677_val677_int, "", builder.GetInsertBlock());
	Value* binop681_var = BinaryOperator::CreateExact(Instruction::AShr, binop680_var, binop677_val677_int, "", builder.GetInsertBlock());
	Value* binop682_var = BinaryOperator::CreateNSW(Instruction::Mul, binop679_var, binop681_var, "", builder.GetInsertBlock());
	Value* cast683_var = builder.CreateCast(Instruction::Trunc, binop682_var, types[2]);
	Value* binop684_var = BinaryOperator::Create(Instruction::Shl, binop682_var, binop677_val677_int, "", builder.GetInsertBlock());
	Value* binop685_var = BinaryOperator::CreateExact(Instruction::AShr, binop684_var, binop677_val677_int, "", builder.GetInsertBlock());
	Value* cmp686_var = builder.CreateICmp(CmpInst::ICMP_NE, binop685_var, binop682_var);
	Constant* gep687_val687_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep687_array { gep4_val4_int, gep687_val687_int, };
	Value* gep687_var = builder.CreateInBoundsGEP(arg2, gep687_array);
	Value* cast689_var = builder.CreateCast(Instruction::ZExt, cmp686_var, types[11]);
	llvm::StoreInst* store690_var = builder.CreateStore(cast689_var, gep687_var, false);
	store690_var->setAlignment(1);
	ArrayRef<Value*> gep691_array { gep4_val4_int, gep13_val13_int, };
	Value* gep691_var = builder.CreateInBoundsGEP(arg2, gep691_array);
	llvm::StoreInst* store692_var = builder.CreateStore(cast689_var, gep691_var, false);
	store692_var->setAlignment(1);
	ArrayRef<Value*> gep693_array { gep4_val4_int, switch675_val675_int, };
	Value* gep693_var = builder.CreateInBoundsGEP(arg2, gep693_array);
	Constant* binop694_val694_int = ConstantInt::get(types[2], 7u);
	Value* binop694_var = BinaryOperator::Create(Instruction::LShr, cast683_var, binop694_val694_int, "", builder.GetInsertBlock());
	Value* cast696_var = builder.CreateCast(Instruction::Trunc, binop694_var, types[11]);
	Constant* binop697_val697_int = ConstantInt::get(types[11], 1u);
	Value* binop697_var = BinaryOperator::Create(Instruction::And, cast696_var, binop697_val697_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store699_var = builder.CreateStore(binop697_var, gep693_var, false);
	store699_var->setAlignment(1);
	builder.CreateBr(block171);
	
	builder.SetInsertPoint(block167);
	Constant* binop700_val700_int = ConstantInt::get(types[0], 48u);
	Value* binop700_var = BinaryOperator::Create(Instruction::Shl, phi671_var, binop700_val700_int, "", builder.GetInsertBlock());
	Value* binop702_var = BinaryOperator::CreateExact(Instruction::AShr, binop700_var, binop700_val700_int, "", builder.GetInsertBlock());
	Value* binop703_var = BinaryOperator::Create(Instruction::Shl, phi670_var, binop700_val700_int, "", builder.GetInsertBlock());
	Value* binop704_var = BinaryOperator::CreateExact(Instruction::AShr, binop703_var, binop700_val700_int, "", builder.GetInsertBlock());
	Value* binop705_var = BinaryOperator::CreateNSW(Instruction::Mul, binop702_var, binop704_var, "", builder.GetInsertBlock());
	Value* cast706_var = builder.CreateCast(Instruction::Trunc, binop705_var, types[2]);
	Value* binop707_var = BinaryOperator::Create(Instruction::Shl, binop705_var, binop700_val700_int, "", builder.GetInsertBlock());
	Value* binop708_var = BinaryOperator::CreateExact(Instruction::AShr, binop707_var, binop700_val700_int, "", builder.GetInsertBlock());
	Value* cmp709_var = builder.CreateICmp(CmpInst::ICMP_NE, binop708_var, binop705_var);
	ArrayRef<Value*> gep710_array { gep4_val4_int, gep687_val687_int, };
	Value* gep710_var = builder.CreateInBoundsGEP(arg2, gep710_array);
	Value* cast711_var = builder.CreateCast(Instruction::ZExt, cmp709_var, types[11]);
	llvm::StoreInst* store712_var = builder.CreateStore(cast711_var, gep710_var, false);
	store712_var->setAlignment(1);
	ArrayRef<Value*> gep713_array { gep4_val4_int, gep13_val13_int, };
	Value* gep713_var = builder.CreateInBoundsGEP(arg2, gep713_array);
	llvm::StoreInst* store714_var = builder.CreateStore(cast711_var, gep713_var, false);
	store714_var->setAlignment(1);
	ArrayRef<Value*> gep715_array { gep4_val4_int, switch675_val675_int, };
	Value* gep715_var = builder.CreateInBoundsGEP(arg2, gep715_array);
	Value* binop716_var = BinaryOperator::Create(Instruction::LShr, cast706_var, gep4_val5_int, "", builder.GetInsertBlock());
	Value* cast717_var = builder.CreateCast(Instruction::Trunc, binop716_var, types[11]);
	Value* binop718_var = BinaryOperator::Create(Instruction::And, cast717_var, binop697_val697_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store719_var = builder.CreateStore(binop718_var, gep715_var, false);
	store719_var->setAlignment(1);
	builder.CreateBr(block171);
	
	builder.SetInsertPoint(block168);
	Constant* binop720_val720_int = ConstantInt::get(types[0], 32u);
	Value* binop720_var = BinaryOperator::Create(Instruction::Shl, phi671_var, binop720_val720_int, "", builder.GetInsertBlock());
	Value* binop722_var = BinaryOperator::CreateExact(Instruction::AShr, binop720_var, binop720_val720_int, "", builder.GetInsertBlock());
	Value* binop723_var = BinaryOperator::Create(Instruction::Shl, phi670_var, binop720_val720_int, "", builder.GetInsertBlock());
	Value* binop724_var = BinaryOperator::CreateExact(Instruction::AShr, binop723_var, binop720_val720_int, "", builder.GetInsertBlock());
	Value* binop725_var = BinaryOperator::CreateNSW(Instruction::Mul, binop722_var, binop724_var, "", builder.GetInsertBlock());
	Value* cast726_var = builder.CreateCast(Instruction::Trunc, binop725_var, types[2]);
	Value* binop727_var = BinaryOperator::Create(Instruction::Shl, binop725_var, binop720_val720_int, "", builder.GetInsertBlock());
	Value* binop728_var = BinaryOperator::CreateExact(Instruction::AShr, binop727_var, binop720_val720_int, "", builder.GetInsertBlock());
	Value* cmp729_var = builder.CreateICmp(CmpInst::ICMP_NE, binop728_var, binop725_var);
	ArrayRef<Value*> gep730_array { gep4_val4_int, gep687_val687_int, };
	Value* gep730_var = builder.CreateInBoundsGEP(arg2, gep730_array);
	Value* cast731_var = builder.CreateCast(Instruction::ZExt, cmp729_var, types[11]);
	llvm::StoreInst* store732_var = builder.CreateStore(cast731_var, gep730_var, false);
	store732_var->setAlignment(1);
	ArrayRef<Value*> gep733_array { gep4_val4_int, gep13_val13_int, };
	Value* gep733_var = builder.CreateInBoundsGEP(arg2, gep733_array);
	llvm::StoreInst* store734_var = builder.CreateStore(cast731_var, gep733_var, false);
	store734_var->setAlignment(1);
	ArrayRef<Value*> gep735_array { gep4_val4_int, switch675_val675_int, };
	Value* gep735_var = builder.CreateInBoundsGEP(arg2, gep735_array);
	Constant* binop736_val736_int = ConstantInt::get(types[2], 31u);
	Value* binop736_var = BinaryOperator::Create(Instruction::LShr, cast726_var, binop736_val736_int, "", builder.GetInsertBlock());
	Value* cast738_var = builder.CreateCast(Instruction::Trunc, binop736_var, types[11]);
	llvm::StoreInst* store739_var = builder.CreateStore(cast738_var, gep735_var, false);
	store739_var->setAlignment(1);
	builder.CreateBr(block171);
	
	builder.SetInsertPoint(block169);
	CallInst* call740_var = builder.CreateCall2(globals[245], phi671_var, phi670_var);
	call740_var->setTailCall();
	call740_var->setDoesNotThrow();
	call740_var->setDoesNotAccessMemory();
	ArrayRef<unsigned> extr742_array { 1, };
	Value* extr742_var = builder.CreateExtractValue(call740_var, extr742_array);
	ArrayRef<unsigned> extr743_array { 0, };
	Value* extr743_var = builder.CreateExtractValue(call740_var, extr743_array);
	ArrayRef<Value*> gep744_array { gep4_val4_int, gep687_val687_int, };
	Value* gep744_var = builder.CreateInBoundsGEP(arg2, gep744_array);
	Value* cast745_var = builder.CreateCast(Instruction::ZExt, extr742_var, types[11]);
	llvm::StoreInst* store746_var = builder.CreateStore(cast745_var, gep744_var, false);
	store746_var->setAlignment(1);
	ArrayRef<Value*> gep747_array { gep4_val4_int, gep13_val13_int, };
	Value* gep747_var = builder.CreateInBoundsGEP(arg2, gep747_array);
	llvm::StoreInst* store748_var = builder.CreateStore(cast745_var, gep747_var, false);
	store748_var->setAlignment(1);
	ArrayRef<Value*> gep749_array { gep4_val4_int, switch675_val675_int, };
	Value* gep749_var = builder.CreateInBoundsGEP(arg2, gep749_array);
	Constant* binop750_val750_int = ConstantInt::get(types[0], 63u);
	Value* binop750_var = BinaryOperator::Create(Instruction::LShr, extr743_var, binop750_val750_int, "", builder.GetInsertBlock());
	Value* cast752_var = builder.CreateCast(Instruction::Trunc, binop750_var, types[11]);
	llvm::StoreInst* store753_var = builder.CreateStore(cast752_var, gep749_var, false);
	store753_var->setAlignment(1);
	builder.CreateBr(block171);
	
	builder.SetInsertPoint(block170);
	ArrayRef<Value*> gep754_array { gep4_val4_int, gep4_val4_int, };
	Value* gep754_var = builder.CreateInBoundsGEP(globals[246], gep754_array);
	CallInst* call754_var = builder.CreateCall(globals[6], gep754_var);
	call754_var->setTailCall();
	call754_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block171);
	PHINode* phi757_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep758_array { gep4_val4_int, switch11_val11_int, };
	Value* gep758_var = builder.CreateInBoundsGEP(arg2, gep758_array);
	Constant* store759_val759_int = ConstantInt::get(types[11], 0u);
	llvm::StoreInst* store759_var = builder.CreateStore(store759_val759_int, gep758_var, false);
	store759_var->setAlignment(1);
	ArrayRef<Value*> gep761_array { gep4_val4_int, switch16_val16_int, };
	Value* gep761_var = builder.CreateInBoundsGEP(arg2, gep761_array);
	llvm::StoreInst* store762_var = builder.CreateStore(store759_val759_int, gep761_var, false);
	store762_var->setAlignment(1);
	ArrayRef<Value*> gep763_array { gep4_val4_int, switch11_val12_int, };
	Value* gep763_var = builder.CreateInBoundsGEP(arg2, gep763_array);
	llvm::StoreInst* store764_var = builder.CreateStore(store759_val759_int, gep763_var, false);
	store764_var->setAlignment(1);
	ArrayRef<Value*> gep765_array { gep4_val4_int, gep13_val13_int, };
	Value* gep765_var = builder.CreateInBoundsGEP(gep4_var, gep765_array);
	llvm::LoadInst* load766_var = builder.CreateLoad(gep765_var, false);
	load766_var->setAlignment(4);
	SwitchInst* switch767_var = builder.CreateSwitch(load766_var, block203, 2);
	switch767_var->addCase(cast<ConstantInt>(switch16_val16_int), block172);
	switch767_var->addCase(cast<ConstantInt>(switch11_val12_int), block173);
	
	builder.SetInsertPoint(block172);
	ArrayRef<Value*> gep767_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep767_var = builder.CreateGEP(arg3, gep767_array);
	llvm::LoadInst* load768_var = builder.CreateLoad(gep767_var, false);
	load768_var->setAlignment(4);
	Value* cast769_var = builder.CreateCast(Instruction::ZExt, load768_var, types[0]);
	ArrayRef<Value*> gep770_array { gep4_val4_int, cast769_var, switch16_val16_int, };
	Value* gep770_var = builder.CreateInBoundsGEP(globals[5], gep770_array);
	llvm::LoadInst* load771_var = builder.CreateLoad(gep770_var, false);
	load771_var->setAlignment(16);
	Constant* binop772_val772_int = ConstantInt::get(types[0], 3u);
	Value* binop772_var = BinaryOperator::Create(Instruction::Shl, load771_var, binop772_val772_int, "", builder.GetInsertBlock());
	Constant* binop774_val774_int = ConstantInt::get(types[0], 64u);
	Value* binop774_var = BinaryOperator::Create(Instruction::Sub, binop774_val774_int, binop772_var, "", builder.GetInsertBlock());
	Constant* binop776_val776_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop776_var = BinaryOperator::Create(Instruction::LShr, binop776_val776_int, binop774_var, "", builder.GetInsertBlock());
	Value* binop778_var = BinaryOperator::Create(Instruction::And, binop776_var, phi757_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep779_array { gep4_val4_int, cast769_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep779_var = builder.CreateInBoundsGEP(globals[5], gep779_array);
	llvm::LoadInst* load780_var = builder.CreateLoad(gep779_var, false);
	load780_var->setAlignment(16);
	Value* cast781_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep782_array { load780_var, };
	Value* gep782_var = builder.CreateInBoundsGEP(cast781_var, gep782_array);
	Value* cast783_var = builder.CreateCast(Instruction::BitCast, gep782_var, types[27]);
	llvm::StoreInst* store784_var = builder.CreateStore(binop778_var, cast783_var, false);
	store784_var->setAlignment(8);
	builder.CreateBr(block204);
	
	builder.SetInsertPoint(block173);
	ArrayRef<Value*> gep785_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, gep13_val13_int, };
	Value* gep785_var = builder.CreateInBoundsGEP(arg3, gep785_array);
	llvm::LoadInst* load786_var = builder.CreateLoad(gep785_var, false);
	load786_var->setAlignment(4);
	Value* cmp787_var = builder.CreateICmp(CmpInst::ICMP_EQ, load786_var, gep13_val13_int);
	builder.CreateCondBr(cmp787_var, block182, block174);
	
	builder.SetInsertPoint(block174);
	Value* cast788_var = builder.CreateCast(Instruction::ZExt, load786_var, types[0]);
	ArrayRef<Value*> gep789_array { gep4_val4_int, cast788_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep789_var = builder.CreateInBoundsGEP(globals[5], gep789_array);
	llvm::LoadInst* load790_var = builder.CreateLoad(gep789_var, false);
	load790_var->setAlignment(16);
	Value* cast791_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep792_array { gep4_val4_int, cast788_var, switch16_val16_int, };
	Value* gep792_var = builder.CreateInBoundsGEP(globals[5], gep792_array);
	llvm::LoadInst* load793_var = builder.CreateLoad(gep792_var, false);
	load793_var->setAlignment(16);
	Value* cmp794_var = builder.CreateICmp(CmpInst::ICMP_EQ, load793_var, cmp26_val26_int);
	builder.CreateCondBr(cmp794_var, block175, block176);
	
	builder.SetInsertPoint(block175);
	ArrayRef<Value*> gep795_array { load790_var, };
	Value* gep795_var = builder.CreateInBoundsGEP(cast791_var, gep795_array);
	Value* cast796_var = builder.CreateCast(Instruction::BitCast, gep795_var, types[27]);
	llvm::LoadInst* load797_var = builder.CreateLoad(cast796_var, false);
	load797_var->setAlignment(8);
	builder.CreateBr(block182);
	
	builder.SetInsertPoint(block176);
	ArrayRef<Value*> gep798_array { gep4_val4_int, cast788_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep798_var = builder.CreateInBoundsGEP(globals[5], gep798_array);
	llvm::LoadInst* load799_var = builder.CreateLoad(gep798_var, false);
	load799_var->setAlignment(8);
	Value* binop800_var = BinaryOperator::Create(Instruction::Add, load799_var, load790_var, "", builder.GetInsertBlock());
	Value* cmp801_var = builder.CreateICmp(CmpInst::ICMP_EQ, load793_var, cmp34_val34_int);
	builder.CreateCondBr(cmp801_var, block177, block178);
	
	builder.SetInsertPoint(block177);
	ArrayRef<Value*> gep802_array { binop800_var, };
	Value* gep802_var = builder.CreateInBoundsGEP(cast791_var, gep802_array);
	Value* cast803_var = builder.CreateCast(Instruction::BitCast, gep802_var, types[28]);
	llvm::LoadInst* load804_var = builder.CreateLoad(cast803_var, false);
	load804_var->setAlignment(4);
	Value* cast805_var = builder.CreateCast(Instruction::ZExt, load804_var, types[0]);
	builder.CreateBr(block182);
	
	builder.SetInsertPoint(block178);
	ArrayRef<Value*> gep806_array { gep4_val4_int, cast788_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep806_var = builder.CreateInBoundsGEP(globals[5], gep806_array);
	llvm::LoadInst* load807_var = builder.CreateLoad(gep806_var, false);
	load807_var->setAlignment(16);
	Value* binop808_var = BinaryOperator::Create(Instruction::Add, load807_var, binop800_var, "", builder.GetInsertBlock());
	SwitchInst* switch809_var = builder.CreateSwitch(load793_var, block181, 2);
	switch809_var->addCase(cast<ConstantInt>(switch43_val43_int), block179);
	switch809_var->addCase(cast<ConstantInt>(switch43_val44_int), block180);
	
	builder.SetInsertPoint(block179);
	ArrayRef<Value*> gep809_array { binop808_var, };
	Value* gep809_var = builder.CreateInBoundsGEP(cast791_var, gep809_array);
	Value* cast810_var = builder.CreateCast(Instruction::BitCast, gep809_var, types[30]);
	llvm::LoadInst* load811_var = builder.CreateLoad(cast810_var, false);
	load811_var->setAlignment(2);
	Value* cast812_var = builder.CreateCast(Instruction::ZExt, load811_var, types[0]);
	builder.CreateBr(block182);
	
	builder.SetInsertPoint(block180);
	ArrayRef<Value*> gep813_array { gep4_val4_int, cast788_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep813_var = builder.CreateInBoundsGEP(globals[5], gep813_array);
	llvm::LoadInst* load814_var = builder.CreateLoad(gep813_var, false);
	load814_var->setAlignment(8);
	Value* binop815_var = BinaryOperator::Create(Instruction::Add, load814_var, binop808_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep816_array { binop815_var, };
	Value* gep816_var = builder.CreateInBoundsGEP(cast791_var, gep816_array);
	llvm::LoadInst* load817_var = builder.CreateLoad(gep816_var, false);
	load817_var->setAlignment(1);
	Value* cast818_var = builder.CreateCast(Instruction::ZExt, load817_var, types[0]);
	builder.CreateBr(block182);
	
	builder.SetInsertPoint(block181);
	CallInst* call819_var = builder.CreateCall(globals[6], gep56_var);
	call819_var->setTailCall();
	call819_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block182);
	PHINode* phi820_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep821_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, switch11_val11_int, };
	Value* gep821_var = builder.CreateInBoundsGEP(arg3, gep821_array);
	llvm::LoadInst* load822_var = builder.CreateLoad(gep821_var, false);
	load822_var->setAlignment(4);
	Value* cmp823_var = builder.CreateICmp(CmpInst::ICMP_EQ, load822_var, gep13_val13_int);
	builder.CreateCondBr(cmp823_var, block192, block183);
	
	builder.SetInsertPoint(block183);
	Value* cast824_var = builder.CreateCast(Instruction::ZExt, load822_var, types[0]);
	ArrayRef<Value*> gep825_array { gep4_val4_int, cast824_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep825_var = builder.CreateInBoundsGEP(globals[5], gep825_array);
	llvm::LoadInst* load826_var = builder.CreateLoad(gep825_var, false);
	load826_var->setAlignment(16);
	Value* cast827_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep828_array { gep4_val4_int, cast824_var, switch16_val16_int, };
	Value* gep828_var = builder.CreateInBoundsGEP(globals[5], gep828_array);
	llvm::LoadInst* load829_var = builder.CreateLoad(gep828_var, false);
	load829_var->setAlignment(16);
	Value* cmp830_var = builder.CreateICmp(CmpInst::ICMP_EQ, load829_var, cmp26_val26_int);
	builder.CreateCondBr(cmp830_var, block184, block185);
	
	builder.SetInsertPoint(block184);
	ArrayRef<Value*> gep831_array { load826_var, };
	Value* gep831_var = builder.CreateInBoundsGEP(cast827_var, gep831_array);
	Value* cast832_var = builder.CreateCast(Instruction::BitCast, gep831_var, types[27]);
	llvm::LoadInst* load833_var = builder.CreateLoad(cast832_var, false);
	load833_var->setAlignment(8);
	builder.CreateBr(block191);
	
	builder.SetInsertPoint(block185);
	ArrayRef<Value*> gep834_array { gep4_val4_int, cast824_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep834_var = builder.CreateInBoundsGEP(globals[5], gep834_array);
	llvm::LoadInst* load835_var = builder.CreateLoad(gep834_var, false);
	load835_var->setAlignment(8);
	Value* binop836_var = BinaryOperator::Create(Instruction::Add, load835_var, load826_var, "", builder.GetInsertBlock());
	Value* cmp837_var = builder.CreateICmp(CmpInst::ICMP_EQ, load829_var, cmp34_val34_int);
	builder.CreateCondBr(cmp837_var, block186, block187);
	
	builder.SetInsertPoint(block186);
	ArrayRef<Value*> gep838_array { binop836_var, };
	Value* gep838_var = builder.CreateInBoundsGEP(cast827_var, gep838_array);
	Value* cast839_var = builder.CreateCast(Instruction::BitCast, gep838_var, types[28]);
	llvm::LoadInst* load840_var = builder.CreateLoad(cast839_var, false);
	load840_var->setAlignment(4);
	Value* cast841_var = builder.CreateCast(Instruction::ZExt, load840_var, types[0]);
	builder.CreateBr(block191);
	
	builder.SetInsertPoint(block187);
	ArrayRef<Value*> gep842_array { gep4_val4_int, cast824_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep842_var = builder.CreateInBoundsGEP(globals[5], gep842_array);
	llvm::LoadInst* load843_var = builder.CreateLoad(gep842_var, false);
	load843_var->setAlignment(16);
	Value* binop844_var = BinaryOperator::Create(Instruction::Add, load843_var, binop836_var, "", builder.GetInsertBlock());
	SwitchInst* switch845_var = builder.CreateSwitch(load829_var, block190, 2);
	switch845_var->addCase(cast<ConstantInt>(switch43_val43_int), block188);
	switch845_var->addCase(cast<ConstantInt>(switch43_val44_int), block189);
	
	builder.SetInsertPoint(block188);
	ArrayRef<Value*> gep845_array { binop844_var, };
	Value* gep845_var = builder.CreateInBoundsGEP(cast827_var, gep845_array);
	Value* cast846_var = builder.CreateCast(Instruction::BitCast, gep845_var, types[30]);
	llvm::LoadInst* load847_var = builder.CreateLoad(cast846_var, false);
	load847_var->setAlignment(2);
	Value* cast848_var = builder.CreateCast(Instruction::ZExt, load847_var, types[0]);
	builder.CreateBr(block191);
	
	builder.SetInsertPoint(block189);
	ArrayRef<Value*> gep849_array { gep4_val4_int, cast824_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep849_var = builder.CreateInBoundsGEP(globals[5], gep849_array);
	llvm::LoadInst* load850_var = builder.CreateLoad(gep849_var, false);
	load850_var->setAlignment(8);
	Value* binop851_var = BinaryOperator::Create(Instruction::Add, load850_var, binop844_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep852_array { binop851_var, };
	Value* gep852_var = builder.CreateInBoundsGEP(cast827_var, gep852_array);
	llvm::LoadInst* load853_var = builder.CreateLoad(gep852_var, false);
	load853_var->setAlignment(1);
	Value* cast854_var = builder.CreateCast(Instruction::ZExt, load853_var, types[0]);
	builder.CreateBr(block191);
	
	builder.SetInsertPoint(block190);
	CallInst* call855_var = builder.CreateCall(globals[6], gep56_var);
	call855_var->setTailCall();
	call855_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block191);
	PHINode* phi856_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep857_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, switch11_val12_int, };
	Value* gep857_var = builder.CreateInBoundsGEP(arg3, gep857_array);
	llvm::LoadInst* load858_var = builder.CreateLoad(gep857_var, false);
	load858_var->setAlignment(4);
	Value* cast859_var = builder.CreateCast(Instruction::SExt, load858_var, types[0]);
	Value* binop860_var = BinaryOperator::Create(Instruction::Mul, cast859_var, phi856_var, "", builder.GetInsertBlock());
	Value* binop861_var = BinaryOperator::Create(Instruction::Add, binop860_var, phi820_var, "", builder.GetInsertBlock());
	builder.CreateBr(block192);
	
	builder.SetInsertPoint(block192);
	PHINode* phi862_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep863_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch16_val16_int, gep13_val13_int, switch16_val16_int, };
	Value* gep863_var = builder.CreateInBoundsGEP(arg3, gep863_array);
	llvm::LoadInst* load864_var = builder.CreateLoad(gep863_var, false);
	load864_var->setAlignment(4);
	Value* cmp865_var = builder.CreateICmp(CmpInst::ICMP_EQ, load864_var, gep13_val13_int);
	builder.CreateCondBr(cmp865_var, block202, block193);
	
	builder.SetInsertPoint(block193);
	Value* cast866_var = builder.CreateCast(Instruction::ZExt, load864_var, types[0]);
	ArrayRef<Value*> gep867_array { gep4_val4_int, cast866_var, gep13_val13_int, gep13_val13_int, gep13_val13_int, };
	Value* gep867_var = builder.CreateInBoundsGEP(globals[5], gep867_array);
	llvm::LoadInst* load868_var = builder.CreateLoad(gep867_var, false);
	load868_var->setAlignment(16);
	Value* cast869_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep870_array { gep4_val4_int, cast866_var, switch16_val16_int, };
	Value* gep870_var = builder.CreateInBoundsGEP(globals[5], gep870_array);
	llvm::LoadInst* load871_var = builder.CreateLoad(gep870_var, false);
	load871_var->setAlignment(16);
	Value* cmp872_var = builder.CreateICmp(CmpInst::ICMP_EQ, load871_var, cmp26_val26_int);
	builder.CreateCondBr(cmp872_var, block194, block195);
	
	builder.SetInsertPoint(block194);
	ArrayRef<Value*> gep873_array { load868_var, };
	Value* gep873_var = builder.CreateInBoundsGEP(cast869_var, gep873_array);
	Value* cast874_var = builder.CreateCast(Instruction::BitCast, gep873_var, types[27]);
	llvm::LoadInst* load875_var = builder.CreateLoad(cast874_var, false);
	load875_var->setAlignment(8);
	builder.CreateBr(block201);
	
	builder.SetInsertPoint(block195);
	ArrayRef<Value*> gep876_array { gep4_val4_int, cast866_var, gep13_val13_int, gep13_val13_int, switch16_val16_int, };
	Value* gep876_var = builder.CreateInBoundsGEP(globals[5], gep876_array);
	llvm::LoadInst* load877_var = builder.CreateLoad(gep876_var, false);
	load877_var->setAlignment(8);
	Value* binop878_var = BinaryOperator::Create(Instruction::Add, load877_var, load868_var, "", builder.GetInsertBlock());
	Value* cmp879_var = builder.CreateICmp(CmpInst::ICMP_EQ, load871_var, cmp34_val34_int);
	builder.CreateCondBr(cmp879_var, block196, block197);
	
	builder.SetInsertPoint(block196);
	ArrayRef<Value*> gep880_array { binop878_var, };
	Value* gep880_var = builder.CreateInBoundsGEP(cast869_var, gep880_array);
	Value* cast881_var = builder.CreateCast(Instruction::BitCast, gep880_var, types[28]);
	llvm::LoadInst* load882_var = builder.CreateLoad(cast881_var, false);
	load882_var->setAlignment(4);
	Value* cast883_var = builder.CreateCast(Instruction::ZExt, load882_var, types[0]);
	builder.CreateBr(block201);
	
	builder.SetInsertPoint(block197);
	ArrayRef<Value*> gep884_array { gep4_val4_int, cast866_var, gep13_val13_int, gep13_val13_int, switch11_val11_int, };
	Value* gep884_var = builder.CreateInBoundsGEP(globals[5], gep884_array);
	llvm::LoadInst* load885_var = builder.CreateLoad(gep884_var, false);
	load885_var->setAlignment(16);
	Value* binop886_var = BinaryOperator::Create(Instruction::Add, load885_var, binop878_var, "", builder.GetInsertBlock());
	SwitchInst* switch887_var = builder.CreateSwitch(load871_var, block200, 2);
	switch887_var->addCase(cast<ConstantInt>(switch43_val43_int), block198);
	switch887_var->addCase(cast<ConstantInt>(switch43_val44_int), block199);
	
	builder.SetInsertPoint(block198);
	ArrayRef<Value*> gep887_array { binop886_var, };
	Value* gep887_var = builder.CreateInBoundsGEP(cast869_var, gep887_array);
	Value* cast888_var = builder.CreateCast(Instruction::BitCast, gep887_var, types[30]);
	llvm::LoadInst* load889_var = builder.CreateLoad(cast888_var, false);
	load889_var->setAlignment(2);
	Value* cast890_var = builder.CreateCast(Instruction::ZExt, load889_var, types[0]);
	builder.CreateBr(block201);
	
	builder.SetInsertPoint(block199);
	ArrayRef<Value*> gep891_array { gep4_val4_int, cast866_var, gep13_val13_int, gep13_val13_int, switch11_val12_int, };
	Value* gep891_var = builder.CreateInBoundsGEP(globals[5], gep891_array);
	llvm::LoadInst* load892_var = builder.CreateLoad(gep891_var, false);
	load892_var->setAlignment(8);
	Value* binop893_var = BinaryOperator::Create(Instruction::Add, load892_var, binop886_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep894_array { binop893_var, };
	Value* gep894_var = builder.CreateInBoundsGEP(cast869_var, gep894_array);
	llvm::LoadInst* load895_var = builder.CreateLoad(gep894_var, false);
	load895_var->setAlignment(1);
	Value* cast896_var = builder.CreateCast(Instruction::ZExt, load895_var, types[0]);
	builder.CreateBr(block201);
	
	builder.SetInsertPoint(block200);
	CallInst* call897_var = builder.CreateCall(globals[6], gep56_var);
	call897_var->setTailCall();
	call897_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block201);
	PHINode* phi898_var = builder.CreatePHI(types[0], 4);
	Value* binop899_var = BinaryOperator::Create(Instruction::Add, phi898_var, phi862_var, "", builder.GetInsertBlock());
	builder.CreateBr(block202);
	
	builder.SetInsertPoint(block202);
	PHINode* phi900_var = builder.CreatePHI(types[0], 2);
	Value* cast901_var = builder.CreateCast(Instruction::ZExt, load673_var, types[0]);
	CallInst* call902_var = builder.CreateCall3(globals[14], phi900_var, cast901_var, phi757_var);
	call902_var->setTailCall();
	builder.CreateBr(block204);
	
	builder.SetInsertPoint(block203);
	ArrayRef<Value*> gep904_array { gep4_val4_int, gep4_val4_int, };
	Value* gep904_var = builder.CreateInBoundsGEP(globals[15], gep904_array);
	CallInst* call904_var = builder.CreateCall(globals[6], gep904_var);
	call904_var->setTailCall();
	call904_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block204);
	phi94_var->addIncoming(gep4_val4_int, block10);
	phi94_var->addIncoming(load71_var, block12);
	phi94_var->addIncoming(cast79_var, block14);
	phi94_var->addIncoming(cast86_var, block16);
	phi94_var->addIncoming(cast92_var, block17);
	
	phi130_var->addIncoming(load107_var, block21);
	phi130_var->addIncoming(cast115_var, block23);
	phi130_var->addIncoming(cast122_var, block25);
	phi130_var->addIncoming(cast128_var, block26);
	
	phi136_var->addIncoming(binop135_var, block28);
	phi136_var->addIncoming(phi94_var, block19);
	
	phi172_var->addIncoming(load149_var, block31);
	phi172_var->addIncoming(cast157_var, block33);
	phi172_var->addIncoming(cast164_var, block35);
	phi172_var->addIncoming(cast170_var, block36);
	
	phi174_var->addIncoming(binop173_var, block38);
	phi174_var->addIncoming(phi136_var, block29);
	
	phi183_var->addIncoming(call178_var, block39);
	phi183_var->addIncoming(load30_var, block3);
	phi183_var->addIncoming(cast39_var, block5);
	phi183_var->addIncoming(cast48_var, block7);
	phi183_var->addIncoming(cast54_var, block8);
	
	phi258_var->addIncoming(gep4_val4_int, block51);
	phi258_var->addIncoming(load235_var, block53);
	phi258_var->addIncoming(cast243_var, block55);
	phi258_var->addIncoming(cast250_var, block57);
	phi258_var->addIncoming(cast256_var, block58);
	
	phi294_var->addIncoming(load271_var, block62);
	phi294_var->addIncoming(cast279_var, block64);
	phi294_var->addIncoming(cast286_var, block66);
	phi294_var->addIncoming(cast292_var, block67);
	
	phi300_var->addIncoming(binop299_var, block69);
	phi300_var->addIncoming(phi258_var, block60);
	
	phi336_var->addIncoming(load313_var, block72);
	phi336_var->addIncoming(cast321_var, block74);
	phi336_var->addIncoming(cast328_var, block76);
	phi336_var->addIncoming(cast334_var, block77);
	
	phi338_var->addIncoming(binop337_var, block79);
	phi338_var->addIncoming(phi300_var, block70);
	
	phi420_var->addIncoming(gep4_val4_int, block92);
	phi420_var->addIncoming(load397_var, block94);
	phi420_var->addIncoming(cast405_var, block96);
	phi420_var->addIncoming(cast412_var, block98);
	phi420_var->addIncoming(cast418_var, block99);
	
	phi456_var->addIncoming(load433_var, block103);
	phi456_var->addIncoming(cast441_var, block105);
	phi456_var->addIncoming(cast448_var, block107);
	phi456_var->addIncoming(cast454_var, block108);
	
	phi462_var->addIncoming(binop461_var, block110);
	phi462_var->addIncoming(phi420_var, block101);
	
	phi498_var->addIncoming(load475_var, block113);
	phi498_var->addIncoming(cast483_var, block115);
	phi498_var->addIncoming(cast490_var, block117);
	phi498_var->addIncoming(cast496_var, block118);
	
	phi500_var->addIncoming(binop499_var, block120);
	phi500_var->addIncoming(phi462_var, block111);
	
	phi506_var->addIncoming(call504_var, block121);
	phi506_var->addIncoming(load350_var, block83);
	phi506_var->addIncoming(load362_var, block85);
	phi506_var->addIncoming(cast370_var, block87);
	phi506_var->addIncoming(cast377_var, block89);
	phi506_var->addIncoming(cast383_var, block90);
	
	phi581_var->addIncoming(gep4_val4_int, block133);
	phi581_var->addIncoming(load558_var, block135);
	phi581_var->addIncoming(cast566_var, block137);
	phi581_var->addIncoming(cast573_var, block139);
	phi581_var->addIncoming(cast579_var, block140);
	
	phi617_var->addIncoming(load594_var, block144);
	phi617_var->addIncoming(cast602_var, block146);
	phi617_var->addIncoming(cast609_var, block148);
	phi617_var->addIncoming(cast615_var, block149);
	
	phi623_var->addIncoming(binop622_var, block151);
	phi623_var->addIncoming(phi581_var, block142);
	
	phi659_var->addIncoming(load636_var, block154);
	phi659_var->addIncoming(cast644_var, block156);
	phi659_var->addIncoming(cast651_var, block158);
	phi659_var->addIncoming(cast657_var, block159);
	
	phi661_var->addIncoming(binop660_var, block161);
	phi661_var->addIncoming(phi623_var, block152);
	
	phi670_var->addIncoming(call342_var, block80);
	phi670_var->addIncoming(load188_var, block42);
	phi670_var->addIncoming(load200_var, block44);
	phi670_var->addIncoming(cast208_var, block46);
	phi670_var->addIncoming(cast215_var, block48);
	phi670_var->addIncoming(cast221_var, block49);
	phi670_var->addIncoming(call665_var, block162);
	phi670_var->addIncoming(load511_var, block124);
	phi670_var->addIncoming(load523_var, block126);
	phi670_var->addIncoming(cast531_var, block128);
	phi670_var->addIncoming(cast538_var, block130);
	phi670_var->addIncoming(cast544_var, block131);
	
	phi671_var->addIncoming(phi183_var, block80);
	phi671_var->addIncoming(phi183_var, block42);
	phi671_var->addIncoming(phi183_var, block44);
	phi671_var->addIncoming(phi183_var, block46);
	phi671_var->addIncoming(phi183_var, block48);
	phi671_var->addIncoming(phi183_var, block49);
	phi671_var->addIncoming(phi506_var, block162);
	phi671_var->addIncoming(phi506_var, block124);
	phi671_var->addIncoming(phi506_var, block126);
	phi671_var->addIncoming(phi506_var, block128);
	phi671_var->addIncoming(phi506_var, block130);
	phi671_var->addIncoming(phi506_var, block131);
	
	phi757_var->addIncoming(extr743_var, block169);
	phi757_var->addIncoming(binop725_var, block168);
	phi757_var->addIncoming(binop705_var, block167);
	phi757_var->addIncoming(binop682_var, block166);
	
	phi820_var->addIncoming(gep4_val4_int, block173);
	phi820_var->addIncoming(load797_var, block175);
	phi820_var->addIncoming(cast805_var, block177);
	phi820_var->addIncoming(cast812_var, block179);
	phi820_var->addIncoming(cast818_var, block180);
	
	phi856_var->addIncoming(load833_var, block184);
	phi856_var->addIncoming(cast841_var, block186);
	phi856_var->addIncoming(cast848_var, block188);
	phi856_var->addIncoming(cast854_var, block189);
	
	phi862_var->addIncoming(binop861_var, block191);
	phi862_var->addIncoming(phi820_var, block182);
	
	phi898_var->addIncoming(load875_var, block194);
	phi898_var->addIncoming(cast883_var, block196);
	phi898_var->addIncoming(cast890_var, block198);
	phi898_var->addIncoming(cast896_var, block199);
	
	phi900_var->addIncoming(binop899_var, block201);
	phi900_var->addIncoming(phi862_var, block192);
	
	return;
}

void x86::x86_in(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[247], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_inc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[248], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_insb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[249], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_insd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[250], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_insertps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[251], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_insertq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[252], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_insw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[253], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_int(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[254], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_int1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[255], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_int3(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[256], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_into(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[257], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_invd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[258], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_invept(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[259], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_invlpg(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[260], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_invlpga(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[261], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_invpcid(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[262], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_invvpid(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[263], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_iret(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[264], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_iretd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[265], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_iretq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[266], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ja(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block44);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg2, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(1);
	Value* cmp13_var = builder.CreateICmp(CmpInst::ICMP_EQ, load12_var, cmp8_val8_int);
	builder.CreateCondBr(cmp13_var, block2, block44);
	
	builder.SetInsertPoint(block2);
	Constant* gep14_val14_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep14_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, gep4_val5_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(arg3, gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(4);
	SwitchInst* switch17_var = builder.CreateSwitch(load16_var, block42, 3);
	Constant* switch17_val17_int = ConstantInt::get(types[2], 2u);
	switch17_var->addCase(cast<ConstantInt>(switch17_val17_int), block3);
	Constant* switch17_val18_int = ConstantInt::get(types[2], 1u);
	switch17_var->addCase(cast<ConstantInt>(switch17_val18_int), block4);
	switch17_var->addCase(cast<ConstantInt>(gep10_val10_int), block12);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(arg3, gep19_array);
	Value* cast20_var = builder.CreateCast(Instruction::BitCast, gep19_var, types[27]);
	llvm::LoadInst* load21_var = builder.CreateLoad(cast20_var, false);
	load21_var->setAlignment(8);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep22_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, gep4_val5_int, };
	Value* gep22_var = builder.CreateGEP(arg3, gep22_array);
	llvm::LoadInst* load23_var = builder.CreateLoad(gep22_var, false);
	load23_var->setAlignment(4);
	Value* cast24_var = builder.CreateCast(Instruction::ZExt, load23_var, types[0]);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast24_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep25_var, false);
	load27_var->setAlignment(16);
	Value* cast28_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast24_var, switch17_val18_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(16);
	Constant* cmp31_val31_int = ConstantInt::get(types[0], 8u);
	Value* cmp31_var = builder.CreateICmp(CmpInst::ICMP_EQ, load30_var, cmp31_val31_int);
	builder.CreateCondBr(cmp31_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { load27_var, };
	Value* gep33_var = builder.CreateInBoundsGEP(cast28_var, gep33_array);
	Value* cast34_var = builder.CreateCast(Instruction::BitCast, gep33_var, types[27]);
	llvm::LoadInst* load35_var = builder.CreateLoad(cast34_var, false);
	load35_var->setAlignment(8);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep36_array { gep4_val4_int, cast24_var, gep4_val5_int, gep4_val5_int, switch17_val18_int, };
	Value* gep36_var = builder.CreateInBoundsGEP(globals[5], gep36_array);
	llvm::LoadInst* load37_var = builder.CreateLoad(gep36_var, false);
	load37_var->setAlignment(8);
	Value* binop38_var = BinaryOperator::Create(Instruction::Add, load37_var, load27_var, "", builder.GetInsertBlock());
	Constant* cmp39_val39_int = ConstantInt::get(types[0], 4u);
	Value* cmp39_var = builder.CreateICmp(CmpInst::ICMP_EQ, load30_var, cmp39_val39_int);
	builder.CreateCondBr(cmp39_var, block7, block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep41_array { binop38_var, };
	Value* gep41_var = builder.CreateInBoundsGEP(cast28_var, gep41_array);
	Value* cast42_var = builder.CreateCast(Instruction::BitCast, gep41_var, types[28]);
	llvm::LoadInst* load43_var = builder.CreateLoad(cast42_var, false);
	load43_var->setAlignment(4);
	Value* cast44_var = builder.CreateCast(Instruction::ZExt, load43_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep45_array { gep4_val4_int, cast24_var, gep4_val5_int, gep4_val5_int, switch17_val17_int, };
	Value* gep45_var = builder.CreateInBoundsGEP(globals[5], gep45_array);
	llvm::LoadInst* load46_var = builder.CreateLoad(gep45_var, false);
	load46_var->setAlignment(16);
	Value* binop47_var = BinaryOperator::Create(Instruction::Add, load46_var, binop38_var, "", builder.GetInsertBlock());
	SwitchInst* switch48_var = builder.CreateSwitch(load30_var, block11, 2);
	Constant* switch48_val48_int = ConstantInt::get(types[0], 2u);
	switch48_var->addCase(cast<ConstantInt>(switch48_val48_int), block9);
	Constant* switch48_val49_int = ConstantInt::get(types[0], 1u);
	switch48_var->addCase(cast<ConstantInt>(switch48_val49_int), block10);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep50_array { binop47_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast28_var, gep50_array);
	Value* cast51_var = builder.CreateCast(Instruction::BitCast, gep50_var, types[30]);
	llvm::LoadInst* load52_var = builder.CreateLoad(cast51_var, false);
	load52_var->setAlignment(2);
	Value* cast53_var = builder.CreateCast(Instruction::ZExt, load52_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep54_array { gep4_val4_int, cast24_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[5], gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(8);
	Value* binop56_var = BinaryOperator::Create(Instruction::Add, load55_var, binop47_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep57_array { binop56_var, };
	Value* gep57_var = builder.CreateInBoundsGEP(cast28_var, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(1);
	Value* cast59_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep4_val4_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[7], gep61_array);
	CallInst* call60_var = builder.CreateCall(globals[6], gep61_var);
	call60_var->setTailCall();
	call60_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep64_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, gep4_val5_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(arg3, gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(4);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, gep4_val5_int);
	builder.CreateCondBr(cmp66_var, block21, block13);
	
	builder.SetInsertPoint(block13);
	Value* cast67_var = builder.CreateCast(Instruction::ZExt, load65_var, types[0]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast67_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cast70_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep71_array { gep4_val4_int, cast67_var, switch17_val18_int, };
	Value* gep71_var = builder.CreateInBoundsGEP(globals[5], gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(16);
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load72_var, cmp31_val31_int);
	builder.CreateCondBr(cmp73_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { load69_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast70_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[27]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(8);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep77_array { gep4_val4_int, cast67_var, gep4_val5_int, gep4_val5_int, switch17_val18_int, };
	Value* gep77_var = builder.CreateInBoundsGEP(globals[5], gep77_array);
	llvm::LoadInst* load78_var = builder.CreateLoad(gep77_var, false);
	load78_var->setAlignment(8);
	Value* binop79_var = BinaryOperator::Create(Instruction::Add, load78_var, load69_var, "", builder.GetInsertBlock());
	Value* cmp80_var = builder.CreateICmp(CmpInst::ICMP_EQ, load72_var, cmp39_val39_int);
	builder.CreateCondBr(cmp80_var, block16, block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { binop79_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast70_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[28]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(4);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast67_var, gep4_val5_int, gep4_val5_int, switch17_val17_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(16);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop79_var, "", builder.GetInsertBlock());
	SwitchInst* switch88_var = builder.CreateSwitch(load72_var, block20, 2);
	switch88_var->addCase(cast<ConstantInt>(switch48_val48_int), block18);
	switch88_var->addCase(cast<ConstantInt>(switch48_val49_int), block19);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast70_var, gep88_array);
	Value* cast89_var = builder.CreateCast(Instruction::BitCast, gep88_var, types[30]);
	llvm::LoadInst* load90_var = builder.CreateLoad(cast89_var, false);
	load90_var->setAlignment(2);
	Value* cast91_var = builder.CreateCast(Instruction::ZExt, load90_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block19);
	ArrayRef<Value*> gep92_array { gep4_val4_int, cast67_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep92_var = builder.CreateInBoundsGEP(globals[5], gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(8);
	Value* binop94_var = BinaryOperator::Create(Instruction::Add, load93_var, binop87_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep95_array { binop94_var, };
	Value* gep95_var = builder.CreateInBoundsGEP(cast70_var, gep95_array);
	llvm::LoadInst* load96_var = builder.CreateLoad(gep95_var, false);
	load96_var->setAlignment(1);
	Value* cast97_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block20);
	CallInst* call98_var = builder.CreateCall(globals[6], gep61_var);
	call98_var->setTailCall();
	call98_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block21);
	PHINode* phi99_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep100_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, switch17_val17_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(arg3, gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(4);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, gep4_val5_int);
	builder.CreateCondBr(cmp102_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast103_var = builder.CreateCast(Instruction::ZExt, load101_var, types[0]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast103_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cast106_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep107_array { gep4_val4_int, cast103_var, switch17_val18_int, };
	Value* gep107_var = builder.CreateInBoundsGEP(globals[5], gep107_array);
	llvm::LoadInst* load108_var = builder.CreateLoad(gep107_var, false);
	load108_var->setAlignment(16);
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load108_var, cmp31_val31_int);
	builder.CreateCondBr(cmp109_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { load105_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast106_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[27]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep113_array { gep4_val4_int, cast103_var, gep4_val5_int, gep4_val5_int, switch17_val18_int, };
	Value* gep113_var = builder.CreateInBoundsGEP(globals[5], gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(8);
	Value* binop115_var = BinaryOperator::Create(Instruction::Add, load114_var, load105_var, "", builder.GetInsertBlock());
	Value* cmp116_var = builder.CreateICmp(CmpInst::ICMP_EQ, load108_var, cmp39_val39_int);
	builder.CreateCondBr(cmp116_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { binop115_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast106_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[28]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(4);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast103_var, gep4_val5_int, gep4_val5_int, switch17_val17_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(16);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop115_var, "", builder.GetInsertBlock());
	SwitchInst* switch124_var = builder.CreateSwitch(load108_var, block29, 2);
	switch124_var->addCase(cast<ConstantInt>(switch48_val48_int), block27);
	switch124_var->addCase(cast<ConstantInt>(switch48_val49_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast106_var, gep124_array);
	Value* cast125_var = builder.CreateCast(Instruction::BitCast, gep124_var, types[30]);
	llvm::LoadInst* load126_var = builder.CreateLoad(cast125_var, false);
	load126_var->setAlignment(2);
	Value* cast127_var = builder.CreateCast(Instruction::ZExt, load126_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast103_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(8);
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, load129_var, binop123_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep131_array { binop130_var, };
	Value* gep131_var = builder.CreateInBoundsGEP(cast106_var, gep131_array);
	llvm::LoadInst* load132_var = builder.CreateLoad(gep131_var, false);
	load132_var->setAlignment(1);
	Value* cast133_var = builder.CreateCast(Instruction::ZExt, load132_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call134_var = builder.CreateCall(globals[6], gep61_var);
	call134_var->setTailCall();
	call134_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi135_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep136_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, gep10_val10_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(arg3, gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(4);
	Value* cast138_var = builder.CreateCast(Instruction::SExt, load137_var, types[0]);
	Value* binop139_var = BinaryOperator::Create(Instruction::Mul, cast138_var, phi135_var, "", builder.GetInsertBlock());
	Value* binop140_var = BinaryOperator::Create(Instruction::Add, binop139_var, phi99_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi141_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep142_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, switch17_val18_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(arg3, gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(4);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, gep4_val5_int);
	builder.CreateCondBr(cmp144_var, block41, block32);
	
	builder.SetInsertPoint(block32);
	Value* cast145_var = builder.CreateCast(Instruction::ZExt, load143_var, types[0]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast145_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cast148_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep149_array { gep4_val4_int, cast145_var, switch17_val18_int, };
	Value* gep149_var = builder.CreateInBoundsGEP(globals[5], gep149_array);
	llvm::LoadInst* load150_var = builder.CreateLoad(gep149_var, false);
	load150_var->setAlignment(16);
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load150_var, cmp31_val31_int);
	builder.CreateCondBr(cmp151_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { load147_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast148_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[27]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep155_array { gep4_val4_int, cast145_var, gep4_val5_int, gep4_val5_int, switch17_val18_int, };
	Value* gep155_var = builder.CreateInBoundsGEP(globals[5], gep155_array);
	llvm::LoadInst* load156_var = builder.CreateLoad(gep155_var, false);
	load156_var->setAlignment(8);
	Value* binop157_var = BinaryOperator::Create(Instruction::Add, load156_var, load147_var, "", builder.GetInsertBlock());
	Value* cmp158_var = builder.CreateICmp(CmpInst::ICMP_EQ, load150_var, cmp39_val39_int);
	builder.CreateCondBr(cmp158_var, block35, block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep159_array { binop157_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast148_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[28]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(4);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast145_var, gep4_val5_int, gep4_val5_int, switch17_val17_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(16);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop157_var, "", builder.GetInsertBlock());
	SwitchInst* switch166_var = builder.CreateSwitch(load150_var, block39, 2);
	switch166_var->addCase(cast<ConstantInt>(switch48_val48_int), block37);
	switch166_var->addCase(cast<ConstantInt>(switch48_val49_int), block38);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast148_var, gep166_array);
	Value* cast167_var = builder.CreateCast(Instruction::BitCast, gep166_var, types[30]);
	llvm::LoadInst* load168_var = builder.CreateLoad(cast167_var, false);
	load168_var->setAlignment(2);
	Value* cast169_var = builder.CreateCast(Instruction::ZExt, load168_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block38);
	ArrayRef<Value*> gep170_array { gep4_val4_int, cast145_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(globals[5], gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(8);
	Value* binop172_var = BinaryOperator::Create(Instruction::Add, load171_var, binop165_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep173_array { binop172_var, };
	Value* gep173_var = builder.CreateInBoundsGEP(cast148_var, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	CallInst* call176_var = builder.CreateCall(globals[6], gep61_var);
	call176_var->setTailCall();
	call176_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi177_var = builder.CreatePHI(types[0], 4);
	Value* binop178_var = BinaryOperator::Create(Instruction::Add, phi177_var, phi141_var, "", builder.GetInsertBlock());
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block41);
	PHINode* phi179_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep180_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val17_int, };
	Value* gep180_var = builder.CreateInBoundsGEP(arg3, gep180_array);
	llvm::LoadInst* load181_var = builder.CreateLoad(gep180_var, false);
	load181_var->setAlignment(1);
	Value* cast182_var = builder.CreateCast(Instruction::ZExt, load181_var, types[0]);
	CallInst* call183_var = builder.CreateCall2(globals[8], phi179_var, cast182_var);
	call183_var->setTailCall();
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep185_array { gep4_val4_int, gep4_val4_int, };
	Value* gep185_var = builder.CreateInBoundsGEP(globals[10], gep185_array);
	CallInst* call185_var = builder.CreateCall(globals[6], gep185_var);
	call185_var->setTailCall();
	call185_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	PHINode* phi188_var = builder.CreatePHI(types[0], 6);
	CallInst* call189_var = builder.CreateCall3(globals[267], arg0, arg1, phi188_var);
	call189_var->setTailCall();
	call189_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block44);
	phi99_var->addIncoming(gep4_val4_int, block12);
	phi99_var->addIncoming(load76_var, block14);
	phi99_var->addIncoming(cast84_var, block16);
	phi99_var->addIncoming(cast91_var, block18);
	phi99_var->addIncoming(cast97_var, block19);
	
	phi135_var->addIncoming(load112_var, block23);
	phi135_var->addIncoming(cast120_var, block25);
	phi135_var->addIncoming(cast127_var, block27);
	phi135_var->addIncoming(cast133_var, block28);
	
	phi141_var->addIncoming(binop140_var, block30);
	phi141_var->addIncoming(phi99_var, block21);
	
	phi177_var->addIncoming(load154_var, block33);
	phi177_var->addIncoming(cast162_var, block35);
	phi177_var->addIncoming(cast169_var, block37);
	phi177_var->addIncoming(cast175_var, block38);
	
	phi179_var->addIncoming(binop178_var, block40);
	phi179_var->addIncoming(phi141_var, block31);
	
	phi188_var->addIncoming(call183_var, block41);
	phi188_var->addIncoming(load21_var, block3);
	phi188_var->addIncoming(load35_var, block5);
	phi188_var->addIncoming(cast44_var, block7);
	phi188_var->addIncoming(cast53_var, block9);
	phi188_var->addIncoming(cast59_var, block10);
	
	return;
}

void x86::x86_jae(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(4);
	SwitchInst* switch13_var = builder.CreateSwitch(load12_var, block41, 3);
	Constant* switch13_val13_int = ConstantInt::get(types[2], 2u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val13_int), block2);
	Constant* switch13_val14_int = ConstantInt::get(types[2], 1u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val14_int), block3);
	Constant* switch13_val15_int = ConstantInt::get(types[2], 3u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val15_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, gep16_var, types[27]);
	llvm::LoadInst* load18_var = builder.CreateLoad(cast17_var, false);
	load18_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, gep4_val5_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast21_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	Value* cast25_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep26_array { gep4_val4_int, cast21_var, switch13_val14_int, };
	Value* gep26_var = builder.CreateInBoundsGEP(globals[5], gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(16);
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 8u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { load24_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast25_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast21_var, gep4_val5_int, gep4_val5_int, switch13_val14_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(8);
	Value* binop35_var = BinaryOperator::Create(Instruction::Add, load34_var, load24_var, "", builder.GetInsertBlock());
	Constant* cmp36_val36_int = ConstantInt::get(types[0], 4u);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp36_val36_int);
	builder.CreateCondBr(cmp36_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { binop35_var, };
	Value* gep38_var = builder.CreateInBoundsGEP(cast25_var, gep38_array);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, gep38_var, types[28]);
	llvm::LoadInst* load40_var = builder.CreateLoad(cast39_var, false);
	load40_var->setAlignment(4);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast21_var, gep4_val5_int, gep4_val5_int, switch13_val13_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* binop44_var = BinaryOperator::Create(Instruction::Add, load43_var, binop35_var, "", builder.GetInsertBlock());
	SwitchInst* switch45_var = builder.CreateSwitch(load27_var, block10, 2);
	Constant* switch45_val45_int = ConstantInt::get(types[0], 2u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val45_int), block8);
	Constant* switch45_val46_int = ConstantInt::get(types[0], 1u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val46_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { binop44_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast25_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[30]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(2);
	Value* cast50_var = builder.CreateCast(Instruction::ZExt, load49_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep51_array { gep4_val4_int, cast21_var, gep4_val5_int, gep4_val5_int, switch13_val15_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[5], gep51_array);
	llvm::LoadInst* load52_var = builder.CreateLoad(gep51_var, false);
	load52_var->setAlignment(8);
	Value* binop53_var = BinaryOperator::Create(Instruction::Add, load52_var, binop44_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep54_array { binop53_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast25_var, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(1);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep4_val4_int, gep4_val4_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[7], gep58_array);
	CallInst* call57_var = builder.CreateCall(globals[6], gep58_var);
	call57_var->setTailCall();
	call57_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, gep4_val5_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(arg3, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(4);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, gep4_val5_int);
	builder.CreateCondBr(cmp63_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast64_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	ArrayRef<Value*> gep65_array { gep4_val4_int, cast64_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[5], gep65_array);
	llvm::LoadInst* load66_var = builder.CreateLoad(gep65_var, false);
	load66_var->setAlignment(16);
	Value* cast67_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast64_var, switch13_val14_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { load66_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast67_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[27]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { gep4_val4_int, cast64_var, gep4_val5_int, gep4_val5_int, switch13_val14_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[5], gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(8);
	Value* binop76_var = BinaryOperator::Create(Instruction::Add, load75_var, load66_var, "", builder.GetInsertBlock());
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp36_val36_int);
	builder.CreateCondBr(cmp77_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop76_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast67_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[28]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(4);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast64_var, gep4_val5_int, gep4_val5_int, switch13_val13_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop76_var, "", builder.GetInsertBlock());
	SwitchInst* switch85_var = builder.CreateSwitch(load69_var, block19, 2);
	switch85_var->addCase(cast<ConstantInt>(switch45_val45_int), block17);
	switch85_var->addCase(cast<ConstantInt>(switch45_val46_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast67_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[30]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(2);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast64_var, gep4_val5_int, gep4_val5_int, switch13_val15_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(8);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop84_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast67_var, gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(1);
	Value* cast94_var = builder.CreateCast(Instruction::ZExt, load93_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call95_var = builder.CreateCall(globals[6], gep58_var);
	call95_var->setTailCall();
	call95_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi96_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep97_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, switch13_val13_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(arg3, gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(4);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, gep4_val5_int);
	builder.CreateCondBr(cmp99_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	ArrayRef<Value*> gep101_array { gep4_val4_int, cast100_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* cast103_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast100_var, switch13_val14_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { load102_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast103_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[27]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { gep4_val4_int, cast100_var, gep4_val5_int, gep4_val5_int, switch13_val14_int, };
	Value* gep110_var = builder.CreateInBoundsGEP(globals[5], gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(8);
	Value* binop112_var = BinaryOperator::Create(Instruction::Add, load111_var, load102_var, "", builder.GetInsertBlock());
	Value* cmp113_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp36_val36_int);
	builder.CreateCondBr(cmp113_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop112_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast103_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[28]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast100_var, gep4_val5_int, gep4_val5_int, switch13_val13_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(16);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop112_var, "", builder.GetInsertBlock());
	SwitchInst* switch121_var = builder.CreateSwitch(load105_var, block28, 2);
	switch121_var->addCase(cast<ConstantInt>(switch45_val45_int), block26);
	switch121_var->addCase(cast<ConstantInt>(switch45_val46_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast103_var, gep121_array);
	Value* cast122_var = builder.CreateCast(Instruction::BitCast, gep121_var, types[30]);
	llvm::LoadInst* load123_var = builder.CreateLoad(cast122_var, false);
	load123_var->setAlignment(2);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast100_var, gep4_val5_int, gep4_val5_int, switch13_val15_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(8);
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, load126_var, binop120_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep128_array { binop127_var, };
	Value* gep128_var = builder.CreateInBoundsGEP(cast103_var, gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(1);
	Value* cast130_var = builder.CreateCast(Instruction::ZExt, load129_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call131_var = builder.CreateCall(globals[6], gep58_var);
	call131_var->setTailCall();
	call131_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi132_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep133_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, switch13_val15_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(arg3, gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(4);
	Value* cast135_var = builder.CreateCast(Instruction::SExt, load134_var, types[0]);
	Value* binop136_var = BinaryOperator::Create(Instruction::Mul, cast135_var, phi132_var, "", builder.GetInsertBlock());
	Value* binop137_var = BinaryOperator::Create(Instruction::Add, binop136_var, phi96_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi138_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep139_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, switch13_val14_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(arg3, gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(4);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, gep4_val5_int);
	builder.CreateCondBr(cmp141_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast142_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	ArrayRef<Value*> gep143_array { gep4_val4_int, cast142_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* cast145_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast142_var, switch13_val14_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { load144_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast145_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[27]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { gep4_val4_int, cast142_var, gep4_val5_int, gep4_val5_int, switch13_val14_int, };
	Value* gep152_var = builder.CreateInBoundsGEP(globals[5], gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(8);
	Value* binop154_var = BinaryOperator::Create(Instruction::Add, load153_var, load144_var, "", builder.GetInsertBlock());
	Value* cmp155_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp36_val36_int);
	builder.CreateCondBr(cmp155_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop154_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast145_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[28]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(4);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast142_var, gep4_val5_int, gep4_val5_int, switch13_val13_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(16);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop154_var, "", builder.GetInsertBlock());
	SwitchInst* switch163_var = builder.CreateSwitch(load147_var, block38, 2);
	switch163_var->addCase(cast<ConstantInt>(switch45_val45_int), block36);
	switch163_var->addCase(cast<ConstantInt>(switch45_val46_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast145_var, gep163_array);
	Value* cast164_var = builder.CreateCast(Instruction::BitCast, gep163_var, types[30]);
	llvm::LoadInst* load165_var = builder.CreateLoad(cast164_var, false);
	load165_var->setAlignment(2);
	Value* cast166_var = builder.CreateCast(Instruction::ZExt, load165_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast142_var, gep4_val5_int, gep4_val5_int, switch13_val15_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(8);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, binop162_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep170_array { binop169_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast145_var, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call173_var = builder.CreateCall(globals[6], gep58_var);
	call173_var->setTailCall();
	call173_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi174_var = builder.CreatePHI(types[0], 4);
	Value* binop175_var = BinaryOperator::Create(Instruction::Add, phi174_var, phi138_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi176_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep177_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val13_int, };
	Value* gep177_var = builder.CreateInBoundsGEP(arg3, gep177_array);
	llvm::LoadInst* load178_var = builder.CreateLoad(gep177_var, false);
	load178_var->setAlignment(1);
	Value* cast179_var = builder.CreateCast(Instruction::ZExt, load178_var, types[0]);
	CallInst* call180_var = builder.CreateCall2(globals[8], phi176_var, cast179_var);
	call180_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val4_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(globals[10], gep182_array);
	CallInst* call182_var = builder.CreateCall(globals[6], gep182_var);
	call182_var->setTailCall();
	call182_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi185_var = builder.CreatePHI(types[0], 6);
	CallInst* call186_var = builder.CreateCall3(globals[267], arg0, arg1, phi185_var);
	call186_var->setTailCall();
	call186_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi96_var->addIncoming(gep4_val4_int, block11);
	phi96_var->addIncoming(load73_var, block13);
	phi96_var->addIncoming(cast81_var, block15);
	phi96_var->addIncoming(cast88_var, block17);
	phi96_var->addIncoming(cast94_var, block18);
	
	phi132_var->addIncoming(load109_var, block22);
	phi132_var->addIncoming(cast117_var, block24);
	phi132_var->addIncoming(cast124_var, block26);
	phi132_var->addIncoming(cast130_var, block27);
	
	phi138_var->addIncoming(binop137_var, block29);
	phi138_var->addIncoming(phi96_var, block20);
	
	phi174_var->addIncoming(load151_var, block32);
	phi174_var->addIncoming(cast159_var, block34);
	phi174_var->addIncoming(cast166_var, block36);
	phi174_var->addIncoming(cast172_var, block37);
	
	phi176_var->addIncoming(binop175_var, block39);
	phi176_var->addIncoming(phi138_var, block30);
	
	phi185_var->addIncoming(call180_var, block40);
	phi185_var->addIncoming(load18_var, block2);
	phi185_var->addIncoming(load32_var, block4);
	phi185_var->addIncoming(cast41_var, block6);
	phi185_var->addIncoming(cast50_var, block8);
	phi185_var->addIncoming(cast56_var, block9);
	
	return;
}

void x86::x86_jb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block43, block1);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(4);
	SwitchInst* switch13_var = builder.CreateSwitch(load12_var, block41, 3);
	Constant* switch13_val13_int = ConstantInt::get(types[2], 2u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val13_int), block2);
	Constant* switch13_val14_int = ConstantInt::get(types[2], 1u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val14_int), block3);
	Constant* switch13_val15_int = ConstantInt::get(types[2], 3u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val15_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, gep16_var, types[27]);
	llvm::LoadInst* load18_var = builder.CreateLoad(cast17_var, false);
	load18_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, gep4_val5_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast21_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	Value* cast25_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep26_array { gep4_val4_int, cast21_var, switch13_val14_int, };
	Value* gep26_var = builder.CreateInBoundsGEP(globals[5], gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(16);
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 8u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { load24_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast25_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast21_var, gep4_val5_int, gep4_val5_int, switch13_val14_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(8);
	Value* binop35_var = BinaryOperator::Create(Instruction::Add, load34_var, load24_var, "", builder.GetInsertBlock());
	Constant* cmp36_val36_int = ConstantInt::get(types[0], 4u);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp36_val36_int);
	builder.CreateCondBr(cmp36_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { binop35_var, };
	Value* gep38_var = builder.CreateInBoundsGEP(cast25_var, gep38_array);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, gep38_var, types[28]);
	llvm::LoadInst* load40_var = builder.CreateLoad(cast39_var, false);
	load40_var->setAlignment(4);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast21_var, gep4_val5_int, gep4_val5_int, switch13_val13_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* binop44_var = BinaryOperator::Create(Instruction::Add, load43_var, binop35_var, "", builder.GetInsertBlock());
	SwitchInst* switch45_var = builder.CreateSwitch(load27_var, block10, 2);
	Constant* switch45_val45_int = ConstantInt::get(types[0], 2u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val45_int), block8);
	Constant* switch45_val46_int = ConstantInt::get(types[0], 1u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val46_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { binop44_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast25_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[30]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(2);
	Value* cast50_var = builder.CreateCast(Instruction::ZExt, load49_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep51_array { gep4_val4_int, cast21_var, gep4_val5_int, gep4_val5_int, switch13_val15_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[5], gep51_array);
	llvm::LoadInst* load52_var = builder.CreateLoad(gep51_var, false);
	load52_var->setAlignment(8);
	Value* binop53_var = BinaryOperator::Create(Instruction::Add, load52_var, binop44_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep54_array { binop53_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast25_var, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(1);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep4_val4_int, gep4_val4_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[7], gep58_array);
	CallInst* call57_var = builder.CreateCall(globals[6], gep58_var);
	call57_var->setTailCall();
	call57_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, gep4_val5_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(arg3, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(4);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, gep4_val5_int);
	builder.CreateCondBr(cmp63_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast64_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	ArrayRef<Value*> gep65_array { gep4_val4_int, cast64_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[5], gep65_array);
	llvm::LoadInst* load66_var = builder.CreateLoad(gep65_var, false);
	load66_var->setAlignment(16);
	Value* cast67_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast64_var, switch13_val14_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { load66_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast67_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[27]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { gep4_val4_int, cast64_var, gep4_val5_int, gep4_val5_int, switch13_val14_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[5], gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(8);
	Value* binop76_var = BinaryOperator::Create(Instruction::Add, load75_var, load66_var, "", builder.GetInsertBlock());
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp36_val36_int);
	builder.CreateCondBr(cmp77_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop76_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast67_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[28]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(4);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast64_var, gep4_val5_int, gep4_val5_int, switch13_val13_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop76_var, "", builder.GetInsertBlock());
	SwitchInst* switch85_var = builder.CreateSwitch(load69_var, block19, 2);
	switch85_var->addCase(cast<ConstantInt>(switch45_val45_int), block17);
	switch85_var->addCase(cast<ConstantInt>(switch45_val46_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast67_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[30]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(2);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast64_var, gep4_val5_int, gep4_val5_int, switch13_val15_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(8);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop84_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast67_var, gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(1);
	Value* cast94_var = builder.CreateCast(Instruction::ZExt, load93_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call95_var = builder.CreateCall(globals[6], gep58_var);
	call95_var->setTailCall();
	call95_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi96_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep97_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, switch13_val13_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(arg3, gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(4);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, gep4_val5_int);
	builder.CreateCondBr(cmp99_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	ArrayRef<Value*> gep101_array { gep4_val4_int, cast100_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* cast103_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast100_var, switch13_val14_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { load102_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast103_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[27]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { gep4_val4_int, cast100_var, gep4_val5_int, gep4_val5_int, switch13_val14_int, };
	Value* gep110_var = builder.CreateInBoundsGEP(globals[5], gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(8);
	Value* binop112_var = BinaryOperator::Create(Instruction::Add, load111_var, load102_var, "", builder.GetInsertBlock());
	Value* cmp113_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp36_val36_int);
	builder.CreateCondBr(cmp113_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop112_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast103_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[28]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast100_var, gep4_val5_int, gep4_val5_int, switch13_val13_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(16);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop112_var, "", builder.GetInsertBlock());
	SwitchInst* switch121_var = builder.CreateSwitch(load105_var, block28, 2);
	switch121_var->addCase(cast<ConstantInt>(switch45_val45_int), block26);
	switch121_var->addCase(cast<ConstantInt>(switch45_val46_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast103_var, gep121_array);
	Value* cast122_var = builder.CreateCast(Instruction::BitCast, gep121_var, types[30]);
	llvm::LoadInst* load123_var = builder.CreateLoad(cast122_var, false);
	load123_var->setAlignment(2);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast100_var, gep4_val5_int, gep4_val5_int, switch13_val15_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(8);
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, load126_var, binop120_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep128_array { binop127_var, };
	Value* gep128_var = builder.CreateInBoundsGEP(cast103_var, gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(1);
	Value* cast130_var = builder.CreateCast(Instruction::ZExt, load129_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call131_var = builder.CreateCall(globals[6], gep58_var);
	call131_var->setTailCall();
	call131_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi132_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep133_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, switch13_val15_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(arg3, gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(4);
	Value* cast135_var = builder.CreateCast(Instruction::SExt, load134_var, types[0]);
	Value* binop136_var = BinaryOperator::Create(Instruction::Mul, cast135_var, phi132_var, "", builder.GetInsertBlock());
	Value* binop137_var = BinaryOperator::Create(Instruction::Add, binop136_var, phi96_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi138_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep139_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val14_int, gep4_val5_int, switch13_val14_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(arg3, gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(4);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, gep4_val5_int);
	builder.CreateCondBr(cmp141_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast142_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	ArrayRef<Value*> gep143_array { gep4_val4_int, cast142_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* cast145_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast142_var, switch13_val14_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { load144_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast145_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[27]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { gep4_val4_int, cast142_var, gep4_val5_int, gep4_val5_int, switch13_val14_int, };
	Value* gep152_var = builder.CreateInBoundsGEP(globals[5], gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(8);
	Value* binop154_var = BinaryOperator::Create(Instruction::Add, load153_var, load144_var, "", builder.GetInsertBlock());
	Value* cmp155_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp36_val36_int);
	builder.CreateCondBr(cmp155_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop154_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast145_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[28]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(4);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast142_var, gep4_val5_int, gep4_val5_int, switch13_val13_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(16);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop154_var, "", builder.GetInsertBlock());
	SwitchInst* switch163_var = builder.CreateSwitch(load147_var, block38, 2);
	switch163_var->addCase(cast<ConstantInt>(switch45_val45_int), block36);
	switch163_var->addCase(cast<ConstantInt>(switch45_val46_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast145_var, gep163_array);
	Value* cast164_var = builder.CreateCast(Instruction::BitCast, gep163_var, types[30]);
	llvm::LoadInst* load165_var = builder.CreateLoad(cast164_var, false);
	load165_var->setAlignment(2);
	Value* cast166_var = builder.CreateCast(Instruction::ZExt, load165_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast142_var, gep4_val5_int, gep4_val5_int, switch13_val15_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(8);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, binop162_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep170_array { binop169_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast145_var, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call173_var = builder.CreateCall(globals[6], gep58_var);
	call173_var->setTailCall();
	call173_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi174_var = builder.CreatePHI(types[0], 4);
	Value* binop175_var = BinaryOperator::Create(Instruction::Add, phi174_var, phi138_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi176_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep177_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch13_val13_int, };
	Value* gep177_var = builder.CreateInBoundsGEP(arg3, gep177_array);
	llvm::LoadInst* load178_var = builder.CreateLoad(gep177_var, false);
	load178_var->setAlignment(1);
	Value* cast179_var = builder.CreateCast(Instruction::ZExt, load178_var, types[0]);
	CallInst* call180_var = builder.CreateCall2(globals[8], phi176_var, cast179_var);
	call180_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val4_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(globals[10], gep182_array);
	CallInst* call182_var = builder.CreateCall(globals[6], gep182_var);
	call182_var->setTailCall();
	call182_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi185_var = builder.CreatePHI(types[0], 6);
	CallInst* call186_var = builder.CreateCall3(globals[267], arg0, arg1, phi185_var);
	call186_var->setTailCall();
	call186_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi96_var->addIncoming(gep4_val4_int, block11);
	phi96_var->addIncoming(load73_var, block13);
	phi96_var->addIncoming(cast81_var, block15);
	phi96_var->addIncoming(cast88_var, block17);
	phi96_var->addIncoming(cast94_var, block18);
	
	phi132_var->addIncoming(load109_var, block22);
	phi132_var->addIncoming(cast117_var, block24);
	phi132_var->addIncoming(cast124_var, block26);
	phi132_var->addIncoming(cast130_var, block27);
	
	phi138_var->addIncoming(binop137_var, block29);
	phi138_var->addIncoming(phi96_var, block20);
	
	phi174_var->addIncoming(load151_var, block32);
	phi174_var->addIncoming(cast159_var, block34);
	phi174_var->addIncoming(cast166_var, block36);
	phi174_var->addIncoming(cast172_var, block37);
	
	phi176_var->addIncoming(binop175_var, block39);
	phi176_var->addIncoming(phi138_var, block30);
	
	phi185_var->addIncoming(call180_var, block40);
	phi185_var->addIncoming(load18_var, block2);
	phi185_var->addIncoming(load32_var, block4);
	phi185_var->addIncoming(cast41_var, block6);
	phi185_var->addIncoming(cast50_var, block8);
	phi185_var->addIncoming(cast56_var, block9);
	
	return;
}

void x86::x86_jbe(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block2);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg2, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(1);
	Value* cmp13_var = builder.CreateICmp(CmpInst::ICMP_EQ, load12_var, cmp8_val8_int);
	builder.CreateCondBr(cmp13_var, block44, block2);
	
	builder.SetInsertPoint(block2);
	Constant* gep14_val14_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep14_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, gep4_val5_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(arg3, gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(4);
	SwitchInst* switch17_var = builder.CreateSwitch(load16_var, block42, 3);
	Constant* switch17_val17_int = ConstantInt::get(types[2], 2u);
	switch17_var->addCase(cast<ConstantInt>(switch17_val17_int), block3);
	Constant* switch17_val18_int = ConstantInt::get(types[2], 1u);
	switch17_var->addCase(cast<ConstantInt>(switch17_val18_int), block4);
	switch17_var->addCase(cast<ConstantInt>(gep10_val10_int), block12);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(arg3, gep19_array);
	Value* cast20_var = builder.CreateCast(Instruction::BitCast, gep19_var, types[27]);
	llvm::LoadInst* load21_var = builder.CreateLoad(cast20_var, false);
	load21_var->setAlignment(8);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep22_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, gep4_val5_int, };
	Value* gep22_var = builder.CreateGEP(arg3, gep22_array);
	llvm::LoadInst* load23_var = builder.CreateLoad(gep22_var, false);
	load23_var->setAlignment(4);
	Value* cast24_var = builder.CreateCast(Instruction::ZExt, load23_var, types[0]);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast24_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep25_var, false);
	load27_var->setAlignment(16);
	Value* cast28_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast24_var, switch17_val18_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(16);
	Constant* cmp31_val31_int = ConstantInt::get(types[0], 8u);
	Value* cmp31_var = builder.CreateICmp(CmpInst::ICMP_EQ, load30_var, cmp31_val31_int);
	builder.CreateCondBr(cmp31_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { load27_var, };
	Value* gep33_var = builder.CreateInBoundsGEP(cast28_var, gep33_array);
	Value* cast34_var = builder.CreateCast(Instruction::BitCast, gep33_var, types[27]);
	llvm::LoadInst* load35_var = builder.CreateLoad(cast34_var, false);
	load35_var->setAlignment(8);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep36_array { gep4_val4_int, cast24_var, gep4_val5_int, gep4_val5_int, switch17_val18_int, };
	Value* gep36_var = builder.CreateInBoundsGEP(globals[5], gep36_array);
	llvm::LoadInst* load37_var = builder.CreateLoad(gep36_var, false);
	load37_var->setAlignment(8);
	Value* binop38_var = BinaryOperator::Create(Instruction::Add, load37_var, load27_var, "", builder.GetInsertBlock());
	Constant* cmp39_val39_int = ConstantInt::get(types[0], 4u);
	Value* cmp39_var = builder.CreateICmp(CmpInst::ICMP_EQ, load30_var, cmp39_val39_int);
	builder.CreateCondBr(cmp39_var, block7, block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep41_array { binop38_var, };
	Value* gep41_var = builder.CreateInBoundsGEP(cast28_var, gep41_array);
	Value* cast42_var = builder.CreateCast(Instruction::BitCast, gep41_var, types[28]);
	llvm::LoadInst* load43_var = builder.CreateLoad(cast42_var, false);
	load43_var->setAlignment(4);
	Value* cast44_var = builder.CreateCast(Instruction::ZExt, load43_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep45_array { gep4_val4_int, cast24_var, gep4_val5_int, gep4_val5_int, switch17_val17_int, };
	Value* gep45_var = builder.CreateInBoundsGEP(globals[5], gep45_array);
	llvm::LoadInst* load46_var = builder.CreateLoad(gep45_var, false);
	load46_var->setAlignment(16);
	Value* binop47_var = BinaryOperator::Create(Instruction::Add, load46_var, binop38_var, "", builder.GetInsertBlock());
	SwitchInst* switch48_var = builder.CreateSwitch(load30_var, block11, 2);
	Constant* switch48_val48_int = ConstantInt::get(types[0], 2u);
	switch48_var->addCase(cast<ConstantInt>(switch48_val48_int), block9);
	Constant* switch48_val49_int = ConstantInt::get(types[0], 1u);
	switch48_var->addCase(cast<ConstantInt>(switch48_val49_int), block10);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep50_array { binop47_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast28_var, gep50_array);
	Value* cast51_var = builder.CreateCast(Instruction::BitCast, gep50_var, types[30]);
	llvm::LoadInst* load52_var = builder.CreateLoad(cast51_var, false);
	load52_var->setAlignment(2);
	Value* cast53_var = builder.CreateCast(Instruction::ZExt, load52_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep54_array { gep4_val4_int, cast24_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[5], gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(8);
	Value* binop56_var = BinaryOperator::Create(Instruction::Add, load55_var, binop47_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep57_array { binop56_var, };
	Value* gep57_var = builder.CreateInBoundsGEP(cast28_var, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(1);
	Value* cast59_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep4_val4_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[7], gep61_array);
	CallInst* call60_var = builder.CreateCall(globals[6], gep61_var);
	call60_var->setTailCall();
	call60_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep64_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, gep4_val5_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(arg3, gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(4);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, gep4_val5_int);
	builder.CreateCondBr(cmp66_var, block21, block13);
	
	builder.SetInsertPoint(block13);
	Value* cast67_var = builder.CreateCast(Instruction::ZExt, load65_var, types[0]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast67_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cast70_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep71_array { gep4_val4_int, cast67_var, switch17_val18_int, };
	Value* gep71_var = builder.CreateInBoundsGEP(globals[5], gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(16);
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load72_var, cmp31_val31_int);
	builder.CreateCondBr(cmp73_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { load69_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast70_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[27]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(8);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep77_array { gep4_val4_int, cast67_var, gep4_val5_int, gep4_val5_int, switch17_val18_int, };
	Value* gep77_var = builder.CreateInBoundsGEP(globals[5], gep77_array);
	llvm::LoadInst* load78_var = builder.CreateLoad(gep77_var, false);
	load78_var->setAlignment(8);
	Value* binop79_var = BinaryOperator::Create(Instruction::Add, load78_var, load69_var, "", builder.GetInsertBlock());
	Value* cmp80_var = builder.CreateICmp(CmpInst::ICMP_EQ, load72_var, cmp39_val39_int);
	builder.CreateCondBr(cmp80_var, block16, block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { binop79_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast70_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[28]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(4);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast67_var, gep4_val5_int, gep4_val5_int, switch17_val17_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(16);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop79_var, "", builder.GetInsertBlock());
	SwitchInst* switch88_var = builder.CreateSwitch(load72_var, block20, 2);
	switch88_var->addCase(cast<ConstantInt>(switch48_val48_int), block18);
	switch88_var->addCase(cast<ConstantInt>(switch48_val49_int), block19);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast70_var, gep88_array);
	Value* cast89_var = builder.CreateCast(Instruction::BitCast, gep88_var, types[30]);
	llvm::LoadInst* load90_var = builder.CreateLoad(cast89_var, false);
	load90_var->setAlignment(2);
	Value* cast91_var = builder.CreateCast(Instruction::ZExt, load90_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block19);
	ArrayRef<Value*> gep92_array { gep4_val4_int, cast67_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep92_var = builder.CreateInBoundsGEP(globals[5], gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(8);
	Value* binop94_var = BinaryOperator::Create(Instruction::Add, load93_var, binop87_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep95_array { binop94_var, };
	Value* gep95_var = builder.CreateInBoundsGEP(cast70_var, gep95_array);
	llvm::LoadInst* load96_var = builder.CreateLoad(gep95_var, false);
	load96_var->setAlignment(1);
	Value* cast97_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block20);
	CallInst* call98_var = builder.CreateCall(globals[6], gep61_var);
	call98_var->setTailCall();
	call98_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block21);
	PHINode* phi99_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep100_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, switch17_val17_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(arg3, gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(4);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, gep4_val5_int);
	builder.CreateCondBr(cmp102_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast103_var = builder.CreateCast(Instruction::ZExt, load101_var, types[0]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast103_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cast106_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep107_array { gep4_val4_int, cast103_var, switch17_val18_int, };
	Value* gep107_var = builder.CreateInBoundsGEP(globals[5], gep107_array);
	llvm::LoadInst* load108_var = builder.CreateLoad(gep107_var, false);
	load108_var->setAlignment(16);
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load108_var, cmp31_val31_int);
	builder.CreateCondBr(cmp109_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { load105_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast106_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[27]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep113_array { gep4_val4_int, cast103_var, gep4_val5_int, gep4_val5_int, switch17_val18_int, };
	Value* gep113_var = builder.CreateInBoundsGEP(globals[5], gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(8);
	Value* binop115_var = BinaryOperator::Create(Instruction::Add, load114_var, load105_var, "", builder.GetInsertBlock());
	Value* cmp116_var = builder.CreateICmp(CmpInst::ICMP_EQ, load108_var, cmp39_val39_int);
	builder.CreateCondBr(cmp116_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { binop115_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast106_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[28]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(4);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast103_var, gep4_val5_int, gep4_val5_int, switch17_val17_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(16);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop115_var, "", builder.GetInsertBlock());
	SwitchInst* switch124_var = builder.CreateSwitch(load108_var, block29, 2);
	switch124_var->addCase(cast<ConstantInt>(switch48_val48_int), block27);
	switch124_var->addCase(cast<ConstantInt>(switch48_val49_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast106_var, gep124_array);
	Value* cast125_var = builder.CreateCast(Instruction::BitCast, gep124_var, types[30]);
	llvm::LoadInst* load126_var = builder.CreateLoad(cast125_var, false);
	load126_var->setAlignment(2);
	Value* cast127_var = builder.CreateCast(Instruction::ZExt, load126_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast103_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(8);
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, load129_var, binop123_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep131_array { binop130_var, };
	Value* gep131_var = builder.CreateInBoundsGEP(cast106_var, gep131_array);
	llvm::LoadInst* load132_var = builder.CreateLoad(gep131_var, false);
	load132_var->setAlignment(1);
	Value* cast133_var = builder.CreateCast(Instruction::ZExt, load132_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call134_var = builder.CreateCall(globals[6], gep61_var);
	call134_var->setTailCall();
	call134_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi135_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep136_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, gep10_val10_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(arg3, gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(4);
	Value* cast138_var = builder.CreateCast(Instruction::SExt, load137_var, types[0]);
	Value* binop139_var = BinaryOperator::Create(Instruction::Mul, cast138_var, phi135_var, "", builder.GetInsertBlock());
	Value* binop140_var = BinaryOperator::Create(Instruction::Add, binop139_var, phi99_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi141_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep142_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val18_int, gep4_val5_int, switch17_val18_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(arg3, gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(4);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, gep4_val5_int);
	builder.CreateCondBr(cmp144_var, block41, block32);
	
	builder.SetInsertPoint(block32);
	Value* cast145_var = builder.CreateCast(Instruction::ZExt, load143_var, types[0]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast145_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cast148_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep149_array { gep4_val4_int, cast145_var, switch17_val18_int, };
	Value* gep149_var = builder.CreateInBoundsGEP(globals[5], gep149_array);
	llvm::LoadInst* load150_var = builder.CreateLoad(gep149_var, false);
	load150_var->setAlignment(16);
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load150_var, cmp31_val31_int);
	builder.CreateCondBr(cmp151_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { load147_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast148_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[27]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep155_array { gep4_val4_int, cast145_var, gep4_val5_int, gep4_val5_int, switch17_val18_int, };
	Value* gep155_var = builder.CreateInBoundsGEP(globals[5], gep155_array);
	llvm::LoadInst* load156_var = builder.CreateLoad(gep155_var, false);
	load156_var->setAlignment(8);
	Value* binop157_var = BinaryOperator::Create(Instruction::Add, load156_var, load147_var, "", builder.GetInsertBlock());
	Value* cmp158_var = builder.CreateICmp(CmpInst::ICMP_EQ, load150_var, cmp39_val39_int);
	builder.CreateCondBr(cmp158_var, block35, block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep159_array { binop157_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast148_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[28]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(4);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast145_var, gep4_val5_int, gep4_val5_int, switch17_val17_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(16);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop157_var, "", builder.GetInsertBlock());
	SwitchInst* switch166_var = builder.CreateSwitch(load150_var, block39, 2);
	switch166_var->addCase(cast<ConstantInt>(switch48_val48_int), block37);
	switch166_var->addCase(cast<ConstantInt>(switch48_val49_int), block38);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast148_var, gep166_array);
	Value* cast167_var = builder.CreateCast(Instruction::BitCast, gep166_var, types[30]);
	llvm::LoadInst* load168_var = builder.CreateLoad(cast167_var, false);
	load168_var->setAlignment(2);
	Value* cast169_var = builder.CreateCast(Instruction::ZExt, load168_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block38);
	ArrayRef<Value*> gep170_array { gep4_val4_int, cast145_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(globals[5], gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(8);
	Value* binop172_var = BinaryOperator::Create(Instruction::Add, load171_var, binop165_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep173_array { binop172_var, };
	Value* gep173_var = builder.CreateInBoundsGEP(cast148_var, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	CallInst* call176_var = builder.CreateCall(globals[6], gep61_var);
	call176_var->setTailCall();
	call176_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi177_var = builder.CreatePHI(types[0], 4);
	Value* binop178_var = BinaryOperator::Create(Instruction::Add, phi177_var, phi141_var, "", builder.GetInsertBlock());
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block41);
	PHINode* phi179_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep180_array { gep4_val4_int, gep14_val14_int, gep4_val4_int, switch17_val17_int, };
	Value* gep180_var = builder.CreateInBoundsGEP(arg3, gep180_array);
	llvm::LoadInst* load181_var = builder.CreateLoad(gep180_var, false);
	load181_var->setAlignment(1);
	Value* cast182_var = builder.CreateCast(Instruction::ZExt, load181_var, types[0]);
	CallInst* call183_var = builder.CreateCall2(globals[8], phi179_var, cast182_var);
	call183_var->setTailCall();
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep185_array { gep4_val4_int, gep4_val4_int, };
	Value* gep185_var = builder.CreateInBoundsGEP(globals[10], gep185_array);
	CallInst* call185_var = builder.CreateCall(globals[6], gep185_var);
	call185_var->setTailCall();
	call185_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	PHINode* phi188_var = builder.CreatePHI(types[0], 6);
	CallInst* call189_var = builder.CreateCall3(globals[267], arg0, arg1, phi188_var);
	call189_var->setTailCall();
	call189_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block44);
	phi99_var->addIncoming(gep4_val4_int, block12);
	phi99_var->addIncoming(load76_var, block14);
	phi99_var->addIncoming(cast84_var, block16);
	phi99_var->addIncoming(cast91_var, block18);
	phi99_var->addIncoming(cast97_var, block19);
	
	phi135_var->addIncoming(load112_var, block23);
	phi135_var->addIncoming(cast120_var, block25);
	phi135_var->addIncoming(cast127_var, block27);
	phi135_var->addIncoming(cast133_var, block28);
	
	phi141_var->addIncoming(binop140_var, block30);
	phi141_var->addIncoming(phi99_var, block21);
	
	phi177_var->addIncoming(load154_var, block33);
	phi177_var->addIncoming(cast162_var, block35);
	phi177_var->addIncoming(cast169_var, block37);
	phi177_var->addIncoming(cast175_var, block38);
	
	phi179_var->addIncoming(binop178_var, block40);
	phi179_var->addIncoming(phi141_var, block31);
	
	phi188_var->addIncoming(call183_var, block41);
	phi188_var->addIncoming(load21_var, block3);
	phi188_var->addIncoming(load35_var, block5);
	phi188_var->addIncoming(cast44_var, block7);
	phi188_var->addIncoming(cast53_var, block9);
	phi188_var->addIncoming(cast59_var, block10);
	
	return;
}

void x86::x86_jcxz(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Value* cast4_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	Constant* gep5_val5_int = ConstantInt::get(types[0], 0u);
	Constant* gep5_val6_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep5_array { gep5_val5_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(arg1, gep5_array);
	Value* cast8_var = builder.CreateCast(Instruction::BitCast, gep5_var, types[30]);
	llvm::LoadInst* load9_var = builder.CreateLoad(cast8_var, false);
	load9_var->setAlignment(2);
	Constant* cmp10_val10_int = ConstantInt::get(types[29], 0u);
	Value* cmp10_var = builder.CreateICmp(CmpInst::ICMP_EQ, load9_var, cmp10_val10_int);
	builder.CreateCondBr(cmp10_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep12_val12_int = ConstantInt::get(types[2], 15u);
	Constant* gep12_val13_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep12_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, gep12_val13_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg3, gep12_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep12_var, false);
	load15_var->setAlignment(4);
	SwitchInst* switch16_var = builder.CreateSwitch(load15_var, block41, 3);
	Constant* switch16_val16_int = ConstantInt::get(types[2], 2u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val16_int), block2);
	Constant* switch16_val17_int = ConstantInt::get(types[2], 1u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val17_int), block3);
	switch16_var->addCase(cast<ConstantInt>(gep5_val6_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep18_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch16_val17_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(arg3, gep18_array);
	Value* cast19_var = builder.CreateCast(Instruction::BitCast, gep18_var, types[27]);
	llvm::LoadInst* load20_var = builder.CreateLoad(cast19_var, false);
	load20_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep21_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch16_val17_int, gep12_val13_int, gep12_val13_int, };
	Value* gep21_var = builder.CreateGEP(arg3, gep21_array);
	llvm::LoadInst* load22_var = builder.CreateLoad(gep21_var, false);
	load22_var->setAlignment(4);
	Value* cast23_var = builder.CreateCast(Instruction::ZExt, load22_var, types[0]);
	ArrayRef<Value*> gep24_array { gep5_val5_int, cast23_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep24_var = builder.CreateInBoundsGEP(globals[5], gep24_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep24_var, false);
	load26_var->setAlignment(16);
	ArrayRef<Value*> gep27_array { gep5_val5_int, cast23_var, switch16_val17_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load28_var = builder.CreateLoad(gep27_var, false);
	load28_var->setAlignment(16);
	Constant* cmp29_val29_int = ConstantInt::get(types[0], 8u);
	Value* cmp29_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp29_val29_int);
	builder.CreateCondBr(cmp29_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep31_array { load26_var, };
	Value* gep31_var = builder.CreateInBoundsGEP(cast4_var, gep31_array);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, gep31_var, types[27]);
	llvm::LoadInst* load33_var = builder.CreateLoad(cast32_var, false);
	load33_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { gep5_val5_int, cast23_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load35_var = builder.CreateLoad(gep34_var, false);
	load35_var->setAlignment(8);
	Value* binop36_var = BinaryOperator::Create(Instruction::Add, load35_var, load26_var, "", builder.GetInsertBlock());
	Constant* cmp37_val37_int = ConstantInt::get(types[0], 4u);
	Value* cmp37_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp37_val37_int);
	builder.CreateCondBr(cmp37_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep39_array { binop36_var, };
	Value* gep39_var = builder.CreateInBoundsGEP(cast4_var, gep39_array);
	Value* cast40_var = builder.CreateCast(Instruction::BitCast, gep39_var, types[28]);
	llvm::LoadInst* load41_var = builder.CreateLoad(cast40_var, false);
	load41_var->setAlignment(4);
	Value* cast42_var = builder.CreateCast(Instruction::ZExt, load41_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { gep5_val5_int, cast23_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Value* binop45_var = BinaryOperator::Create(Instruction::Add, load44_var, binop36_var, "", builder.GetInsertBlock());
	SwitchInst* switch46_var = builder.CreateSwitch(load28_var, block10, 2);
	Constant* switch46_val46_int = ConstantInt::get(types[0], 2u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val46_int), block8);
	Constant* switch46_val47_int = ConstantInt::get(types[0], 1u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val47_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep48_array { binop45_var, };
	Value* gep48_var = builder.CreateInBoundsGEP(cast4_var, gep48_array);
	Value* cast49_var = builder.CreateCast(Instruction::BitCast, gep48_var, types[30]);
	llvm::LoadInst* load50_var = builder.CreateLoad(cast49_var, false);
	load50_var->setAlignment(2);
	Value* cast51_var = builder.CreateCast(Instruction::ZExt, load50_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep52_array { gep5_val5_int, cast23_var, gep12_val13_int, gep12_val13_int, gep5_val6_int, };
	Value* gep52_var = builder.CreateInBoundsGEP(globals[5], gep52_array);
	llvm::LoadInst* load53_var = builder.CreateLoad(gep52_var, false);
	load53_var->setAlignment(8);
	Value* binop54_var = BinaryOperator::Create(Instruction::Add, load53_var, binop45_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep55_array { binop54_var, };
	Value* gep55_var = builder.CreateInBoundsGEP(cast4_var, gep55_array);
	llvm::LoadInst* load56_var = builder.CreateLoad(gep55_var, false);
	load56_var->setAlignment(1);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep59_array { gep5_val5_int, gep5_val5_int, };
	Value* gep59_var = builder.CreateInBoundsGEP(globals[7], gep59_array);
	CallInst* call58_var = builder.CreateCall(globals[6], gep59_var);
	call58_var->setTailCall();
	call58_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep62_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch16_val17_int, gep12_val13_int, gep12_val13_int, };
	Value* gep62_var = builder.CreateInBoundsGEP(arg3, gep62_array);
	llvm::LoadInst* load63_var = builder.CreateLoad(gep62_var, false);
	load63_var->setAlignment(4);
	Value* cmp64_var = builder.CreateICmp(CmpInst::ICMP_EQ, load63_var, gep12_val13_int);
	builder.CreateCondBr(cmp64_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load63_var, types[0]);
	ArrayRef<Value*> gep66_array { gep5_val5_int, cast65_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(16);
	ArrayRef<Value*> gep68_array { gep5_val5_int, cast65_var, switch16_val17_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp29_val29_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { load67_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast4_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[27]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { gep5_val5_int, cast65_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[5], gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(8);
	Value* binop76_var = BinaryOperator::Create(Instruction::Add, load75_var, load67_var, "", builder.GetInsertBlock());
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp37_val37_int);
	builder.CreateCondBr(cmp77_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop76_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast4_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[28]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(4);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep5_val5_int, cast65_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop76_var, "", builder.GetInsertBlock());
	SwitchInst* switch85_var = builder.CreateSwitch(load69_var, block19, 2);
	switch85_var->addCase(cast<ConstantInt>(switch46_val46_int), block17);
	switch85_var->addCase(cast<ConstantInt>(switch46_val47_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast4_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[30]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(2);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep89_array { gep5_val5_int, cast65_var, gep12_val13_int, gep12_val13_int, gep5_val6_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(8);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop84_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast4_var, gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(1);
	Value* cast94_var = builder.CreateCast(Instruction::ZExt, load93_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call95_var = builder.CreateCall(globals[6], gep59_var);
	call95_var->setTailCall();
	call95_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi96_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep97_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch16_val17_int, gep12_val13_int, switch16_val16_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(arg3, gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(4);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, gep12_val13_int);
	builder.CreateCondBr(cmp99_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	ArrayRef<Value*> gep101_array { gep5_val5_int, cast100_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	ArrayRef<Value*> gep103_array { gep5_val5_int, cast100_var, switch16_val17_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(16);
	Value* cmp105_var = builder.CreateICmp(CmpInst::ICMP_EQ, load104_var, cmp29_val29_int);
	builder.CreateCondBr(cmp105_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep106_array { load102_var, };
	Value* gep106_var = builder.CreateInBoundsGEP(cast4_var, gep106_array);
	Value* cast107_var = builder.CreateCast(Instruction::BitCast, gep106_var, types[27]);
	llvm::LoadInst* load108_var = builder.CreateLoad(cast107_var, false);
	load108_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep109_array { gep5_val5_int, cast100_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep109_var = builder.CreateInBoundsGEP(globals[5], gep109_array);
	llvm::LoadInst* load110_var = builder.CreateLoad(gep109_var, false);
	load110_var->setAlignment(8);
	Value* binop111_var = BinaryOperator::Create(Instruction::Add, load110_var, load102_var, "", builder.GetInsertBlock());
	Value* cmp112_var = builder.CreateICmp(CmpInst::ICMP_EQ, load104_var, cmp37_val37_int);
	builder.CreateCondBr(cmp112_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep113_array { binop111_var, };
	Value* gep113_var = builder.CreateInBoundsGEP(cast4_var, gep113_array);
	Value* cast114_var = builder.CreateCast(Instruction::BitCast, gep113_var, types[28]);
	llvm::LoadInst* load115_var = builder.CreateLoad(cast114_var, false);
	load115_var->setAlignment(4);
	Value* cast116_var = builder.CreateCast(Instruction::ZExt, load115_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { gep5_val5_int, cast100_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep117_var = builder.CreateInBoundsGEP(globals[5], gep117_array);
	llvm::LoadInst* load118_var = builder.CreateLoad(gep117_var, false);
	load118_var->setAlignment(16);
	Value* binop119_var = BinaryOperator::Create(Instruction::Add, load118_var, binop111_var, "", builder.GetInsertBlock());
	SwitchInst* switch120_var = builder.CreateSwitch(load104_var, block28, 2);
	switch120_var->addCase(cast<ConstantInt>(switch46_val46_int), block26);
	switch120_var->addCase(cast<ConstantInt>(switch46_val47_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep120_array { binop119_var, };
	Value* gep120_var = builder.CreateInBoundsGEP(cast4_var, gep120_array);
	Value* cast121_var = builder.CreateCast(Instruction::BitCast, gep120_var, types[30]);
	llvm::LoadInst* load122_var = builder.CreateLoad(cast121_var, false);
	load122_var->setAlignment(2);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep124_array { gep5_val5_int, cast100_var, gep12_val13_int, gep12_val13_int, gep5_val6_int, };
	Value* gep124_var = builder.CreateInBoundsGEP(globals[5], gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(8);
	Value* binop126_var = BinaryOperator::Create(Instruction::Add, load125_var, binop119_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep127_array { binop126_var, };
	Value* gep127_var = builder.CreateInBoundsGEP(cast4_var, gep127_array);
	llvm::LoadInst* load128_var = builder.CreateLoad(gep127_var, false);
	load128_var->setAlignment(1);
	Value* cast129_var = builder.CreateCast(Instruction::ZExt, load128_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call130_var = builder.CreateCall(globals[6], gep59_var);
	call130_var->setTailCall();
	call130_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi131_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep132_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch16_val17_int, gep12_val13_int, gep5_val6_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cast134_var = builder.CreateCast(Instruction::SExt, load133_var, types[0]);
	Value* binop135_var = BinaryOperator::Create(Instruction::Mul, cast134_var, phi131_var, "", builder.GetInsertBlock());
	Value* binop136_var = BinaryOperator::Create(Instruction::Add, binop135_var, phi96_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi137_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep138_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch16_val17_int, gep12_val13_int, switch16_val17_int, };
	Value* gep138_var = builder.CreateInBoundsGEP(arg3, gep138_array);
	llvm::LoadInst* load139_var = builder.CreateLoad(gep138_var, false);
	load139_var->setAlignment(4);
	Value* cmp140_var = builder.CreateICmp(CmpInst::ICMP_EQ, load139_var, gep12_val13_int);
	builder.CreateCondBr(cmp140_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast141_var = builder.CreateCast(Instruction::ZExt, load139_var, types[0]);
	ArrayRef<Value*> gep142_array { gep5_val5_int, cast141_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	ArrayRef<Value*> gep144_array { gep5_val5_int, cast141_var, switch16_val17_int, };
	Value* gep144_var = builder.CreateInBoundsGEP(globals[5], gep144_array);
	llvm::LoadInst* load145_var = builder.CreateLoad(gep144_var, false);
	load145_var->setAlignment(16);
	Value* cmp146_var = builder.CreateICmp(CmpInst::ICMP_EQ, load145_var, cmp29_val29_int);
	builder.CreateCondBr(cmp146_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep147_array { load143_var, };
	Value* gep147_var = builder.CreateInBoundsGEP(cast4_var, gep147_array);
	Value* cast148_var = builder.CreateCast(Instruction::BitCast, gep147_var, types[27]);
	llvm::LoadInst* load149_var = builder.CreateLoad(cast148_var, false);
	load149_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep150_array { gep5_val5_int, cast141_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep150_var = builder.CreateInBoundsGEP(globals[5], gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(8);
	Value* binop152_var = BinaryOperator::Create(Instruction::Add, load151_var, load143_var, "", builder.GetInsertBlock());
	Value* cmp153_var = builder.CreateICmp(CmpInst::ICMP_EQ, load145_var, cmp37_val37_int);
	builder.CreateCondBr(cmp153_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep154_array { binop152_var, };
	Value* gep154_var = builder.CreateInBoundsGEP(cast4_var, gep154_array);
	Value* cast155_var = builder.CreateCast(Instruction::BitCast, gep154_var, types[28]);
	llvm::LoadInst* load156_var = builder.CreateLoad(cast155_var, false);
	load156_var->setAlignment(4);
	Value* cast157_var = builder.CreateCast(Instruction::ZExt, load156_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep158_array { gep5_val5_int, cast141_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep158_var = builder.CreateInBoundsGEP(globals[5], gep158_array);
	llvm::LoadInst* load159_var = builder.CreateLoad(gep158_var, false);
	load159_var->setAlignment(16);
	Value* binop160_var = BinaryOperator::Create(Instruction::Add, load159_var, binop152_var, "", builder.GetInsertBlock());
	SwitchInst* switch161_var = builder.CreateSwitch(load145_var, block38, 2);
	switch161_var->addCase(cast<ConstantInt>(switch46_val46_int), block36);
	switch161_var->addCase(cast<ConstantInt>(switch46_val47_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep161_array { binop160_var, };
	Value* gep161_var = builder.CreateInBoundsGEP(cast4_var, gep161_array);
	Value* cast162_var = builder.CreateCast(Instruction::BitCast, gep161_var, types[30]);
	llvm::LoadInst* load163_var = builder.CreateLoad(cast162_var, false);
	load163_var->setAlignment(2);
	Value* cast164_var = builder.CreateCast(Instruction::ZExt, load163_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep165_array { gep5_val5_int, cast141_var, gep12_val13_int, gep12_val13_int, gep5_val6_int, };
	Value* gep165_var = builder.CreateInBoundsGEP(globals[5], gep165_array);
	llvm::LoadInst* load166_var = builder.CreateLoad(gep165_var, false);
	load166_var->setAlignment(8);
	Value* binop167_var = BinaryOperator::Create(Instruction::Add, load166_var, binop160_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep168_array { binop167_var, };
	Value* gep168_var = builder.CreateInBoundsGEP(cast4_var, gep168_array);
	llvm::LoadInst* load169_var = builder.CreateLoad(gep168_var, false);
	load169_var->setAlignment(1);
	Value* cast170_var = builder.CreateCast(Instruction::ZExt, load169_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call171_var = builder.CreateCall(globals[6], gep59_var);
	call171_var->setTailCall();
	call171_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi172_var = builder.CreatePHI(types[0], 4);
	Value* binop173_var = BinaryOperator::Create(Instruction::Add, phi172_var, phi137_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi174_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep175_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch16_val16_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(arg3, gep175_array);
	llvm::LoadInst* load176_var = builder.CreateLoad(gep175_var, false);
	load176_var->setAlignment(1);
	Value* cast177_var = builder.CreateCast(Instruction::ZExt, load176_var, types[0]);
	CallInst* call178_var = builder.CreateCall2(globals[8], phi174_var, cast177_var);
	call178_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep180_array { gep5_val5_int, gep5_val5_int, };
	Value* gep180_var = builder.CreateInBoundsGEP(globals[10], gep180_array);
	CallInst* call180_var = builder.CreateCall(globals[6], gep180_var);
	call180_var->setTailCall();
	call180_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi183_var = builder.CreatePHI(types[0], 6);
	CallInst* call184_var = builder.CreateCall3(globals[267], arg0, arg1, phi183_var);
	call184_var->setTailCall();
	call184_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi96_var->addIncoming(gep5_val5_int, block11);
	phi96_var->addIncoming(load73_var, block13);
	phi96_var->addIncoming(cast81_var, block15);
	phi96_var->addIncoming(cast88_var, block17);
	phi96_var->addIncoming(cast94_var, block18);
	
	phi131_var->addIncoming(load108_var, block22);
	phi131_var->addIncoming(cast116_var, block24);
	phi131_var->addIncoming(cast123_var, block26);
	phi131_var->addIncoming(cast129_var, block27);
	
	phi137_var->addIncoming(binop136_var, block29);
	phi137_var->addIncoming(phi96_var, block20);
	
	phi172_var->addIncoming(load149_var, block32);
	phi172_var->addIncoming(cast157_var, block34);
	phi172_var->addIncoming(cast164_var, block36);
	phi172_var->addIncoming(cast170_var, block37);
	
	phi174_var->addIncoming(binop173_var, block39);
	phi174_var->addIncoming(phi137_var, block30);
	
	phi183_var->addIncoming(call178_var, block40);
	phi183_var->addIncoming(load20_var, block2);
	phi183_var->addIncoming(load33_var, block4);
	phi183_var->addIncoming(cast42_var, block6);
	phi183_var->addIncoming(cast51_var, block8);
	phi183_var->addIncoming(cast57_var, block9);
	
	return;
}

void x86::x86_je(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block43, block1);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	Constant* gep10_val11_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep10_val11_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep10_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 1u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block3);
	switch14_var->addCase(cast<ConstantInt>(gep4_val5_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, gep16_var, types[27]);
	llvm::LoadInst* load18_var = builder.CreateLoad(cast17_var, false);
	load18_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	Value* cast25_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep26_array { gep4_val4_int, cast21_var, switch14_val15_int, };
	Value* gep26_var = builder.CreateInBoundsGEP(globals[5], gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(16);
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 8u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { load24_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast25_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(8);
	Value* binop35_var = BinaryOperator::Create(Instruction::Add, load34_var, load24_var, "", builder.GetInsertBlock());
	Constant* cmp36_val36_int = ConstantInt::get(types[0], 4u);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp36_val36_int);
	builder.CreateCondBr(cmp36_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { binop35_var, };
	Value* gep38_var = builder.CreateInBoundsGEP(cast25_var, gep38_array);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, gep38_var, types[28]);
	llvm::LoadInst* load40_var = builder.CreateLoad(cast39_var, false);
	load40_var->setAlignment(4);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* binop44_var = BinaryOperator::Create(Instruction::Add, load43_var, binop35_var, "", builder.GetInsertBlock());
	SwitchInst* switch45_var = builder.CreateSwitch(load27_var, block10, 2);
	Constant* switch45_val45_int = ConstantInt::get(types[0], 2u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val45_int), block8);
	Constant* switch45_val46_int = ConstantInt::get(types[0], 1u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val46_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { binop44_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast25_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[30]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(2);
	Value* cast50_var = builder.CreateCast(Instruction::ZExt, load49_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep51_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[5], gep51_array);
	llvm::LoadInst* load52_var = builder.CreateLoad(gep51_var, false);
	load52_var->setAlignment(8);
	Value* binop53_var = BinaryOperator::Create(Instruction::Add, load52_var, binop44_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep54_array { binop53_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast25_var, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(1);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep4_val4_int, gep4_val4_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[7], gep58_array);
	CallInst* call57_var = builder.CreateCall(globals[6], gep58_var);
	call57_var->setTailCall();
	call57_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(arg3, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(4);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, gep10_val11_int);
	builder.CreateCondBr(cmp63_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast64_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	ArrayRef<Value*> gep65_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[5], gep65_array);
	llvm::LoadInst* load66_var = builder.CreateLoad(gep65_var, false);
	load66_var->setAlignment(16);
	Value* cast67_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast64_var, switch14_val15_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { load66_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast67_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[27]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[5], gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(8);
	Value* binop76_var = BinaryOperator::Create(Instruction::Add, load75_var, load66_var, "", builder.GetInsertBlock());
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp36_val36_int);
	builder.CreateCondBr(cmp77_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop76_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast67_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[28]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(4);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop76_var, "", builder.GetInsertBlock());
	SwitchInst* switch85_var = builder.CreateSwitch(load69_var, block19, 2);
	switch85_var->addCase(cast<ConstantInt>(switch45_val45_int), block17);
	switch85_var->addCase(cast<ConstantInt>(switch45_val46_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast67_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[30]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(2);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(8);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop84_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast67_var, gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(1);
	Value* cast94_var = builder.CreateCast(Instruction::ZExt, load93_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call95_var = builder.CreateCall(globals[6], gep58_var);
	call95_var->setTailCall();
	call95_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi96_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep97_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val14_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(arg3, gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(4);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, gep10_val11_int);
	builder.CreateCondBr(cmp99_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	ArrayRef<Value*> gep101_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* cast103_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast100_var, switch14_val15_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { load102_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast103_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[27]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep110_var = builder.CreateInBoundsGEP(globals[5], gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(8);
	Value* binop112_var = BinaryOperator::Create(Instruction::Add, load111_var, load102_var, "", builder.GetInsertBlock());
	Value* cmp113_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp36_val36_int);
	builder.CreateCondBr(cmp113_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop112_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast103_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[28]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(16);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop112_var, "", builder.GetInsertBlock());
	SwitchInst* switch121_var = builder.CreateSwitch(load105_var, block28, 2);
	switch121_var->addCase(cast<ConstantInt>(switch45_val45_int), block26);
	switch121_var->addCase(cast<ConstantInt>(switch45_val46_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast103_var, gep121_array);
	Value* cast122_var = builder.CreateCast(Instruction::BitCast, gep121_var, types[30]);
	llvm::LoadInst* load123_var = builder.CreateLoad(cast122_var, false);
	load123_var->setAlignment(2);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(8);
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, load126_var, binop120_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep128_array { binop127_var, };
	Value* gep128_var = builder.CreateInBoundsGEP(cast103_var, gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(1);
	Value* cast130_var = builder.CreateCast(Instruction::ZExt, load129_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call131_var = builder.CreateCall(globals[6], gep58_var);
	call131_var->setTailCall();
	call131_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi132_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep133_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep4_val5_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(arg3, gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(4);
	Value* cast135_var = builder.CreateCast(Instruction::SExt, load134_var, types[0]);
	Value* binop136_var = BinaryOperator::Create(Instruction::Mul, cast135_var, phi132_var, "", builder.GetInsertBlock());
	Value* binop137_var = BinaryOperator::Create(Instruction::Add, binop136_var, phi96_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi138_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep139_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val15_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(arg3, gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(4);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, gep10_val11_int);
	builder.CreateCondBr(cmp141_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast142_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	ArrayRef<Value*> gep143_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* cast145_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast142_var, switch14_val15_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { load144_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast145_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[27]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep152_var = builder.CreateInBoundsGEP(globals[5], gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(8);
	Value* binop154_var = BinaryOperator::Create(Instruction::Add, load153_var, load144_var, "", builder.GetInsertBlock());
	Value* cmp155_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp36_val36_int);
	builder.CreateCondBr(cmp155_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop154_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast145_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[28]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(4);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(16);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop154_var, "", builder.GetInsertBlock());
	SwitchInst* switch163_var = builder.CreateSwitch(load147_var, block38, 2);
	switch163_var->addCase(cast<ConstantInt>(switch45_val45_int), block36);
	switch163_var->addCase(cast<ConstantInt>(switch45_val46_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast145_var, gep163_array);
	Value* cast164_var = builder.CreateCast(Instruction::BitCast, gep163_var, types[30]);
	llvm::LoadInst* load165_var = builder.CreateLoad(cast164_var, false);
	load165_var->setAlignment(2);
	Value* cast166_var = builder.CreateCast(Instruction::ZExt, load165_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(8);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, binop162_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep170_array { binop169_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast145_var, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call173_var = builder.CreateCall(globals[6], gep58_var);
	call173_var->setTailCall();
	call173_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi174_var = builder.CreatePHI(types[0], 4);
	Value* binop175_var = BinaryOperator::Create(Instruction::Add, phi174_var, phi138_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi176_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep177_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val14_int, };
	Value* gep177_var = builder.CreateInBoundsGEP(arg3, gep177_array);
	llvm::LoadInst* load178_var = builder.CreateLoad(gep177_var, false);
	load178_var->setAlignment(1);
	Value* cast179_var = builder.CreateCast(Instruction::ZExt, load178_var, types[0]);
	CallInst* call180_var = builder.CreateCall2(globals[8], phi176_var, cast179_var);
	call180_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val4_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(globals[10], gep182_array);
	CallInst* call182_var = builder.CreateCall(globals[6], gep182_var);
	call182_var->setTailCall();
	call182_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi185_var = builder.CreatePHI(types[0], 6);
	CallInst* call186_var = builder.CreateCall3(globals[267], arg0, arg1, phi185_var);
	call186_var->setTailCall();
	call186_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi96_var->addIncoming(gep4_val4_int, block11);
	phi96_var->addIncoming(load73_var, block13);
	phi96_var->addIncoming(cast81_var, block15);
	phi96_var->addIncoming(cast88_var, block17);
	phi96_var->addIncoming(cast94_var, block18);
	
	phi132_var->addIncoming(load109_var, block22);
	phi132_var->addIncoming(cast117_var, block24);
	phi132_var->addIncoming(cast124_var, block26);
	phi132_var->addIncoming(cast130_var, block27);
	
	phi138_var->addIncoming(binop137_var, block29);
	phi138_var->addIncoming(phi96_var, block20);
	
	phi174_var->addIncoming(load151_var, block32);
	phi174_var->addIncoming(cast159_var, block34);
	phi174_var->addIncoming(cast166_var, block36);
	phi174_var->addIncoming(cast172_var, block37);
	
	phi176_var->addIncoming(binop175_var, block39);
	phi176_var->addIncoming(phi138_var, block30);
	
	phi185_var->addIncoming(call180_var, block40);
	phi185_var->addIncoming(load18_var, block2);
	phi185_var->addIncoming(load32_var, block4);
	phi185_var->addIncoming(cast41_var, block6);
	phi185_var->addIncoming(cast50_var, block8);
	phi185_var->addIncoming(cast56_var, block9);
	
	return;
}

void x86::x86_jecxz(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Value* cast4_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	Constant* gep5_val5_int = ConstantInt::get(types[0], 0u);
	Constant* gep5_val6_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep5_array { gep5_val5_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(arg1, gep5_array);
	Value* cast8_var = builder.CreateCast(Instruction::BitCast, gep5_var, types[28]);
	llvm::LoadInst* load9_var = builder.CreateLoad(cast8_var, false);
	load9_var->setAlignment(4);
	Constant* cmp10_val10_int = ConstantInt::get(types[2], 0u);
	Value* cmp10_var = builder.CreateICmp(CmpInst::ICMP_EQ, load9_var, cmp10_val10_int);
	builder.CreateCondBr(cmp10_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep12_val12_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep12_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, cmp10_val10_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg3, gep12_array);
	llvm::LoadInst* load14_var = builder.CreateLoad(gep12_var, false);
	load14_var->setAlignment(4);
	SwitchInst* switch15_var = builder.CreateSwitch(load14_var, block41, 3);
	Constant* switch15_val15_int = ConstantInt::get(types[2], 2u);
	switch15_var->addCase(cast<ConstantInt>(switch15_val15_int), block2);
	Constant* switch15_val16_int = ConstantInt::get(types[2], 1u);
	switch15_var->addCase(cast<ConstantInt>(switch15_val16_int), block3);
	switch15_var->addCase(cast<ConstantInt>(gep5_val6_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep17_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch15_val16_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(arg3, gep17_array);
	Value* cast18_var = builder.CreateCast(Instruction::BitCast, gep17_var, types[27]);
	llvm::LoadInst* load19_var = builder.CreateLoad(cast18_var, false);
	load19_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep20_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch15_val16_int, cmp10_val10_int, cmp10_val10_int, };
	Value* gep20_var = builder.CreateGEP(arg3, gep20_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep20_var, false);
	load21_var->setAlignment(4);
	Value* cast22_var = builder.CreateCast(Instruction::ZExt, load21_var, types[0]);
	ArrayRef<Value*> gep23_array { gep5_val5_int, cast22_var, cmp10_val10_int, cmp10_val10_int, cmp10_val10_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep23_var, false);
	load25_var->setAlignment(16);
	ArrayRef<Value*> gep26_array { gep5_val5_int, cast22_var, switch15_val16_int, };
	Value* gep26_var = builder.CreateInBoundsGEP(globals[5], gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(16);
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 8u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { load25_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast4_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { gep5_val5_int, cast22_var, cmp10_val10_int, cmp10_val10_int, switch15_val16_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(8);
	Value* binop35_var = BinaryOperator::Create(Instruction::Add, load34_var, load25_var, "", builder.GetInsertBlock());
	Constant* cmp36_val36_int = ConstantInt::get(types[0], 4u);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp36_val36_int);
	builder.CreateCondBr(cmp36_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { binop35_var, };
	Value* gep38_var = builder.CreateInBoundsGEP(cast4_var, gep38_array);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, gep38_var, types[28]);
	llvm::LoadInst* load40_var = builder.CreateLoad(cast39_var, false);
	load40_var->setAlignment(4);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep42_array { gep5_val5_int, cast22_var, cmp10_val10_int, cmp10_val10_int, switch15_val15_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* binop44_var = BinaryOperator::Create(Instruction::Add, load43_var, binop35_var, "", builder.GetInsertBlock());
	SwitchInst* switch45_var = builder.CreateSwitch(load27_var, block10, 2);
	Constant* switch45_val45_int = ConstantInt::get(types[0], 2u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val45_int), block8);
	Constant* switch45_val46_int = ConstantInt::get(types[0], 1u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val46_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { binop44_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast4_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[30]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(2);
	Value* cast50_var = builder.CreateCast(Instruction::ZExt, load49_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep51_array { gep5_val5_int, cast22_var, cmp10_val10_int, cmp10_val10_int, gep5_val6_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[5], gep51_array);
	llvm::LoadInst* load52_var = builder.CreateLoad(gep51_var, false);
	load52_var->setAlignment(8);
	Value* binop53_var = BinaryOperator::Create(Instruction::Add, load52_var, binop44_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep54_array { binop53_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast4_var, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(1);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep5_val5_int, gep5_val5_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[7], gep58_array);
	CallInst* call57_var = builder.CreateCall(globals[6], gep58_var);
	call57_var->setTailCall();
	call57_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch15_val16_int, cmp10_val10_int, cmp10_val10_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(arg3, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(4);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp10_val10_int);
	builder.CreateCondBr(cmp63_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast64_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	ArrayRef<Value*> gep65_array { gep5_val5_int, cast64_var, cmp10_val10_int, cmp10_val10_int, cmp10_val10_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[5], gep65_array);
	llvm::LoadInst* load66_var = builder.CreateLoad(gep65_var, false);
	load66_var->setAlignment(16);
	ArrayRef<Value*> gep67_array { gep5_val5_int, cast64_var, switch15_val16_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(16);
	Value* cmp69_var = builder.CreateICmp(CmpInst::ICMP_EQ, load68_var, cmp28_val28_int);
	builder.CreateCondBr(cmp69_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep70_array { load66_var, };
	Value* gep70_var = builder.CreateInBoundsGEP(cast4_var, gep70_array);
	Value* cast71_var = builder.CreateCast(Instruction::BitCast, gep70_var, types[27]);
	llvm::LoadInst* load72_var = builder.CreateLoad(cast71_var, false);
	load72_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep73_array { gep5_val5_int, cast64_var, cmp10_val10_int, cmp10_val10_int, switch15_val16_int, };
	Value* gep73_var = builder.CreateInBoundsGEP(globals[5], gep73_array);
	llvm::LoadInst* load74_var = builder.CreateLoad(gep73_var, false);
	load74_var->setAlignment(8);
	Value* binop75_var = BinaryOperator::Create(Instruction::Add, load74_var, load66_var, "", builder.GetInsertBlock());
	Value* cmp76_var = builder.CreateICmp(CmpInst::ICMP_EQ, load68_var, cmp36_val36_int);
	builder.CreateCondBr(cmp76_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep77_array { binop75_var, };
	Value* gep77_var = builder.CreateInBoundsGEP(cast4_var, gep77_array);
	Value* cast78_var = builder.CreateCast(Instruction::BitCast, gep77_var, types[28]);
	llvm::LoadInst* load79_var = builder.CreateLoad(cast78_var, false);
	load79_var->setAlignment(4);
	Value* cast80_var = builder.CreateCast(Instruction::ZExt, load79_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { gep5_val5_int, cast64_var, cmp10_val10_int, cmp10_val10_int, switch15_val15_int, };
	Value* gep81_var = builder.CreateInBoundsGEP(globals[5], gep81_array);
	llvm::LoadInst* load82_var = builder.CreateLoad(gep81_var, false);
	load82_var->setAlignment(16);
	Value* binop83_var = BinaryOperator::Create(Instruction::Add, load82_var, binop75_var, "", builder.GetInsertBlock());
	SwitchInst* switch84_var = builder.CreateSwitch(load68_var, block19, 2);
	switch84_var->addCase(cast<ConstantInt>(switch45_val45_int), block17);
	switch84_var->addCase(cast<ConstantInt>(switch45_val46_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep84_array { binop83_var, };
	Value* gep84_var = builder.CreateInBoundsGEP(cast4_var, gep84_array);
	Value* cast85_var = builder.CreateCast(Instruction::BitCast, gep84_var, types[30]);
	llvm::LoadInst* load86_var = builder.CreateLoad(cast85_var, false);
	load86_var->setAlignment(2);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep88_array { gep5_val5_int, cast64_var, cmp10_val10_int, cmp10_val10_int, gep5_val6_int, };
	Value* gep88_var = builder.CreateInBoundsGEP(globals[5], gep88_array);
	llvm::LoadInst* load89_var = builder.CreateLoad(gep88_var, false);
	load89_var->setAlignment(8);
	Value* binop90_var = BinaryOperator::Create(Instruction::Add, load89_var, binop83_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep91_array { binop90_var, };
	Value* gep91_var = builder.CreateInBoundsGEP(cast4_var, gep91_array);
	llvm::LoadInst* load92_var = builder.CreateLoad(gep91_var, false);
	load92_var->setAlignment(1);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load92_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call94_var = builder.CreateCall(globals[6], gep58_var);
	call94_var->setTailCall();
	call94_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi95_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep96_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch15_val16_int, cmp10_val10_int, switch15_val15_int, };
	Value* gep96_var = builder.CreateInBoundsGEP(arg3, gep96_array);
	llvm::LoadInst* load97_var = builder.CreateLoad(gep96_var, false);
	load97_var->setAlignment(4);
	Value* cmp98_var = builder.CreateICmp(CmpInst::ICMP_EQ, load97_var, cmp10_val10_int);
	builder.CreateCondBr(cmp98_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast99_var = builder.CreateCast(Instruction::ZExt, load97_var, types[0]);
	ArrayRef<Value*> gep100_array { gep5_val5_int, cast99_var, cmp10_val10_int, cmp10_val10_int, cmp10_val10_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	ArrayRef<Value*> gep102_array { gep5_val5_int, cast99_var, switch15_val16_int, };
	Value* gep102_var = builder.CreateInBoundsGEP(globals[5], gep102_array);
	llvm::LoadInst* load103_var = builder.CreateLoad(gep102_var, false);
	load103_var->setAlignment(16);
	Value* cmp104_var = builder.CreateICmp(CmpInst::ICMP_EQ, load103_var, cmp28_val28_int);
	builder.CreateCondBr(cmp104_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep105_array { load101_var, };
	Value* gep105_var = builder.CreateInBoundsGEP(cast4_var, gep105_array);
	Value* cast106_var = builder.CreateCast(Instruction::BitCast, gep105_var, types[27]);
	llvm::LoadInst* load107_var = builder.CreateLoad(cast106_var, false);
	load107_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep108_array { gep5_val5_int, cast99_var, cmp10_val10_int, cmp10_val10_int, switch15_val16_int, };
	Value* gep108_var = builder.CreateInBoundsGEP(globals[5], gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(8);
	Value* binop110_var = BinaryOperator::Create(Instruction::Add, load109_var, load101_var, "", builder.GetInsertBlock());
	Value* cmp111_var = builder.CreateICmp(CmpInst::ICMP_EQ, load103_var, cmp36_val36_int);
	builder.CreateCondBr(cmp111_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep112_array { binop110_var, };
	Value* gep112_var = builder.CreateInBoundsGEP(cast4_var, gep112_array);
	Value* cast113_var = builder.CreateCast(Instruction::BitCast, gep112_var, types[28]);
	llvm::LoadInst* load114_var = builder.CreateLoad(cast113_var, false);
	load114_var->setAlignment(4);
	Value* cast115_var = builder.CreateCast(Instruction::ZExt, load114_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep116_array { gep5_val5_int, cast99_var, cmp10_val10_int, cmp10_val10_int, switch15_val15_int, };
	Value* gep116_var = builder.CreateInBoundsGEP(globals[5], gep116_array);
	llvm::LoadInst* load117_var = builder.CreateLoad(gep116_var, false);
	load117_var->setAlignment(16);
	Value* binop118_var = BinaryOperator::Create(Instruction::Add, load117_var, binop110_var, "", builder.GetInsertBlock());
	SwitchInst* switch119_var = builder.CreateSwitch(load103_var, block28, 2);
	switch119_var->addCase(cast<ConstantInt>(switch45_val45_int), block26);
	switch119_var->addCase(cast<ConstantInt>(switch45_val46_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep119_array { binop118_var, };
	Value* gep119_var = builder.CreateInBoundsGEP(cast4_var, gep119_array);
	Value* cast120_var = builder.CreateCast(Instruction::BitCast, gep119_var, types[30]);
	llvm::LoadInst* load121_var = builder.CreateLoad(cast120_var, false);
	load121_var->setAlignment(2);
	Value* cast122_var = builder.CreateCast(Instruction::ZExt, load121_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep123_array { gep5_val5_int, cast99_var, cmp10_val10_int, cmp10_val10_int, gep5_val6_int, };
	Value* gep123_var = builder.CreateInBoundsGEP(globals[5], gep123_array);
	llvm::LoadInst* load124_var = builder.CreateLoad(gep123_var, false);
	load124_var->setAlignment(8);
	Value* binop125_var = BinaryOperator::Create(Instruction::Add, load124_var, binop118_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep126_array { binop125_var, };
	Value* gep126_var = builder.CreateInBoundsGEP(cast4_var, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(1);
	Value* cast128_var = builder.CreateCast(Instruction::ZExt, load127_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call129_var = builder.CreateCall(globals[6], gep58_var);
	call129_var->setTailCall();
	call129_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi130_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep131_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch15_val16_int, cmp10_val10_int, gep5_val6_int, };
	Value* gep131_var = builder.CreateInBoundsGEP(arg3, gep131_array);
	llvm::LoadInst* load132_var = builder.CreateLoad(gep131_var, false);
	load132_var->setAlignment(4);
	Value* cast133_var = builder.CreateCast(Instruction::SExt, load132_var, types[0]);
	Value* binop134_var = BinaryOperator::Create(Instruction::Mul, cast133_var, phi130_var, "", builder.GetInsertBlock());
	Value* binop135_var = BinaryOperator::Create(Instruction::Add, binop134_var, phi95_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi136_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep137_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch15_val16_int, cmp10_val10_int, switch15_val16_int, };
	Value* gep137_var = builder.CreateInBoundsGEP(arg3, gep137_array);
	llvm::LoadInst* load138_var = builder.CreateLoad(gep137_var, false);
	load138_var->setAlignment(4);
	Value* cmp139_var = builder.CreateICmp(CmpInst::ICMP_EQ, load138_var, cmp10_val10_int);
	builder.CreateCondBr(cmp139_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast140_var = builder.CreateCast(Instruction::ZExt, load138_var, types[0]);
	ArrayRef<Value*> gep141_array { gep5_val5_int, cast140_var, cmp10_val10_int, cmp10_val10_int, cmp10_val10_int, };
	Value* gep141_var = builder.CreateInBoundsGEP(globals[5], gep141_array);
	llvm::LoadInst* load142_var = builder.CreateLoad(gep141_var, false);
	load142_var->setAlignment(16);
	ArrayRef<Value*> gep143_array { gep5_val5_int, cast140_var, switch15_val16_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* cmp145_var = builder.CreateICmp(CmpInst::ICMP_EQ, load144_var, cmp28_val28_int);
	builder.CreateCondBr(cmp145_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep146_array { load142_var, };
	Value* gep146_var = builder.CreateInBoundsGEP(cast4_var, gep146_array);
	Value* cast147_var = builder.CreateCast(Instruction::BitCast, gep146_var, types[27]);
	llvm::LoadInst* load148_var = builder.CreateLoad(cast147_var, false);
	load148_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep149_array { gep5_val5_int, cast140_var, cmp10_val10_int, cmp10_val10_int, switch15_val16_int, };
	Value* gep149_var = builder.CreateInBoundsGEP(globals[5], gep149_array);
	llvm::LoadInst* load150_var = builder.CreateLoad(gep149_var, false);
	load150_var->setAlignment(8);
	Value* binop151_var = BinaryOperator::Create(Instruction::Add, load150_var, load142_var, "", builder.GetInsertBlock());
	Value* cmp152_var = builder.CreateICmp(CmpInst::ICMP_EQ, load144_var, cmp36_val36_int);
	builder.CreateCondBr(cmp152_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep153_array { binop151_var, };
	Value* gep153_var = builder.CreateInBoundsGEP(cast4_var, gep153_array);
	Value* cast154_var = builder.CreateCast(Instruction::BitCast, gep153_var, types[28]);
	llvm::LoadInst* load155_var = builder.CreateLoad(cast154_var, false);
	load155_var->setAlignment(4);
	Value* cast156_var = builder.CreateCast(Instruction::ZExt, load155_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep157_array { gep5_val5_int, cast140_var, cmp10_val10_int, cmp10_val10_int, switch15_val15_int, };
	Value* gep157_var = builder.CreateInBoundsGEP(globals[5], gep157_array);
	llvm::LoadInst* load158_var = builder.CreateLoad(gep157_var, false);
	load158_var->setAlignment(16);
	Value* binop159_var = BinaryOperator::Create(Instruction::Add, load158_var, binop151_var, "", builder.GetInsertBlock());
	SwitchInst* switch160_var = builder.CreateSwitch(load144_var, block38, 2);
	switch160_var->addCase(cast<ConstantInt>(switch45_val45_int), block36);
	switch160_var->addCase(cast<ConstantInt>(switch45_val46_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep160_array { binop159_var, };
	Value* gep160_var = builder.CreateInBoundsGEP(cast4_var, gep160_array);
	Value* cast161_var = builder.CreateCast(Instruction::BitCast, gep160_var, types[30]);
	llvm::LoadInst* load162_var = builder.CreateLoad(cast161_var, false);
	load162_var->setAlignment(2);
	Value* cast163_var = builder.CreateCast(Instruction::ZExt, load162_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep164_array { gep5_val5_int, cast140_var, cmp10_val10_int, cmp10_val10_int, gep5_val6_int, };
	Value* gep164_var = builder.CreateInBoundsGEP(globals[5], gep164_array);
	llvm::LoadInst* load165_var = builder.CreateLoad(gep164_var, false);
	load165_var->setAlignment(8);
	Value* binop166_var = BinaryOperator::Create(Instruction::Add, load165_var, binop159_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep167_array { binop166_var, };
	Value* gep167_var = builder.CreateInBoundsGEP(cast4_var, gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(1);
	Value* cast169_var = builder.CreateCast(Instruction::ZExt, load168_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call170_var = builder.CreateCall(globals[6], gep58_var);
	call170_var->setTailCall();
	call170_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi171_var = builder.CreatePHI(types[0], 4);
	Value* binop172_var = BinaryOperator::Create(Instruction::Add, phi171_var, phi136_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi173_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep174_array { gep5_val5_int, gep12_val12_int, gep5_val5_int, switch15_val15_int, };
	Value* gep174_var = builder.CreateInBoundsGEP(arg3, gep174_array);
	llvm::LoadInst* load175_var = builder.CreateLoad(gep174_var, false);
	load175_var->setAlignment(1);
	Value* cast176_var = builder.CreateCast(Instruction::ZExt, load175_var, types[0]);
	CallInst* call177_var = builder.CreateCall2(globals[8], phi173_var, cast176_var);
	call177_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep179_array { gep5_val5_int, gep5_val5_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(globals[10], gep179_array);
	CallInst* call179_var = builder.CreateCall(globals[6], gep179_var);
	call179_var->setTailCall();
	call179_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi182_var = builder.CreatePHI(types[0], 6);
	CallInst* call183_var = builder.CreateCall3(globals[267], arg0, arg1, phi182_var);
	call183_var->setTailCall();
	call183_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi95_var->addIncoming(gep5_val5_int, block11);
	phi95_var->addIncoming(load72_var, block13);
	phi95_var->addIncoming(cast80_var, block15);
	phi95_var->addIncoming(cast87_var, block17);
	phi95_var->addIncoming(cast93_var, block18);
	
	phi130_var->addIncoming(load107_var, block22);
	phi130_var->addIncoming(cast115_var, block24);
	phi130_var->addIncoming(cast122_var, block26);
	phi130_var->addIncoming(cast128_var, block27);
	
	phi136_var->addIncoming(binop135_var, block29);
	phi136_var->addIncoming(phi95_var, block20);
	
	phi171_var->addIncoming(load148_var, block32);
	phi171_var->addIncoming(cast156_var, block34);
	phi171_var->addIncoming(cast163_var, block36);
	phi171_var->addIncoming(cast169_var, block37);
	
	phi173_var->addIncoming(binop172_var, block39);
	phi173_var->addIncoming(phi136_var, block30);
	
	phi182_var->addIncoming(call177_var, block40);
	phi182_var->addIncoming(load19_var, block2);
	phi182_var->addIncoming(load32_var, block4);
	phi182_var->addIncoming(cast41_var, block6);
	phi182_var->addIncoming(cast50_var, block8);
	phi182_var->addIncoming(cast56_var, block9);
	
	return;
}

void x86::x86_jg(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block44);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg2, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(1);
	Constant* gep13_val13_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep13_val13_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(arg2, gep13_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep13_var, false);
	load15_var->setAlignment(1);
	Value* cmp16_var = builder.CreateICmp(CmpInst::ICMP_EQ, load12_var, load15_var);
	builder.CreateCondBr(cmp16_var, block2, block44);
	
	builder.SetInsertPoint(block2);
	Constant* gep17_val17_int = ConstantInt::get(types[2], 15u);
	Constant* gep17_val18_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, gep17_val18_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(arg3, gep17_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep17_var, false);
	load20_var->setAlignment(4);
	SwitchInst* switch21_var = builder.CreateSwitch(load20_var, block42, 3);
	Constant* switch21_val21_int = ConstantInt::get(types[2], 2u);
	switch21_var->addCase(cast<ConstantInt>(switch21_val21_int), block3);
	Constant* switch21_val22_int = ConstantInt::get(types[2], 1u);
	switch21_var->addCase(cast<ConstantInt>(switch21_val22_int), block4);
	switch21_var->addCase(cast<ConstantInt>(gep4_val5_int), block12);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep23_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(arg3, gep23_array);
	Value* cast24_var = builder.CreateCast(Instruction::BitCast, gep23_var, types[27]);
	llvm::LoadInst* load25_var = builder.CreateLoad(cast24_var, false);
	load25_var->setAlignment(8);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep26_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, gep17_val18_int, };
	Value* gep26_var = builder.CreateGEP(arg3, gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(4);
	Value* cast28_var = builder.CreateCast(Instruction::ZExt, load27_var, types[0]);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast28_var, gep17_val18_int, gep17_val18_int, gep17_val18_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load31_var = builder.CreateLoad(gep29_var, false);
	load31_var->setAlignment(16);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast28_var, switch21_val22_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(16);
	Constant* cmp35_val35_int = ConstantInt::get(types[0], 8u);
	Value* cmp35_var = builder.CreateICmp(CmpInst::ICMP_EQ, load34_var, cmp35_val35_int);
	builder.CreateCondBr(cmp35_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep37_array { load31_var, };
	Value* gep37_var = builder.CreateInBoundsGEP(cast32_var, gep37_array);
	Value* cast38_var = builder.CreateCast(Instruction::BitCast, gep37_var, types[27]);
	llvm::LoadInst* load39_var = builder.CreateLoad(cast38_var, false);
	load39_var->setAlignment(8);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { gep4_val4_int, cast28_var, gep17_val18_int, gep17_val18_int, switch21_val22_int, };
	Value* gep40_var = builder.CreateInBoundsGEP(globals[5], gep40_array);
	llvm::LoadInst* load41_var = builder.CreateLoad(gep40_var, false);
	load41_var->setAlignment(8);
	Value* binop42_var = BinaryOperator::Create(Instruction::Add, load41_var, load31_var, "", builder.GetInsertBlock());
	Constant* cmp43_val43_int = ConstantInt::get(types[0], 4u);
	Value* cmp43_var = builder.CreateICmp(CmpInst::ICMP_EQ, load34_var, cmp43_val43_int);
	builder.CreateCondBr(cmp43_var, block7, block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep45_array { binop42_var, };
	Value* gep45_var = builder.CreateInBoundsGEP(cast32_var, gep45_array);
	Value* cast46_var = builder.CreateCast(Instruction::BitCast, gep45_var, types[28]);
	llvm::LoadInst* load47_var = builder.CreateLoad(cast46_var, false);
	load47_var->setAlignment(4);
	Value* cast48_var = builder.CreateCast(Instruction::ZExt, load47_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep49_array { gep4_val4_int, cast28_var, gep17_val18_int, gep17_val18_int, switch21_val21_int, };
	Value* gep49_var = builder.CreateInBoundsGEP(globals[5], gep49_array);
	llvm::LoadInst* load50_var = builder.CreateLoad(gep49_var, false);
	load50_var->setAlignment(16);
	Value* binop51_var = BinaryOperator::Create(Instruction::Add, load50_var, binop42_var, "", builder.GetInsertBlock());
	SwitchInst* switch52_var = builder.CreateSwitch(load34_var, block11, 2);
	Constant* switch52_val52_int = ConstantInt::get(types[0], 2u);
	switch52_var->addCase(cast<ConstantInt>(switch52_val52_int), block9);
	Constant* switch52_val53_int = ConstantInt::get(types[0], 1u);
	switch52_var->addCase(cast<ConstantInt>(switch52_val53_int), block10);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { binop51_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast32_var, gep54_array);
	Value* cast55_var = builder.CreateCast(Instruction::BitCast, gep54_var, types[30]);
	llvm::LoadInst* load56_var = builder.CreateLoad(cast55_var, false);
	load56_var->setAlignment(2);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast28_var, gep17_val18_int, gep17_val18_int, gep4_val5_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(8);
	Value* binop60_var = BinaryOperator::Create(Instruction::Add, load59_var, binop51_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep61_array { binop60_var, };
	Value* gep61_var = builder.CreateInBoundsGEP(cast32_var, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(1);
	Value* cast63_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep65_array { gep4_val4_int, gep4_val4_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[7], gep65_array);
	CallInst* call64_var = builder.CreateCall(globals[6], gep65_var);
	call64_var->setTailCall();
	call64_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep68_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, gep17_val18_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(arg3, gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(4);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, gep17_val18_int);
	builder.CreateCondBr(cmp70_var, block21, block13);
	
	builder.SetInsertPoint(block13);
	Value* cast71_var = builder.CreateCast(Instruction::ZExt, load69_var, types[0]);
	ArrayRef<Value*> gep72_array { gep4_val4_int, cast71_var, gep17_val18_int, gep17_val18_int, gep17_val18_int, };
	Value* gep72_var = builder.CreateInBoundsGEP(globals[5], gep72_array);
	llvm::LoadInst* load73_var = builder.CreateLoad(gep72_var, false);
	load73_var->setAlignment(16);
	Value* cast74_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast71_var, switch21_val22_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load76_var, cmp35_val35_int);
	builder.CreateCondBr(cmp77_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep78_array { load73_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast74_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[27]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(8);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep81_array { gep4_val4_int, cast71_var, gep17_val18_int, gep17_val18_int, switch21_val22_int, };
	Value* gep81_var = builder.CreateInBoundsGEP(globals[5], gep81_array);
	llvm::LoadInst* load82_var = builder.CreateLoad(gep81_var, false);
	load82_var->setAlignment(8);
	Value* binop83_var = BinaryOperator::Create(Instruction::Add, load82_var, load73_var, "", builder.GetInsertBlock());
	Value* cmp84_var = builder.CreateICmp(CmpInst::ICMP_EQ, load76_var, cmp43_val43_int);
	builder.CreateCondBr(cmp84_var, block16, block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep85_array { binop83_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast74_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[28]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(4);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast71_var, gep17_val18_int, gep17_val18_int, switch21_val21_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(16);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop83_var, "", builder.GetInsertBlock());
	SwitchInst* switch92_var = builder.CreateSwitch(load76_var, block20, 2);
	switch92_var->addCase(cast<ConstantInt>(switch52_val52_int), block18);
	switch92_var->addCase(cast<ConstantInt>(switch52_val53_int), block19);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast74_var, gep92_array);
	Value* cast93_var = builder.CreateCast(Instruction::BitCast, gep92_var, types[30]);
	llvm::LoadInst* load94_var = builder.CreateLoad(cast93_var, false);
	load94_var->setAlignment(2);
	Value* cast95_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block19);
	ArrayRef<Value*> gep96_array { gep4_val4_int, cast71_var, gep17_val18_int, gep17_val18_int, gep4_val5_int, };
	Value* gep96_var = builder.CreateInBoundsGEP(globals[5], gep96_array);
	llvm::LoadInst* load97_var = builder.CreateLoad(gep96_var, false);
	load97_var->setAlignment(8);
	Value* binop98_var = BinaryOperator::Create(Instruction::Add, load97_var, binop91_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep99_array { binop98_var, };
	Value* gep99_var = builder.CreateInBoundsGEP(cast74_var, gep99_array);
	llvm::LoadInst* load100_var = builder.CreateLoad(gep99_var, false);
	load100_var->setAlignment(1);
	Value* cast101_var = builder.CreateCast(Instruction::ZExt, load100_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block20);
	CallInst* call102_var = builder.CreateCall(globals[6], gep65_var);
	call102_var->setTailCall();
	call102_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block21);
	PHINode* phi103_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep104_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, switch21_val21_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(arg3, gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(4);
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, gep17_val18_int);
	builder.CreateCondBr(cmp106_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast107_var = builder.CreateCast(Instruction::ZExt, load105_var, types[0]);
	ArrayRef<Value*> gep108_array { gep4_val4_int, cast107_var, gep17_val18_int, gep17_val18_int, gep17_val18_int, };
	Value* gep108_var = builder.CreateInBoundsGEP(globals[5], gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(16);
	Value* cast110_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast107_var, switch21_val22_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* cmp113_var = builder.CreateICmp(CmpInst::ICMP_EQ, load112_var, cmp35_val35_int);
	builder.CreateCondBr(cmp113_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep114_array { load109_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast110_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[27]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep117_array { gep4_val4_int, cast107_var, gep17_val18_int, gep17_val18_int, switch21_val22_int, };
	Value* gep117_var = builder.CreateInBoundsGEP(globals[5], gep117_array);
	llvm::LoadInst* load118_var = builder.CreateLoad(gep117_var, false);
	load118_var->setAlignment(8);
	Value* binop119_var = BinaryOperator::Create(Instruction::Add, load118_var, load109_var, "", builder.GetInsertBlock());
	Value* cmp120_var = builder.CreateICmp(CmpInst::ICMP_EQ, load112_var, cmp43_val43_int);
	builder.CreateCondBr(cmp120_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep121_array { binop119_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast110_var, gep121_array);
	Value* cast122_var = builder.CreateCast(Instruction::BitCast, gep121_var, types[28]);
	llvm::LoadInst* load123_var = builder.CreateLoad(cast122_var, false);
	load123_var->setAlignment(4);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast107_var, gep17_val18_int, gep17_val18_int, switch21_val21_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(16);
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, load126_var, binop119_var, "", builder.GetInsertBlock());
	SwitchInst* switch128_var = builder.CreateSwitch(load112_var, block29, 2);
	switch128_var->addCase(cast<ConstantInt>(switch52_val52_int), block27);
	switch128_var->addCase(cast<ConstantInt>(switch52_val53_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep128_array { binop127_var, };
	Value* gep128_var = builder.CreateInBoundsGEP(cast110_var, gep128_array);
	Value* cast129_var = builder.CreateCast(Instruction::BitCast, gep128_var, types[30]);
	llvm::LoadInst* load130_var = builder.CreateLoad(cast129_var, false);
	load130_var->setAlignment(2);
	Value* cast131_var = builder.CreateCast(Instruction::ZExt, load130_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep132_array { gep4_val4_int, cast107_var, gep17_val18_int, gep17_val18_int, gep4_val5_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(globals[5], gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(8);
	Value* binop134_var = BinaryOperator::Create(Instruction::Add, load133_var, binop127_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep135_array { binop134_var, };
	Value* gep135_var = builder.CreateInBoundsGEP(cast110_var, gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(1);
	Value* cast137_var = builder.CreateCast(Instruction::ZExt, load136_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call138_var = builder.CreateCall(globals[6], gep65_var);
	call138_var->setTailCall();
	call138_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi139_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep140_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, gep4_val5_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(arg3, gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(4);
	Value* cast142_var = builder.CreateCast(Instruction::SExt, load141_var, types[0]);
	Value* binop143_var = BinaryOperator::Create(Instruction::Mul, cast142_var, phi139_var, "", builder.GetInsertBlock());
	Value* binop144_var = BinaryOperator::Create(Instruction::Add, binop143_var, phi103_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi145_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep146_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, switch21_val22_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(arg3, gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(4);
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, gep17_val18_int);
	builder.CreateCondBr(cmp148_var, block41, block32);
	
	builder.SetInsertPoint(block32);
	Value* cast149_var = builder.CreateCast(Instruction::ZExt, load147_var, types[0]);
	ArrayRef<Value*> gep150_array { gep4_val4_int, cast149_var, gep17_val18_int, gep17_val18_int, gep17_val18_int, };
	Value* gep150_var = builder.CreateInBoundsGEP(globals[5], gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(16);
	Value* cast152_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast149_var, switch21_val22_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* cmp155_var = builder.CreateICmp(CmpInst::ICMP_EQ, load154_var, cmp35_val35_int);
	builder.CreateCondBr(cmp155_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep156_array { load151_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast152_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[27]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep159_array { gep4_val4_int, cast149_var, gep17_val18_int, gep17_val18_int, switch21_val22_int, };
	Value* gep159_var = builder.CreateInBoundsGEP(globals[5], gep159_array);
	llvm::LoadInst* load160_var = builder.CreateLoad(gep159_var, false);
	load160_var->setAlignment(8);
	Value* binop161_var = BinaryOperator::Create(Instruction::Add, load160_var, load151_var, "", builder.GetInsertBlock());
	Value* cmp162_var = builder.CreateICmp(CmpInst::ICMP_EQ, load154_var, cmp43_val43_int);
	builder.CreateCondBr(cmp162_var, block35, block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep163_array { binop161_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast152_var, gep163_array);
	Value* cast164_var = builder.CreateCast(Instruction::BitCast, gep163_var, types[28]);
	llvm::LoadInst* load165_var = builder.CreateLoad(cast164_var, false);
	load165_var->setAlignment(4);
	Value* cast166_var = builder.CreateCast(Instruction::ZExt, load165_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast149_var, gep17_val18_int, gep17_val18_int, switch21_val21_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(16);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, binop161_var, "", builder.GetInsertBlock());
	SwitchInst* switch170_var = builder.CreateSwitch(load154_var, block39, 2);
	switch170_var->addCase(cast<ConstantInt>(switch52_val52_int), block37);
	switch170_var->addCase(cast<ConstantInt>(switch52_val53_int), block38);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep170_array { binop169_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast152_var, gep170_array);
	Value* cast171_var = builder.CreateCast(Instruction::BitCast, gep170_var, types[30]);
	llvm::LoadInst* load172_var = builder.CreateLoad(cast171_var, false);
	load172_var->setAlignment(2);
	Value* cast173_var = builder.CreateCast(Instruction::ZExt, load172_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block38);
	ArrayRef<Value*> gep174_array { gep4_val4_int, cast149_var, gep17_val18_int, gep17_val18_int, gep4_val5_int, };
	Value* gep174_var = builder.CreateInBoundsGEP(globals[5], gep174_array);
	llvm::LoadInst* load175_var = builder.CreateLoad(gep174_var, false);
	load175_var->setAlignment(8);
	Value* binop176_var = BinaryOperator::Create(Instruction::Add, load175_var, binop169_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep177_array { binop176_var, };
	Value* gep177_var = builder.CreateInBoundsGEP(cast152_var, gep177_array);
	llvm::LoadInst* load178_var = builder.CreateLoad(gep177_var, false);
	load178_var->setAlignment(1);
	Value* cast179_var = builder.CreateCast(Instruction::ZExt, load178_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	CallInst* call180_var = builder.CreateCall(globals[6], gep65_var);
	call180_var->setTailCall();
	call180_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi181_var = builder.CreatePHI(types[0], 4);
	Value* binop182_var = BinaryOperator::Create(Instruction::Add, phi181_var, phi145_var, "", builder.GetInsertBlock());
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block41);
	PHINode* phi183_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val21_int, };
	Value* gep184_var = builder.CreateInBoundsGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(1);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	CallInst* call187_var = builder.CreateCall2(globals[8], phi183_var, cast186_var);
	call187_var->setTailCall();
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep189_array { gep4_val4_int, gep4_val4_int, };
	Value* gep189_var = builder.CreateInBoundsGEP(globals[10], gep189_array);
	CallInst* call189_var = builder.CreateCall(globals[6], gep189_var);
	call189_var->setTailCall();
	call189_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	PHINode* phi192_var = builder.CreatePHI(types[0], 6);
	CallInst* call193_var = builder.CreateCall3(globals[267], arg0, arg1, phi192_var);
	call193_var->setTailCall();
	call193_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block44);
	phi103_var->addIncoming(gep4_val4_int, block12);
	phi103_var->addIncoming(load80_var, block14);
	phi103_var->addIncoming(cast88_var, block16);
	phi103_var->addIncoming(cast95_var, block18);
	phi103_var->addIncoming(cast101_var, block19);
	
	phi139_var->addIncoming(load116_var, block23);
	phi139_var->addIncoming(cast124_var, block25);
	phi139_var->addIncoming(cast131_var, block27);
	phi139_var->addIncoming(cast137_var, block28);
	
	phi145_var->addIncoming(binop144_var, block30);
	phi145_var->addIncoming(phi103_var, block21);
	
	phi181_var->addIncoming(load158_var, block33);
	phi181_var->addIncoming(cast166_var, block35);
	phi181_var->addIncoming(cast173_var, block37);
	phi181_var->addIncoming(cast179_var, block38);
	
	phi183_var->addIncoming(binop182_var, block40);
	phi183_var->addIncoming(phi145_var, block31);
	
	phi192_var->addIncoming(call187_var, block41);
	phi192_var->addIncoming(load25_var, block3);
	phi192_var->addIncoming(load39_var, block5);
	phi192_var->addIncoming(cast48_var, block7);
	phi192_var->addIncoming(cast57_var, block9);
	phi192_var->addIncoming(cast63_var, block10);
	
	return;
}

void x86::x86_jge(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* gep8_val8_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep8_array { gep4_val4_int, gep8_val8_int, };
	Value* gep8_var = builder.CreateInBoundsGEP(arg2, gep8_array);
	llvm::LoadInst* load10_var = builder.CreateLoad(gep8_var, false);
	load10_var->setAlignment(1);
	Value* cmp11_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, load10_var);
	builder.CreateCondBr(cmp11_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep12_val12_int = ConstantInt::get(types[2], 15u);
	Constant* gep12_val13_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep12_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, gep12_val13_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg3, gep12_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep12_var, false);
	load15_var->setAlignment(4);
	SwitchInst* switch16_var = builder.CreateSwitch(load15_var, block41, 3);
	Constant* switch16_val16_int = ConstantInt::get(types[2], 2u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val16_int), block2);
	Constant* switch16_val17_int = ConstantInt::get(types[2], 1u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val17_int), block3);
	Constant* switch16_val18_int = ConstantInt::get(types[2], 3u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val18_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(arg3, gep19_array);
	Value* cast20_var = builder.CreateCast(Instruction::BitCast, gep19_var, types[27]);
	llvm::LoadInst* load21_var = builder.CreateLoad(cast20_var, false);
	load21_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep22_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, gep12_val13_int, };
	Value* gep22_var = builder.CreateGEP(arg3, gep22_array);
	llvm::LoadInst* load23_var = builder.CreateLoad(gep22_var, false);
	load23_var->setAlignment(4);
	Value* cast24_var = builder.CreateCast(Instruction::ZExt, load23_var, types[0]);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast24_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep25_var, false);
	load27_var->setAlignment(16);
	Value* cast28_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast24_var, switch16_val17_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(16);
	Constant* cmp31_val31_int = ConstantInt::get(types[0], 8u);
	Value* cmp31_var = builder.CreateICmp(CmpInst::ICMP_EQ, load30_var, cmp31_val31_int);
	builder.CreateCondBr(cmp31_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep33_array { load27_var, };
	Value* gep33_var = builder.CreateInBoundsGEP(cast28_var, gep33_array);
	Value* cast34_var = builder.CreateCast(Instruction::BitCast, gep33_var, types[27]);
	llvm::LoadInst* load35_var = builder.CreateLoad(cast34_var, false);
	load35_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep36_array { gep4_val4_int, cast24_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep36_var = builder.CreateInBoundsGEP(globals[5], gep36_array);
	llvm::LoadInst* load37_var = builder.CreateLoad(gep36_var, false);
	load37_var->setAlignment(8);
	Value* binop38_var = BinaryOperator::Create(Instruction::Add, load37_var, load27_var, "", builder.GetInsertBlock());
	Constant* cmp39_val39_int = ConstantInt::get(types[0], 4u);
	Value* cmp39_var = builder.CreateICmp(CmpInst::ICMP_EQ, load30_var, cmp39_val39_int);
	builder.CreateCondBr(cmp39_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep41_array { binop38_var, };
	Value* gep41_var = builder.CreateInBoundsGEP(cast28_var, gep41_array);
	Value* cast42_var = builder.CreateCast(Instruction::BitCast, gep41_var, types[28]);
	llvm::LoadInst* load43_var = builder.CreateLoad(cast42_var, false);
	load43_var->setAlignment(4);
	Value* cast44_var = builder.CreateCast(Instruction::ZExt, load43_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep45_array { gep4_val4_int, cast24_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep45_var = builder.CreateInBoundsGEP(globals[5], gep45_array);
	llvm::LoadInst* load46_var = builder.CreateLoad(gep45_var, false);
	load46_var->setAlignment(16);
	Value* binop47_var = BinaryOperator::Create(Instruction::Add, load46_var, binop38_var, "", builder.GetInsertBlock());
	SwitchInst* switch48_var = builder.CreateSwitch(load30_var, block10, 2);
	Constant* switch48_val48_int = ConstantInt::get(types[0], 2u);
	switch48_var->addCase(cast<ConstantInt>(switch48_val48_int), block8);
	Constant* switch48_val49_int = ConstantInt::get(types[0], 1u);
	switch48_var->addCase(cast<ConstantInt>(switch48_val49_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep50_array { binop47_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast28_var, gep50_array);
	Value* cast51_var = builder.CreateCast(Instruction::BitCast, gep50_var, types[30]);
	llvm::LoadInst* load52_var = builder.CreateLoad(cast51_var, false);
	load52_var->setAlignment(2);
	Value* cast53_var = builder.CreateCast(Instruction::ZExt, load52_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, cast24_var, gep12_val13_int, gep12_val13_int, switch16_val18_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[5], gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(8);
	Value* binop56_var = BinaryOperator::Create(Instruction::Add, load55_var, binop47_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep57_array { binop56_var, };
	Value* gep57_var = builder.CreateInBoundsGEP(cast28_var, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(1);
	Value* cast59_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep4_val4_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[7], gep61_array);
	CallInst* call60_var = builder.CreateCall(globals[6], gep61_var);
	call60_var->setTailCall();
	call60_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, gep12_val13_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(arg3, gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(4);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, gep12_val13_int);
	builder.CreateCondBr(cmp66_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast67_var = builder.CreateCast(Instruction::ZExt, load65_var, types[0]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast67_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cast70_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep71_array { gep4_val4_int, cast67_var, switch16_val17_int, };
	Value* gep71_var = builder.CreateInBoundsGEP(globals[5], gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(16);
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load72_var, cmp31_val31_int);
	builder.CreateCondBr(cmp73_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep74_array { load69_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast70_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[27]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep77_array { gep4_val4_int, cast67_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep77_var = builder.CreateInBoundsGEP(globals[5], gep77_array);
	llvm::LoadInst* load78_var = builder.CreateLoad(gep77_var, false);
	load78_var->setAlignment(8);
	Value* binop79_var = BinaryOperator::Create(Instruction::Add, load78_var, load69_var, "", builder.GetInsertBlock());
	Value* cmp80_var = builder.CreateICmp(CmpInst::ICMP_EQ, load72_var, cmp39_val39_int);
	builder.CreateCondBr(cmp80_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep81_array { binop79_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast70_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[28]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(4);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast67_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(16);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop79_var, "", builder.GetInsertBlock());
	SwitchInst* switch88_var = builder.CreateSwitch(load72_var, block19, 2);
	switch88_var->addCase(cast<ConstantInt>(switch48_val48_int), block17);
	switch88_var->addCase(cast<ConstantInt>(switch48_val49_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast70_var, gep88_array);
	Value* cast89_var = builder.CreateCast(Instruction::BitCast, gep88_var, types[30]);
	llvm::LoadInst* load90_var = builder.CreateLoad(cast89_var, false);
	load90_var->setAlignment(2);
	Value* cast91_var = builder.CreateCast(Instruction::ZExt, load90_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep92_array { gep4_val4_int, cast67_var, gep12_val13_int, gep12_val13_int, switch16_val18_int, };
	Value* gep92_var = builder.CreateInBoundsGEP(globals[5], gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(8);
	Value* binop94_var = BinaryOperator::Create(Instruction::Add, load93_var, binop87_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep95_array { binop94_var, };
	Value* gep95_var = builder.CreateInBoundsGEP(cast70_var, gep95_array);
	llvm::LoadInst* load96_var = builder.CreateLoad(gep95_var, false);
	load96_var->setAlignment(1);
	Value* cast97_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call98_var = builder.CreateCall(globals[6], gep61_var);
	call98_var->setTailCall();
	call98_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi99_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep100_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, switch16_val16_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(arg3, gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(4);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, gep12_val13_int);
	builder.CreateCondBr(cmp102_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast103_var = builder.CreateCast(Instruction::ZExt, load101_var, types[0]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast103_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cast106_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep107_array { gep4_val4_int, cast103_var, switch16_val17_int, };
	Value* gep107_var = builder.CreateInBoundsGEP(globals[5], gep107_array);
	llvm::LoadInst* load108_var = builder.CreateLoad(gep107_var, false);
	load108_var->setAlignment(16);
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load108_var, cmp31_val31_int);
	builder.CreateCondBr(cmp109_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep110_array { load105_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast106_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[27]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep113_array { gep4_val4_int, cast103_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep113_var = builder.CreateInBoundsGEP(globals[5], gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(8);
	Value* binop115_var = BinaryOperator::Create(Instruction::Add, load114_var, load105_var, "", builder.GetInsertBlock());
	Value* cmp116_var = builder.CreateICmp(CmpInst::ICMP_EQ, load108_var, cmp39_val39_int);
	builder.CreateCondBr(cmp116_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep117_array { binop115_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast106_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[28]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(4);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast103_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(16);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop115_var, "", builder.GetInsertBlock());
	SwitchInst* switch124_var = builder.CreateSwitch(load108_var, block28, 2);
	switch124_var->addCase(cast<ConstantInt>(switch48_val48_int), block26);
	switch124_var->addCase(cast<ConstantInt>(switch48_val49_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast106_var, gep124_array);
	Value* cast125_var = builder.CreateCast(Instruction::BitCast, gep124_var, types[30]);
	llvm::LoadInst* load126_var = builder.CreateLoad(cast125_var, false);
	load126_var->setAlignment(2);
	Value* cast127_var = builder.CreateCast(Instruction::ZExt, load126_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast103_var, gep12_val13_int, gep12_val13_int, switch16_val18_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(8);
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, load129_var, binop123_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep131_array { binop130_var, };
	Value* gep131_var = builder.CreateInBoundsGEP(cast106_var, gep131_array);
	llvm::LoadInst* load132_var = builder.CreateLoad(gep131_var, false);
	load132_var->setAlignment(1);
	Value* cast133_var = builder.CreateCast(Instruction::ZExt, load132_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call134_var = builder.CreateCall(globals[6], gep61_var);
	call134_var->setTailCall();
	call134_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi135_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep136_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, switch16_val18_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(arg3, gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(4);
	Value* cast138_var = builder.CreateCast(Instruction::SExt, load137_var, types[0]);
	Value* binop139_var = BinaryOperator::Create(Instruction::Mul, cast138_var, phi135_var, "", builder.GetInsertBlock());
	Value* binop140_var = BinaryOperator::Create(Instruction::Add, binop139_var, phi99_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi141_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep142_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, switch16_val17_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(arg3, gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(4);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, gep12_val13_int);
	builder.CreateCondBr(cmp144_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast145_var = builder.CreateCast(Instruction::ZExt, load143_var, types[0]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast145_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cast148_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep149_array { gep4_val4_int, cast145_var, switch16_val17_int, };
	Value* gep149_var = builder.CreateInBoundsGEP(globals[5], gep149_array);
	llvm::LoadInst* load150_var = builder.CreateLoad(gep149_var, false);
	load150_var->setAlignment(16);
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load150_var, cmp31_val31_int);
	builder.CreateCondBr(cmp151_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep152_array { load147_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast148_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[27]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep155_array { gep4_val4_int, cast145_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep155_var = builder.CreateInBoundsGEP(globals[5], gep155_array);
	llvm::LoadInst* load156_var = builder.CreateLoad(gep155_var, false);
	load156_var->setAlignment(8);
	Value* binop157_var = BinaryOperator::Create(Instruction::Add, load156_var, load147_var, "", builder.GetInsertBlock());
	Value* cmp158_var = builder.CreateICmp(CmpInst::ICMP_EQ, load150_var, cmp39_val39_int);
	builder.CreateCondBr(cmp158_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep159_array { binop157_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast148_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[28]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(4);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast145_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(16);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop157_var, "", builder.GetInsertBlock());
	SwitchInst* switch166_var = builder.CreateSwitch(load150_var, block38, 2);
	switch166_var->addCase(cast<ConstantInt>(switch48_val48_int), block36);
	switch166_var->addCase(cast<ConstantInt>(switch48_val49_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast148_var, gep166_array);
	Value* cast167_var = builder.CreateCast(Instruction::BitCast, gep166_var, types[30]);
	llvm::LoadInst* load168_var = builder.CreateLoad(cast167_var, false);
	load168_var->setAlignment(2);
	Value* cast169_var = builder.CreateCast(Instruction::ZExt, load168_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep170_array { gep4_val4_int, cast145_var, gep12_val13_int, gep12_val13_int, switch16_val18_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(globals[5], gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(8);
	Value* binop172_var = BinaryOperator::Create(Instruction::Add, load171_var, binop165_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep173_array { binop172_var, };
	Value* gep173_var = builder.CreateInBoundsGEP(cast148_var, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call176_var = builder.CreateCall(globals[6], gep61_var);
	call176_var->setTailCall();
	call176_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi177_var = builder.CreatePHI(types[0], 4);
	Value* binop178_var = BinaryOperator::Create(Instruction::Add, phi177_var, phi141_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi179_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep180_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val16_int, };
	Value* gep180_var = builder.CreateInBoundsGEP(arg3, gep180_array);
	llvm::LoadInst* load181_var = builder.CreateLoad(gep180_var, false);
	load181_var->setAlignment(1);
	Value* cast182_var = builder.CreateCast(Instruction::ZExt, load181_var, types[0]);
	CallInst* call183_var = builder.CreateCall2(globals[8], phi179_var, cast182_var);
	call183_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep185_array { gep4_val4_int, gep4_val4_int, };
	Value* gep185_var = builder.CreateInBoundsGEP(globals[10], gep185_array);
	CallInst* call185_var = builder.CreateCall(globals[6], gep185_var);
	call185_var->setTailCall();
	call185_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi188_var = builder.CreatePHI(types[0], 6);
	CallInst* call189_var = builder.CreateCall3(globals[267], arg0, arg1, phi188_var);
	call189_var->setTailCall();
	call189_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi99_var->addIncoming(gep4_val4_int, block11);
	phi99_var->addIncoming(load76_var, block13);
	phi99_var->addIncoming(cast84_var, block15);
	phi99_var->addIncoming(cast91_var, block17);
	phi99_var->addIncoming(cast97_var, block18);
	
	phi135_var->addIncoming(load112_var, block22);
	phi135_var->addIncoming(cast120_var, block24);
	phi135_var->addIncoming(cast127_var, block26);
	phi135_var->addIncoming(cast133_var, block27);
	
	phi141_var->addIncoming(binop140_var, block29);
	phi141_var->addIncoming(phi99_var, block20);
	
	phi177_var->addIncoming(load154_var, block32);
	phi177_var->addIncoming(cast162_var, block34);
	phi177_var->addIncoming(cast169_var, block36);
	phi177_var->addIncoming(cast175_var, block37);
	
	phi179_var->addIncoming(binop178_var, block39);
	phi179_var->addIncoming(phi141_var, block30);
	
	phi188_var->addIncoming(call183_var, block40);
	phi188_var->addIncoming(load21_var, block2);
	phi188_var->addIncoming(load35_var, block4);
	phi188_var->addIncoming(cast44_var, block6);
	phi188_var->addIncoming(cast53_var, block8);
	phi188_var->addIncoming(cast59_var, block9);
	
	return;
}

void x86::x86_jl(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* gep8_val8_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep8_array { gep4_val4_int, gep8_val8_int, };
	Value* gep8_var = builder.CreateInBoundsGEP(arg2, gep8_array);
	llvm::LoadInst* load10_var = builder.CreateLoad(gep8_var, false);
	load10_var->setAlignment(1);
	Value* cmp11_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, load10_var);
	builder.CreateCondBr(cmp11_var, block43, block1);
	
	builder.SetInsertPoint(block1);
	Constant* gep12_val12_int = ConstantInt::get(types[2], 15u);
	Constant* gep12_val13_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep12_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, gep12_val13_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg3, gep12_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep12_var, false);
	load15_var->setAlignment(4);
	SwitchInst* switch16_var = builder.CreateSwitch(load15_var, block41, 3);
	Constant* switch16_val16_int = ConstantInt::get(types[2], 2u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val16_int), block2);
	Constant* switch16_val17_int = ConstantInt::get(types[2], 1u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val17_int), block3);
	Constant* switch16_val18_int = ConstantInt::get(types[2], 3u);
	switch16_var->addCase(cast<ConstantInt>(switch16_val18_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(arg3, gep19_array);
	Value* cast20_var = builder.CreateCast(Instruction::BitCast, gep19_var, types[27]);
	llvm::LoadInst* load21_var = builder.CreateLoad(cast20_var, false);
	load21_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep22_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, gep12_val13_int, };
	Value* gep22_var = builder.CreateGEP(arg3, gep22_array);
	llvm::LoadInst* load23_var = builder.CreateLoad(gep22_var, false);
	load23_var->setAlignment(4);
	Value* cast24_var = builder.CreateCast(Instruction::ZExt, load23_var, types[0]);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast24_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep25_var, false);
	load27_var->setAlignment(16);
	Value* cast28_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast24_var, switch16_val17_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(16);
	Constant* cmp31_val31_int = ConstantInt::get(types[0], 8u);
	Value* cmp31_var = builder.CreateICmp(CmpInst::ICMP_EQ, load30_var, cmp31_val31_int);
	builder.CreateCondBr(cmp31_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep33_array { load27_var, };
	Value* gep33_var = builder.CreateInBoundsGEP(cast28_var, gep33_array);
	Value* cast34_var = builder.CreateCast(Instruction::BitCast, gep33_var, types[27]);
	llvm::LoadInst* load35_var = builder.CreateLoad(cast34_var, false);
	load35_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep36_array { gep4_val4_int, cast24_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep36_var = builder.CreateInBoundsGEP(globals[5], gep36_array);
	llvm::LoadInst* load37_var = builder.CreateLoad(gep36_var, false);
	load37_var->setAlignment(8);
	Value* binop38_var = BinaryOperator::Create(Instruction::Add, load37_var, load27_var, "", builder.GetInsertBlock());
	Constant* cmp39_val39_int = ConstantInt::get(types[0], 4u);
	Value* cmp39_var = builder.CreateICmp(CmpInst::ICMP_EQ, load30_var, cmp39_val39_int);
	builder.CreateCondBr(cmp39_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep41_array { binop38_var, };
	Value* gep41_var = builder.CreateInBoundsGEP(cast28_var, gep41_array);
	Value* cast42_var = builder.CreateCast(Instruction::BitCast, gep41_var, types[28]);
	llvm::LoadInst* load43_var = builder.CreateLoad(cast42_var, false);
	load43_var->setAlignment(4);
	Value* cast44_var = builder.CreateCast(Instruction::ZExt, load43_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep45_array { gep4_val4_int, cast24_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep45_var = builder.CreateInBoundsGEP(globals[5], gep45_array);
	llvm::LoadInst* load46_var = builder.CreateLoad(gep45_var, false);
	load46_var->setAlignment(16);
	Value* binop47_var = BinaryOperator::Create(Instruction::Add, load46_var, binop38_var, "", builder.GetInsertBlock());
	SwitchInst* switch48_var = builder.CreateSwitch(load30_var, block10, 2);
	Constant* switch48_val48_int = ConstantInt::get(types[0], 2u);
	switch48_var->addCase(cast<ConstantInt>(switch48_val48_int), block8);
	Constant* switch48_val49_int = ConstantInt::get(types[0], 1u);
	switch48_var->addCase(cast<ConstantInt>(switch48_val49_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep50_array { binop47_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast28_var, gep50_array);
	Value* cast51_var = builder.CreateCast(Instruction::BitCast, gep50_var, types[30]);
	llvm::LoadInst* load52_var = builder.CreateLoad(cast51_var, false);
	load52_var->setAlignment(2);
	Value* cast53_var = builder.CreateCast(Instruction::ZExt, load52_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, cast24_var, gep12_val13_int, gep12_val13_int, switch16_val18_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[5], gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(8);
	Value* binop56_var = BinaryOperator::Create(Instruction::Add, load55_var, binop47_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep57_array { binop56_var, };
	Value* gep57_var = builder.CreateInBoundsGEP(cast28_var, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(1);
	Value* cast59_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep4_val4_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[7], gep61_array);
	CallInst* call60_var = builder.CreateCall(globals[6], gep61_var);
	call60_var->setTailCall();
	call60_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, gep12_val13_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(arg3, gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(4);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, gep12_val13_int);
	builder.CreateCondBr(cmp66_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast67_var = builder.CreateCast(Instruction::ZExt, load65_var, types[0]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast67_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cast70_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep71_array { gep4_val4_int, cast67_var, switch16_val17_int, };
	Value* gep71_var = builder.CreateInBoundsGEP(globals[5], gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(16);
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load72_var, cmp31_val31_int);
	builder.CreateCondBr(cmp73_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep74_array { load69_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast70_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[27]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep77_array { gep4_val4_int, cast67_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep77_var = builder.CreateInBoundsGEP(globals[5], gep77_array);
	llvm::LoadInst* load78_var = builder.CreateLoad(gep77_var, false);
	load78_var->setAlignment(8);
	Value* binop79_var = BinaryOperator::Create(Instruction::Add, load78_var, load69_var, "", builder.GetInsertBlock());
	Value* cmp80_var = builder.CreateICmp(CmpInst::ICMP_EQ, load72_var, cmp39_val39_int);
	builder.CreateCondBr(cmp80_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep81_array { binop79_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast70_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[28]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(4);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast67_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(16);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop79_var, "", builder.GetInsertBlock());
	SwitchInst* switch88_var = builder.CreateSwitch(load72_var, block19, 2);
	switch88_var->addCase(cast<ConstantInt>(switch48_val48_int), block17);
	switch88_var->addCase(cast<ConstantInt>(switch48_val49_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast70_var, gep88_array);
	Value* cast89_var = builder.CreateCast(Instruction::BitCast, gep88_var, types[30]);
	llvm::LoadInst* load90_var = builder.CreateLoad(cast89_var, false);
	load90_var->setAlignment(2);
	Value* cast91_var = builder.CreateCast(Instruction::ZExt, load90_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep92_array { gep4_val4_int, cast67_var, gep12_val13_int, gep12_val13_int, switch16_val18_int, };
	Value* gep92_var = builder.CreateInBoundsGEP(globals[5], gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(8);
	Value* binop94_var = BinaryOperator::Create(Instruction::Add, load93_var, binop87_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep95_array { binop94_var, };
	Value* gep95_var = builder.CreateInBoundsGEP(cast70_var, gep95_array);
	llvm::LoadInst* load96_var = builder.CreateLoad(gep95_var, false);
	load96_var->setAlignment(1);
	Value* cast97_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call98_var = builder.CreateCall(globals[6], gep61_var);
	call98_var->setTailCall();
	call98_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi99_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep100_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, switch16_val16_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(arg3, gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(4);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, gep12_val13_int);
	builder.CreateCondBr(cmp102_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast103_var = builder.CreateCast(Instruction::ZExt, load101_var, types[0]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast103_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cast106_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep107_array { gep4_val4_int, cast103_var, switch16_val17_int, };
	Value* gep107_var = builder.CreateInBoundsGEP(globals[5], gep107_array);
	llvm::LoadInst* load108_var = builder.CreateLoad(gep107_var, false);
	load108_var->setAlignment(16);
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load108_var, cmp31_val31_int);
	builder.CreateCondBr(cmp109_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep110_array { load105_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast106_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[27]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep113_array { gep4_val4_int, cast103_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep113_var = builder.CreateInBoundsGEP(globals[5], gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(8);
	Value* binop115_var = BinaryOperator::Create(Instruction::Add, load114_var, load105_var, "", builder.GetInsertBlock());
	Value* cmp116_var = builder.CreateICmp(CmpInst::ICMP_EQ, load108_var, cmp39_val39_int);
	builder.CreateCondBr(cmp116_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep117_array { binop115_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast106_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[28]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(4);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast103_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(16);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop115_var, "", builder.GetInsertBlock());
	SwitchInst* switch124_var = builder.CreateSwitch(load108_var, block28, 2);
	switch124_var->addCase(cast<ConstantInt>(switch48_val48_int), block26);
	switch124_var->addCase(cast<ConstantInt>(switch48_val49_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast106_var, gep124_array);
	Value* cast125_var = builder.CreateCast(Instruction::BitCast, gep124_var, types[30]);
	llvm::LoadInst* load126_var = builder.CreateLoad(cast125_var, false);
	load126_var->setAlignment(2);
	Value* cast127_var = builder.CreateCast(Instruction::ZExt, load126_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast103_var, gep12_val13_int, gep12_val13_int, switch16_val18_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(8);
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, load129_var, binop123_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep131_array { binop130_var, };
	Value* gep131_var = builder.CreateInBoundsGEP(cast106_var, gep131_array);
	llvm::LoadInst* load132_var = builder.CreateLoad(gep131_var, false);
	load132_var->setAlignment(1);
	Value* cast133_var = builder.CreateCast(Instruction::ZExt, load132_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call134_var = builder.CreateCall(globals[6], gep61_var);
	call134_var->setTailCall();
	call134_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi135_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep136_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, switch16_val18_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(arg3, gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(4);
	Value* cast138_var = builder.CreateCast(Instruction::SExt, load137_var, types[0]);
	Value* binop139_var = BinaryOperator::Create(Instruction::Mul, cast138_var, phi135_var, "", builder.GetInsertBlock());
	Value* binop140_var = BinaryOperator::Create(Instruction::Add, binop139_var, phi99_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi141_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep142_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val17_int, gep12_val13_int, switch16_val17_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(arg3, gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(4);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, gep12_val13_int);
	builder.CreateCondBr(cmp144_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast145_var = builder.CreateCast(Instruction::ZExt, load143_var, types[0]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast145_var, gep12_val13_int, gep12_val13_int, gep12_val13_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cast148_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep149_array { gep4_val4_int, cast145_var, switch16_val17_int, };
	Value* gep149_var = builder.CreateInBoundsGEP(globals[5], gep149_array);
	llvm::LoadInst* load150_var = builder.CreateLoad(gep149_var, false);
	load150_var->setAlignment(16);
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load150_var, cmp31_val31_int);
	builder.CreateCondBr(cmp151_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep152_array { load147_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast148_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[27]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep155_array { gep4_val4_int, cast145_var, gep12_val13_int, gep12_val13_int, switch16_val17_int, };
	Value* gep155_var = builder.CreateInBoundsGEP(globals[5], gep155_array);
	llvm::LoadInst* load156_var = builder.CreateLoad(gep155_var, false);
	load156_var->setAlignment(8);
	Value* binop157_var = BinaryOperator::Create(Instruction::Add, load156_var, load147_var, "", builder.GetInsertBlock());
	Value* cmp158_var = builder.CreateICmp(CmpInst::ICMP_EQ, load150_var, cmp39_val39_int);
	builder.CreateCondBr(cmp158_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep159_array { binop157_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast148_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[28]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(4);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast145_var, gep12_val13_int, gep12_val13_int, switch16_val16_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(16);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop157_var, "", builder.GetInsertBlock());
	SwitchInst* switch166_var = builder.CreateSwitch(load150_var, block38, 2);
	switch166_var->addCase(cast<ConstantInt>(switch48_val48_int), block36);
	switch166_var->addCase(cast<ConstantInt>(switch48_val49_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast148_var, gep166_array);
	Value* cast167_var = builder.CreateCast(Instruction::BitCast, gep166_var, types[30]);
	llvm::LoadInst* load168_var = builder.CreateLoad(cast167_var, false);
	load168_var->setAlignment(2);
	Value* cast169_var = builder.CreateCast(Instruction::ZExt, load168_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep170_array { gep4_val4_int, cast145_var, gep12_val13_int, gep12_val13_int, switch16_val18_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(globals[5], gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(8);
	Value* binop172_var = BinaryOperator::Create(Instruction::Add, load171_var, binop165_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep173_array { binop172_var, };
	Value* gep173_var = builder.CreateInBoundsGEP(cast148_var, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call176_var = builder.CreateCall(globals[6], gep61_var);
	call176_var->setTailCall();
	call176_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi177_var = builder.CreatePHI(types[0], 4);
	Value* binop178_var = BinaryOperator::Create(Instruction::Add, phi177_var, phi141_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi179_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep180_array { gep4_val4_int, gep12_val12_int, gep4_val4_int, switch16_val16_int, };
	Value* gep180_var = builder.CreateInBoundsGEP(arg3, gep180_array);
	llvm::LoadInst* load181_var = builder.CreateLoad(gep180_var, false);
	load181_var->setAlignment(1);
	Value* cast182_var = builder.CreateCast(Instruction::ZExt, load181_var, types[0]);
	CallInst* call183_var = builder.CreateCall2(globals[8], phi179_var, cast182_var);
	call183_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep185_array { gep4_val4_int, gep4_val4_int, };
	Value* gep185_var = builder.CreateInBoundsGEP(globals[10], gep185_array);
	CallInst* call185_var = builder.CreateCall(globals[6], gep185_var);
	call185_var->setTailCall();
	call185_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi188_var = builder.CreatePHI(types[0], 6);
	CallInst* call189_var = builder.CreateCall3(globals[267], arg0, arg1, phi188_var);
	call189_var->setTailCall();
	call189_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi99_var->addIncoming(gep4_val4_int, block11);
	phi99_var->addIncoming(load76_var, block13);
	phi99_var->addIncoming(cast84_var, block15);
	phi99_var->addIncoming(cast91_var, block17);
	phi99_var->addIncoming(cast97_var, block18);
	
	phi135_var->addIncoming(load112_var, block22);
	phi135_var->addIncoming(cast120_var, block24);
	phi135_var->addIncoming(cast127_var, block26);
	phi135_var->addIncoming(cast133_var, block27);
	
	phi141_var->addIncoming(binop140_var, block29);
	phi141_var->addIncoming(phi99_var, block20);
	
	phi177_var->addIncoming(load154_var, block32);
	phi177_var->addIncoming(cast162_var, block34);
	phi177_var->addIncoming(cast169_var, block36);
	phi177_var->addIncoming(cast175_var, block37);
	
	phi179_var->addIncoming(binop178_var, block39);
	phi179_var->addIncoming(phi141_var, block30);
	
	phi188_var->addIncoming(call183_var, block40);
	phi188_var->addIncoming(load21_var, block2);
	phi188_var->addIncoming(load35_var, block4);
	phi188_var->addIncoming(cast44_var, block6);
	phi188_var->addIncoming(cast53_var, block8);
	phi188_var->addIncoming(cast59_var, block9);
	
	return;
}

void x86::x86_jle(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block2);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg2, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(1);
	Constant* gep13_val13_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep13_val13_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(arg2, gep13_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep13_var, false);
	load15_var->setAlignment(1);
	Value* cmp16_var = builder.CreateICmp(CmpInst::ICMP_EQ, load12_var, load15_var);
	builder.CreateCondBr(cmp16_var, block44, block2);
	
	builder.SetInsertPoint(block2);
	Constant* gep17_val17_int = ConstantInt::get(types[2], 15u);
	Constant* gep17_val18_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, gep17_val18_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(arg3, gep17_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep17_var, false);
	load20_var->setAlignment(4);
	SwitchInst* switch21_var = builder.CreateSwitch(load20_var, block42, 3);
	Constant* switch21_val21_int = ConstantInt::get(types[2], 2u);
	switch21_var->addCase(cast<ConstantInt>(switch21_val21_int), block3);
	Constant* switch21_val22_int = ConstantInt::get(types[2], 1u);
	switch21_var->addCase(cast<ConstantInt>(switch21_val22_int), block4);
	switch21_var->addCase(cast<ConstantInt>(gep4_val5_int), block12);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep23_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(arg3, gep23_array);
	Value* cast24_var = builder.CreateCast(Instruction::BitCast, gep23_var, types[27]);
	llvm::LoadInst* load25_var = builder.CreateLoad(cast24_var, false);
	load25_var->setAlignment(8);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep26_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, gep17_val18_int, };
	Value* gep26_var = builder.CreateGEP(arg3, gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(4);
	Value* cast28_var = builder.CreateCast(Instruction::ZExt, load27_var, types[0]);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast28_var, gep17_val18_int, gep17_val18_int, gep17_val18_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load31_var = builder.CreateLoad(gep29_var, false);
	load31_var->setAlignment(16);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast28_var, switch21_val22_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(16);
	Constant* cmp35_val35_int = ConstantInt::get(types[0], 8u);
	Value* cmp35_var = builder.CreateICmp(CmpInst::ICMP_EQ, load34_var, cmp35_val35_int);
	builder.CreateCondBr(cmp35_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep37_array { load31_var, };
	Value* gep37_var = builder.CreateInBoundsGEP(cast32_var, gep37_array);
	Value* cast38_var = builder.CreateCast(Instruction::BitCast, gep37_var, types[27]);
	llvm::LoadInst* load39_var = builder.CreateLoad(cast38_var, false);
	load39_var->setAlignment(8);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { gep4_val4_int, cast28_var, gep17_val18_int, gep17_val18_int, switch21_val22_int, };
	Value* gep40_var = builder.CreateInBoundsGEP(globals[5], gep40_array);
	llvm::LoadInst* load41_var = builder.CreateLoad(gep40_var, false);
	load41_var->setAlignment(8);
	Value* binop42_var = BinaryOperator::Create(Instruction::Add, load41_var, load31_var, "", builder.GetInsertBlock());
	Constant* cmp43_val43_int = ConstantInt::get(types[0], 4u);
	Value* cmp43_var = builder.CreateICmp(CmpInst::ICMP_EQ, load34_var, cmp43_val43_int);
	builder.CreateCondBr(cmp43_var, block7, block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep45_array { binop42_var, };
	Value* gep45_var = builder.CreateInBoundsGEP(cast32_var, gep45_array);
	Value* cast46_var = builder.CreateCast(Instruction::BitCast, gep45_var, types[28]);
	llvm::LoadInst* load47_var = builder.CreateLoad(cast46_var, false);
	load47_var->setAlignment(4);
	Value* cast48_var = builder.CreateCast(Instruction::ZExt, load47_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep49_array { gep4_val4_int, cast28_var, gep17_val18_int, gep17_val18_int, switch21_val21_int, };
	Value* gep49_var = builder.CreateInBoundsGEP(globals[5], gep49_array);
	llvm::LoadInst* load50_var = builder.CreateLoad(gep49_var, false);
	load50_var->setAlignment(16);
	Value* binop51_var = BinaryOperator::Create(Instruction::Add, load50_var, binop42_var, "", builder.GetInsertBlock());
	SwitchInst* switch52_var = builder.CreateSwitch(load34_var, block11, 2);
	Constant* switch52_val52_int = ConstantInt::get(types[0], 2u);
	switch52_var->addCase(cast<ConstantInt>(switch52_val52_int), block9);
	Constant* switch52_val53_int = ConstantInt::get(types[0], 1u);
	switch52_var->addCase(cast<ConstantInt>(switch52_val53_int), block10);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { binop51_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast32_var, gep54_array);
	Value* cast55_var = builder.CreateCast(Instruction::BitCast, gep54_var, types[30]);
	llvm::LoadInst* load56_var = builder.CreateLoad(cast55_var, false);
	load56_var->setAlignment(2);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast28_var, gep17_val18_int, gep17_val18_int, gep4_val5_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(8);
	Value* binop60_var = BinaryOperator::Create(Instruction::Add, load59_var, binop51_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep61_array { binop60_var, };
	Value* gep61_var = builder.CreateInBoundsGEP(cast32_var, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(1);
	Value* cast63_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep65_array { gep4_val4_int, gep4_val4_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[7], gep65_array);
	CallInst* call64_var = builder.CreateCall(globals[6], gep65_var);
	call64_var->setTailCall();
	call64_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep68_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, gep17_val18_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(arg3, gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(4);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, gep17_val18_int);
	builder.CreateCondBr(cmp70_var, block21, block13);
	
	builder.SetInsertPoint(block13);
	Value* cast71_var = builder.CreateCast(Instruction::ZExt, load69_var, types[0]);
	ArrayRef<Value*> gep72_array { gep4_val4_int, cast71_var, gep17_val18_int, gep17_val18_int, gep17_val18_int, };
	Value* gep72_var = builder.CreateInBoundsGEP(globals[5], gep72_array);
	llvm::LoadInst* load73_var = builder.CreateLoad(gep72_var, false);
	load73_var->setAlignment(16);
	Value* cast74_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast71_var, switch21_val22_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load76_var, cmp35_val35_int);
	builder.CreateCondBr(cmp77_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep78_array { load73_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast74_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[27]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(8);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep81_array { gep4_val4_int, cast71_var, gep17_val18_int, gep17_val18_int, switch21_val22_int, };
	Value* gep81_var = builder.CreateInBoundsGEP(globals[5], gep81_array);
	llvm::LoadInst* load82_var = builder.CreateLoad(gep81_var, false);
	load82_var->setAlignment(8);
	Value* binop83_var = BinaryOperator::Create(Instruction::Add, load82_var, load73_var, "", builder.GetInsertBlock());
	Value* cmp84_var = builder.CreateICmp(CmpInst::ICMP_EQ, load76_var, cmp43_val43_int);
	builder.CreateCondBr(cmp84_var, block16, block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep85_array { binop83_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast74_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[28]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(4);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast71_var, gep17_val18_int, gep17_val18_int, switch21_val21_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(16);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop83_var, "", builder.GetInsertBlock());
	SwitchInst* switch92_var = builder.CreateSwitch(load76_var, block20, 2);
	switch92_var->addCase(cast<ConstantInt>(switch52_val52_int), block18);
	switch92_var->addCase(cast<ConstantInt>(switch52_val53_int), block19);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast74_var, gep92_array);
	Value* cast93_var = builder.CreateCast(Instruction::BitCast, gep92_var, types[30]);
	llvm::LoadInst* load94_var = builder.CreateLoad(cast93_var, false);
	load94_var->setAlignment(2);
	Value* cast95_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block19);
	ArrayRef<Value*> gep96_array { gep4_val4_int, cast71_var, gep17_val18_int, gep17_val18_int, gep4_val5_int, };
	Value* gep96_var = builder.CreateInBoundsGEP(globals[5], gep96_array);
	llvm::LoadInst* load97_var = builder.CreateLoad(gep96_var, false);
	load97_var->setAlignment(8);
	Value* binop98_var = BinaryOperator::Create(Instruction::Add, load97_var, binop91_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep99_array { binop98_var, };
	Value* gep99_var = builder.CreateInBoundsGEP(cast74_var, gep99_array);
	llvm::LoadInst* load100_var = builder.CreateLoad(gep99_var, false);
	load100_var->setAlignment(1);
	Value* cast101_var = builder.CreateCast(Instruction::ZExt, load100_var, types[0]);
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block20);
	CallInst* call102_var = builder.CreateCall(globals[6], gep65_var);
	call102_var->setTailCall();
	call102_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block21);
	PHINode* phi103_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep104_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, switch21_val21_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(arg3, gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(4);
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, gep17_val18_int);
	builder.CreateCondBr(cmp106_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast107_var = builder.CreateCast(Instruction::ZExt, load105_var, types[0]);
	ArrayRef<Value*> gep108_array { gep4_val4_int, cast107_var, gep17_val18_int, gep17_val18_int, gep17_val18_int, };
	Value* gep108_var = builder.CreateInBoundsGEP(globals[5], gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(16);
	Value* cast110_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast107_var, switch21_val22_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* cmp113_var = builder.CreateICmp(CmpInst::ICMP_EQ, load112_var, cmp35_val35_int);
	builder.CreateCondBr(cmp113_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep114_array { load109_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast110_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[27]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep117_array { gep4_val4_int, cast107_var, gep17_val18_int, gep17_val18_int, switch21_val22_int, };
	Value* gep117_var = builder.CreateInBoundsGEP(globals[5], gep117_array);
	llvm::LoadInst* load118_var = builder.CreateLoad(gep117_var, false);
	load118_var->setAlignment(8);
	Value* binop119_var = BinaryOperator::Create(Instruction::Add, load118_var, load109_var, "", builder.GetInsertBlock());
	Value* cmp120_var = builder.CreateICmp(CmpInst::ICMP_EQ, load112_var, cmp43_val43_int);
	builder.CreateCondBr(cmp120_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep121_array { binop119_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast110_var, gep121_array);
	Value* cast122_var = builder.CreateCast(Instruction::BitCast, gep121_var, types[28]);
	llvm::LoadInst* load123_var = builder.CreateLoad(cast122_var, false);
	load123_var->setAlignment(4);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast107_var, gep17_val18_int, gep17_val18_int, switch21_val21_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(16);
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, load126_var, binop119_var, "", builder.GetInsertBlock());
	SwitchInst* switch128_var = builder.CreateSwitch(load112_var, block29, 2);
	switch128_var->addCase(cast<ConstantInt>(switch52_val52_int), block27);
	switch128_var->addCase(cast<ConstantInt>(switch52_val53_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep128_array { binop127_var, };
	Value* gep128_var = builder.CreateInBoundsGEP(cast110_var, gep128_array);
	Value* cast129_var = builder.CreateCast(Instruction::BitCast, gep128_var, types[30]);
	llvm::LoadInst* load130_var = builder.CreateLoad(cast129_var, false);
	load130_var->setAlignment(2);
	Value* cast131_var = builder.CreateCast(Instruction::ZExt, load130_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep132_array { gep4_val4_int, cast107_var, gep17_val18_int, gep17_val18_int, gep4_val5_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(globals[5], gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(8);
	Value* binop134_var = BinaryOperator::Create(Instruction::Add, load133_var, binop127_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep135_array { binop134_var, };
	Value* gep135_var = builder.CreateInBoundsGEP(cast110_var, gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(1);
	Value* cast137_var = builder.CreateCast(Instruction::ZExt, load136_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call138_var = builder.CreateCall(globals[6], gep65_var);
	call138_var->setTailCall();
	call138_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi139_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep140_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, gep4_val5_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(arg3, gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(4);
	Value* cast142_var = builder.CreateCast(Instruction::SExt, load141_var, types[0]);
	Value* binop143_var = BinaryOperator::Create(Instruction::Mul, cast142_var, phi139_var, "", builder.GetInsertBlock());
	Value* binop144_var = BinaryOperator::Create(Instruction::Add, binop143_var, phi103_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi145_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep146_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val22_int, gep17_val18_int, switch21_val22_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(arg3, gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(4);
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, gep17_val18_int);
	builder.CreateCondBr(cmp148_var, block41, block32);
	
	builder.SetInsertPoint(block32);
	Value* cast149_var = builder.CreateCast(Instruction::ZExt, load147_var, types[0]);
	ArrayRef<Value*> gep150_array { gep4_val4_int, cast149_var, gep17_val18_int, gep17_val18_int, gep17_val18_int, };
	Value* gep150_var = builder.CreateInBoundsGEP(globals[5], gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(16);
	Value* cast152_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast149_var, switch21_val22_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* cmp155_var = builder.CreateICmp(CmpInst::ICMP_EQ, load154_var, cmp35_val35_int);
	builder.CreateCondBr(cmp155_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep156_array { load151_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast152_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[27]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep159_array { gep4_val4_int, cast149_var, gep17_val18_int, gep17_val18_int, switch21_val22_int, };
	Value* gep159_var = builder.CreateInBoundsGEP(globals[5], gep159_array);
	llvm::LoadInst* load160_var = builder.CreateLoad(gep159_var, false);
	load160_var->setAlignment(8);
	Value* binop161_var = BinaryOperator::Create(Instruction::Add, load160_var, load151_var, "", builder.GetInsertBlock());
	Value* cmp162_var = builder.CreateICmp(CmpInst::ICMP_EQ, load154_var, cmp43_val43_int);
	builder.CreateCondBr(cmp162_var, block35, block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep163_array { binop161_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast152_var, gep163_array);
	Value* cast164_var = builder.CreateCast(Instruction::BitCast, gep163_var, types[28]);
	llvm::LoadInst* load165_var = builder.CreateLoad(cast164_var, false);
	load165_var->setAlignment(4);
	Value* cast166_var = builder.CreateCast(Instruction::ZExt, load165_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast149_var, gep17_val18_int, gep17_val18_int, switch21_val21_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(16);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, binop161_var, "", builder.GetInsertBlock());
	SwitchInst* switch170_var = builder.CreateSwitch(load154_var, block39, 2);
	switch170_var->addCase(cast<ConstantInt>(switch52_val52_int), block37);
	switch170_var->addCase(cast<ConstantInt>(switch52_val53_int), block38);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep170_array { binop169_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast152_var, gep170_array);
	Value* cast171_var = builder.CreateCast(Instruction::BitCast, gep170_var, types[30]);
	llvm::LoadInst* load172_var = builder.CreateLoad(cast171_var, false);
	load172_var->setAlignment(2);
	Value* cast173_var = builder.CreateCast(Instruction::ZExt, load172_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block38);
	ArrayRef<Value*> gep174_array { gep4_val4_int, cast149_var, gep17_val18_int, gep17_val18_int, gep4_val5_int, };
	Value* gep174_var = builder.CreateInBoundsGEP(globals[5], gep174_array);
	llvm::LoadInst* load175_var = builder.CreateLoad(gep174_var, false);
	load175_var->setAlignment(8);
	Value* binop176_var = BinaryOperator::Create(Instruction::Add, load175_var, binop169_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep177_array { binop176_var, };
	Value* gep177_var = builder.CreateInBoundsGEP(cast152_var, gep177_array);
	llvm::LoadInst* load178_var = builder.CreateLoad(gep177_var, false);
	load178_var->setAlignment(1);
	Value* cast179_var = builder.CreateCast(Instruction::ZExt, load178_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	CallInst* call180_var = builder.CreateCall(globals[6], gep65_var);
	call180_var->setTailCall();
	call180_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi181_var = builder.CreatePHI(types[0], 4);
	Value* binop182_var = BinaryOperator::Create(Instruction::Add, phi181_var, phi145_var, "", builder.GetInsertBlock());
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block41);
	PHINode* phi183_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep17_val17_int, gep4_val4_int, switch21_val21_int, };
	Value* gep184_var = builder.CreateInBoundsGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(1);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	CallInst* call187_var = builder.CreateCall2(globals[8], phi183_var, cast186_var);
	call187_var->setTailCall();
	builder.CreateBr(block43);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep189_array { gep4_val4_int, gep4_val4_int, };
	Value* gep189_var = builder.CreateInBoundsGEP(globals[10], gep189_array);
	CallInst* call189_var = builder.CreateCall(globals[6], gep189_var);
	call189_var->setTailCall();
	call189_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	PHINode* phi192_var = builder.CreatePHI(types[0], 6);
	CallInst* call193_var = builder.CreateCall3(globals[267], arg0, arg1, phi192_var);
	call193_var->setTailCall();
	call193_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block44);
	phi103_var->addIncoming(gep4_val4_int, block12);
	phi103_var->addIncoming(load80_var, block14);
	phi103_var->addIncoming(cast88_var, block16);
	phi103_var->addIncoming(cast95_var, block18);
	phi103_var->addIncoming(cast101_var, block19);
	
	phi139_var->addIncoming(load116_var, block23);
	phi139_var->addIncoming(cast124_var, block25);
	phi139_var->addIncoming(cast131_var, block27);
	phi139_var->addIncoming(cast137_var, block28);
	
	phi145_var->addIncoming(binop144_var, block30);
	phi145_var->addIncoming(phi103_var, block21);
	
	phi181_var->addIncoming(load158_var, block33);
	phi181_var->addIncoming(cast166_var, block35);
	phi181_var->addIncoming(cast173_var, block37);
	phi181_var->addIncoming(cast179_var, block38);
	
	phi183_var->addIncoming(binop182_var, block40);
	phi183_var->addIncoming(phi145_var, block31);
	
	phi192_var->addIncoming(call187_var, block41);
	phi192_var->addIncoming(load25_var, block3);
	phi192_var->addIncoming(load39_var, block5);
	phi192_var->addIncoming(cast48_var, block7);
	phi192_var->addIncoming(cast57_var, block9);
	phi192_var->addIncoming(cast63_var, block10);
	
	return;
}

void x86::x86_jmp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block40, 3);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 2u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block2);
	Constant* switch9_val11_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val11_int), block10);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep12_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg3, gep12_array);
	Value* cast13_var = builder.CreateCast(Instruction::BitCast, gep12_var, types[27]);
	llvm::LoadInst* load14_var = builder.CreateLoad(cast13_var, false);
	load14_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep15_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep15_var = builder.CreateGEP(arg3, gep15_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep15_var, false);
	load16_var->setAlignment(4);
	Value* cast17_var = builder.CreateCast(Instruction::ZExt, load16_var, types[0]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep18_var, false);
	load20_var->setAlignment(16);
	Value* cast21_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast17_var, switch9_val10_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load23_var = builder.CreateLoad(gep22_var, false);
	load23_var->setAlignment(16);
	Constant* cmp24_val24_int = ConstantInt::get(types[0], 8u);
	Value* cmp24_var = builder.CreateICmp(CmpInst::ICMP_EQ, load23_var, cmp24_val24_int);
	builder.CreateCondBr(cmp24_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep26_array { load20_var, };
	Value* gep26_var = builder.CreateInBoundsGEP(cast21_var, gep26_array);
	Value* cast27_var = builder.CreateCast(Instruction::BitCast, gep26_var, types[27]);
	llvm::LoadInst* load28_var = builder.CreateLoad(cast27_var, false);
	load28_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(8);
	Value* binop31_var = BinaryOperator::Create(Instruction::Add, load30_var, load20_var, "", builder.GetInsertBlock());
	Constant* cmp32_val32_int = ConstantInt::get(types[0], 4u);
	Value* cmp32_var = builder.CreateICmp(CmpInst::ICMP_EQ, load23_var, cmp32_val32_int);
	builder.CreateCondBr(cmp32_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { binop31_var, };
	Value* gep34_var = builder.CreateInBoundsGEP(cast21_var, gep34_array);
	Value* cast35_var = builder.CreateCast(Instruction::BitCast, gep34_var, types[28]);
	llvm::LoadInst* load36_var = builder.CreateLoad(cast35_var, false);
	load36_var->setAlignment(4);
	Value* cast37_var = builder.CreateCast(Instruction::ZExt, load36_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep38_var = builder.CreateInBoundsGEP(globals[5], gep38_array);
	llvm::LoadInst* load39_var = builder.CreateLoad(gep38_var, false);
	load39_var->setAlignment(16);
	Value* binop40_var = BinaryOperator::Create(Instruction::Add, load39_var, binop31_var, "", builder.GetInsertBlock());
	SwitchInst* switch41_var = builder.CreateSwitch(load23_var, block9, 2);
	Constant* switch41_val41_int = ConstantInt::get(types[0], 2u);
	switch41_var->addCase(cast<ConstantInt>(switch41_val41_int), block7);
	Constant* switch41_val42_int = ConstantInt::get(types[0], 1u);
	switch41_var->addCase(cast<ConstantInt>(switch41_val42_int), block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { binop40_var, };
	Value* gep43_var = builder.CreateInBoundsGEP(cast21_var, gep43_array);
	Value* cast44_var = builder.CreateCast(Instruction::BitCast, gep43_var, types[30]);
	llvm::LoadInst* load45_var = builder.CreateLoad(cast44_var, false);
	load45_var->setAlignment(2);
	Value* cast46_var = builder.CreateCast(Instruction::ZExt, load45_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, binop40_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep50_array { binop49_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast21_var, gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(1);
	Value* cast52_var = builder.CreateCast(Instruction::ZExt, load51_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val4_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[7], gep54_array);
	CallInst* call53_var = builder.CreateCall(globals[6], gep54_var);
	call53_var->setTailCall();
	call53_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep57_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(arg3, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(4);
	Value* cmp59_var = builder.CreateICmp(CmpInst::ICMP_EQ, load58_var, gep4_val6_int);
	builder.CreateCondBr(cmp59_var, block19, block11);
	
	builder.SetInsertPoint(block11);
	Value* cast60_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep64_array { gep4_val4_int, cast60_var, switch9_val10_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(globals[5], gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(16);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp24_val24_int);
	builder.CreateCondBr(cmp66_var, block12, block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { load62_var, };
	Value* gep67_var = builder.CreateInBoundsGEP(cast63_var, gep67_array);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, gep67_var, types[27]);
	llvm::LoadInst* load69_var = builder.CreateLoad(cast68_var, false);
	load69_var->setAlignment(8);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep70_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep70_var = builder.CreateInBoundsGEP(globals[5], gep70_array);
	llvm::LoadInst* load71_var = builder.CreateLoad(gep70_var, false);
	load71_var->setAlignment(8);
	Value* binop72_var = BinaryOperator::Create(Instruction::Add, load71_var, load62_var, "", builder.GetInsertBlock());
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp32_val32_int);
	builder.CreateCondBr(cmp73_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { binop72_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast63_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[28]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(4);
	Value* cast77_var = builder.CreateCast(Instruction::ZExt, load76_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(globals[5], gep78_array);
	llvm::LoadInst* load79_var = builder.CreateLoad(gep78_var, false);
	load79_var->setAlignment(16);
	Value* binop80_var = BinaryOperator::Create(Instruction::Add, load79_var, binop72_var, "", builder.GetInsertBlock());
	SwitchInst* switch81_var = builder.CreateSwitch(load65_var, block18, 2);
	switch81_var->addCase(cast<ConstantInt>(switch41_val41_int), block16);
	switch81_var->addCase(cast<ConstantInt>(switch41_val42_int), block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { binop80_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast63_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[30]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(2);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(8);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop80_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast63_var, gep88_array);
	llvm::LoadInst* load89_var = builder.CreateLoad(gep88_var, false);
	load89_var->setAlignment(1);
	Value* cast90_var = builder.CreateCast(Instruction::ZExt, load89_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block18);
	CallInst* call91_var = builder.CreateCall(globals[6], gep54_var);
	call91_var->setTailCall();
	call91_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block19);
	PHINode* phi92_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep93_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val9_int, };
	Value* gep93_var = builder.CreateInBoundsGEP(arg3, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(4);
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load94_var, gep4_val6_int);
	builder.CreateCondBr(cmp95_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast96_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cast99_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast96_var, switch9_val10_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp24_val24_int);
	builder.CreateCondBr(cmp102_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { load98_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast99_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[27]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep106_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep106_var = builder.CreateInBoundsGEP(globals[5], gep106_array);
	llvm::LoadInst* load107_var = builder.CreateLoad(gep106_var, false);
	load107_var->setAlignment(8);
	Value* binop108_var = BinaryOperator::Create(Instruction::Add, load107_var, load98_var, "", builder.GetInsertBlock());
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp32_val32_int);
	builder.CreateCondBr(cmp109_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { binop108_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast99_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[28]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(4);
	Value* cast113_var = builder.CreateCast(Instruction::ZExt, load112_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep114_var = builder.CreateInBoundsGEP(globals[5], gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(16);
	Value* binop116_var = BinaryOperator::Create(Instruction::Add, load115_var, binop108_var, "", builder.GetInsertBlock());
	SwitchInst* switch117_var = builder.CreateSwitch(load101_var, block27, 2);
	switch117_var->addCase(cast<ConstantInt>(switch41_val41_int), block25);
	switch117_var->addCase(cast<ConstantInt>(switch41_val42_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { binop116_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast99_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[30]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(2);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(8);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop116_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast99_var, gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(1);
	Value* cast126_var = builder.CreateCast(Instruction::ZExt, load125_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call127_var = builder.CreateCall(globals[6], gep54_var);
	call127_var->setTailCall();
	call127_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi128_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep129_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val11_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(arg3, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(4);
	Value* cast131_var = builder.CreateCast(Instruction::SExt, load130_var, types[0]);
	Value* binop132_var = BinaryOperator::Create(Instruction::Mul, cast131_var, phi128_var, "", builder.GetInsertBlock());
	Value* binop133_var = BinaryOperator::Create(Instruction::Add, binop132_var, phi92_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi134_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep135_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val10_int, };
	Value* gep135_var = builder.CreateInBoundsGEP(arg3, gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(4);
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load136_var, gep4_val6_int);
	builder.CreateCondBr(cmp137_var, block39, block30);
	
	builder.SetInsertPoint(block30);
	Value* cast138_var = builder.CreateCast(Instruction::ZExt, load136_var, types[0]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cast141_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast138_var, switch9_val10_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp24_val24_int);
	builder.CreateCondBr(cmp144_var, block31, block32);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { load140_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast141_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[27]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(8);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, load140_var, "", builder.GetInsertBlock());
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp32_val32_int);
	builder.CreateCondBr(cmp151_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { binop150_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast141_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[28]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(4);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep156_var = builder.CreateInBoundsGEP(globals[5], gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(16);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, load157_var, binop150_var, "", builder.GetInsertBlock());
	SwitchInst* switch159_var = builder.CreateSwitch(load143_var, block37, 2);
	switch159_var->addCase(cast<ConstantInt>(switch41_val41_int), block35);
	switch159_var->addCase(cast<ConstantInt>(switch41_val42_int), block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep159_array { binop158_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast141_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[30]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(2);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(8);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop158_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast141_var, gep166_array);
	llvm::LoadInst* load167_var = builder.CreateLoad(gep166_var, false);
	load167_var->setAlignment(1);
	Value* cast168_var = builder.CreateCast(Instruction::ZExt, load167_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block37);
	CallInst* call169_var = builder.CreateCall(globals[6], gep54_var);
	call169_var->setTailCall();
	call169_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block38);
	PHINode* phi170_var = builder.CreatePHI(types[0], 4);
	Value* binop171_var = BinaryOperator::Create(Instruction::Add, phi170_var, phi134_var, "", builder.GetInsertBlock());
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block39);
	PHINode* phi172_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep173_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, };
	Value* gep173_var = builder.CreateInBoundsGEP(arg3, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	CallInst* call176_var = builder.CreateCall2(globals[8], phi172_var, cast175_var);
	call176_var->setTailCall();
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block40);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep4_val4_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(globals[10], gep178_array);
	CallInst* call178_var = builder.CreateCall(globals[6], gep178_var);
	call178_var->setTailCall();
	call178_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block41);
	PHINode* phi181_var = builder.CreatePHI(types[0], 6);
	CallInst* call182_var = builder.CreateCall3(globals[267], arg0, arg1, phi181_var);
	call182_var->setTailCall();
	call182_var->setDoesNotReturn();
	builder.CreateUnreachable();
	phi92_var->addIncoming(gep4_val4_int, block10);
	phi92_var->addIncoming(load69_var, block12);
	phi92_var->addIncoming(cast77_var, block14);
	phi92_var->addIncoming(cast84_var, block16);
	phi92_var->addIncoming(cast90_var, block17);
	
	phi128_var->addIncoming(load105_var, block21);
	phi128_var->addIncoming(cast113_var, block23);
	phi128_var->addIncoming(cast120_var, block25);
	phi128_var->addIncoming(cast126_var, block26);
	
	phi134_var->addIncoming(binop133_var, block28);
	phi134_var->addIncoming(phi92_var, block19);
	
	phi170_var->addIncoming(load147_var, block31);
	phi170_var->addIncoming(cast155_var, block33);
	phi170_var->addIncoming(cast162_var, block35);
	phi170_var->addIncoming(cast168_var, block36);
	
	phi172_var->addIncoming(binop171_var, block38);
	phi172_var->addIncoming(phi134_var, block29);
	
	phi181_var->addIncoming(call176_var, block39);
	phi181_var->addIncoming(load14_var, block1);
	phi181_var->addIncoming(load28_var, block3);
	phi181_var->addIncoming(cast37_var, block5);
	phi181_var->addIncoming(cast46_var, block7);
	phi181_var->addIncoming(cast52_var, block8);
	
}

void x86::x86_jne(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	Constant* gep10_val11_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep10_val11_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep10_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 1u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block3);
	switch14_var->addCase(cast<ConstantInt>(gep4_val5_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, gep16_var, types[27]);
	llvm::LoadInst* load18_var = builder.CreateLoad(cast17_var, false);
	load18_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	Value* cast25_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep26_array { gep4_val4_int, cast21_var, switch14_val15_int, };
	Value* gep26_var = builder.CreateInBoundsGEP(globals[5], gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(16);
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 8u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { load24_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast25_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(8);
	Value* binop35_var = BinaryOperator::Create(Instruction::Add, load34_var, load24_var, "", builder.GetInsertBlock());
	Constant* cmp36_val36_int = ConstantInt::get(types[0], 4u);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp36_val36_int);
	builder.CreateCondBr(cmp36_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { binop35_var, };
	Value* gep38_var = builder.CreateInBoundsGEP(cast25_var, gep38_array);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, gep38_var, types[28]);
	llvm::LoadInst* load40_var = builder.CreateLoad(cast39_var, false);
	load40_var->setAlignment(4);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* binop44_var = BinaryOperator::Create(Instruction::Add, load43_var, binop35_var, "", builder.GetInsertBlock());
	SwitchInst* switch45_var = builder.CreateSwitch(load27_var, block10, 2);
	Constant* switch45_val45_int = ConstantInt::get(types[0], 2u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val45_int), block8);
	Constant* switch45_val46_int = ConstantInt::get(types[0], 1u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val46_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { binop44_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast25_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[30]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(2);
	Value* cast50_var = builder.CreateCast(Instruction::ZExt, load49_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep51_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[5], gep51_array);
	llvm::LoadInst* load52_var = builder.CreateLoad(gep51_var, false);
	load52_var->setAlignment(8);
	Value* binop53_var = BinaryOperator::Create(Instruction::Add, load52_var, binop44_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep54_array { binop53_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast25_var, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(1);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep4_val4_int, gep4_val4_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[7], gep58_array);
	CallInst* call57_var = builder.CreateCall(globals[6], gep58_var);
	call57_var->setTailCall();
	call57_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(arg3, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(4);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, gep10_val11_int);
	builder.CreateCondBr(cmp63_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast64_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	ArrayRef<Value*> gep65_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[5], gep65_array);
	llvm::LoadInst* load66_var = builder.CreateLoad(gep65_var, false);
	load66_var->setAlignment(16);
	Value* cast67_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast64_var, switch14_val15_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { load66_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast67_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[27]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[5], gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(8);
	Value* binop76_var = BinaryOperator::Create(Instruction::Add, load75_var, load66_var, "", builder.GetInsertBlock());
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp36_val36_int);
	builder.CreateCondBr(cmp77_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop76_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast67_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[28]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(4);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop76_var, "", builder.GetInsertBlock());
	SwitchInst* switch85_var = builder.CreateSwitch(load69_var, block19, 2);
	switch85_var->addCase(cast<ConstantInt>(switch45_val45_int), block17);
	switch85_var->addCase(cast<ConstantInt>(switch45_val46_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast67_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[30]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(2);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(8);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop84_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast67_var, gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(1);
	Value* cast94_var = builder.CreateCast(Instruction::ZExt, load93_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call95_var = builder.CreateCall(globals[6], gep58_var);
	call95_var->setTailCall();
	call95_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi96_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep97_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val14_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(arg3, gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(4);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, gep10_val11_int);
	builder.CreateCondBr(cmp99_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	ArrayRef<Value*> gep101_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* cast103_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast100_var, switch14_val15_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { load102_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast103_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[27]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep110_var = builder.CreateInBoundsGEP(globals[5], gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(8);
	Value* binop112_var = BinaryOperator::Create(Instruction::Add, load111_var, load102_var, "", builder.GetInsertBlock());
	Value* cmp113_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp36_val36_int);
	builder.CreateCondBr(cmp113_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop112_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast103_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[28]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(16);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop112_var, "", builder.GetInsertBlock());
	SwitchInst* switch121_var = builder.CreateSwitch(load105_var, block28, 2);
	switch121_var->addCase(cast<ConstantInt>(switch45_val45_int), block26);
	switch121_var->addCase(cast<ConstantInt>(switch45_val46_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast103_var, gep121_array);
	Value* cast122_var = builder.CreateCast(Instruction::BitCast, gep121_var, types[30]);
	llvm::LoadInst* load123_var = builder.CreateLoad(cast122_var, false);
	load123_var->setAlignment(2);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(8);
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, load126_var, binop120_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep128_array { binop127_var, };
	Value* gep128_var = builder.CreateInBoundsGEP(cast103_var, gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(1);
	Value* cast130_var = builder.CreateCast(Instruction::ZExt, load129_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call131_var = builder.CreateCall(globals[6], gep58_var);
	call131_var->setTailCall();
	call131_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi132_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep133_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep4_val5_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(arg3, gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(4);
	Value* cast135_var = builder.CreateCast(Instruction::SExt, load134_var, types[0]);
	Value* binop136_var = BinaryOperator::Create(Instruction::Mul, cast135_var, phi132_var, "", builder.GetInsertBlock());
	Value* binop137_var = BinaryOperator::Create(Instruction::Add, binop136_var, phi96_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi138_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep139_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val15_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(arg3, gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(4);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, gep10_val11_int);
	builder.CreateCondBr(cmp141_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast142_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	ArrayRef<Value*> gep143_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* cast145_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast142_var, switch14_val15_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { load144_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast145_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[27]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep152_var = builder.CreateInBoundsGEP(globals[5], gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(8);
	Value* binop154_var = BinaryOperator::Create(Instruction::Add, load153_var, load144_var, "", builder.GetInsertBlock());
	Value* cmp155_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp36_val36_int);
	builder.CreateCondBr(cmp155_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop154_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast145_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[28]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(4);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(16);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop154_var, "", builder.GetInsertBlock());
	SwitchInst* switch163_var = builder.CreateSwitch(load147_var, block38, 2);
	switch163_var->addCase(cast<ConstantInt>(switch45_val45_int), block36);
	switch163_var->addCase(cast<ConstantInt>(switch45_val46_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast145_var, gep163_array);
	Value* cast164_var = builder.CreateCast(Instruction::BitCast, gep163_var, types[30]);
	llvm::LoadInst* load165_var = builder.CreateLoad(cast164_var, false);
	load165_var->setAlignment(2);
	Value* cast166_var = builder.CreateCast(Instruction::ZExt, load165_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(8);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, binop162_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep170_array { binop169_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast145_var, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call173_var = builder.CreateCall(globals[6], gep58_var);
	call173_var->setTailCall();
	call173_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi174_var = builder.CreatePHI(types[0], 4);
	Value* binop175_var = BinaryOperator::Create(Instruction::Add, phi174_var, phi138_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi176_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep177_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val14_int, };
	Value* gep177_var = builder.CreateInBoundsGEP(arg3, gep177_array);
	llvm::LoadInst* load178_var = builder.CreateLoad(gep177_var, false);
	load178_var->setAlignment(1);
	Value* cast179_var = builder.CreateCast(Instruction::ZExt, load178_var, types[0]);
	CallInst* call180_var = builder.CreateCall2(globals[8], phi176_var, cast179_var);
	call180_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val4_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(globals[10], gep182_array);
	CallInst* call182_var = builder.CreateCall(globals[6], gep182_var);
	call182_var->setTailCall();
	call182_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi185_var = builder.CreatePHI(types[0], 6);
	CallInst* call186_var = builder.CreateCall3(globals[267], arg0, arg1, phi185_var);
	call186_var->setTailCall();
	call186_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi96_var->addIncoming(gep4_val4_int, block11);
	phi96_var->addIncoming(load73_var, block13);
	phi96_var->addIncoming(cast81_var, block15);
	phi96_var->addIncoming(cast88_var, block17);
	phi96_var->addIncoming(cast94_var, block18);
	
	phi132_var->addIncoming(load109_var, block22);
	phi132_var->addIncoming(cast117_var, block24);
	phi132_var->addIncoming(cast124_var, block26);
	phi132_var->addIncoming(cast130_var, block27);
	
	phi138_var->addIncoming(binop137_var, block29);
	phi138_var->addIncoming(phi96_var, block20);
	
	phi174_var->addIncoming(load151_var, block32);
	phi174_var->addIncoming(cast159_var, block34);
	phi174_var->addIncoming(cast166_var, block36);
	phi174_var->addIncoming(cast172_var, block37);
	
	phi176_var->addIncoming(binop175_var, block39);
	phi176_var->addIncoming(phi138_var, block30);
	
	phi185_var->addIncoming(call180_var, block40);
	phi185_var->addIncoming(load18_var, block2);
	phi185_var->addIncoming(load32_var, block4);
	phi185_var->addIncoming(cast41_var, block6);
	phi185_var->addIncoming(cast50_var, block8);
	phi185_var->addIncoming(cast56_var, block9);
	
	return;
}

void x86::x86_jno(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	Constant* gep10_val11_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep10_val11_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep10_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 1u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block3);
	Constant* switch14_val16_int = ConstantInt::get(types[2], 3u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val16_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(arg3, gep17_array);
	Value* cast18_var = builder.CreateCast(Instruction::BitCast, gep17_var, types[27]);
	llvm::LoadInst* load19_var = builder.CreateLoad(cast18_var, false);
	load19_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep20_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep20_var = builder.CreateGEP(arg3, gep20_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep20_var, false);
	load21_var->setAlignment(4);
	Value* cast22_var = builder.CreateCast(Instruction::ZExt, load21_var, types[0]);
	ArrayRef<Value*> gep23_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep23_var, false);
	load25_var->setAlignment(16);
	Value* cast26_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast22_var, switch14_val15_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load28_var = builder.CreateLoad(gep27_var, false);
	load28_var->setAlignment(16);
	Constant* cmp29_val29_int = ConstantInt::get(types[0], 8u);
	Value* cmp29_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp29_val29_int);
	builder.CreateCondBr(cmp29_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep31_array { load25_var, };
	Value* gep31_var = builder.CreateInBoundsGEP(cast26_var, gep31_array);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, gep31_var, types[27]);
	llvm::LoadInst* load33_var = builder.CreateLoad(cast32_var, false);
	load33_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load35_var = builder.CreateLoad(gep34_var, false);
	load35_var->setAlignment(8);
	Value* binop36_var = BinaryOperator::Create(Instruction::Add, load35_var, load25_var, "", builder.GetInsertBlock());
	Constant* cmp37_val37_int = ConstantInt::get(types[0], 4u);
	Value* cmp37_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp37_val37_int);
	builder.CreateCondBr(cmp37_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep39_array { binop36_var, };
	Value* gep39_var = builder.CreateInBoundsGEP(cast26_var, gep39_array);
	Value* cast40_var = builder.CreateCast(Instruction::BitCast, gep39_var, types[28]);
	llvm::LoadInst* load41_var = builder.CreateLoad(cast40_var, false);
	load41_var->setAlignment(4);
	Value* cast42_var = builder.CreateCast(Instruction::ZExt, load41_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Value* binop45_var = BinaryOperator::Create(Instruction::Add, load44_var, binop36_var, "", builder.GetInsertBlock());
	SwitchInst* switch46_var = builder.CreateSwitch(load28_var, block10, 2);
	Constant* switch46_val46_int = ConstantInt::get(types[0], 2u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val46_int), block8);
	Constant* switch46_val47_int = ConstantInt::get(types[0], 1u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val47_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep48_array { binop45_var, };
	Value* gep48_var = builder.CreateInBoundsGEP(cast26_var, gep48_array);
	Value* cast49_var = builder.CreateCast(Instruction::BitCast, gep48_var, types[30]);
	llvm::LoadInst* load50_var = builder.CreateLoad(cast49_var, false);
	load50_var->setAlignment(2);
	Value* cast51_var = builder.CreateCast(Instruction::ZExt, load50_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep52_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep52_var = builder.CreateInBoundsGEP(globals[5], gep52_array);
	llvm::LoadInst* load53_var = builder.CreateLoad(gep52_var, false);
	load53_var->setAlignment(8);
	Value* binop54_var = BinaryOperator::Create(Instruction::Add, load53_var, binop45_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep55_array { binop54_var, };
	Value* gep55_var = builder.CreateInBoundsGEP(cast26_var, gep55_array);
	llvm::LoadInst* load56_var = builder.CreateLoad(gep55_var, false);
	load56_var->setAlignment(1);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep59_array { gep4_val4_int, gep4_val4_int, };
	Value* gep59_var = builder.CreateInBoundsGEP(globals[7], gep59_array);
	CallInst* call58_var = builder.CreateCall(globals[6], gep59_var);
	call58_var->setTailCall();
	call58_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep62_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep62_var = builder.CreateInBoundsGEP(arg3, gep62_array);
	llvm::LoadInst* load63_var = builder.CreateLoad(gep62_var, false);
	load63_var->setAlignment(4);
	Value* cmp64_var = builder.CreateICmp(CmpInst::ICMP_EQ, load63_var, gep10_val11_int);
	builder.CreateCondBr(cmp64_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load63_var, types[0]);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(16);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep69_array { gep4_val4_int, cast65_var, switch14_val15_int, };
	Value* gep69_var = builder.CreateInBoundsGEP(globals[5], gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(16);
	Value* cmp71_var = builder.CreateICmp(CmpInst::ICMP_EQ, load70_var, cmp29_val29_int);
	builder.CreateCondBr(cmp71_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep72_array { load67_var, };
	Value* gep72_var = builder.CreateInBoundsGEP(cast68_var, gep72_array);
	Value* cast73_var = builder.CreateCast(Instruction::BitCast, gep72_var, types[27]);
	llvm::LoadInst* load74_var = builder.CreateLoad(cast73_var, false);
	load74_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(8);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, load67_var, "", builder.GetInsertBlock());
	Value* cmp78_var = builder.CreateICmp(CmpInst::ICMP_EQ, load70_var, cmp37_val37_int);
	builder.CreateCondBr(cmp78_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep79_array { binop77_var, };
	Value* gep79_var = builder.CreateInBoundsGEP(cast68_var, gep79_array);
	Value* cast80_var = builder.CreateCast(Instruction::BitCast, gep79_var, types[28]);
	llvm::LoadInst* load81_var = builder.CreateLoad(cast80_var, false);
	load81_var->setAlignment(4);
	Value* cast82_var = builder.CreateCast(Instruction::ZExt, load81_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep83_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[5], gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(16);
	Value* binop85_var = BinaryOperator::Create(Instruction::Add, load84_var, binop77_var, "", builder.GetInsertBlock());
	SwitchInst* switch86_var = builder.CreateSwitch(load70_var, block19, 2);
	switch86_var->addCase(cast<ConstantInt>(switch46_val46_int), block17);
	switch86_var->addCase(cast<ConstantInt>(switch46_val47_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep86_array { binop85_var, };
	Value* gep86_var = builder.CreateInBoundsGEP(cast68_var, gep86_array);
	Value* cast87_var = builder.CreateCast(Instruction::BitCast, gep86_var, types[30]);
	llvm::LoadInst* load88_var = builder.CreateLoad(cast87_var, false);
	load88_var->setAlignment(2);
	Value* cast89_var = builder.CreateCast(Instruction::ZExt, load88_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(8);
	Value* binop92_var = BinaryOperator::Create(Instruction::Add, load91_var, binop85_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep93_array { binop92_var, };
	Value* gep93_var = builder.CreateInBoundsGEP(cast68_var, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(1);
	Value* cast95_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call96_var = builder.CreateCall(globals[6], gep59_var);
	call96_var->setTailCall();
	call96_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi97_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep98_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val14_int, };
	Value* gep98_var = builder.CreateInBoundsGEP(arg3, gep98_array);
	llvm::LoadInst* load99_var = builder.CreateLoad(gep98_var, false);
	load99_var->setAlignment(4);
	Value* cmp100_var = builder.CreateICmp(CmpInst::ICMP_EQ, load99_var, gep10_val11_int);
	builder.CreateCondBr(cmp100_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast101_var = builder.CreateCast(Instruction::ZExt, load99_var, types[0]);
	ArrayRef<Value*> gep102_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep102_var = builder.CreateInBoundsGEP(globals[5], gep102_array);
	llvm::LoadInst* load103_var = builder.CreateLoad(gep102_var, false);
	load103_var->setAlignment(16);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep105_array { gep4_val4_int, cast101_var, switch14_val15_int, };
	Value* gep105_var = builder.CreateInBoundsGEP(globals[5], gep105_array);
	llvm::LoadInst* load106_var = builder.CreateLoad(gep105_var, false);
	load106_var->setAlignment(16);
	Value* cmp107_var = builder.CreateICmp(CmpInst::ICMP_EQ, load106_var, cmp29_val29_int);
	builder.CreateCondBr(cmp107_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep108_array { load103_var, };
	Value* gep108_var = builder.CreateInBoundsGEP(cast104_var, gep108_array);
	Value* cast109_var = builder.CreateCast(Instruction::BitCast, gep108_var, types[27]);
	llvm::LoadInst* load110_var = builder.CreateLoad(cast109_var, false);
	load110_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(8);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, load103_var, "", builder.GetInsertBlock());
	Value* cmp114_var = builder.CreateICmp(CmpInst::ICMP_EQ, load106_var, cmp37_val37_int);
	builder.CreateCondBr(cmp114_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep115_array { binop113_var, };
	Value* gep115_var = builder.CreateInBoundsGEP(cast104_var, gep115_array);
	Value* cast116_var = builder.CreateCast(Instruction::BitCast, gep115_var, types[28]);
	llvm::LoadInst* load117_var = builder.CreateLoad(cast116_var, false);
	load117_var->setAlignment(4);
	Value* cast118_var = builder.CreateCast(Instruction::ZExt, load117_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep119_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(globals[5], gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(16);
	Value* binop121_var = BinaryOperator::Create(Instruction::Add, load120_var, binop113_var, "", builder.GetInsertBlock());
	SwitchInst* switch122_var = builder.CreateSwitch(load106_var, block28, 2);
	switch122_var->addCase(cast<ConstantInt>(switch46_val46_int), block26);
	switch122_var->addCase(cast<ConstantInt>(switch46_val47_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep122_array { binop121_var, };
	Value* gep122_var = builder.CreateInBoundsGEP(cast104_var, gep122_array);
	Value* cast123_var = builder.CreateCast(Instruction::BitCast, gep122_var, types[30]);
	llvm::LoadInst* load124_var = builder.CreateLoad(cast123_var, false);
	load124_var->setAlignment(2);
	Value* cast125_var = builder.CreateCast(Instruction::ZExt, load124_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(8);
	Value* binop128_var = BinaryOperator::Create(Instruction::Add, load127_var, binop121_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep129_array { binop128_var, };
	Value* gep129_var = builder.CreateInBoundsGEP(cast104_var, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(1);
	Value* cast131_var = builder.CreateCast(Instruction::ZExt, load130_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call132_var = builder.CreateCall(globals[6], gep59_var);
	call132_var->setTailCall();
	call132_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi133_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep134_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val16_int, };
	Value* gep134_var = builder.CreateInBoundsGEP(arg3, gep134_array);
	llvm::LoadInst* load135_var = builder.CreateLoad(gep134_var, false);
	load135_var->setAlignment(4);
	Value* cast136_var = builder.CreateCast(Instruction::SExt, load135_var, types[0]);
	Value* binop137_var = BinaryOperator::Create(Instruction::Mul, cast136_var, phi133_var, "", builder.GetInsertBlock());
	Value* binop138_var = BinaryOperator::Create(Instruction::Add, binop137_var, phi97_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi139_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep140_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val15_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(arg3, gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(4);
	Value* cmp142_var = builder.CreateICmp(CmpInst::ICMP_EQ, load141_var, gep10_val11_int);
	builder.CreateCondBr(cmp142_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast143_var = builder.CreateCast(Instruction::ZExt, load141_var, types[0]);
	ArrayRef<Value*> gep144_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep144_var = builder.CreateInBoundsGEP(globals[5], gep144_array);
	llvm::LoadInst* load145_var = builder.CreateLoad(gep144_var, false);
	load145_var->setAlignment(16);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep147_array { gep4_val4_int, cast143_var, switch14_val15_int, };
	Value* gep147_var = builder.CreateInBoundsGEP(globals[5], gep147_array);
	llvm::LoadInst* load148_var = builder.CreateLoad(gep147_var, false);
	load148_var->setAlignment(16);
	Value* cmp149_var = builder.CreateICmp(CmpInst::ICMP_EQ, load148_var, cmp29_val29_int);
	builder.CreateCondBr(cmp149_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep150_array { load145_var, };
	Value* gep150_var = builder.CreateInBoundsGEP(cast146_var, gep150_array);
	Value* cast151_var = builder.CreateCast(Instruction::BitCast, gep150_var, types[27]);
	llvm::LoadInst* load152_var = builder.CreateLoad(cast151_var, false);
	load152_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(8);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, load145_var, "", builder.GetInsertBlock());
	Value* cmp156_var = builder.CreateICmp(CmpInst::ICMP_EQ, load148_var, cmp37_val37_int);
	builder.CreateCondBr(cmp156_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep157_array { binop155_var, };
	Value* gep157_var = builder.CreateInBoundsGEP(cast146_var, gep157_array);
	Value* cast158_var = builder.CreateCast(Instruction::BitCast, gep157_var, types[28]);
	llvm::LoadInst* load159_var = builder.CreateLoad(cast158_var, false);
	load159_var->setAlignment(4);
	Value* cast160_var = builder.CreateCast(Instruction::ZExt, load159_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep161_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep161_var = builder.CreateInBoundsGEP(globals[5], gep161_array);
	llvm::LoadInst* load162_var = builder.CreateLoad(gep161_var, false);
	load162_var->setAlignment(16);
	Value* binop163_var = BinaryOperator::Create(Instruction::Add, load162_var, binop155_var, "", builder.GetInsertBlock());
	SwitchInst* switch164_var = builder.CreateSwitch(load148_var, block38, 2);
	switch164_var->addCase(cast<ConstantInt>(switch46_val46_int), block36);
	switch164_var->addCase(cast<ConstantInt>(switch46_val47_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep164_array { binop163_var, };
	Value* gep164_var = builder.CreateInBoundsGEP(cast146_var, gep164_array);
	Value* cast165_var = builder.CreateCast(Instruction::BitCast, gep164_var, types[30]);
	llvm::LoadInst* load166_var = builder.CreateLoad(cast165_var, false);
	load166_var->setAlignment(2);
	Value* cast167_var = builder.CreateCast(Instruction::ZExt, load166_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep168_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep168_var = builder.CreateInBoundsGEP(globals[5], gep168_array);
	llvm::LoadInst* load169_var = builder.CreateLoad(gep168_var, false);
	load169_var->setAlignment(8);
	Value* binop170_var = BinaryOperator::Create(Instruction::Add, load169_var, binop163_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep171_array { binop170_var, };
	Value* gep171_var = builder.CreateInBoundsGEP(cast146_var, gep171_array);
	llvm::LoadInst* load172_var = builder.CreateLoad(gep171_var, false);
	load172_var->setAlignment(1);
	Value* cast173_var = builder.CreateCast(Instruction::ZExt, load172_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call174_var = builder.CreateCall(globals[6], gep59_var);
	call174_var->setTailCall();
	call174_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi175_var = builder.CreatePHI(types[0], 4);
	Value* binop176_var = BinaryOperator::Create(Instruction::Add, phi175_var, phi139_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi177_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val14_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(arg3, gep178_array);
	llvm::LoadInst* load179_var = builder.CreateLoad(gep178_var, false);
	load179_var->setAlignment(1);
	Value* cast180_var = builder.CreateCast(Instruction::ZExt, load179_var, types[0]);
	CallInst* call181_var = builder.CreateCall2(globals[8], phi177_var, cast180_var);
	call181_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep183_array { gep4_val4_int, gep4_val4_int, };
	Value* gep183_var = builder.CreateInBoundsGEP(globals[10], gep183_array);
	CallInst* call183_var = builder.CreateCall(globals[6], gep183_var);
	call183_var->setTailCall();
	call183_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi186_var = builder.CreatePHI(types[0], 6);
	CallInst* call187_var = builder.CreateCall3(globals[267], arg0, arg1, phi186_var);
	call187_var->setTailCall();
	call187_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi97_var->addIncoming(gep4_val4_int, block11);
	phi97_var->addIncoming(load74_var, block13);
	phi97_var->addIncoming(cast82_var, block15);
	phi97_var->addIncoming(cast89_var, block17);
	phi97_var->addIncoming(cast95_var, block18);
	
	phi133_var->addIncoming(load110_var, block22);
	phi133_var->addIncoming(cast118_var, block24);
	phi133_var->addIncoming(cast125_var, block26);
	phi133_var->addIncoming(cast131_var, block27);
	
	phi139_var->addIncoming(binop138_var, block29);
	phi139_var->addIncoming(phi97_var, block20);
	
	phi175_var->addIncoming(load152_var, block32);
	phi175_var->addIncoming(cast160_var, block34);
	phi175_var->addIncoming(cast167_var, block36);
	phi175_var->addIncoming(cast173_var, block37);
	
	phi177_var->addIncoming(binop176_var, block39);
	phi177_var->addIncoming(phi139_var, block30);
	
	phi186_var->addIncoming(call181_var, block40);
	phi186_var->addIncoming(load19_var, block2);
	phi186_var->addIncoming(load33_var, block4);
	phi186_var->addIncoming(cast42_var, block6);
	phi186_var->addIncoming(cast51_var, block8);
	phi186_var->addIncoming(cast57_var, block9);
	
	return;
}

void x86::x86_jnp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 1u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	Constant* gep10_val11_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep10_val11_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep10_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	switch14_var->addCase(cast<ConstantInt>(gep4_val5_int), block3);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 3u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, gep16_var, types[27]);
	llvm::LoadInst* load18_var = builder.CreateLoad(cast17_var, false);
	load18_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, gep10_val11_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	Value* cast25_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep26_array { gep4_val4_int, cast21_var, gep4_val5_int, };
	Value* gep26_var = builder.CreateInBoundsGEP(globals[5], gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(16);
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 8u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { load24_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast25_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(8);
	Value* binop35_var = BinaryOperator::Create(Instruction::Add, load34_var, load24_var, "", builder.GetInsertBlock());
	Constant* cmp36_val36_int = ConstantInt::get(types[0], 4u);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp36_val36_int);
	builder.CreateCondBr(cmp36_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { binop35_var, };
	Value* gep38_var = builder.CreateInBoundsGEP(cast25_var, gep38_array);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, gep38_var, types[28]);
	llvm::LoadInst* load40_var = builder.CreateLoad(cast39_var, false);
	load40_var->setAlignment(4);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* binop44_var = BinaryOperator::Create(Instruction::Add, load43_var, binop35_var, "", builder.GetInsertBlock());
	SwitchInst* switch45_var = builder.CreateSwitch(load27_var, block10, 2);
	Constant* switch45_val45_int = ConstantInt::get(types[0], 2u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val45_int), block8);
	Constant* switch45_val46_int = ConstantInt::get(types[0], 1u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val46_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { binop44_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast25_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[30]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(2);
	Value* cast50_var = builder.CreateCast(Instruction::ZExt, load49_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep51_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[5], gep51_array);
	llvm::LoadInst* load52_var = builder.CreateLoad(gep51_var, false);
	load52_var->setAlignment(8);
	Value* binop53_var = BinaryOperator::Create(Instruction::Add, load52_var, binop44_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep54_array { binop53_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast25_var, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(1);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep4_val4_int, gep4_val4_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[7], gep58_array);
	CallInst* call57_var = builder.CreateCall(globals[6], gep58_var);
	call57_var->setTailCall();
	call57_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, gep10_val11_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(arg3, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(4);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, gep10_val11_int);
	builder.CreateCondBr(cmp63_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast64_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	ArrayRef<Value*> gep65_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[5], gep65_array);
	llvm::LoadInst* load66_var = builder.CreateLoad(gep65_var, false);
	load66_var->setAlignment(16);
	Value* cast67_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast64_var, gep4_val5_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { load66_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast67_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[27]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[5], gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(8);
	Value* binop76_var = BinaryOperator::Create(Instruction::Add, load75_var, load66_var, "", builder.GetInsertBlock());
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp36_val36_int);
	builder.CreateCondBr(cmp77_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop76_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast67_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[28]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(4);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop76_var, "", builder.GetInsertBlock());
	SwitchInst* switch85_var = builder.CreateSwitch(load69_var, block19, 2);
	switch85_var->addCase(cast<ConstantInt>(switch45_val45_int), block17);
	switch85_var->addCase(cast<ConstantInt>(switch45_val46_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast67_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[30]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(2);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(8);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop84_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast67_var, gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(1);
	Value* cast94_var = builder.CreateCast(Instruction::ZExt, load93_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call95_var = builder.CreateCall(globals[6], gep58_var);
	call95_var->setTailCall();
	call95_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi96_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep97_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, switch14_val14_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(arg3, gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(4);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, gep10_val11_int);
	builder.CreateCondBr(cmp99_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	ArrayRef<Value*> gep101_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* cast103_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast100_var, gep4_val5_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { load102_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast103_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[27]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep110_var = builder.CreateInBoundsGEP(globals[5], gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(8);
	Value* binop112_var = BinaryOperator::Create(Instruction::Add, load111_var, load102_var, "", builder.GetInsertBlock());
	Value* cmp113_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp36_val36_int);
	builder.CreateCondBr(cmp113_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop112_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast103_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[28]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(16);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop112_var, "", builder.GetInsertBlock());
	SwitchInst* switch121_var = builder.CreateSwitch(load105_var, block28, 2);
	switch121_var->addCase(cast<ConstantInt>(switch45_val45_int), block26);
	switch121_var->addCase(cast<ConstantInt>(switch45_val46_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast103_var, gep121_array);
	Value* cast122_var = builder.CreateCast(Instruction::BitCast, gep121_var, types[30]);
	llvm::LoadInst* load123_var = builder.CreateLoad(cast122_var, false);
	load123_var->setAlignment(2);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(8);
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, load126_var, binop120_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep128_array { binop127_var, };
	Value* gep128_var = builder.CreateInBoundsGEP(cast103_var, gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(1);
	Value* cast130_var = builder.CreateCast(Instruction::ZExt, load129_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call131_var = builder.CreateCall(globals[6], gep58_var);
	call131_var->setTailCall();
	call131_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi132_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep133_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, switch14_val15_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(arg3, gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(4);
	Value* cast135_var = builder.CreateCast(Instruction::SExt, load134_var, types[0]);
	Value* binop136_var = BinaryOperator::Create(Instruction::Mul, cast135_var, phi132_var, "", builder.GetInsertBlock());
	Value* binop137_var = BinaryOperator::Create(Instruction::Add, binop136_var, phi96_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi138_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep139_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, gep4_val5_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(arg3, gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(4);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, gep10_val11_int);
	builder.CreateCondBr(cmp141_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast142_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	ArrayRef<Value*> gep143_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* cast145_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast142_var, gep4_val5_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { load144_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast145_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[27]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep152_var = builder.CreateInBoundsGEP(globals[5], gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(8);
	Value* binop154_var = BinaryOperator::Create(Instruction::Add, load153_var, load144_var, "", builder.GetInsertBlock());
	Value* cmp155_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp36_val36_int);
	builder.CreateCondBr(cmp155_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop154_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast145_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[28]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(4);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(16);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop154_var, "", builder.GetInsertBlock());
	SwitchInst* switch163_var = builder.CreateSwitch(load147_var, block38, 2);
	switch163_var->addCase(cast<ConstantInt>(switch45_val45_int), block36);
	switch163_var->addCase(cast<ConstantInt>(switch45_val46_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast145_var, gep163_array);
	Value* cast164_var = builder.CreateCast(Instruction::BitCast, gep163_var, types[30]);
	llvm::LoadInst* load165_var = builder.CreateLoad(cast164_var, false);
	load165_var->setAlignment(2);
	Value* cast166_var = builder.CreateCast(Instruction::ZExt, load165_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(8);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, binop162_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep170_array { binop169_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast145_var, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call173_var = builder.CreateCall(globals[6], gep58_var);
	call173_var->setTailCall();
	call173_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi174_var = builder.CreatePHI(types[0], 4);
	Value* binop175_var = BinaryOperator::Create(Instruction::Add, phi174_var, phi138_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi176_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep177_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val14_int, };
	Value* gep177_var = builder.CreateInBoundsGEP(arg3, gep177_array);
	llvm::LoadInst* load178_var = builder.CreateLoad(gep177_var, false);
	load178_var->setAlignment(1);
	Value* cast179_var = builder.CreateCast(Instruction::ZExt, load178_var, types[0]);
	CallInst* call180_var = builder.CreateCall2(globals[8], phi176_var, cast179_var);
	call180_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val4_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(globals[10], gep182_array);
	CallInst* call182_var = builder.CreateCall(globals[6], gep182_var);
	call182_var->setTailCall();
	call182_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi185_var = builder.CreatePHI(types[0], 6);
	CallInst* call186_var = builder.CreateCall3(globals[267], arg0, arg1, phi185_var);
	call186_var->setTailCall();
	call186_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi96_var->addIncoming(gep4_val4_int, block11);
	phi96_var->addIncoming(load73_var, block13);
	phi96_var->addIncoming(cast81_var, block15);
	phi96_var->addIncoming(cast88_var, block17);
	phi96_var->addIncoming(cast94_var, block18);
	
	phi132_var->addIncoming(load109_var, block22);
	phi132_var->addIncoming(cast117_var, block24);
	phi132_var->addIncoming(cast124_var, block26);
	phi132_var->addIncoming(cast130_var, block27);
	
	phi138_var->addIncoming(binop137_var, block29);
	phi138_var->addIncoming(phi96_var, block20);
	
	phi174_var->addIncoming(load151_var, block32);
	phi174_var->addIncoming(cast159_var, block34);
	phi174_var->addIncoming(cast166_var, block36);
	phi174_var->addIncoming(cast172_var, block37);
	
	phi176_var->addIncoming(binop175_var, block39);
	phi176_var->addIncoming(phi138_var, block30);
	
	phi185_var->addIncoming(call180_var, block40);
	phi185_var->addIncoming(load18_var, block2);
	phi185_var->addIncoming(load32_var, block4);
	phi185_var->addIncoming(cast41_var, block6);
	phi185_var->addIncoming(cast50_var, block8);
	phi185_var->addIncoming(cast56_var, block9);
	
	return;
}

void x86::x86_jns(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	Constant* gep10_val11_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep10_val11_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep10_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 1u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block3);
	Constant* switch14_val16_int = ConstantInt::get(types[2], 3u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val16_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(arg3, gep17_array);
	Value* cast18_var = builder.CreateCast(Instruction::BitCast, gep17_var, types[27]);
	llvm::LoadInst* load19_var = builder.CreateLoad(cast18_var, false);
	load19_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep20_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep20_var = builder.CreateGEP(arg3, gep20_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep20_var, false);
	load21_var->setAlignment(4);
	Value* cast22_var = builder.CreateCast(Instruction::ZExt, load21_var, types[0]);
	ArrayRef<Value*> gep23_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep23_var, false);
	load25_var->setAlignment(16);
	Value* cast26_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast22_var, switch14_val15_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load28_var = builder.CreateLoad(gep27_var, false);
	load28_var->setAlignment(16);
	Constant* cmp29_val29_int = ConstantInt::get(types[0], 8u);
	Value* cmp29_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp29_val29_int);
	builder.CreateCondBr(cmp29_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep31_array { load25_var, };
	Value* gep31_var = builder.CreateInBoundsGEP(cast26_var, gep31_array);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, gep31_var, types[27]);
	llvm::LoadInst* load33_var = builder.CreateLoad(cast32_var, false);
	load33_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load35_var = builder.CreateLoad(gep34_var, false);
	load35_var->setAlignment(8);
	Value* binop36_var = BinaryOperator::Create(Instruction::Add, load35_var, load25_var, "", builder.GetInsertBlock());
	Constant* cmp37_val37_int = ConstantInt::get(types[0], 4u);
	Value* cmp37_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp37_val37_int);
	builder.CreateCondBr(cmp37_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep39_array { binop36_var, };
	Value* gep39_var = builder.CreateInBoundsGEP(cast26_var, gep39_array);
	Value* cast40_var = builder.CreateCast(Instruction::BitCast, gep39_var, types[28]);
	llvm::LoadInst* load41_var = builder.CreateLoad(cast40_var, false);
	load41_var->setAlignment(4);
	Value* cast42_var = builder.CreateCast(Instruction::ZExt, load41_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Value* binop45_var = BinaryOperator::Create(Instruction::Add, load44_var, binop36_var, "", builder.GetInsertBlock());
	SwitchInst* switch46_var = builder.CreateSwitch(load28_var, block10, 2);
	Constant* switch46_val46_int = ConstantInt::get(types[0], 2u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val46_int), block8);
	Constant* switch46_val47_int = ConstantInt::get(types[0], 1u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val47_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep48_array { binop45_var, };
	Value* gep48_var = builder.CreateInBoundsGEP(cast26_var, gep48_array);
	Value* cast49_var = builder.CreateCast(Instruction::BitCast, gep48_var, types[30]);
	llvm::LoadInst* load50_var = builder.CreateLoad(cast49_var, false);
	load50_var->setAlignment(2);
	Value* cast51_var = builder.CreateCast(Instruction::ZExt, load50_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep52_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep52_var = builder.CreateInBoundsGEP(globals[5], gep52_array);
	llvm::LoadInst* load53_var = builder.CreateLoad(gep52_var, false);
	load53_var->setAlignment(8);
	Value* binop54_var = BinaryOperator::Create(Instruction::Add, load53_var, binop45_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep55_array { binop54_var, };
	Value* gep55_var = builder.CreateInBoundsGEP(cast26_var, gep55_array);
	llvm::LoadInst* load56_var = builder.CreateLoad(gep55_var, false);
	load56_var->setAlignment(1);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep59_array { gep4_val4_int, gep4_val4_int, };
	Value* gep59_var = builder.CreateInBoundsGEP(globals[7], gep59_array);
	CallInst* call58_var = builder.CreateCall(globals[6], gep59_var);
	call58_var->setTailCall();
	call58_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep62_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep62_var = builder.CreateInBoundsGEP(arg3, gep62_array);
	llvm::LoadInst* load63_var = builder.CreateLoad(gep62_var, false);
	load63_var->setAlignment(4);
	Value* cmp64_var = builder.CreateICmp(CmpInst::ICMP_EQ, load63_var, gep10_val11_int);
	builder.CreateCondBr(cmp64_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load63_var, types[0]);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(16);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep69_array { gep4_val4_int, cast65_var, switch14_val15_int, };
	Value* gep69_var = builder.CreateInBoundsGEP(globals[5], gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(16);
	Value* cmp71_var = builder.CreateICmp(CmpInst::ICMP_EQ, load70_var, cmp29_val29_int);
	builder.CreateCondBr(cmp71_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep72_array { load67_var, };
	Value* gep72_var = builder.CreateInBoundsGEP(cast68_var, gep72_array);
	Value* cast73_var = builder.CreateCast(Instruction::BitCast, gep72_var, types[27]);
	llvm::LoadInst* load74_var = builder.CreateLoad(cast73_var, false);
	load74_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(8);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, load67_var, "", builder.GetInsertBlock());
	Value* cmp78_var = builder.CreateICmp(CmpInst::ICMP_EQ, load70_var, cmp37_val37_int);
	builder.CreateCondBr(cmp78_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep79_array { binop77_var, };
	Value* gep79_var = builder.CreateInBoundsGEP(cast68_var, gep79_array);
	Value* cast80_var = builder.CreateCast(Instruction::BitCast, gep79_var, types[28]);
	llvm::LoadInst* load81_var = builder.CreateLoad(cast80_var, false);
	load81_var->setAlignment(4);
	Value* cast82_var = builder.CreateCast(Instruction::ZExt, load81_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep83_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[5], gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(16);
	Value* binop85_var = BinaryOperator::Create(Instruction::Add, load84_var, binop77_var, "", builder.GetInsertBlock());
	SwitchInst* switch86_var = builder.CreateSwitch(load70_var, block19, 2);
	switch86_var->addCase(cast<ConstantInt>(switch46_val46_int), block17);
	switch86_var->addCase(cast<ConstantInt>(switch46_val47_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep86_array { binop85_var, };
	Value* gep86_var = builder.CreateInBoundsGEP(cast68_var, gep86_array);
	Value* cast87_var = builder.CreateCast(Instruction::BitCast, gep86_var, types[30]);
	llvm::LoadInst* load88_var = builder.CreateLoad(cast87_var, false);
	load88_var->setAlignment(2);
	Value* cast89_var = builder.CreateCast(Instruction::ZExt, load88_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(8);
	Value* binop92_var = BinaryOperator::Create(Instruction::Add, load91_var, binop85_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep93_array { binop92_var, };
	Value* gep93_var = builder.CreateInBoundsGEP(cast68_var, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(1);
	Value* cast95_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call96_var = builder.CreateCall(globals[6], gep59_var);
	call96_var->setTailCall();
	call96_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi97_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep98_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val14_int, };
	Value* gep98_var = builder.CreateInBoundsGEP(arg3, gep98_array);
	llvm::LoadInst* load99_var = builder.CreateLoad(gep98_var, false);
	load99_var->setAlignment(4);
	Value* cmp100_var = builder.CreateICmp(CmpInst::ICMP_EQ, load99_var, gep10_val11_int);
	builder.CreateCondBr(cmp100_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast101_var = builder.CreateCast(Instruction::ZExt, load99_var, types[0]);
	ArrayRef<Value*> gep102_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep102_var = builder.CreateInBoundsGEP(globals[5], gep102_array);
	llvm::LoadInst* load103_var = builder.CreateLoad(gep102_var, false);
	load103_var->setAlignment(16);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep105_array { gep4_val4_int, cast101_var, switch14_val15_int, };
	Value* gep105_var = builder.CreateInBoundsGEP(globals[5], gep105_array);
	llvm::LoadInst* load106_var = builder.CreateLoad(gep105_var, false);
	load106_var->setAlignment(16);
	Value* cmp107_var = builder.CreateICmp(CmpInst::ICMP_EQ, load106_var, cmp29_val29_int);
	builder.CreateCondBr(cmp107_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep108_array { load103_var, };
	Value* gep108_var = builder.CreateInBoundsGEP(cast104_var, gep108_array);
	Value* cast109_var = builder.CreateCast(Instruction::BitCast, gep108_var, types[27]);
	llvm::LoadInst* load110_var = builder.CreateLoad(cast109_var, false);
	load110_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(8);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, load103_var, "", builder.GetInsertBlock());
	Value* cmp114_var = builder.CreateICmp(CmpInst::ICMP_EQ, load106_var, cmp37_val37_int);
	builder.CreateCondBr(cmp114_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep115_array { binop113_var, };
	Value* gep115_var = builder.CreateInBoundsGEP(cast104_var, gep115_array);
	Value* cast116_var = builder.CreateCast(Instruction::BitCast, gep115_var, types[28]);
	llvm::LoadInst* load117_var = builder.CreateLoad(cast116_var, false);
	load117_var->setAlignment(4);
	Value* cast118_var = builder.CreateCast(Instruction::ZExt, load117_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep119_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(globals[5], gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(16);
	Value* binop121_var = BinaryOperator::Create(Instruction::Add, load120_var, binop113_var, "", builder.GetInsertBlock());
	SwitchInst* switch122_var = builder.CreateSwitch(load106_var, block28, 2);
	switch122_var->addCase(cast<ConstantInt>(switch46_val46_int), block26);
	switch122_var->addCase(cast<ConstantInt>(switch46_val47_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep122_array { binop121_var, };
	Value* gep122_var = builder.CreateInBoundsGEP(cast104_var, gep122_array);
	Value* cast123_var = builder.CreateCast(Instruction::BitCast, gep122_var, types[30]);
	llvm::LoadInst* load124_var = builder.CreateLoad(cast123_var, false);
	load124_var->setAlignment(2);
	Value* cast125_var = builder.CreateCast(Instruction::ZExt, load124_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(8);
	Value* binop128_var = BinaryOperator::Create(Instruction::Add, load127_var, binop121_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep129_array { binop128_var, };
	Value* gep129_var = builder.CreateInBoundsGEP(cast104_var, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(1);
	Value* cast131_var = builder.CreateCast(Instruction::ZExt, load130_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call132_var = builder.CreateCall(globals[6], gep59_var);
	call132_var->setTailCall();
	call132_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi133_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep134_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val16_int, };
	Value* gep134_var = builder.CreateInBoundsGEP(arg3, gep134_array);
	llvm::LoadInst* load135_var = builder.CreateLoad(gep134_var, false);
	load135_var->setAlignment(4);
	Value* cast136_var = builder.CreateCast(Instruction::SExt, load135_var, types[0]);
	Value* binop137_var = BinaryOperator::Create(Instruction::Mul, cast136_var, phi133_var, "", builder.GetInsertBlock());
	Value* binop138_var = BinaryOperator::Create(Instruction::Add, binop137_var, phi97_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi139_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep140_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val15_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(arg3, gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(4);
	Value* cmp142_var = builder.CreateICmp(CmpInst::ICMP_EQ, load141_var, gep10_val11_int);
	builder.CreateCondBr(cmp142_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast143_var = builder.CreateCast(Instruction::ZExt, load141_var, types[0]);
	ArrayRef<Value*> gep144_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep144_var = builder.CreateInBoundsGEP(globals[5], gep144_array);
	llvm::LoadInst* load145_var = builder.CreateLoad(gep144_var, false);
	load145_var->setAlignment(16);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep147_array { gep4_val4_int, cast143_var, switch14_val15_int, };
	Value* gep147_var = builder.CreateInBoundsGEP(globals[5], gep147_array);
	llvm::LoadInst* load148_var = builder.CreateLoad(gep147_var, false);
	load148_var->setAlignment(16);
	Value* cmp149_var = builder.CreateICmp(CmpInst::ICMP_EQ, load148_var, cmp29_val29_int);
	builder.CreateCondBr(cmp149_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep150_array { load145_var, };
	Value* gep150_var = builder.CreateInBoundsGEP(cast146_var, gep150_array);
	Value* cast151_var = builder.CreateCast(Instruction::BitCast, gep150_var, types[27]);
	llvm::LoadInst* load152_var = builder.CreateLoad(cast151_var, false);
	load152_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(8);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, load145_var, "", builder.GetInsertBlock());
	Value* cmp156_var = builder.CreateICmp(CmpInst::ICMP_EQ, load148_var, cmp37_val37_int);
	builder.CreateCondBr(cmp156_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep157_array { binop155_var, };
	Value* gep157_var = builder.CreateInBoundsGEP(cast146_var, gep157_array);
	Value* cast158_var = builder.CreateCast(Instruction::BitCast, gep157_var, types[28]);
	llvm::LoadInst* load159_var = builder.CreateLoad(cast158_var, false);
	load159_var->setAlignment(4);
	Value* cast160_var = builder.CreateCast(Instruction::ZExt, load159_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep161_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep161_var = builder.CreateInBoundsGEP(globals[5], gep161_array);
	llvm::LoadInst* load162_var = builder.CreateLoad(gep161_var, false);
	load162_var->setAlignment(16);
	Value* binop163_var = BinaryOperator::Create(Instruction::Add, load162_var, binop155_var, "", builder.GetInsertBlock());
	SwitchInst* switch164_var = builder.CreateSwitch(load148_var, block38, 2);
	switch164_var->addCase(cast<ConstantInt>(switch46_val46_int), block36);
	switch164_var->addCase(cast<ConstantInt>(switch46_val47_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep164_array { binop163_var, };
	Value* gep164_var = builder.CreateInBoundsGEP(cast146_var, gep164_array);
	Value* cast165_var = builder.CreateCast(Instruction::BitCast, gep164_var, types[30]);
	llvm::LoadInst* load166_var = builder.CreateLoad(cast165_var, false);
	load166_var->setAlignment(2);
	Value* cast167_var = builder.CreateCast(Instruction::ZExt, load166_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep168_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep168_var = builder.CreateInBoundsGEP(globals[5], gep168_array);
	llvm::LoadInst* load169_var = builder.CreateLoad(gep168_var, false);
	load169_var->setAlignment(8);
	Value* binop170_var = BinaryOperator::Create(Instruction::Add, load169_var, binop163_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep171_array { binop170_var, };
	Value* gep171_var = builder.CreateInBoundsGEP(cast146_var, gep171_array);
	llvm::LoadInst* load172_var = builder.CreateLoad(gep171_var, false);
	load172_var->setAlignment(1);
	Value* cast173_var = builder.CreateCast(Instruction::ZExt, load172_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call174_var = builder.CreateCall(globals[6], gep59_var);
	call174_var->setTailCall();
	call174_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi175_var = builder.CreatePHI(types[0], 4);
	Value* binop176_var = BinaryOperator::Create(Instruction::Add, phi175_var, phi139_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi177_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val14_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(arg3, gep178_array);
	llvm::LoadInst* load179_var = builder.CreateLoad(gep178_var, false);
	load179_var->setAlignment(1);
	Value* cast180_var = builder.CreateCast(Instruction::ZExt, load179_var, types[0]);
	CallInst* call181_var = builder.CreateCall2(globals[8], phi177_var, cast180_var);
	call181_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep183_array { gep4_val4_int, gep4_val4_int, };
	Value* gep183_var = builder.CreateInBoundsGEP(globals[10], gep183_array);
	CallInst* call183_var = builder.CreateCall(globals[6], gep183_var);
	call183_var->setTailCall();
	call183_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi186_var = builder.CreatePHI(types[0], 6);
	CallInst* call187_var = builder.CreateCall3(globals[267], arg0, arg1, phi186_var);
	call187_var->setTailCall();
	call187_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi97_var->addIncoming(gep4_val4_int, block11);
	phi97_var->addIncoming(load74_var, block13);
	phi97_var->addIncoming(cast82_var, block15);
	phi97_var->addIncoming(cast89_var, block17);
	phi97_var->addIncoming(cast95_var, block18);
	
	phi133_var->addIncoming(load110_var, block22);
	phi133_var->addIncoming(cast118_var, block24);
	phi133_var->addIncoming(cast125_var, block26);
	phi133_var->addIncoming(cast131_var, block27);
	
	phi139_var->addIncoming(binop138_var, block29);
	phi139_var->addIncoming(phi97_var, block20);
	
	phi175_var->addIncoming(load152_var, block32);
	phi175_var->addIncoming(cast160_var, block34);
	phi175_var->addIncoming(cast167_var, block36);
	phi175_var->addIncoming(cast173_var, block37);
	
	phi177_var->addIncoming(binop176_var, block39);
	phi177_var->addIncoming(phi139_var, block30);
	
	phi186_var->addIncoming(call181_var, block40);
	phi186_var->addIncoming(load19_var, block2);
	phi186_var->addIncoming(load33_var, block4);
	phi186_var->addIncoming(cast42_var, block6);
	phi186_var->addIncoming(cast51_var, block8);
	phi186_var->addIncoming(cast57_var, block9);
	
	return;
}

void x86::x86_jo(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block43, block1);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	Constant* gep10_val11_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep10_val11_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep10_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 1u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block3);
	Constant* switch14_val16_int = ConstantInt::get(types[2], 3u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val16_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(arg3, gep17_array);
	Value* cast18_var = builder.CreateCast(Instruction::BitCast, gep17_var, types[27]);
	llvm::LoadInst* load19_var = builder.CreateLoad(cast18_var, false);
	load19_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep20_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep20_var = builder.CreateGEP(arg3, gep20_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep20_var, false);
	load21_var->setAlignment(4);
	Value* cast22_var = builder.CreateCast(Instruction::ZExt, load21_var, types[0]);
	ArrayRef<Value*> gep23_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep23_var, false);
	load25_var->setAlignment(16);
	Value* cast26_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast22_var, switch14_val15_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load28_var = builder.CreateLoad(gep27_var, false);
	load28_var->setAlignment(16);
	Constant* cmp29_val29_int = ConstantInt::get(types[0], 8u);
	Value* cmp29_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp29_val29_int);
	builder.CreateCondBr(cmp29_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep31_array { load25_var, };
	Value* gep31_var = builder.CreateInBoundsGEP(cast26_var, gep31_array);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, gep31_var, types[27]);
	llvm::LoadInst* load33_var = builder.CreateLoad(cast32_var, false);
	load33_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load35_var = builder.CreateLoad(gep34_var, false);
	load35_var->setAlignment(8);
	Value* binop36_var = BinaryOperator::Create(Instruction::Add, load35_var, load25_var, "", builder.GetInsertBlock());
	Constant* cmp37_val37_int = ConstantInt::get(types[0], 4u);
	Value* cmp37_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp37_val37_int);
	builder.CreateCondBr(cmp37_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep39_array { binop36_var, };
	Value* gep39_var = builder.CreateInBoundsGEP(cast26_var, gep39_array);
	Value* cast40_var = builder.CreateCast(Instruction::BitCast, gep39_var, types[28]);
	llvm::LoadInst* load41_var = builder.CreateLoad(cast40_var, false);
	load41_var->setAlignment(4);
	Value* cast42_var = builder.CreateCast(Instruction::ZExt, load41_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Value* binop45_var = BinaryOperator::Create(Instruction::Add, load44_var, binop36_var, "", builder.GetInsertBlock());
	SwitchInst* switch46_var = builder.CreateSwitch(load28_var, block10, 2);
	Constant* switch46_val46_int = ConstantInt::get(types[0], 2u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val46_int), block8);
	Constant* switch46_val47_int = ConstantInt::get(types[0], 1u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val47_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep48_array { binop45_var, };
	Value* gep48_var = builder.CreateInBoundsGEP(cast26_var, gep48_array);
	Value* cast49_var = builder.CreateCast(Instruction::BitCast, gep48_var, types[30]);
	llvm::LoadInst* load50_var = builder.CreateLoad(cast49_var, false);
	load50_var->setAlignment(2);
	Value* cast51_var = builder.CreateCast(Instruction::ZExt, load50_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep52_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep52_var = builder.CreateInBoundsGEP(globals[5], gep52_array);
	llvm::LoadInst* load53_var = builder.CreateLoad(gep52_var, false);
	load53_var->setAlignment(8);
	Value* binop54_var = BinaryOperator::Create(Instruction::Add, load53_var, binop45_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep55_array { binop54_var, };
	Value* gep55_var = builder.CreateInBoundsGEP(cast26_var, gep55_array);
	llvm::LoadInst* load56_var = builder.CreateLoad(gep55_var, false);
	load56_var->setAlignment(1);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep59_array { gep4_val4_int, gep4_val4_int, };
	Value* gep59_var = builder.CreateInBoundsGEP(globals[7], gep59_array);
	CallInst* call58_var = builder.CreateCall(globals[6], gep59_var);
	call58_var->setTailCall();
	call58_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep62_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep62_var = builder.CreateInBoundsGEP(arg3, gep62_array);
	llvm::LoadInst* load63_var = builder.CreateLoad(gep62_var, false);
	load63_var->setAlignment(4);
	Value* cmp64_var = builder.CreateICmp(CmpInst::ICMP_EQ, load63_var, gep10_val11_int);
	builder.CreateCondBr(cmp64_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load63_var, types[0]);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(16);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep69_array { gep4_val4_int, cast65_var, switch14_val15_int, };
	Value* gep69_var = builder.CreateInBoundsGEP(globals[5], gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(16);
	Value* cmp71_var = builder.CreateICmp(CmpInst::ICMP_EQ, load70_var, cmp29_val29_int);
	builder.CreateCondBr(cmp71_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep72_array { load67_var, };
	Value* gep72_var = builder.CreateInBoundsGEP(cast68_var, gep72_array);
	Value* cast73_var = builder.CreateCast(Instruction::BitCast, gep72_var, types[27]);
	llvm::LoadInst* load74_var = builder.CreateLoad(cast73_var, false);
	load74_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(8);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, load67_var, "", builder.GetInsertBlock());
	Value* cmp78_var = builder.CreateICmp(CmpInst::ICMP_EQ, load70_var, cmp37_val37_int);
	builder.CreateCondBr(cmp78_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep79_array { binop77_var, };
	Value* gep79_var = builder.CreateInBoundsGEP(cast68_var, gep79_array);
	Value* cast80_var = builder.CreateCast(Instruction::BitCast, gep79_var, types[28]);
	llvm::LoadInst* load81_var = builder.CreateLoad(cast80_var, false);
	load81_var->setAlignment(4);
	Value* cast82_var = builder.CreateCast(Instruction::ZExt, load81_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep83_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[5], gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(16);
	Value* binop85_var = BinaryOperator::Create(Instruction::Add, load84_var, binop77_var, "", builder.GetInsertBlock());
	SwitchInst* switch86_var = builder.CreateSwitch(load70_var, block19, 2);
	switch86_var->addCase(cast<ConstantInt>(switch46_val46_int), block17);
	switch86_var->addCase(cast<ConstantInt>(switch46_val47_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep86_array { binop85_var, };
	Value* gep86_var = builder.CreateInBoundsGEP(cast68_var, gep86_array);
	Value* cast87_var = builder.CreateCast(Instruction::BitCast, gep86_var, types[30]);
	llvm::LoadInst* load88_var = builder.CreateLoad(cast87_var, false);
	load88_var->setAlignment(2);
	Value* cast89_var = builder.CreateCast(Instruction::ZExt, load88_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(8);
	Value* binop92_var = BinaryOperator::Create(Instruction::Add, load91_var, binop85_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep93_array { binop92_var, };
	Value* gep93_var = builder.CreateInBoundsGEP(cast68_var, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(1);
	Value* cast95_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call96_var = builder.CreateCall(globals[6], gep59_var);
	call96_var->setTailCall();
	call96_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi97_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep98_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val14_int, };
	Value* gep98_var = builder.CreateInBoundsGEP(arg3, gep98_array);
	llvm::LoadInst* load99_var = builder.CreateLoad(gep98_var, false);
	load99_var->setAlignment(4);
	Value* cmp100_var = builder.CreateICmp(CmpInst::ICMP_EQ, load99_var, gep10_val11_int);
	builder.CreateCondBr(cmp100_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast101_var = builder.CreateCast(Instruction::ZExt, load99_var, types[0]);
	ArrayRef<Value*> gep102_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep102_var = builder.CreateInBoundsGEP(globals[5], gep102_array);
	llvm::LoadInst* load103_var = builder.CreateLoad(gep102_var, false);
	load103_var->setAlignment(16);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep105_array { gep4_val4_int, cast101_var, switch14_val15_int, };
	Value* gep105_var = builder.CreateInBoundsGEP(globals[5], gep105_array);
	llvm::LoadInst* load106_var = builder.CreateLoad(gep105_var, false);
	load106_var->setAlignment(16);
	Value* cmp107_var = builder.CreateICmp(CmpInst::ICMP_EQ, load106_var, cmp29_val29_int);
	builder.CreateCondBr(cmp107_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep108_array { load103_var, };
	Value* gep108_var = builder.CreateInBoundsGEP(cast104_var, gep108_array);
	Value* cast109_var = builder.CreateCast(Instruction::BitCast, gep108_var, types[27]);
	llvm::LoadInst* load110_var = builder.CreateLoad(cast109_var, false);
	load110_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(8);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, load103_var, "", builder.GetInsertBlock());
	Value* cmp114_var = builder.CreateICmp(CmpInst::ICMP_EQ, load106_var, cmp37_val37_int);
	builder.CreateCondBr(cmp114_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep115_array { binop113_var, };
	Value* gep115_var = builder.CreateInBoundsGEP(cast104_var, gep115_array);
	Value* cast116_var = builder.CreateCast(Instruction::BitCast, gep115_var, types[28]);
	llvm::LoadInst* load117_var = builder.CreateLoad(cast116_var, false);
	load117_var->setAlignment(4);
	Value* cast118_var = builder.CreateCast(Instruction::ZExt, load117_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep119_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(globals[5], gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(16);
	Value* binop121_var = BinaryOperator::Create(Instruction::Add, load120_var, binop113_var, "", builder.GetInsertBlock());
	SwitchInst* switch122_var = builder.CreateSwitch(load106_var, block28, 2);
	switch122_var->addCase(cast<ConstantInt>(switch46_val46_int), block26);
	switch122_var->addCase(cast<ConstantInt>(switch46_val47_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep122_array { binop121_var, };
	Value* gep122_var = builder.CreateInBoundsGEP(cast104_var, gep122_array);
	Value* cast123_var = builder.CreateCast(Instruction::BitCast, gep122_var, types[30]);
	llvm::LoadInst* load124_var = builder.CreateLoad(cast123_var, false);
	load124_var->setAlignment(2);
	Value* cast125_var = builder.CreateCast(Instruction::ZExt, load124_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(8);
	Value* binop128_var = BinaryOperator::Create(Instruction::Add, load127_var, binop121_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep129_array { binop128_var, };
	Value* gep129_var = builder.CreateInBoundsGEP(cast104_var, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(1);
	Value* cast131_var = builder.CreateCast(Instruction::ZExt, load130_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call132_var = builder.CreateCall(globals[6], gep59_var);
	call132_var->setTailCall();
	call132_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi133_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep134_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val16_int, };
	Value* gep134_var = builder.CreateInBoundsGEP(arg3, gep134_array);
	llvm::LoadInst* load135_var = builder.CreateLoad(gep134_var, false);
	load135_var->setAlignment(4);
	Value* cast136_var = builder.CreateCast(Instruction::SExt, load135_var, types[0]);
	Value* binop137_var = BinaryOperator::Create(Instruction::Mul, cast136_var, phi133_var, "", builder.GetInsertBlock());
	Value* binop138_var = BinaryOperator::Create(Instruction::Add, binop137_var, phi97_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi139_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep140_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val15_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(arg3, gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(4);
	Value* cmp142_var = builder.CreateICmp(CmpInst::ICMP_EQ, load141_var, gep10_val11_int);
	builder.CreateCondBr(cmp142_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast143_var = builder.CreateCast(Instruction::ZExt, load141_var, types[0]);
	ArrayRef<Value*> gep144_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep144_var = builder.CreateInBoundsGEP(globals[5], gep144_array);
	llvm::LoadInst* load145_var = builder.CreateLoad(gep144_var, false);
	load145_var->setAlignment(16);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep147_array { gep4_val4_int, cast143_var, switch14_val15_int, };
	Value* gep147_var = builder.CreateInBoundsGEP(globals[5], gep147_array);
	llvm::LoadInst* load148_var = builder.CreateLoad(gep147_var, false);
	load148_var->setAlignment(16);
	Value* cmp149_var = builder.CreateICmp(CmpInst::ICMP_EQ, load148_var, cmp29_val29_int);
	builder.CreateCondBr(cmp149_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep150_array { load145_var, };
	Value* gep150_var = builder.CreateInBoundsGEP(cast146_var, gep150_array);
	Value* cast151_var = builder.CreateCast(Instruction::BitCast, gep150_var, types[27]);
	llvm::LoadInst* load152_var = builder.CreateLoad(cast151_var, false);
	load152_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(8);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, load145_var, "", builder.GetInsertBlock());
	Value* cmp156_var = builder.CreateICmp(CmpInst::ICMP_EQ, load148_var, cmp37_val37_int);
	builder.CreateCondBr(cmp156_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep157_array { binop155_var, };
	Value* gep157_var = builder.CreateInBoundsGEP(cast146_var, gep157_array);
	Value* cast158_var = builder.CreateCast(Instruction::BitCast, gep157_var, types[28]);
	llvm::LoadInst* load159_var = builder.CreateLoad(cast158_var, false);
	load159_var->setAlignment(4);
	Value* cast160_var = builder.CreateCast(Instruction::ZExt, load159_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep161_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep161_var = builder.CreateInBoundsGEP(globals[5], gep161_array);
	llvm::LoadInst* load162_var = builder.CreateLoad(gep161_var, false);
	load162_var->setAlignment(16);
	Value* binop163_var = BinaryOperator::Create(Instruction::Add, load162_var, binop155_var, "", builder.GetInsertBlock());
	SwitchInst* switch164_var = builder.CreateSwitch(load148_var, block38, 2);
	switch164_var->addCase(cast<ConstantInt>(switch46_val46_int), block36);
	switch164_var->addCase(cast<ConstantInt>(switch46_val47_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep164_array { binop163_var, };
	Value* gep164_var = builder.CreateInBoundsGEP(cast146_var, gep164_array);
	Value* cast165_var = builder.CreateCast(Instruction::BitCast, gep164_var, types[30]);
	llvm::LoadInst* load166_var = builder.CreateLoad(cast165_var, false);
	load166_var->setAlignment(2);
	Value* cast167_var = builder.CreateCast(Instruction::ZExt, load166_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep168_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep168_var = builder.CreateInBoundsGEP(globals[5], gep168_array);
	llvm::LoadInst* load169_var = builder.CreateLoad(gep168_var, false);
	load169_var->setAlignment(8);
	Value* binop170_var = BinaryOperator::Create(Instruction::Add, load169_var, binop163_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep171_array { binop170_var, };
	Value* gep171_var = builder.CreateInBoundsGEP(cast146_var, gep171_array);
	llvm::LoadInst* load172_var = builder.CreateLoad(gep171_var, false);
	load172_var->setAlignment(1);
	Value* cast173_var = builder.CreateCast(Instruction::ZExt, load172_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call174_var = builder.CreateCall(globals[6], gep59_var);
	call174_var->setTailCall();
	call174_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi175_var = builder.CreatePHI(types[0], 4);
	Value* binop176_var = BinaryOperator::Create(Instruction::Add, phi175_var, phi139_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi177_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val14_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(arg3, gep178_array);
	llvm::LoadInst* load179_var = builder.CreateLoad(gep178_var, false);
	load179_var->setAlignment(1);
	Value* cast180_var = builder.CreateCast(Instruction::ZExt, load179_var, types[0]);
	CallInst* call181_var = builder.CreateCall2(globals[8], phi177_var, cast180_var);
	call181_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep183_array { gep4_val4_int, gep4_val4_int, };
	Value* gep183_var = builder.CreateInBoundsGEP(globals[10], gep183_array);
	CallInst* call183_var = builder.CreateCall(globals[6], gep183_var);
	call183_var->setTailCall();
	call183_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi186_var = builder.CreatePHI(types[0], 6);
	CallInst* call187_var = builder.CreateCall3(globals[267], arg0, arg1, phi186_var);
	call187_var->setTailCall();
	call187_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi97_var->addIncoming(gep4_val4_int, block11);
	phi97_var->addIncoming(load74_var, block13);
	phi97_var->addIncoming(cast82_var, block15);
	phi97_var->addIncoming(cast89_var, block17);
	phi97_var->addIncoming(cast95_var, block18);
	
	phi133_var->addIncoming(load110_var, block22);
	phi133_var->addIncoming(cast118_var, block24);
	phi133_var->addIncoming(cast125_var, block26);
	phi133_var->addIncoming(cast131_var, block27);
	
	phi139_var->addIncoming(binop138_var, block29);
	phi139_var->addIncoming(phi97_var, block20);
	
	phi175_var->addIncoming(load152_var, block32);
	phi175_var->addIncoming(cast160_var, block34);
	phi175_var->addIncoming(cast167_var, block36);
	phi175_var->addIncoming(cast173_var, block37);
	
	phi177_var->addIncoming(binop176_var, block39);
	phi177_var->addIncoming(phi139_var, block30);
	
	phi186_var->addIncoming(call181_var, block40);
	phi186_var->addIncoming(load19_var, block2);
	phi186_var->addIncoming(load33_var, block4);
	phi186_var->addIncoming(cast42_var, block6);
	phi186_var->addIncoming(cast51_var, block8);
	phi186_var->addIncoming(cast57_var, block9);
	
	return;
}

void x86::x86_jp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 1u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block43, block1);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	Constant* gep10_val11_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep10_val11_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep10_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	switch14_var->addCase(cast<ConstantInt>(gep4_val5_int), block3);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 3u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, gep16_var, types[27]);
	llvm::LoadInst* load18_var = builder.CreateLoad(cast17_var, false);
	load18_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, gep10_val11_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	Value* cast25_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep26_array { gep4_val4_int, cast21_var, gep4_val5_int, };
	Value* gep26_var = builder.CreateInBoundsGEP(globals[5], gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(16);
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 8u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { load24_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast25_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(8);
	Value* binop35_var = BinaryOperator::Create(Instruction::Add, load34_var, load24_var, "", builder.GetInsertBlock());
	Constant* cmp36_val36_int = ConstantInt::get(types[0], 4u);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load27_var, cmp36_val36_int);
	builder.CreateCondBr(cmp36_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { binop35_var, };
	Value* gep38_var = builder.CreateInBoundsGEP(cast25_var, gep38_array);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, gep38_var, types[28]);
	llvm::LoadInst* load40_var = builder.CreateLoad(cast39_var, false);
	load40_var->setAlignment(4);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* binop44_var = BinaryOperator::Create(Instruction::Add, load43_var, binop35_var, "", builder.GetInsertBlock());
	SwitchInst* switch45_var = builder.CreateSwitch(load27_var, block10, 2);
	Constant* switch45_val45_int = ConstantInt::get(types[0], 2u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val45_int), block8);
	Constant* switch45_val46_int = ConstantInt::get(types[0], 1u);
	switch45_var->addCase(cast<ConstantInt>(switch45_val46_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { binop44_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast25_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[30]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(2);
	Value* cast50_var = builder.CreateCast(Instruction::ZExt, load49_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep51_array { gep4_val4_int, cast21_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[5], gep51_array);
	llvm::LoadInst* load52_var = builder.CreateLoad(gep51_var, false);
	load52_var->setAlignment(8);
	Value* binop53_var = BinaryOperator::Create(Instruction::Add, load52_var, binop44_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep54_array { binop53_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast25_var, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(1);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep58_array { gep4_val4_int, gep4_val4_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[7], gep58_array);
	CallInst* call57_var = builder.CreateCall(globals[6], gep58_var);
	call57_var->setTailCall();
	call57_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep61_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, gep10_val11_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(arg3, gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(4);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, gep10_val11_int);
	builder.CreateCondBr(cmp63_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast64_var = builder.CreateCast(Instruction::ZExt, load62_var, types[0]);
	ArrayRef<Value*> gep65_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep65_var = builder.CreateInBoundsGEP(globals[5], gep65_array);
	llvm::LoadInst* load66_var = builder.CreateLoad(gep65_var, false);
	load66_var->setAlignment(16);
	Value* cast67_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast64_var, gep4_val5_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(16);
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { load66_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast67_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[27]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[5], gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(8);
	Value* binop76_var = BinaryOperator::Create(Instruction::Add, load75_var, load66_var, "", builder.GetInsertBlock());
	Value* cmp77_var = builder.CreateICmp(CmpInst::ICMP_EQ, load69_var, cmp36_val36_int);
	builder.CreateCondBr(cmp77_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop76_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast67_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[28]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(4);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop76_var, "", builder.GetInsertBlock());
	SwitchInst* switch85_var = builder.CreateSwitch(load69_var, block19, 2);
	switch85_var->addCase(cast<ConstantInt>(switch45_val45_int), block17);
	switch85_var->addCase(cast<ConstantInt>(switch45_val46_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast67_var, gep85_array);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, gep85_var, types[30]);
	llvm::LoadInst* load87_var = builder.CreateLoad(cast86_var, false);
	load87_var->setAlignment(2);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load87_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast64_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(8);
	Value* binop91_var = BinaryOperator::Create(Instruction::Add, load90_var, binop84_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep92_array { binop91_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast67_var, gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(1);
	Value* cast94_var = builder.CreateCast(Instruction::ZExt, load93_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call95_var = builder.CreateCall(globals[6], gep58_var);
	call95_var->setTailCall();
	call95_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi96_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep97_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, switch14_val14_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(arg3, gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(4);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, gep10_val11_int);
	builder.CreateCondBr(cmp99_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	ArrayRef<Value*> gep101_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* cast103_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast100_var, gep4_val5_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { load102_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast103_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[27]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep110_var = builder.CreateInBoundsGEP(globals[5], gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(8);
	Value* binop112_var = BinaryOperator::Create(Instruction::Add, load111_var, load102_var, "", builder.GetInsertBlock());
	Value* cmp113_var = builder.CreateICmp(CmpInst::ICMP_EQ, load105_var, cmp36_val36_int);
	builder.CreateCondBr(cmp113_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop112_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast103_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[28]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(16);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop112_var, "", builder.GetInsertBlock());
	SwitchInst* switch121_var = builder.CreateSwitch(load105_var, block28, 2);
	switch121_var->addCase(cast<ConstantInt>(switch45_val45_int), block26);
	switch121_var->addCase(cast<ConstantInt>(switch45_val46_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast103_var, gep121_array);
	Value* cast122_var = builder.CreateCast(Instruction::BitCast, gep121_var, types[30]);
	llvm::LoadInst* load123_var = builder.CreateLoad(cast122_var, false);
	load123_var->setAlignment(2);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast100_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(8);
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, load126_var, binop120_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep128_array { binop127_var, };
	Value* gep128_var = builder.CreateInBoundsGEP(cast103_var, gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(1);
	Value* cast130_var = builder.CreateCast(Instruction::ZExt, load129_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call131_var = builder.CreateCall(globals[6], gep58_var);
	call131_var->setTailCall();
	call131_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi132_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep133_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, switch14_val15_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(arg3, gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(4);
	Value* cast135_var = builder.CreateCast(Instruction::SExt, load134_var, types[0]);
	Value* binop136_var = BinaryOperator::Create(Instruction::Mul, cast135_var, phi132_var, "", builder.GetInsertBlock());
	Value* binop137_var = BinaryOperator::Create(Instruction::Add, binop136_var, phi96_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi138_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep139_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep4_val5_int, gep10_val11_int, gep4_val5_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(arg3, gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(4);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, gep10_val11_int);
	builder.CreateCondBr(cmp141_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast142_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	ArrayRef<Value*> gep143_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* cast145_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast142_var, gep4_val5_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { load144_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast145_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[27]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, gep4_val5_int, };
	Value* gep152_var = builder.CreateInBoundsGEP(globals[5], gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(8);
	Value* binop154_var = BinaryOperator::Create(Instruction::Add, load153_var, load144_var, "", builder.GetInsertBlock());
	Value* cmp155_var = builder.CreateICmp(CmpInst::ICMP_EQ, load147_var, cmp36_val36_int);
	builder.CreateCondBr(cmp155_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop154_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast145_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[28]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(4);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(16);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop154_var, "", builder.GetInsertBlock());
	SwitchInst* switch163_var = builder.CreateSwitch(load147_var, block38, 2);
	switch163_var->addCase(cast<ConstantInt>(switch45_val45_int), block36);
	switch163_var->addCase(cast<ConstantInt>(switch45_val46_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast145_var, gep163_array);
	Value* cast164_var = builder.CreateCast(Instruction::BitCast, gep163_var, types[30]);
	llvm::LoadInst* load165_var = builder.CreateLoad(cast164_var, false);
	load165_var->setAlignment(2);
	Value* cast166_var = builder.CreateCast(Instruction::ZExt, load165_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast142_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(8);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, binop162_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep170_array { binop169_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast145_var, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call173_var = builder.CreateCall(globals[6], gep58_var);
	call173_var->setTailCall();
	call173_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi174_var = builder.CreatePHI(types[0], 4);
	Value* binop175_var = BinaryOperator::Create(Instruction::Add, phi174_var, phi138_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi176_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep177_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val14_int, };
	Value* gep177_var = builder.CreateInBoundsGEP(arg3, gep177_array);
	llvm::LoadInst* load178_var = builder.CreateLoad(gep177_var, false);
	load178_var->setAlignment(1);
	Value* cast179_var = builder.CreateCast(Instruction::ZExt, load178_var, types[0]);
	CallInst* call180_var = builder.CreateCall2(globals[8], phi176_var, cast179_var);
	call180_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val4_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(globals[10], gep182_array);
	CallInst* call182_var = builder.CreateCall(globals[6], gep182_var);
	call182_var->setTailCall();
	call182_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi185_var = builder.CreatePHI(types[0], 6);
	CallInst* call186_var = builder.CreateCall3(globals[267], arg0, arg1, phi185_var);
	call186_var->setTailCall();
	call186_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi96_var->addIncoming(gep4_val4_int, block11);
	phi96_var->addIncoming(load73_var, block13);
	phi96_var->addIncoming(cast81_var, block15);
	phi96_var->addIncoming(cast88_var, block17);
	phi96_var->addIncoming(cast94_var, block18);
	
	phi132_var->addIncoming(load109_var, block22);
	phi132_var->addIncoming(cast117_var, block24);
	phi132_var->addIncoming(cast124_var, block26);
	phi132_var->addIncoming(cast130_var, block27);
	
	phi138_var->addIncoming(binop137_var, block29);
	phi138_var->addIncoming(phi96_var, block20);
	
	phi174_var->addIncoming(load151_var, block32);
	phi174_var->addIncoming(cast159_var, block34);
	phi174_var->addIncoming(cast166_var, block36);
	phi174_var->addIncoming(cast172_var, block37);
	
	phi176_var->addIncoming(binop175_var, block39);
	phi176_var->addIncoming(phi138_var, block30);
	
	phi185_var->addIncoming(call180_var, block40);
	phi185_var->addIncoming(load18_var, block2);
	phi185_var->addIncoming(load32_var, block4);
	phi185_var->addIncoming(cast41_var, block6);
	phi185_var->addIncoming(cast50_var, block8);
	phi185_var->addIncoming(cast56_var, block9);
	
	return;
}

void x86::x86_jrcxz(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Value* cast4_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	Constant* gep5_val5_int = ConstantInt::get(types[0], 0u);
	Constant* gep5_val6_int = ConstantInt::get(types[2], 3u);
	Constant* gep5_val7_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep5_array { gep5_val5_int, gep5_val6_int, gep5_val7_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(arg1, gep5_array);
	llvm::LoadInst* load9_var = builder.CreateLoad(gep5_var, false);
	load9_var->setAlignment(8);
	Value* cmp10_var = builder.CreateICmp(CmpInst::ICMP_EQ, load9_var, gep5_val5_int);
	builder.CreateCondBr(cmp10_var, block1, block43);
	
	builder.SetInsertPoint(block1);
	Constant* gep11_val11_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep11_array { gep5_val5_int, gep11_val11_int, gep5_val5_int, gep5_val7_int, };
	Value* gep11_var = builder.CreateInBoundsGEP(arg3, gep11_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep11_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 1u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block3);
	switch14_var->addCase(cast<ConstantInt>(gep5_val6_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep5_val5_int, gep11_val11_int, gep5_val5_int, switch14_val15_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, gep16_var, types[27]);
	llvm::LoadInst* load18_var = builder.CreateLoad(cast17_var, false);
	load18_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep19_array { gep5_val5_int, gep11_val11_int, gep5_val5_int, switch14_val15_int, gep5_val7_int, gep5_val7_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep5_val5_int, cast21_var, gep5_val7_int, gep5_val7_int, gep5_val7_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	ArrayRef<Value*> gep25_array { gep5_val5_int, cast21_var, switch14_val15_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(16);
	Constant* cmp27_val27_int = ConstantInt::get(types[0], 8u);
	Value* cmp27_var = builder.CreateICmp(CmpInst::ICMP_EQ, load26_var, cmp27_val27_int);
	builder.CreateCondBr(cmp27_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep29_array { load24_var, };
	Value* gep29_var = builder.CreateInBoundsGEP(cast4_var, gep29_array);
	Value* cast30_var = builder.CreateCast(Instruction::BitCast, gep29_var, types[27]);
	llvm::LoadInst* load31_var = builder.CreateLoad(cast30_var, false);
	load31_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep32_array { gep5_val5_int, cast21_var, gep5_val7_int, gep5_val7_int, switch14_val15_int, };
	Value* gep32_var = builder.CreateInBoundsGEP(globals[5], gep32_array);
	llvm::LoadInst* load33_var = builder.CreateLoad(gep32_var, false);
	load33_var->setAlignment(8);
	Value* binop34_var = BinaryOperator::Create(Instruction::Add, load33_var, load24_var, "", builder.GetInsertBlock());
	Constant* cmp35_val35_int = ConstantInt::get(types[0], 4u);
	Value* cmp35_var = builder.CreateICmp(CmpInst::ICMP_EQ, load26_var, cmp35_val35_int);
	builder.CreateCondBr(cmp35_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep37_array { binop34_var, };
	Value* gep37_var = builder.CreateInBoundsGEP(cast4_var, gep37_array);
	Value* cast38_var = builder.CreateCast(Instruction::BitCast, gep37_var, types[28]);
	llvm::LoadInst* load39_var = builder.CreateLoad(cast38_var, false);
	load39_var->setAlignment(4);
	Value* cast40_var = builder.CreateCast(Instruction::ZExt, load39_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep41_array { gep5_val5_int, cast21_var, gep5_val7_int, gep5_val7_int, switch14_val14_int, };
	Value* gep41_var = builder.CreateInBoundsGEP(globals[5], gep41_array);
	llvm::LoadInst* load42_var = builder.CreateLoad(gep41_var, false);
	load42_var->setAlignment(16);
	Value* binop43_var = BinaryOperator::Create(Instruction::Add, load42_var, binop34_var, "", builder.GetInsertBlock());
	SwitchInst* switch44_var = builder.CreateSwitch(load26_var, block10, 2);
	Constant* switch44_val44_int = ConstantInt::get(types[0], 2u);
	switch44_var->addCase(cast<ConstantInt>(switch44_val44_int), block8);
	Constant* switch44_val45_int = ConstantInt::get(types[0], 1u);
	switch44_var->addCase(cast<ConstantInt>(switch44_val45_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep46_array { binop43_var, };
	Value* gep46_var = builder.CreateInBoundsGEP(cast4_var, gep46_array);
	Value* cast47_var = builder.CreateCast(Instruction::BitCast, gep46_var, types[30]);
	llvm::LoadInst* load48_var = builder.CreateLoad(cast47_var, false);
	load48_var->setAlignment(2);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep50_array { gep5_val5_int, cast21_var, gep5_val7_int, gep5_val7_int, gep5_val6_int, };
	Value* gep50_var = builder.CreateInBoundsGEP(globals[5], gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(8);
	Value* binop52_var = BinaryOperator::Create(Instruction::Add, load51_var, binop43_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep53_array { binop52_var, };
	Value* gep53_var = builder.CreateInBoundsGEP(cast4_var, gep53_array);
	llvm::LoadInst* load54_var = builder.CreateLoad(gep53_var, false);
	load54_var->setAlignment(1);
	Value* cast55_var = builder.CreateCast(Instruction::ZExt, load54_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep57_array { gep5_val5_int, gep5_val5_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(globals[7], gep57_array);
	CallInst* call56_var = builder.CreateCall(globals[6], gep57_var);
	call56_var->setTailCall();
	call56_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep60_array { gep5_val5_int, gep11_val11_int, gep5_val5_int, switch14_val15_int, gep5_val7_int, gep5_val7_int, };
	Value* gep60_var = builder.CreateInBoundsGEP(arg3, gep60_array);
	llvm::LoadInst* load61_var = builder.CreateLoad(gep60_var, false);
	load61_var->setAlignment(4);
	Value* cmp62_var = builder.CreateICmp(CmpInst::ICMP_EQ, load61_var, gep5_val7_int);
	builder.CreateCondBr(cmp62_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast63_var = builder.CreateCast(Instruction::ZExt, load61_var, types[0]);
	ArrayRef<Value*> gep64_array { gep5_val5_int, cast63_var, gep5_val7_int, gep5_val7_int, gep5_val7_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(globals[5], gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(16);
	ArrayRef<Value*> gep66_array { gep5_val5_int, cast63_var, switch14_val15_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(16);
	Value* cmp68_var = builder.CreateICmp(CmpInst::ICMP_EQ, load67_var, cmp27_val27_int);
	builder.CreateCondBr(cmp68_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep69_array { load65_var, };
	Value* gep69_var = builder.CreateInBoundsGEP(cast4_var, gep69_array);
	Value* cast70_var = builder.CreateCast(Instruction::BitCast, gep69_var, types[27]);
	llvm::LoadInst* load71_var = builder.CreateLoad(cast70_var, false);
	load71_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep72_array { gep5_val5_int, cast63_var, gep5_val7_int, gep5_val7_int, switch14_val15_int, };
	Value* gep72_var = builder.CreateInBoundsGEP(globals[5], gep72_array);
	llvm::LoadInst* load73_var = builder.CreateLoad(gep72_var, false);
	load73_var->setAlignment(8);
	Value* binop74_var = BinaryOperator::Create(Instruction::Add, load73_var, load65_var, "", builder.GetInsertBlock());
	Value* cmp75_var = builder.CreateICmp(CmpInst::ICMP_EQ, load67_var, cmp35_val35_int);
	builder.CreateCondBr(cmp75_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep76_array { binop74_var, };
	Value* gep76_var = builder.CreateInBoundsGEP(cast4_var, gep76_array);
	Value* cast77_var = builder.CreateCast(Instruction::BitCast, gep76_var, types[28]);
	llvm::LoadInst* load78_var = builder.CreateLoad(cast77_var, false);
	load78_var->setAlignment(4);
	Value* cast79_var = builder.CreateCast(Instruction::ZExt, load78_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep80_array { gep5_val5_int, cast63_var, gep5_val7_int, gep5_val7_int, switch14_val14_int, };
	Value* gep80_var = builder.CreateInBoundsGEP(globals[5], gep80_array);
	llvm::LoadInst* load81_var = builder.CreateLoad(gep80_var, false);
	load81_var->setAlignment(16);
	Value* binop82_var = BinaryOperator::Create(Instruction::Add, load81_var, binop74_var, "", builder.GetInsertBlock());
	SwitchInst* switch83_var = builder.CreateSwitch(load67_var, block19, 2);
	switch83_var->addCase(cast<ConstantInt>(switch44_val44_int), block17);
	switch83_var->addCase(cast<ConstantInt>(switch44_val45_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep83_array { binop82_var, };
	Value* gep83_var = builder.CreateInBoundsGEP(cast4_var, gep83_array);
	Value* cast84_var = builder.CreateCast(Instruction::BitCast, gep83_var, types[30]);
	llvm::LoadInst* load85_var = builder.CreateLoad(cast84_var, false);
	load85_var->setAlignment(2);
	Value* cast86_var = builder.CreateCast(Instruction::ZExt, load85_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep87_array { gep5_val5_int, cast63_var, gep5_val7_int, gep5_val7_int, gep5_val6_int, };
	Value* gep87_var = builder.CreateInBoundsGEP(globals[5], gep87_array);
	llvm::LoadInst* load88_var = builder.CreateLoad(gep87_var, false);
	load88_var->setAlignment(8);
	Value* binop89_var = BinaryOperator::Create(Instruction::Add, load88_var, binop82_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep90_array { binop89_var, };
	Value* gep90_var = builder.CreateInBoundsGEP(cast4_var, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(1);
	Value* cast92_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call93_var = builder.CreateCall(globals[6], gep57_var);
	call93_var->setTailCall();
	call93_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi94_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep95_array { gep5_val5_int, gep11_val11_int, gep5_val5_int, switch14_val15_int, gep5_val7_int, switch14_val14_int, };
	Value* gep95_var = builder.CreateInBoundsGEP(arg3, gep95_array);
	llvm::LoadInst* load96_var = builder.CreateLoad(gep95_var, false);
	load96_var->setAlignment(4);
	Value* cmp97_var = builder.CreateICmp(CmpInst::ICMP_EQ, load96_var, gep5_val7_int);
	builder.CreateCondBr(cmp97_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast98_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	ArrayRef<Value*> gep99_array { gep5_val5_int, cast98_var, gep5_val7_int, gep5_val7_int, gep5_val7_int, };
	Value* gep99_var = builder.CreateInBoundsGEP(globals[5], gep99_array);
	llvm::LoadInst* load100_var = builder.CreateLoad(gep99_var, false);
	load100_var->setAlignment(16);
	ArrayRef<Value*> gep101_array { gep5_val5_int, cast98_var, switch14_val15_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* cmp103_var = builder.CreateICmp(CmpInst::ICMP_EQ, load102_var, cmp27_val27_int);
	builder.CreateCondBr(cmp103_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep104_array { load100_var, };
	Value* gep104_var = builder.CreateInBoundsGEP(cast4_var, gep104_array);
	Value* cast105_var = builder.CreateCast(Instruction::BitCast, gep104_var, types[27]);
	llvm::LoadInst* load106_var = builder.CreateLoad(cast105_var, false);
	load106_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep107_array { gep5_val5_int, cast98_var, gep5_val7_int, gep5_val7_int, switch14_val15_int, };
	Value* gep107_var = builder.CreateInBoundsGEP(globals[5], gep107_array);
	llvm::LoadInst* load108_var = builder.CreateLoad(gep107_var, false);
	load108_var->setAlignment(8);
	Value* binop109_var = BinaryOperator::Create(Instruction::Add, load108_var, load100_var, "", builder.GetInsertBlock());
	Value* cmp110_var = builder.CreateICmp(CmpInst::ICMP_EQ, load102_var, cmp35_val35_int);
	builder.CreateCondBr(cmp110_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep111_array { binop109_var, };
	Value* gep111_var = builder.CreateInBoundsGEP(cast4_var, gep111_array);
	Value* cast112_var = builder.CreateCast(Instruction::BitCast, gep111_var, types[28]);
	llvm::LoadInst* load113_var = builder.CreateLoad(cast112_var, false);
	load113_var->setAlignment(4);
	Value* cast114_var = builder.CreateCast(Instruction::ZExt, load113_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep115_array { gep5_val5_int, cast98_var, gep5_val7_int, gep5_val7_int, switch14_val14_int, };
	Value* gep115_var = builder.CreateInBoundsGEP(globals[5], gep115_array);
	llvm::LoadInst* load116_var = builder.CreateLoad(gep115_var, false);
	load116_var->setAlignment(16);
	Value* binop117_var = BinaryOperator::Create(Instruction::Add, load116_var, binop109_var, "", builder.GetInsertBlock());
	SwitchInst* switch118_var = builder.CreateSwitch(load102_var, block28, 2);
	switch118_var->addCase(cast<ConstantInt>(switch44_val44_int), block26);
	switch118_var->addCase(cast<ConstantInt>(switch44_val45_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep118_array { binop117_var, };
	Value* gep118_var = builder.CreateInBoundsGEP(cast4_var, gep118_array);
	Value* cast119_var = builder.CreateCast(Instruction::BitCast, gep118_var, types[30]);
	llvm::LoadInst* load120_var = builder.CreateLoad(cast119_var, false);
	load120_var->setAlignment(2);
	Value* cast121_var = builder.CreateCast(Instruction::ZExt, load120_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep122_array { gep5_val5_int, cast98_var, gep5_val7_int, gep5_val7_int, gep5_val6_int, };
	Value* gep122_var = builder.CreateInBoundsGEP(globals[5], gep122_array);
	llvm::LoadInst* load123_var = builder.CreateLoad(gep122_var, false);
	load123_var->setAlignment(8);
	Value* binop124_var = BinaryOperator::Create(Instruction::Add, load123_var, binop117_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep125_array { binop124_var, };
	Value* gep125_var = builder.CreateInBoundsGEP(cast4_var, gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(1);
	Value* cast127_var = builder.CreateCast(Instruction::ZExt, load126_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call128_var = builder.CreateCall(globals[6], gep57_var);
	call128_var->setTailCall();
	call128_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi129_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep130_array { gep5_val5_int, gep11_val11_int, gep5_val5_int, switch14_val15_int, gep5_val7_int, gep5_val6_int, };
	Value* gep130_var = builder.CreateInBoundsGEP(arg3, gep130_array);
	llvm::LoadInst* load131_var = builder.CreateLoad(gep130_var, false);
	load131_var->setAlignment(4);
	Value* cast132_var = builder.CreateCast(Instruction::SExt, load131_var, types[0]);
	Value* binop133_var = BinaryOperator::Create(Instruction::Mul, cast132_var, phi129_var, "", builder.GetInsertBlock());
	Value* binop134_var = BinaryOperator::Create(Instruction::Add, binop133_var, phi94_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi135_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep136_array { gep5_val5_int, gep11_val11_int, gep5_val5_int, switch14_val15_int, gep5_val7_int, switch14_val15_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(arg3, gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(4);
	Value* cmp138_var = builder.CreateICmp(CmpInst::ICMP_EQ, load137_var, gep5_val7_int);
	builder.CreateCondBr(cmp138_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast139_var = builder.CreateCast(Instruction::ZExt, load137_var, types[0]);
	ArrayRef<Value*> gep140_array { gep5_val5_int, cast139_var, gep5_val7_int, gep5_val7_int, gep5_val7_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(globals[5], gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(16);
	ArrayRef<Value*> gep142_array { gep5_val5_int, cast139_var, switch14_val15_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp27_val27_int);
	builder.CreateCondBr(cmp144_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep145_array { load141_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast4_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[27]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep148_array { gep5_val5_int, cast139_var, gep5_val7_int, gep5_val7_int, switch14_val15_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, load141_var, "", builder.GetInsertBlock());
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp35_val35_int);
	builder.CreateCondBr(cmp151_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep152_array { binop150_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast4_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[28]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(4);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep156_array { gep5_val5_int, cast139_var, gep5_val7_int, gep5_val7_int, switch14_val14_int, };
	Value* gep156_var = builder.CreateInBoundsGEP(globals[5], gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(16);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, load157_var, binop150_var, "", builder.GetInsertBlock());
	SwitchInst* switch159_var = builder.CreateSwitch(load143_var, block38, 2);
	switch159_var->addCase(cast<ConstantInt>(switch44_val44_int), block36);
	switch159_var->addCase(cast<ConstantInt>(switch44_val45_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep159_array { binop158_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast4_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[30]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(2);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep163_array { gep5_val5_int, cast139_var, gep5_val7_int, gep5_val7_int, gep5_val6_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(8);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop158_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast4_var, gep166_array);
	llvm::LoadInst* load167_var = builder.CreateLoad(gep166_var, false);
	load167_var->setAlignment(1);
	Value* cast168_var = builder.CreateCast(Instruction::ZExt, load167_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call169_var = builder.CreateCall(globals[6], gep57_var);
	call169_var->setTailCall();
	call169_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi170_var = builder.CreatePHI(types[0], 4);
	Value* binop171_var = BinaryOperator::Create(Instruction::Add, phi170_var, phi135_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi172_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep173_array { gep5_val5_int, gep11_val11_int, gep5_val5_int, switch14_val14_int, };
	Value* gep173_var = builder.CreateInBoundsGEP(arg3, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	CallInst* call176_var = builder.CreateCall2(globals[8], phi172_var, cast175_var);
	call176_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep178_array { gep5_val5_int, gep5_val5_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(globals[10], gep178_array);
	CallInst* call178_var = builder.CreateCall(globals[6], gep178_var);
	call178_var->setTailCall();
	call178_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi181_var = builder.CreatePHI(types[0], 6);
	CallInst* call182_var = builder.CreateCall3(globals[267], arg0, arg1, phi181_var);
	call182_var->setTailCall();
	call182_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi94_var->addIncoming(gep5_val5_int, block11);
	phi94_var->addIncoming(load71_var, block13);
	phi94_var->addIncoming(cast79_var, block15);
	phi94_var->addIncoming(cast86_var, block17);
	phi94_var->addIncoming(cast92_var, block18);
	
	phi129_var->addIncoming(load106_var, block22);
	phi129_var->addIncoming(cast114_var, block24);
	phi129_var->addIncoming(cast121_var, block26);
	phi129_var->addIncoming(cast127_var, block27);
	
	phi135_var->addIncoming(binop134_var, block29);
	phi135_var->addIncoming(phi94_var, block20);
	
	phi170_var->addIncoming(load147_var, block32);
	phi170_var->addIncoming(cast155_var, block34);
	phi170_var->addIncoming(cast162_var, block36);
	phi170_var->addIncoming(cast168_var, block37);
	
	phi172_var->addIncoming(binop171_var, block39);
	phi172_var->addIncoming(phi135_var, block30);
	
	phi181_var->addIncoming(call176_var, block40);
	phi181_var->addIncoming(load18_var, block2);
	phi181_var->addIncoming(load31_var, block4);
	phi181_var->addIncoming(cast40_var, block6);
	phi181_var->addIncoming(cast49_var, block8);
	phi181_var->addIncoming(cast55_var, block9);
	
	return;
}

void x86::x86_js(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block43, block1);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 15u);
	Constant* gep10_val11_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, gep10_val11_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg3, gep10_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep10_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block41, 3);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 2u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block2);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 1u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block3);
	Constant* switch14_val16_int = ConstantInt::get(types[2], 3u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val16_int), block11);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(arg3, gep17_array);
	Value* cast18_var = builder.CreateCast(Instruction::BitCast, gep17_var, types[27]);
	llvm::LoadInst* load19_var = builder.CreateLoad(cast18_var, false);
	load19_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep20_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep20_var = builder.CreateGEP(arg3, gep20_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep20_var, false);
	load21_var->setAlignment(4);
	Value* cast22_var = builder.CreateCast(Instruction::ZExt, load21_var, types[0]);
	ArrayRef<Value*> gep23_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep23_var, false);
	load25_var->setAlignment(16);
	Value* cast26_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast22_var, switch14_val15_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load28_var = builder.CreateLoad(gep27_var, false);
	load28_var->setAlignment(16);
	Constant* cmp29_val29_int = ConstantInt::get(types[0], 8u);
	Value* cmp29_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp29_val29_int);
	builder.CreateCondBr(cmp29_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep31_array { load25_var, };
	Value* gep31_var = builder.CreateInBoundsGEP(cast26_var, gep31_array);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, gep31_var, types[27]);
	llvm::LoadInst* load33_var = builder.CreateLoad(cast32_var, false);
	load33_var->setAlignment(8);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load35_var = builder.CreateLoad(gep34_var, false);
	load35_var->setAlignment(8);
	Value* binop36_var = BinaryOperator::Create(Instruction::Add, load35_var, load25_var, "", builder.GetInsertBlock());
	Constant* cmp37_val37_int = ConstantInt::get(types[0], 4u);
	Value* cmp37_var = builder.CreateICmp(CmpInst::ICMP_EQ, load28_var, cmp37_val37_int);
	builder.CreateCondBr(cmp37_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep39_array { binop36_var, };
	Value* gep39_var = builder.CreateInBoundsGEP(cast26_var, gep39_array);
	Value* cast40_var = builder.CreateCast(Instruction::BitCast, gep39_var, types[28]);
	llvm::LoadInst* load41_var = builder.CreateLoad(cast40_var, false);
	load41_var->setAlignment(4);
	Value* cast42_var = builder.CreateCast(Instruction::ZExt, load41_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Value* binop45_var = BinaryOperator::Create(Instruction::Add, load44_var, binop36_var, "", builder.GetInsertBlock());
	SwitchInst* switch46_var = builder.CreateSwitch(load28_var, block10, 2);
	Constant* switch46_val46_int = ConstantInt::get(types[0], 2u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val46_int), block8);
	Constant* switch46_val47_int = ConstantInt::get(types[0], 1u);
	switch46_var->addCase(cast<ConstantInt>(switch46_val47_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep48_array { binop45_var, };
	Value* gep48_var = builder.CreateInBoundsGEP(cast26_var, gep48_array);
	Value* cast49_var = builder.CreateCast(Instruction::BitCast, gep48_var, types[30]);
	llvm::LoadInst* load50_var = builder.CreateLoad(cast49_var, false);
	load50_var->setAlignment(2);
	Value* cast51_var = builder.CreateCast(Instruction::ZExt, load50_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep52_array { gep4_val4_int, cast22_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep52_var = builder.CreateInBoundsGEP(globals[5], gep52_array);
	llvm::LoadInst* load53_var = builder.CreateLoad(gep52_var, false);
	load53_var->setAlignment(8);
	Value* binop54_var = BinaryOperator::Create(Instruction::Add, load53_var, binop45_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep55_array { binop54_var, };
	Value* gep55_var = builder.CreateInBoundsGEP(cast26_var, gep55_array);
	llvm::LoadInst* load56_var = builder.CreateLoad(gep55_var, false);
	load56_var->setAlignment(1);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep59_array { gep4_val4_int, gep4_val4_int, };
	Value* gep59_var = builder.CreateInBoundsGEP(globals[7], gep59_array);
	CallInst* call58_var = builder.CreateCall(globals[6], gep59_var);
	call58_var->setTailCall();
	call58_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep62_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, gep10_val11_int, };
	Value* gep62_var = builder.CreateInBoundsGEP(arg3, gep62_array);
	llvm::LoadInst* load63_var = builder.CreateLoad(gep62_var, false);
	load63_var->setAlignment(4);
	Value* cmp64_var = builder.CreateICmp(CmpInst::ICMP_EQ, load63_var, gep10_val11_int);
	builder.CreateCondBr(cmp64_var, block20, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load63_var, types[0]);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(16);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep69_array { gep4_val4_int, cast65_var, switch14_val15_int, };
	Value* gep69_var = builder.CreateInBoundsGEP(globals[5], gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(16);
	Value* cmp71_var = builder.CreateICmp(CmpInst::ICMP_EQ, load70_var, cmp29_val29_int);
	builder.CreateCondBr(cmp71_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep72_array { load67_var, };
	Value* gep72_var = builder.CreateInBoundsGEP(cast68_var, gep72_array);
	Value* cast73_var = builder.CreateCast(Instruction::BitCast, gep72_var, types[27]);
	llvm::LoadInst* load74_var = builder.CreateLoad(cast73_var, false);
	load74_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(8);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, load67_var, "", builder.GetInsertBlock());
	Value* cmp78_var = builder.CreateICmp(CmpInst::ICMP_EQ, load70_var, cmp37_val37_int);
	builder.CreateCondBr(cmp78_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep79_array { binop77_var, };
	Value* gep79_var = builder.CreateInBoundsGEP(cast68_var, gep79_array);
	Value* cast80_var = builder.CreateCast(Instruction::BitCast, gep79_var, types[28]);
	llvm::LoadInst* load81_var = builder.CreateLoad(cast80_var, false);
	load81_var->setAlignment(4);
	Value* cast82_var = builder.CreateCast(Instruction::ZExt, load81_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep83_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[5], gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(16);
	Value* binop85_var = BinaryOperator::Create(Instruction::Add, load84_var, binop77_var, "", builder.GetInsertBlock());
	SwitchInst* switch86_var = builder.CreateSwitch(load70_var, block19, 2);
	switch86_var->addCase(cast<ConstantInt>(switch46_val46_int), block17);
	switch86_var->addCase(cast<ConstantInt>(switch46_val47_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep86_array { binop85_var, };
	Value* gep86_var = builder.CreateInBoundsGEP(cast68_var, gep86_array);
	Value* cast87_var = builder.CreateCast(Instruction::BitCast, gep86_var, types[30]);
	llvm::LoadInst* load88_var = builder.CreateLoad(cast87_var, false);
	load88_var->setAlignment(2);
	Value* cast89_var = builder.CreateCast(Instruction::ZExt, load88_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast65_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(8);
	Value* binop92_var = BinaryOperator::Create(Instruction::Add, load91_var, binop85_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep93_array { binop92_var, };
	Value* gep93_var = builder.CreateInBoundsGEP(cast68_var, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(1);
	Value* cast95_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call96_var = builder.CreateCall(globals[6], gep59_var);
	call96_var->setTailCall();
	call96_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi97_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep98_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val14_int, };
	Value* gep98_var = builder.CreateInBoundsGEP(arg3, gep98_array);
	llvm::LoadInst* load99_var = builder.CreateLoad(gep98_var, false);
	load99_var->setAlignment(4);
	Value* cmp100_var = builder.CreateICmp(CmpInst::ICMP_EQ, load99_var, gep10_val11_int);
	builder.CreateCondBr(cmp100_var, block30, block21);
	
	builder.SetInsertPoint(block21);
	Value* cast101_var = builder.CreateCast(Instruction::ZExt, load99_var, types[0]);
	ArrayRef<Value*> gep102_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep102_var = builder.CreateInBoundsGEP(globals[5], gep102_array);
	llvm::LoadInst* load103_var = builder.CreateLoad(gep102_var, false);
	load103_var->setAlignment(16);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep105_array { gep4_val4_int, cast101_var, switch14_val15_int, };
	Value* gep105_var = builder.CreateInBoundsGEP(globals[5], gep105_array);
	llvm::LoadInst* load106_var = builder.CreateLoad(gep105_var, false);
	load106_var->setAlignment(16);
	Value* cmp107_var = builder.CreateICmp(CmpInst::ICMP_EQ, load106_var, cmp29_val29_int);
	builder.CreateCondBr(cmp107_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep108_array { load103_var, };
	Value* gep108_var = builder.CreateInBoundsGEP(cast104_var, gep108_array);
	Value* cast109_var = builder.CreateCast(Instruction::BitCast, gep108_var, types[27]);
	llvm::LoadInst* load110_var = builder.CreateLoad(cast109_var, false);
	load110_var->setAlignment(8);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(8);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, load103_var, "", builder.GetInsertBlock());
	Value* cmp114_var = builder.CreateICmp(CmpInst::ICMP_EQ, load106_var, cmp37_val37_int);
	builder.CreateCondBr(cmp114_var, block24, block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep115_array { binop113_var, };
	Value* gep115_var = builder.CreateInBoundsGEP(cast104_var, gep115_array);
	Value* cast116_var = builder.CreateCast(Instruction::BitCast, gep115_var, types[28]);
	llvm::LoadInst* load117_var = builder.CreateLoad(cast116_var, false);
	load117_var->setAlignment(4);
	Value* cast118_var = builder.CreateCast(Instruction::ZExt, load117_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep119_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(globals[5], gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(16);
	Value* binop121_var = BinaryOperator::Create(Instruction::Add, load120_var, binop113_var, "", builder.GetInsertBlock());
	SwitchInst* switch122_var = builder.CreateSwitch(load106_var, block28, 2);
	switch122_var->addCase(cast<ConstantInt>(switch46_val46_int), block26);
	switch122_var->addCase(cast<ConstantInt>(switch46_val47_int), block27);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep122_array { binop121_var, };
	Value* gep122_var = builder.CreateInBoundsGEP(cast104_var, gep122_array);
	Value* cast123_var = builder.CreateCast(Instruction::BitCast, gep122_var, types[30]);
	llvm::LoadInst* load124_var = builder.CreateLoad(cast123_var, false);
	load124_var->setAlignment(2);
	Value* cast125_var = builder.CreateCast(Instruction::ZExt, load124_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast101_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(8);
	Value* binop128_var = BinaryOperator::Create(Instruction::Add, load127_var, binop121_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep129_array { binop128_var, };
	Value* gep129_var = builder.CreateInBoundsGEP(cast104_var, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(1);
	Value* cast131_var = builder.CreateCast(Instruction::ZExt, load130_var, types[0]);
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block28);
	CallInst* call132_var = builder.CreateCall(globals[6], gep59_var);
	call132_var->setTailCall();
	call132_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block29);
	PHINode* phi133_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep134_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val16_int, };
	Value* gep134_var = builder.CreateInBoundsGEP(arg3, gep134_array);
	llvm::LoadInst* load135_var = builder.CreateLoad(gep134_var, false);
	load135_var->setAlignment(4);
	Value* cast136_var = builder.CreateCast(Instruction::SExt, load135_var, types[0]);
	Value* binop137_var = BinaryOperator::Create(Instruction::Mul, cast136_var, phi133_var, "", builder.GetInsertBlock());
	Value* binop138_var = BinaryOperator::Create(Instruction::Add, binop137_var, phi97_var, "", builder.GetInsertBlock());
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block30);
	PHINode* phi139_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep140_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val15_int, gep10_val11_int, switch14_val15_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(arg3, gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(4);
	Value* cmp142_var = builder.CreateICmp(CmpInst::ICMP_EQ, load141_var, gep10_val11_int);
	builder.CreateCondBr(cmp142_var, block40, block31);
	
	builder.SetInsertPoint(block31);
	Value* cast143_var = builder.CreateCast(Instruction::ZExt, load141_var, types[0]);
	ArrayRef<Value*> gep144_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, gep10_val11_int, };
	Value* gep144_var = builder.CreateInBoundsGEP(globals[5], gep144_array);
	llvm::LoadInst* load145_var = builder.CreateLoad(gep144_var, false);
	load145_var->setAlignment(16);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep147_array { gep4_val4_int, cast143_var, switch14_val15_int, };
	Value* gep147_var = builder.CreateInBoundsGEP(globals[5], gep147_array);
	llvm::LoadInst* load148_var = builder.CreateLoad(gep147_var, false);
	load148_var->setAlignment(16);
	Value* cmp149_var = builder.CreateICmp(CmpInst::ICMP_EQ, load148_var, cmp29_val29_int);
	builder.CreateCondBr(cmp149_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep150_array { load145_var, };
	Value* gep150_var = builder.CreateInBoundsGEP(cast146_var, gep150_array);
	Value* cast151_var = builder.CreateCast(Instruction::BitCast, gep150_var, types[27]);
	llvm::LoadInst* load152_var = builder.CreateLoad(cast151_var, false);
	load152_var->setAlignment(8);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val15_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(8);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, load145_var, "", builder.GetInsertBlock());
	Value* cmp156_var = builder.CreateICmp(CmpInst::ICMP_EQ, load148_var, cmp37_val37_int);
	builder.CreateCondBr(cmp156_var, block34, block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep157_array { binop155_var, };
	Value* gep157_var = builder.CreateInBoundsGEP(cast146_var, gep157_array);
	Value* cast158_var = builder.CreateCast(Instruction::BitCast, gep157_var, types[28]);
	llvm::LoadInst* load159_var = builder.CreateLoad(cast158_var, false);
	load159_var->setAlignment(4);
	Value* cast160_var = builder.CreateCast(Instruction::ZExt, load159_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep161_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val14_int, };
	Value* gep161_var = builder.CreateInBoundsGEP(globals[5], gep161_array);
	llvm::LoadInst* load162_var = builder.CreateLoad(gep161_var, false);
	load162_var->setAlignment(16);
	Value* binop163_var = BinaryOperator::Create(Instruction::Add, load162_var, binop155_var, "", builder.GetInsertBlock());
	SwitchInst* switch164_var = builder.CreateSwitch(load148_var, block38, 2);
	switch164_var->addCase(cast<ConstantInt>(switch46_val46_int), block36);
	switch164_var->addCase(cast<ConstantInt>(switch46_val47_int), block37);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep164_array { binop163_var, };
	Value* gep164_var = builder.CreateInBoundsGEP(cast146_var, gep164_array);
	Value* cast165_var = builder.CreateCast(Instruction::BitCast, gep164_var, types[30]);
	llvm::LoadInst* load166_var = builder.CreateLoad(cast165_var, false);
	load166_var->setAlignment(2);
	Value* cast167_var = builder.CreateCast(Instruction::ZExt, load166_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep168_array { gep4_val4_int, cast143_var, gep10_val11_int, gep10_val11_int, switch14_val16_int, };
	Value* gep168_var = builder.CreateInBoundsGEP(globals[5], gep168_array);
	llvm::LoadInst* load169_var = builder.CreateLoad(gep168_var, false);
	load169_var->setAlignment(8);
	Value* binop170_var = BinaryOperator::Create(Instruction::Add, load169_var, binop163_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep171_array { binop170_var, };
	Value* gep171_var = builder.CreateInBoundsGEP(cast146_var, gep171_array);
	llvm::LoadInst* load172_var = builder.CreateLoad(gep171_var, false);
	load172_var->setAlignment(1);
	Value* cast173_var = builder.CreateCast(Instruction::ZExt, load172_var, types[0]);
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block38);
	CallInst* call174_var = builder.CreateCall(globals[6], gep59_var);
	call174_var->setTailCall();
	call174_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block39);
	PHINode* phi175_var = builder.CreatePHI(types[0], 4);
	Value* binop176_var = BinaryOperator::Create(Instruction::Add, phi175_var, phi139_var, "", builder.GetInsertBlock());
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block40);
	PHINode* phi177_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep10_val10_int, gep4_val4_int, switch14_val14_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(arg3, gep178_array);
	llvm::LoadInst* load179_var = builder.CreateLoad(gep178_var, false);
	load179_var->setAlignment(1);
	Value* cast180_var = builder.CreateCast(Instruction::ZExt, load179_var, types[0]);
	CallInst* call181_var = builder.CreateCall2(globals[8], phi177_var, cast180_var);
	call181_var->setTailCall();
	builder.CreateBr(block42);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep183_array { gep4_val4_int, gep4_val4_int, };
	Value* gep183_var = builder.CreateInBoundsGEP(globals[10], gep183_array);
	CallInst* call183_var = builder.CreateCall(globals[6], gep183_var);
	call183_var->setTailCall();
	call183_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block42);
	PHINode* phi186_var = builder.CreatePHI(types[0], 6);
	CallInst* call187_var = builder.CreateCall3(globals[267], arg0, arg1, phi186_var);
	call187_var->setTailCall();
	call187_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block43);
	phi97_var->addIncoming(gep4_val4_int, block11);
	phi97_var->addIncoming(load74_var, block13);
	phi97_var->addIncoming(cast82_var, block15);
	phi97_var->addIncoming(cast89_var, block17);
	phi97_var->addIncoming(cast95_var, block18);
	
	phi133_var->addIncoming(load110_var, block22);
	phi133_var->addIncoming(cast118_var, block24);
	phi133_var->addIncoming(cast125_var, block26);
	phi133_var->addIncoming(cast131_var, block27);
	
	phi139_var->addIncoming(binop138_var, block29);
	phi139_var->addIncoming(phi97_var, block20);
	
	phi175_var->addIncoming(load152_var, block32);
	phi175_var->addIncoming(cast160_var, block34);
	phi175_var->addIncoming(cast167_var, block36);
	phi175_var->addIncoming(cast173_var, block37);
	
	phi177_var->addIncoming(binop176_var, block39);
	phi177_var->addIncoming(phi139_var, block30);
	
	phi186_var->addIncoming(call181_var, block40);
	phi186_var->addIncoming(load19_var, block2);
	phi186_var->addIncoming(load33_var, block4);
	phi186_var->addIncoming(cast42_var, block6);
	phi186_var->addIncoming(cast51_var, block8);
	phi186_var->addIncoming(cast57_var, block9);
	
	return;
}

void x86::x86_kandb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[268], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kandd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[269], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kandnb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[270], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kandnd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[271], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kandnq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[272], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kandnw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[273], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kandq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[274], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kandw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[275], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kmovb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[276], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kmovd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[277], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kmovq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[278], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kmovw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[279], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_knotb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[280], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_knotd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[281], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_knotq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[282], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_knotw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[283], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_korb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[284], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kord(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[285], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_korq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[286], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kortestw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[287], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_korw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[288], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kshiftlw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[289], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kshiftrw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[290], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kunpckbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[291], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kxnorb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[292], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kxnord(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[293], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kxnorq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[294], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kxnorw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[295], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kxorb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[296], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kxord(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[297], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kxorq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[298], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_kxorw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[299], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lahf(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[300], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lar(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[301], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lcall(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[302], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lddqu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[303], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ldmxcsr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[304], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lds(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[305], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lea(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[0], 1u);
	Constant* gep4_val7_int = ConstantInt::get(types[2], 1u);
	Constant* gep4_val8_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, gep4_val7_int, gep4_val8_int, gep4_val8_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load10_var = builder.CreateLoad(gep4_var, false);
	load10_var->setAlignment(4);
	Value* cmp11_var = builder.CreateICmp(CmpInst::ICMP_EQ, load10_var, gep4_val8_int);
	builder.CreateCondBr(cmp11_var, block9, block1);
	
	builder.SetInsertPoint(block1);
	Value* cast12_var = builder.CreateCast(Instruction::ZExt, load10_var, types[0]);
	ArrayRef<Value*> gep13_array { gep4_val4_int, cast12_var, gep4_val8_int, gep4_val8_int, gep4_val8_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(globals[5], gep13_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep13_var, false);
	load15_var->setAlignment(16);
	Value* cast16_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep17_array { gep4_val4_int, cast12_var, gep4_val7_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(globals[5], gep17_array);
	llvm::LoadInst* load18_var = builder.CreateLoad(gep17_var, false);
	load18_var->setAlignment(16);
	Constant* cmp19_val19_int = ConstantInt::get(types[0], 8u);
	Value* cmp19_var = builder.CreateICmp(CmpInst::ICMP_EQ, load18_var, cmp19_val19_int);
	builder.CreateCondBr(cmp19_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep21_array { load15_var, };
	Value* gep21_var = builder.CreateInBoundsGEP(cast16_var, gep21_array);
	Value* cast22_var = builder.CreateCast(Instruction::BitCast, gep21_var, types[27]);
	llvm::LoadInst* load23_var = builder.CreateLoad(cast22_var, false);
	load23_var->setAlignment(8);
	builder.CreateBr(block9);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep24_array { gep4_val4_int, cast12_var, gep4_val8_int, gep4_val8_int, gep4_val7_int, };
	Value* gep24_var = builder.CreateInBoundsGEP(globals[5], gep24_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep24_var, false);
	load25_var->setAlignment(8);
	Value* binop26_var = BinaryOperator::Create(Instruction::Add, load25_var, load15_var, "", builder.GetInsertBlock());
	Constant* cmp27_val27_int = ConstantInt::get(types[0], 4u);
	Value* cmp27_var = builder.CreateICmp(CmpInst::ICMP_EQ, load18_var, cmp27_val27_int);
	builder.CreateCondBr(cmp27_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep29_array { binop26_var, };
	Value* gep29_var = builder.CreateInBoundsGEP(cast16_var, gep29_array);
	Value* cast30_var = builder.CreateCast(Instruction::BitCast, gep29_var, types[28]);
	llvm::LoadInst* load31_var = builder.CreateLoad(cast30_var, false);
	load31_var->setAlignment(4);
	Value* cast32_var = builder.CreateCast(Instruction::ZExt, load31_var, types[0]);
	builder.CreateBr(block9);
	
	builder.SetInsertPoint(block5);
	Constant* gep33_val33_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast12_var, gep4_val8_int, gep4_val8_int, gep33_val33_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load35_var = builder.CreateLoad(gep33_var, false);
	load35_var->setAlignment(16);
	Value* binop36_var = BinaryOperator::Create(Instruction::Add, load35_var, binop26_var, "", builder.GetInsertBlock());
	SwitchInst* switch37_var = builder.CreateSwitch(load18_var, block8, 2);
	Constant* switch37_val37_int = ConstantInt::get(types[0], 2u);
	switch37_var->addCase(cast<ConstantInt>(switch37_val37_int), block6);
	switch37_var->addCase(cast<ConstantInt>(gep4_val6_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { binop36_var, };
	Value* gep38_var = builder.CreateInBoundsGEP(cast16_var, gep38_array);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, gep38_var, types[30]);
	llvm::LoadInst* load40_var = builder.CreateLoad(cast39_var, false);
	load40_var->setAlignment(2);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	builder.CreateBr(block9);
	
	builder.SetInsertPoint(block7);
	Constant* gep42_val42_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast12_var, gep4_val8_int, gep4_val8_int, gep42_val42_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep42_var, false);
	load44_var->setAlignment(8);
	Value* binop45_var = BinaryOperator::Create(Instruction::Add, load44_var, binop36_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep46_array { binop45_var, };
	Value* gep46_var = builder.CreateInBoundsGEP(cast16_var, gep46_array);
	llvm::LoadInst* load47_var = builder.CreateLoad(gep46_var, false);
	load47_var->setAlignment(1);
	Value* cast48_var = builder.CreateCast(Instruction::ZExt, load47_var, types[0]);
	builder.CreateBr(block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep50_array { gep4_val4_int, gep4_val4_int, };
	Value* gep50_var = builder.CreateInBoundsGEP(globals[7], gep50_array);
	CallInst* call49_var = builder.CreateCall(globals[6], gep50_var);
	call49_var->setTailCall();
	call49_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	PHINode* phi53_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, gep4_val7_int, gep4_val8_int, gep33_val33_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val8_int);
	builder.CreateCondBr(cmp56_var, block19, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val8_int, gep4_val8_int, gep4_val8_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, gep4_val7_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp19_val19_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val8_int, gep4_val8_int, gep4_val7_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp27_val27_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val8_int, gep4_val8_int, gep33_val33_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch37_val37_int), block15);
	switch78_var->addCase(cast<ConstantInt>(gep4_val6_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val8_int, gep4_val8_int, gep42_val42_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep50_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, gep4_val7_int, gep4_val8_int, gep42_val42_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cast92_var = builder.CreateCast(Instruction::SExt, load91_var, types[0]);
	Value* binop93_var = BinaryOperator::Create(Instruction::Mul, cast92_var, phi89_var, "", builder.GetInsertBlock());
	Value* binop94_var = BinaryOperator::Create(Instruction::Add, binop93_var, phi53_var, "", builder.GetInsertBlock());
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block19);
	PHINode* phi95_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep96_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, gep4_val7_int, gep4_val8_int, gep4_val7_int, };
	Value* gep96_var = builder.CreateInBoundsGEP(arg3, gep96_array);
	llvm::LoadInst* load97_var = builder.CreateLoad(gep96_var, false);
	load97_var->setAlignment(4);
	Value* cmp98_var = builder.CreateICmp(CmpInst::ICMP_EQ, load97_var, gep4_val8_int);
	builder.CreateCondBr(cmp98_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast99_var = builder.CreateCast(Instruction::ZExt, load97_var, types[0]);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast99_var, gep4_val8_int, gep4_val8_int, gep4_val8_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* cast102_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast99_var, gep4_val7_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(16);
	Value* cmp105_var = builder.CreateICmp(CmpInst::ICMP_EQ, load104_var, cmp19_val19_int);
	builder.CreateCondBr(cmp105_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep106_array { load101_var, };
	Value* gep106_var = builder.CreateInBoundsGEP(cast102_var, gep106_array);
	Value* cast107_var = builder.CreateCast(Instruction::BitCast, gep106_var, types[27]);
	llvm::LoadInst* load108_var = builder.CreateLoad(cast107_var, false);
	load108_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep109_array { gep4_val4_int, cast99_var, gep4_val8_int, gep4_val8_int, gep4_val7_int, };
	Value* gep109_var = builder.CreateInBoundsGEP(globals[5], gep109_array);
	llvm::LoadInst* load110_var = builder.CreateLoad(gep109_var, false);
	load110_var->setAlignment(8);
	Value* binop111_var = BinaryOperator::Create(Instruction::Add, load110_var, load101_var, "", builder.GetInsertBlock());
	Value* cmp112_var = builder.CreateICmp(CmpInst::ICMP_EQ, load104_var, cmp27_val27_int);
	builder.CreateCondBr(cmp112_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep113_array { binop111_var, };
	Value* gep113_var = builder.CreateInBoundsGEP(cast102_var, gep113_array);
	Value* cast114_var = builder.CreateCast(Instruction::BitCast, gep113_var, types[28]);
	llvm::LoadInst* load115_var = builder.CreateLoad(cast114_var, false);
	load115_var->setAlignment(4);
	Value* cast116_var = builder.CreateCast(Instruction::ZExt, load115_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep117_array { gep4_val4_int, cast99_var, gep4_val8_int, gep4_val8_int, gep33_val33_int, };
	Value* gep117_var = builder.CreateInBoundsGEP(globals[5], gep117_array);
	llvm::LoadInst* load118_var = builder.CreateLoad(gep117_var, false);
	load118_var->setAlignment(16);
	Value* binop119_var = BinaryOperator::Create(Instruction::Add, load118_var, binop111_var, "", builder.GetInsertBlock());
	SwitchInst* switch120_var = builder.CreateSwitch(load104_var, block27, 2);
	switch120_var->addCase(cast<ConstantInt>(switch37_val37_int), block25);
	switch120_var->addCase(cast<ConstantInt>(gep4_val6_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep120_array { binop119_var, };
	Value* gep120_var = builder.CreateInBoundsGEP(cast102_var, gep120_array);
	Value* cast121_var = builder.CreateCast(Instruction::BitCast, gep120_var, types[30]);
	llvm::LoadInst* load122_var = builder.CreateLoad(cast121_var, false);
	load122_var->setAlignment(2);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep124_array { gep4_val4_int, cast99_var, gep4_val8_int, gep4_val8_int, gep42_val42_int, };
	Value* gep124_var = builder.CreateInBoundsGEP(globals[5], gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(8);
	Value* binop126_var = BinaryOperator::Create(Instruction::Add, load125_var, binop119_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep127_array { binop126_var, };
	Value* gep127_var = builder.CreateInBoundsGEP(cast102_var, gep127_array);
	llvm::LoadInst* load128_var = builder.CreateLoad(gep127_var, false);
	load128_var->setAlignment(1);
	Value* cast129_var = builder.CreateCast(Instruction::ZExt, load128_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call130_var = builder.CreateCall(globals[6], gep50_var);
	call130_var->setTailCall();
	call130_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 4);
	Value* binop132_var = BinaryOperator::Create(Instruction::Add, phi131_var, phi95_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi133_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep134_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val8_int, };
	Value* gep134_var = builder.CreateInBoundsGEP(arg3, gep134_array);
	llvm::LoadInst* load135_var = builder.CreateLoad(gep134_var, false);
	load135_var->setAlignment(4);
	SwitchInst* switch136_var = builder.CreateSwitch(load135_var, block61, 2);
	switch136_var->addCase(cast<ConstantInt>(gep4_val7_int), block30);
	switch136_var->addCase(cast<ConstantInt>(gep42_val42_int), block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep136_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val7_int, gep4_val8_int, gep4_val8_int, };
	Value* gep136_var = builder.CreateGEP(arg3, gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(4);
	Value* cast138_var = builder.CreateCast(Instruction::ZExt, load137_var, types[0]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast138_var, gep4_val7_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Constant* binop141_val141_int = ConstantInt::get(types[0], 3u);
	Value* binop141_var = BinaryOperator::Create(Instruction::Shl, load140_var, binop141_val141_int, "", builder.GetInsertBlock());
	Constant* binop143_val143_int = ConstantInt::get(types[0], 64u);
	Value* binop143_var = BinaryOperator::Create(Instruction::Sub, binop143_val143_int, binop141_var, "", builder.GetInsertBlock());
	Constant* binop145_val145_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop145_var = BinaryOperator::Create(Instruction::LShr, binop145_val145_int, binop143_var, "", builder.GetInsertBlock());
	Value* binop147_var = BinaryOperator::Create(Instruction::And, binop145_var, phi133_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast138_var, gep4_val8_int, gep4_val8_int, gep4_val8_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(16);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep151_array { load149_var, };
	Value* gep151_var = builder.CreateInBoundsGEP(cast150_var, gep151_array);
	Value* cast152_var = builder.CreateCast(Instruction::BitCast, gep151_var, types[27]);
	llvm::StoreInst* store153_var = builder.CreateStore(binop147_var, cast152_var, false);
	store153_var->setAlignment(8);
	builder.CreateBr(block62);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep154_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val7_int, gep4_val8_int, gep4_val8_int, };
	Value* gep154_var = builder.CreateInBoundsGEP(arg3, gep154_array);
	llvm::LoadInst* load155_var = builder.CreateLoad(gep154_var, false);
	load155_var->setAlignment(4);
	Value* cmp156_var = builder.CreateICmp(CmpInst::ICMP_EQ, load155_var, gep4_val8_int);
	builder.CreateCondBr(cmp156_var, block40, block32);
	
	builder.SetInsertPoint(block32);
	Value* cast157_var = builder.CreateCast(Instruction::ZExt, load155_var, types[0]);
	ArrayRef<Value*> gep158_array { gep4_val4_int, cast157_var, gep4_val8_int, gep4_val8_int, gep4_val8_int, };
	Value* gep158_var = builder.CreateInBoundsGEP(globals[5], gep158_array);
	llvm::LoadInst* load159_var = builder.CreateLoad(gep158_var, false);
	load159_var->setAlignment(16);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep161_array { gep4_val4_int, cast157_var, gep4_val7_int, };
	Value* gep161_var = builder.CreateInBoundsGEP(globals[5], gep161_array);
	llvm::LoadInst* load162_var = builder.CreateLoad(gep161_var, false);
	load162_var->setAlignment(16);
	Value* cmp163_var = builder.CreateICmp(CmpInst::ICMP_EQ, load162_var, cmp19_val19_int);
	builder.CreateCondBr(cmp163_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep164_array { load159_var, };
	Value* gep164_var = builder.CreateInBoundsGEP(cast160_var, gep164_array);
	Value* cast165_var = builder.CreateCast(Instruction::BitCast, gep164_var, types[27]);
	llvm::LoadInst* load166_var = builder.CreateLoad(cast165_var, false);
	load166_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast157_var, gep4_val8_int, gep4_val8_int, gep4_val7_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(8);
	Value* binop169_var = BinaryOperator::Create(Instruction::Add, load168_var, load159_var, "", builder.GetInsertBlock());
	Value* cmp170_var = builder.CreateICmp(CmpInst::ICMP_EQ, load162_var, cmp27_val27_int);
	builder.CreateCondBr(cmp170_var, block35, block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep171_array { binop169_var, };
	Value* gep171_var = builder.CreateInBoundsGEP(cast160_var, gep171_array);
	Value* cast172_var = builder.CreateCast(Instruction::BitCast, gep171_var, types[28]);
	llvm::LoadInst* load173_var = builder.CreateLoad(cast172_var, false);
	load173_var->setAlignment(4);
	Value* cast174_var = builder.CreateCast(Instruction::ZExt, load173_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep175_array { gep4_val4_int, cast157_var, gep4_val8_int, gep4_val8_int, gep33_val33_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[5], gep175_array);
	llvm::LoadInst* load176_var = builder.CreateLoad(gep175_var, false);
	load176_var->setAlignment(16);
	Value* binop177_var = BinaryOperator::Create(Instruction::Add, load176_var, binop169_var, "", builder.GetInsertBlock());
	SwitchInst* switch178_var = builder.CreateSwitch(load162_var, block39, 2);
	switch178_var->addCase(cast<ConstantInt>(switch37_val37_int), block37);
	switch178_var->addCase(cast<ConstantInt>(gep4_val6_int), block38);
	
	builder.SetInsertPoint(block37);
	ArrayRef<Value*> gep178_array { binop177_var, };
	Value* gep178_var = builder.CreateInBoundsGEP(cast160_var, gep178_array);
	Value* cast179_var = builder.CreateCast(Instruction::BitCast, gep178_var, types[30]);
	llvm::LoadInst* load180_var = builder.CreateLoad(cast179_var, false);
	load180_var->setAlignment(2);
	Value* cast181_var = builder.CreateCast(Instruction::ZExt, load180_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block38);
	ArrayRef<Value*> gep182_array { gep4_val4_int, cast157_var, gep4_val8_int, gep4_val8_int, gep42_val42_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(globals[5], gep182_array);
	llvm::LoadInst* load183_var = builder.CreateLoad(gep182_var, false);
	load183_var->setAlignment(8);
	Value* binop184_var = BinaryOperator::Create(Instruction::Add, load183_var, binop177_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep185_array { binop184_var, };
	Value* gep185_var = builder.CreateInBoundsGEP(cast160_var, gep185_array);
	llvm::LoadInst* load186_var = builder.CreateLoad(gep185_var, false);
	load186_var->setAlignment(1);
	Value* cast187_var = builder.CreateCast(Instruction::ZExt, load186_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	CallInst* call188_var = builder.CreateCall(globals[6], gep50_var);
	call188_var->setTailCall();
	call188_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi189_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep190_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val7_int, gep4_val8_int, gep33_val33_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(arg3, gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(4);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, gep4_val8_int);
	builder.CreateCondBr(cmp192_var, block50, block41);
	
	builder.SetInsertPoint(block41);
	Value* cast193_var = builder.CreateCast(Instruction::ZExt, load191_var, types[0]);
	ArrayRef<Value*> gep194_array { gep4_val4_int, cast193_var, gep4_val8_int, gep4_val8_int, gep4_val8_int, };
	Value* gep194_var = builder.CreateInBoundsGEP(globals[5], gep194_array);
	llvm::LoadInst* load195_var = builder.CreateLoad(gep194_var, false);
	load195_var->setAlignment(16);
	Value* cast196_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep197_array { gep4_val4_int, cast193_var, gep4_val7_int, };
	Value* gep197_var = builder.CreateInBoundsGEP(globals[5], gep197_array);
	llvm::LoadInst* load198_var = builder.CreateLoad(gep197_var, false);
	load198_var->setAlignment(16);
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load198_var, cmp19_val19_int);
	builder.CreateCondBr(cmp199_var, block42, block43);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep200_array { load195_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast196_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[27]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(8);
	builder.CreateBr(block49);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep203_array { gep4_val4_int, cast193_var, gep4_val8_int, gep4_val8_int, gep4_val7_int, };
	Value* gep203_var = builder.CreateInBoundsGEP(globals[5], gep203_array);
	llvm::LoadInst* load204_var = builder.CreateLoad(gep203_var, false);
	load204_var->setAlignment(8);
	Value* binop205_var = BinaryOperator::Create(Instruction::Add, load204_var, load195_var, "", builder.GetInsertBlock());
	Value* cmp206_var = builder.CreateICmp(CmpInst::ICMP_EQ, load198_var, cmp27_val27_int);
	builder.CreateCondBr(cmp206_var, block44, block45);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep207_array { binop205_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast196_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[28]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(4);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block49);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast193_var, gep4_val8_int, gep4_val8_int, gep33_val33_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(16);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop205_var, "", builder.GetInsertBlock());
	SwitchInst* switch214_var = builder.CreateSwitch(load198_var, block48, 2);
	switch214_var->addCase(cast<ConstantInt>(switch37_val37_int), block46);
	switch214_var->addCase(cast<ConstantInt>(gep4_val6_int), block47);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast196_var, gep214_array);
	Value* cast215_var = builder.CreateCast(Instruction::BitCast, gep214_var, types[30]);
	llvm::LoadInst* load216_var = builder.CreateLoad(cast215_var, false);
	load216_var->setAlignment(2);
	Value* cast217_var = builder.CreateCast(Instruction::ZExt, load216_var, types[0]);
	builder.CreateBr(block49);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep218_array { gep4_val4_int, cast193_var, gep4_val8_int, gep4_val8_int, gep42_val42_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(globals[5], gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(8);
	Value* binop220_var = BinaryOperator::Create(Instruction::Add, load219_var, binop213_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep221_array { binop220_var, };
	Value* gep221_var = builder.CreateInBoundsGEP(cast196_var, gep221_array);
	llvm::LoadInst* load222_var = builder.CreateLoad(gep221_var, false);
	load222_var->setAlignment(1);
	Value* cast223_var = builder.CreateCast(Instruction::ZExt, load222_var, types[0]);
	builder.CreateBr(block49);
	
	builder.SetInsertPoint(block48);
	CallInst* call224_var = builder.CreateCall(globals[6], gep50_var);
	call224_var->setTailCall();
	call224_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block49);
	PHINode* phi225_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep226_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val7_int, gep4_val8_int, gep42_val42_int, };
	Value* gep226_var = builder.CreateInBoundsGEP(arg3, gep226_array);
	llvm::LoadInst* load227_var = builder.CreateLoad(gep226_var, false);
	load227_var->setAlignment(4);
	Value* cast228_var = builder.CreateCast(Instruction::SExt, load227_var, types[0]);
	Value* binop229_var = BinaryOperator::Create(Instruction::Mul, cast228_var, phi225_var, "", builder.GetInsertBlock());
	Value* binop230_var = BinaryOperator::Create(Instruction::Add, binop229_var, phi189_var, "", builder.GetInsertBlock());
	builder.CreateBr(block50);
	
	builder.SetInsertPoint(block50);
	PHINode* phi231_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep232_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val7_int, gep4_val8_int, gep4_val7_int, };
	Value* gep232_var = builder.CreateInBoundsGEP(arg3, gep232_array);
	llvm::LoadInst* load233_var = builder.CreateLoad(gep232_var, false);
	load233_var->setAlignment(4);
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load233_var, gep4_val8_int);
	builder.CreateCondBr(cmp234_var, block60, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast235_var = builder.CreateCast(Instruction::ZExt, load233_var, types[0]);
	ArrayRef<Value*> gep236_array { gep4_val4_int, cast235_var, gep4_val8_int, gep4_val8_int, gep4_val8_int, };
	Value* gep236_var = builder.CreateInBoundsGEP(globals[5], gep236_array);
	llvm::LoadInst* load237_var = builder.CreateLoad(gep236_var, false);
	load237_var->setAlignment(16);
	Value* cast238_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast235_var, gep4_val7_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* cmp241_var = builder.CreateICmp(CmpInst::ICMP_EQ, load240_var, cmp19_val19_int);
	builder.CreateCondBr(cmp241_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep242_array { load237_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast238_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[27]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep245_array { gep4_val4_int, cast235_var, gep4_val8_int, gep4_val8_int, gep4_val7_int, };
	Value* gep245_var = builder.CreateInBoundsGEP(globals[5], gep245_array);
	llvm::LoadInst* load246_var = builder.CreateLoad(gep245_var, false);
	load246_var->setAlignment(8);
	Value* binop247_var = BinaryOperator::Create(Instruction::Add, load246_var, load237_var, "", builder.GetInsertBlock());
	Value* cmp248_var = builder.CreateICmp(CmpInst::ICMP_EQ, load240_var, cmp27_val27_int);
	builder.CreateCondBr(cmp248_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep249_array { binop247_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast238_var, gep249_array);
	Value* cast250_var = builder.CreateCast(Instruction::BitCast, gep249_var, types[28]);
	llvm::LoadInst* load251_var = builder.CreateLoad(cast250_var, false);
	load251_var->setAlignment(4);
	Value* cast252_var = builder.CreateCast(Instruction::ZExt, load251_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep253_array { gep4_val4_int, cast235_var, gep4_val8_int, gep4_val8_int, gep33_val33_int, };
	Value* gep253_var = builder.CreateInBoundsGEP(globals[5], gep253_array);
	llvm::LoadInst* load254_var = builder.CreateLoad(gep253_var, false);
	load254_var->setAlignment(16);
	Value* binop255_var = BinaryOperator::Create(Instruction::Add, load254_var, binop247_var, "", builder.GetInsertBlock());
	SwitchInst* switch256_var = builder.CreateSwitch(load240_var, block58, 2);
	switch256_var->addCase(cast<ConstantInt>(switch37_val37_int), block56);
	switch256_var->addCase(cast<ConstantInt>(gep4_val6_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep256_array { binop255_var, };
	Value* gep256_var = builder.CreateInBoundsGEP(cast238_var, gep256_array);
	Value* cast257_var = builder.CreateCast(Instruction::BitCast, gep256_var, types[30]);
	llvm::LoadInst* load258_var = builder.CreateLoad(cast257_var, false);
	load258_var->setAlignment(2);
	Value* cast259_var = builder.CreateCast(Instruction::ZExt, load258_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep260_array { gep4_val4_int, cast235_var, gep4_val8_int, gep4_val8_int, gep42_val42_int, };
	Value* gep260_var = builder.CreateInBoundsGEP(globals[5], gep260_array);
	llvm::LoadInst* load261_var = builder.CreateLoad(gep260_var, false);
	load261_var->setAlignment(8);
	Value* binop262_var = BinaryOperator::Create(Instruction::Add, load261_var, binop255_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep263_array { binop262_var, };
	Value* gep263_var = builder.CreateInBoundsGEP(cast238_var, gep263_array);
	llvm::LoadInst* load264_var = builder.CreateLoad(gep263_var, false);
	load264_var->setAlignment(1);
	Value* cast265_var = builder.CreateCast(Instruction::ZExt, load264_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call266_var = builder.CreateCall(globals[6], gep50_var);
	call266_var->setTailCall();
	call266_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi267_var = builder.CreatePHI(types[0], 4);
	Value* binop268_var = BinaryOperator::Create(Instruction::Add, phi267_var, phi231_var, "", builder.GetInsertBlock());
	builder.CreateBr(block60);
	
	builder.SetInsertPoint(block60);
	PHINode* phi269_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep270_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep33_val33_int, };
	Value* gep270_var = builder.CreateInBoundsGEP(arg3, gep270_array);
	llvm::LoadInst* load271_var = builder.CreateLoad(gep270_var, false);
	load271_var->setAlignment(1);
	Value* cast272_var = builder.CreateCast(Instruction::ZExt, load271_var, types[0]);
	CallInst* call273_var = builder.CreateCall3(globals[14], phi269_var, cast272_var, phi133_var);
	call273_var->setTailCall();
	builder.CreateBr(block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep275_array { gep4_val4_int, gep4_val4_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[15], gep275_array);
	CallInst* call275_var = builder.CreateCall(globals[6], gep275_var);
	call275_var->setTailCall();
	call275_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block62);
	phi53_var->addIncoming(gep4_val4_int, block0);
	phi53_var->addIncoming(load23_var, block2);
	phi53_var->addIncoming(cast32_var, block4);
	phi53_var->addIncoming(cast41_var, block6);
	phi53_var->addIncoming(cast48_var, block7);
	
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi95_var->addIncoming(binop94_var, block18);
	phi95_var->addIncoming(phi53_var, block9);
	
	phi131_var->addIncoming(load108_var, block21);
	phi131_var->addIncoming(cast116_var, block23);
	phi131_var->addIncoming(cast123_var, block25);
	phi131_var->addIncoming(cast129_var, block26);
	
	phi133_var->addIncoming(binop132_var, block28);
	phi133_var->addIncoming(phi95_var, block19);
	
	phi189_var->addIncoming(gep4_val4_int, block31);
	phi189_var->addIncoming(load166_var, block33);
	phi189_var->addIncoming(cast174_var, block35);
	phi189_var->addIncoming(cast181_var, block37);
	phi189_var->addIncoming(cast187_var, block38);
	
	phi225_var->addIncoming(load202_var, block42);
	phi225_var->addIncoming(cast210_var, block44);
	phi225_var->addIncoming(cast217_var, block46);
	phi225_var->addIncoming(cast223_var, block47);
	
	phi231_var->addIncoming(binop230_var, block49);
	phi231_var->addIncoming(phi189_var, block40);
	
	phi267_var->addIncoming(load244_var, block52);
	phi267_var->addIncoming(cast252_var, block54);
	phi267_var->addIncoming(cast259_var, block56);
	phi267_var->addIncoming(cast265_var, block57);
	
	phi269_var->addIncoming(binop268_var, block59);
	phi269_var->addIncoming(phi231_var, block50);
	
	return;
}

void x86::x86_leave(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 7u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg1, gep4_array);
	Constant* gep8_val8_int = ConstantInt::get(types[2], 8u);
	ArrayRef<Value*> gep8_array { gep4_val4_int, gep8_val8_int, gep4_val6_int, };
	Value* gep8_var = builder.CreateInBoundsGEP(arg1, gep8_array);
	llvm::LoadInst* load10_var = builder.CreateLoad(gep4_var, false);
	load10_var->setAlignment(8);
	llvm::StoreInst* store11_var = builder.CreateStore(load10_var, gep8_var, false);
	store11_var->setAlignment(8);
	ArrayRef<Value*> gep12_array { gep4_val4_int, gep4_val6_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg0, gep12_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep12_var, false);
	load13_var->setAlignment(8);
	Constant* binop14_val14_int = ConstantInt::get(types[0], 3u);
	Value* binop14_var = BinaryOperator::Create(Instruction::LShr, load13_var, binop14_val14_int, "", builder.GetInsertBlock());
	Constant* gep16_val16_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep16_val16_int, };
	Value* gep16_var = builder.CreateGEP(arg0, gep16_array);
	llvm::LoadInst* load18_var = builder.CreateLoad(gep16_var, false);
	load18_var->setAlignment(4);
	Value* cast19_var = builder.CreateCast(Instruction::ZExt, load18_var, types[0]);
	ArrayRef<Value*> gep20_array { gep4_val4_int, cast19_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep20_var = builder.CreateInBoundsGEP(globals[5], gep20_array);
	llvm::LoadInst* load22_var = builder.CreateLoad(gep20_var, false);
	load22_var->setAlignment(16);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	Constant* gep24_val24_int = ConstantInt::get(types[2], 1u);
	ArrayRef<Value*> gep24_array { gep4_val4_int, cast19_var, gep24_val24_int, };
	Value* gep24_var = builder.CreateInBoundsGEP(globals[5], gep24_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep24_var, false);
	load26_var->setAlignment(16);
	Constant* cmp27_val27_int = ConstantInt::get(types[0], 8u);
	Value* cmp27_var = builder.CreateICmp(CmpInst::ICMP_EQ, load26_var, cmp27_val27_int);
	builder.CreateCondBr(cmp27_var, block1, block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep29_array { load22_var, };
	Value* gep29_var = builder.CreateInBoundsGEP(cast23_var, gep29_array);
	Value* cast30_var = builder.CreateCast(Instruction::BitCast, gep29_var, types[27]);
	llvm::LoadInst* load31_var = builder.CreateLoad(cast30_var, false);
	load31_var->setAlignment(8);
	builder.CreateBr(block8);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep32_array { gep4_val4_int, cast19_var, gep4_val6_int, gep4_val6_int, gep24_val24_int, };
	Value* gep32_var = builder.CreateInBoundsGEP(globals[5], gep32_array);
	llvm::LoadInst* load33_var = builder.CreateLoad(gep32_var, false);
	load33_var->setAlignment(8);
	Value* binop34_var = BinaryOperator::Create(Instruction::Add, load33_var, load22_var, "", builder.GetInsertBlock());
	Constant* cmp35_val35_int = ConstantInt::get(types[0], 4u);
	Value* cmp35_var = builder.CreateICmp(CmpInst::ICMP_EQ, load26_var, cmp35_val35_int);
	builder.CreateCondBr(cmp35_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep37_array { binop34_var, };
	Value* gep37_var = builder.CreateInBoundsGEP(cast23_var, gep37_array);
	Value* cast38_var = builder.CreateCast(Instruction::BitCast, gep37_var, types[28]);
	llvm::LoadInst* load39_var = builder.CreateLoad(cast38_var, false);
	load39_var->setAlignment(4);
	Value* cast40_var = builder.CreateCast(Instruction::ZExt, load39_var, types[0]);
	builder.CreateBr(block8);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep41_array { gep4_val4_int, cast19_var, gep4_val6_int, gep4_val6_int, gep16_val16_int, };
	Value* gep41_var = builder.CreateInBoundsGEP(globals[5], gep41_array);
	llvm::LoadInst* load42_var = builder.CreateLoad(gep41_var, false);
	load42_var->setAlignment(16);
	Value* binop43_var = BinaryOperator::Create(Instruction::Add, load42_var, binop34_var, "", builder.GetInsertBlock());
	SwitchInst* switch44_var = builder.CreateSwitch(load26_var, block7, 2);
	Constant* switch44_val44_int = ConstantInt::get(types[0], 2u);
	switch44_var->addCase(cast<ConstantInt>(switch44_val44_int), block5);
	Constant* switch44_val45_int = ConstantInt::get(types[0], 1u);
	switch44_var->addCase(cast<ConstantInt>(switch44_val45_int), block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep46_array { binop43_var, };
	Value* gep46_var = builder.CreateInBoundsGEP(cast23_var, gep46_array);
	Value* cast47_var = builder.CreateCast(Instruction::BitCast, gep46_var, types[30]);
	llvm::LoadInst* load48_var = builder.CreateLoad(cast47_var, false);
	load48_var->setAlignment(2);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block8);
	
	builder.SetInsertPoint(block6);
	Constant* gep50_val50_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep50_array { gep4_val4_int, cast19_var, gep4_val6_int, gep4_val6_int, gep50_val50_int, };
	Value* gep50_var = builder.CreateInBoundsGEP(globals[5], gep50_array);
	llvm::LoadInst* load52_var = builder.CreateLoad(gep50_var, false);
	load52_var->setAlignment(8);
	Value* binop53_var = BinaryOperator::Create(Instruction::Add, load52_var, binop43_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep54_array { binop53_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast23_var, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(1);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep58_array { gep4_val4_int, gep4_val4_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[7], gep58_array);
	CallInst* call57_var = builder.CreateCall(globals[6], gep58_var);
	call57_var->setTailCall();
	call57_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block8);
	PHINode* phi61_var = builder.CreatePHI(types[0], 4);
	CallInst* call62_var = builder.CreateCall2(globals[8], phi61_var, binop14_var);
	call62_var->setTailCall();
	Value* binop64_var = BinaryOperator::Create(Instruction::Add, phi61_var, binop14_var, "", builder.GetInsertBlock());
	Value* binop65_var = BinaryOperator::Create(Instruction::Shl, load26_var, binop14_val14_int, "", builder.GetInsertBlock());
	Constant* binop66_val66_int = ConstantInt::get(types[0], 64u);
	Value* binop66_var = BinaryOperator::Create(Instruction::Sub, binop66_val66_int, binop65_var, "", builder.GetInsertBlock());
	Constant* binop68_val68_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop68_var = BinaryOperator::Create(Instruction::LShr, binop68_val68_int, binop66_var, "", builder.GetInsertBlock());
	Value* binop70_var = BinaryOperator::Create(Instruction::And, binop64_var, binop68_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep71_array { load22_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast23_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[27]);
	llvm::StoreInst* store73_var = builder.CreateStore(binop70_var, cast72_var, false);
	store73_var->setAlignment(8);
	llvm::StoreInst* store74_var = builder.CreateStore(call62_var, gep4_var, false);
	store74_var->setAlignment(8);
	phi61_var->addIncoming(load31_var, block1);
	phi61_var->addIncoming(cast40_var, block3);
	phi61_var->addIncoming(cast49_var, block5);
	phi61_var->addIncoming(cast56_var, block6);
	
	return;
}

void x86::x86_les(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[306], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lfence(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[307], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lfs(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[308], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lgdt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[309], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lgs(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[310], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lidt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[311], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ljmp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[312], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lldt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[313], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lmsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[314], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lodsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[315], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lodsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[316], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lodsq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[317], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lodsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[318], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_loop(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[319], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_loope(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[320], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_loopne(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[321], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lsl(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[322], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[323], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ltr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[324], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_lzcnt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[325], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_maskmovdqu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[326], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_maskmovq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[327], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_maxpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[328], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_maxps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[329], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_maxsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[330], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_maxss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[331], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mfence(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[332], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_minpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[333], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_minps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[334], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_minsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[335], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_minss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[336], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_monitor(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[337], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_montmul(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[338], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mov(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[0], 1u);
	Constant* gep4_val7_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, gep4_val7_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load9_var = builder.CreateLoad(gep4_var, false);
	load9_var->setAlignment(4);
	SwitchInst* switch10_var = builder.CreateSwitch(load9_var, block40, 3);
	Constant* switch10_val10_int = ConstantInt::get(types[2], 2u);
	switch10_var->addCase(cast<ConstantInt>(switch10_val10_int), block1);
	Constant* switch10_val11_int = ConstantInt::get(types[2], 1u);
	switch10_var->addCase(cast<ConstantInt>(switch10_val11_int), block2);
	Constant* switch10_val12_int = ConstantInt::get(types[2], 3u);
	switch10_var->addCase(cast<ConstantInt>(switch10_val12_int), block10);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(arg3, gep13_array);
	Value* cast14_var = builder.CreateCast(Instruction::BitCast, gep13_var, types[27]);
	llvm::LoadInst* load15_var = builder.CreateLoad(cast14_var, false);
	load15_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, gep4_val7_int, };
	Value* gep16_var = builder.CreateGEP(arg3, gep16_array);
	llvm::LoadInst* load17_var = builder.CreateLoad(gep16_var, false);
	load17_var->setAlignment(4);
	Value* cast18_var = builder.CreateCast(Instruction::ZExt, load17_var, types[0]);
	ArrayRef<Value*> gep19_array { gep4_val4_int, cast18_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(globals[5], gep19_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep19_var, false);
	load21_var->setAlignment(16);
	Value* cast22_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep23_array { gep4_val4_int, cast18_var, switch10_val11_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep23_var, false);
	load24_var->setAlignment(16);
	Constant* cmp25_val25_int = ConstantInt::get(types[0], 8u);
	Value* cmp25_var = builder.CreateICmp(CmpInst::ICMP_EQ, load24_var, cmp25_val25_int);
	builder.CreateCondBr(cmp25_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep27_array { load21_var, };
	Value* gep27_var = builder.CreateInBoundsGEP(cast22_var, gep27_array);
	Value* cast28_var = builder.CreateCast(Instruction::BitCast, gep27_var, types[27]);
	llvm::LoadInst* load29_var = builder.CreateLoad(cast28_var, false);
	load29_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { gep4_val4_int, cast18_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep30_var = builder.CreateInBoundsGEP(globals[5], gep30_array);
	llvm::LoadInst* load31_var = builder.CreateLoad(gep30_var, false);
	load31_var->setAlignment(8);
	Value* binop32_var = BinaryOperator::Create(Instruction::Add, load31_var, load21_var, "", builder.GetInsertBlock());
	Constant* cmp33_val33_int = ConstantInt::get(types[0], 4u);
	Value* cmp33_var = builder.CreateICmp(CmpInst::ICMP_EQ, load24_var, cmp33_val33_int);
	builder.CreateCondBr(cmp33_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep35_array { binop32_var, };
	Value* gep35_var = builder.CreateInBoundsGEP(cast22_var, gep35_array);
	Value* cast36_var = builder.CreateCast(Instruction::BitCast, gep35_var, types[28]);
	llvm::LoadInst* load37_var = builder.CreateLoad(cast36_var, false);
	load37_var->setAlignment(4);
	Value* cast38_var = builder.CreateCast(Instruction::ZExt, load37_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep39_array { gep4_val4_int, cast18_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep39_var = builder.CreateInBoundsGEP(globals[5], gep39_array);
	llvm::LoadInst* load40_var = builder.CreateLoad(gep39_var, false);
	load40_var->setAlignment(16);
	Value* binop41_var = BinaryOperator::Create(Instruction::Add, load40_var, binop32_var, "", builder.GetInsertBlock());
	SwitchInst* switch42_var = builder.CreateSwitch(load24_var, block9, 2);
	Constant* switch42_val42_int = ConstantInt::get(types[0], 2u);
	switch42_var->addCase(cast<ConstantInt>(switch42_val42_int), block7);
	switch42_var->addCase(cast<ConstantInt>(gep4_val6_int), block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { binop41_var, };
	Value* gep43_var = builder.CreateInBoundsGEP(cast22_var, gep43_array);
	Value* cast44_var = builder.CreateCast(Instruction::BitCast, gep43_var, types[30]);
	llvm::LoadInst* load45_var = builder.CreateLoad(cast44_var, false);
	load45_var->setAlignment(2);
	Value* cast46_var = builder.CreateCast(Instruction::ZExt, load45_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast18_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, binop41_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep50_array { binop49_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast22_var, gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(1);
	Value* cast52_var = builder.CreateCast(Instruction::ZExt, load51_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val4_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[7], gep54_array);
	CallInst* call53_var = builder.CreateCall(globals[6], gep54_var);
	call53_var->setTailCall();
	call53_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep57_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, gep4_val7_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(arg3, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(4);
	Value* cmp59_var = builder.CreateICmp(CmpInst::ICMP_EQ, load58_var, gep4_val7_int);
	builder.CreateCondBr(cmp59_var, block19, block11);
	
	builder.SetInsertPoint(block11);
	Value* cast60_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast60_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep64_array { gep4_val4_int, cast60_var, switch10_val11_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(globals[5], gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(16);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp25_val25_int);
	builder.CreateCondBr(cmp66_var, block12, block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { load62_var, };
	Value* gep67_var = builder.CreateInBoundsGEP(cast63_var, gep67_array);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, gep67_var, types[27]);
	llvm::LoadInst* load69_var = builder.CreateLoad(cast68_var, false);
	load69_var->setAlignment(8);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep70_array { gep4_val4_int, cast60_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep70_var = builder.CreateInBoundsGEP(globals[5], gep70_array);
	llvm::LoadInst* load71_var = builder.CreateLoad(gep70_var, false);
	load71_var->setAlignment(8);
	Value* binop72_var = BinaryOperator::Create(Instruction::Add, load71_var, load62_var, "", builder.GetInsertBlock());
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp33_val33_int);
	builder.CreateCondBr(cmp73_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { binop72_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast63_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[28]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(4);
	Value* cast77_var = builder.CreateCast(Instruction::ZExt, load76_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { gep4_val4_int, cast60_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(globals[5], gep78_array);
	llvm::LoadInst* load79_var = builder.CreateLoad(gep78_var, false);
	load79_var->setAlignment(16);
	Value* binop80_var = BinaryOperator::Create(Instruction::Add, load79_var, binop72_var, "", builder.GetInsertBlock());
	SwitchInst* switch81_var = builder.CreateSwitch(load65_var, block18, 2);
	switch81_var->addCase(cast<ConstantInt>(switch42_val42_int), block16);
	switch81_var->addCase(cast<ConstantInt>(gep4_val6_int), block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { binop80_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast63_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[30]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(2);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast60_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(8);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop80_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast63_var, gep88_array);
	llvm::LoadInst* load89_var = builder.CreateLoad(gep88_var, false);
	load89_var->setAlignment(1);
	Value* cast90_var = builder.CreateCast(Instruction::ZExt, load89_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block18);
	CallInst* call91_var = builder.CreateCall(globals[6], gep54_var);
	call91_var->setTailCall();
	call91_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block19);
	PHINode* phi92_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep93_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, switch10_val10_int, };
	Value* gep93_var = builder.CreateInBoundsGEP(arg3, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(4);
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load94_var, gep4_val7_int);
	builder.CreateCondBr(cmp95_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast96_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast96_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cast99_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast96_var, switch10_val11_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp25_val25_int);
	builder.CreateCondBr(cmp102_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { load98_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast99_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[27]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep106_array { gep4_val4_int, cast96_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep106_var = builder.CreateInBoundsGEP(globals[5], gep106_array);
	llvm::LoadInst* load107_var = builder.CreateLoad(gep106_var, false);
	load107_var->setAlignment(8);
	Value* binop108_var = BinaryOperator::Create(Instruction::Add, load107_var, load98_var, "", builder.GetInsertBlock());
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp33_val33_int);
	builder.CreateCondBr(cmp109_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { binop108_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast99_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[28]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(4);
	Value* cast113_var = builder.CreateCast(Instruction::ZExt, load112_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { gep4_val4_int, cast96_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep114_var = builder.CreateInBoundsGEP(globals[5], gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(16);
	Value* binop116_var = BinaryOperator::Create(Instruction::Add, load115_var, binop108_var, "", builder.GetInsertBlock());
	SwitchInst* switch117_var = builder.CreateSwitch(load101_var, block27, 2);
	switch117_var->addCase(cast<ConstantInt>(switch42_val42_int), block25);
	switch117_var->addCase(cast<ConstantInt>(gep4_val6_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { binop116_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast99_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[30]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(2);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast96_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(8);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop116_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast99_var, gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(1);
	Value* cast126_var = builder.CreateCast(Instruction::ZExt, load125_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call127_var = builder.CreateCall(globals[6], gep54_var);
	call127_var->setTailCall();
	call127_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi128_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep129_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, switch10_val12_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(arg3, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(4);
	Value* cast131_var = builder.CreateCast(Instruction::SExt, load130_var, types[0]);
	Value* binop132_var = BinaryOperator::Create(Instruction::Mul, cast131_var, phi128_var, "", builder.GetInsertBlock());
	Value* binop133_var = BinaryOperator::Create(Instruction::Add, binop132_var, phi92_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi134_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep135_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, switch10_val11_int, };
	Value* gep135_var = builder.CreateInBoundsGEP(arg3, gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(4);
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load136_var, gep4_val7_int);
	builder.CreateCondBr(cmp137_var, block39, block30);
	
	builder.SetInsertPoint(block30);
	Value* cast138_var = builder.CreateCast(Instruction::ZExt, load136_var, types[0]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast138_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cast141_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast138_var, switch10_val11_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp25_val25_int);
	builder.CreateCondBr(cmp144_var, block31, block32);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { load140_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast141_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[27]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(8);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast138_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, load140_var, "", builder.GetInsertBlock());
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp33_val33_int);
	builder.CreateCondBr(cmp151_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { binop150_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast141_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[28]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(4);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { gep4_val4_int, cast138_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep156_var = builder.CreateInBoundsGEP(globals[5], gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(16);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, load157_var, binop150_var, "", builder.GetInsertBlock());
	SwitchInst* switch159_var = builder.CreateSwitch(load143_var, block37, 2);
	switch159_var->addCase(cast<ConstantInt>(switch42_val42_int), block35);
	switch159_var->addCase(cast<ConstantInt>(gep4_val6_int), block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep159_array { binop158_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast141_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[30]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(2);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast138_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(8);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop158_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast141_var, gep166_array);
	llvm::LoadInst* load167_var = builder.CreateLoad(gep166_var, false);
	load167_var->setAlignment(1);
	Value* cast168_var = builder.CreateCast(Instruction::ZExt, load167_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block37);
	CallInst* call169_var = builder.CreateCall(globals[6], gep54_var);
	call169_var->setTailCall();
	call169_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block38);
	PHINode* phi170_var = builder.CreatePHI(types[0], 4);
	Value* binop171_var = BinaryOperator::Create(Instruction::Add, phi170_var, phi134_var, "", builder.GetInsertBlock());
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block39);
	PHINode* phi172_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep173_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val10_int, };
	Value* gep173_var = builder.CreateInBoundsGEP(arg3, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	CallInst* call176_var = builder.CreateCall2(globals[8], phi172_var, cast175_var);
	call176_var->setTailCall();
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block40);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep4_val4_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(globals[10], gep178_array);
	CallInst* call178_var = builder.CreateCall(globals[6], gep178_var);
	call178_var->setTailCall();
	call178_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block41);
	PHINode* phi181_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val7_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(arg3, gep182_array);
	llvm::LoadInst* load183_var = builder.CreateLoad(gep182_var, false);
	load183_var->setAlignment(4);
	SwitchInst* switch184_var = builder.CreateSwitch(load183_var, block73, 2);
	switch184_var->addCase(cast<ConstantInt>(switch10_val11_int), block42);
	switch184_var->addCase(cast<ConstantInt>(switch10_val12_int), block43);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, gep4_val7_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, switch10_val11_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Constant* binop189_val189_int = ConstantInt::get(types[0], 3u);
	Value* binop189_var = BinaryOperator::Create(Instruction::Shl, load188_var, binop189_val189_int, "", builder.GetInsertBlock());
	Constant* binop191_val191_int = ConstantInt::get(types[0], 64u);
	Value* binop191_var = BinaryOperator::Create(Instruction::Sub, binop191_val191_int, binop189_var, "", builder.GetInsertBlock());
	Constant* binop193_val193_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop193_var = BinaryOperator::Create(Instruction::LShr, binop193_val193_int, binop191_var, "", builder.GetInsertBlock());
	Value* binop195_var = BinaryOperator::Create(Instruction::And, binop193_var, phi181_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(16);
	Value* cast198_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep199_array { load197_var, };
	Value* gep199_var = builder.CreateInBoundsGEP(cast198_var, gep199_array);
	Value* cast200_var = builder.CreateCast(Instruction::BitCast, gep199_var, types[27]);
	llvm::StoreInst* store201_var = builder.CreateStore(binop195_var, cast200_var, false);
	store201_var->setAlignment(8);
	builder.CreateBr(block74);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep202_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, gep4_val7_int, };
	Value* gep202_var = builder.CreateInBoundsGEP(arg3, gep202_array);
	llvm::LoadInst* load203_var = builder.CreateLoad(gep202_var, false);
	load203_var->setAlignment(4);
	Value* cmp204_var = builder.CreateICmp(CmpInst::ICMP_EQ, load203_var, gep4_val7_int);
	builder.CreateCondBr(cmp204_var, block52, block44);
	
	builder.SetInsertPoint(block44);
	Value* cast205_var = builder.CreateCast(Instruction::ZExt, load203_var, types[0]);
	ArrayRef<Value*> gep206_array { gep4_val4_int, cast205_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep206_var = builder.CreateInBoundsGEP(globals[5], gep206_array);
	llvm::LoadInst* load207_var = builder.CreateLoad(gep206_var, false);
	load207_var->setAlignment(16);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep209_array { gep4_val4_int, cast205_var, switch10_val11_int, };
	Value* gep209_var = builder.CreateInBoundsGEP(globals[5], gep209_array);
	llvm::LoadInst* load210_var = builder.CreateLoad(gep209_var, false);
	load210_var->setAlignment(16);
	Value* cmp211_var = builder.CreateICmp(CmpInst::ICMP_EQ, load210_var, cmp25_val25_int);
	builder.CreateCondBr(cmp211_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep212_array { load207_var, };
	Value* gep212_var = builder.CreateInBoundsGEP(cast208_var, gep212_array);
	Value* cast213_var = builder.CreateCast(Instruction::BitCast, gep212_var, types[27]);
	llvm::LoadInst* load214_var = builder.CreateLoad(cast213_var, false);
	load214_var->setAlignment(8);
	builder.CreateBr(block52);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep215_array { gep4_val4_int, cast205_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep215_var = builder.CreateInBoundsGEP(globals[5], gep215_array);
	llvm::LoadInst* load216_var = builder.CreateLoad(gep215_var, false);
	load216_var->setAlignment(8);
	Value* binop217_var = BinaryOperator::Create(Instruction::Add, load216_var, load207_var, "", builder.GetInsertBlock());
	Value* cmp218_var = builder.CreateICmp(CmpInst::ICMP_EQ, load210_var, cmp33_val33_int);
	builder.CreateCondBr(cmp218_var, block47, block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep219_array { binop217_var, };
	Value* gep219_var = builder.CreateInBoundsGEP(cast208_var, gep219_array);
	Value* cast220_var = builder.CreateCast(Instruction::BitCast, gep219_var, types[28]);
	llvm::LoadInst* load221_var = builder.CreateLoad(cast220_var, false);
	load221_var->setAlignment(4);
	Value* cast222_var = builder.CreateCast(Instruction::ZExt, load221_var, types[0]);
	builder.CreateBr(block52);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep223_array { gep4_val4_int, cast205_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep223_var = builder.CreateInBoundsGEP(globals[5], gep223_array);
	llvm::LoadInst* load224_var = builder.CreateLoad(gep223_var, false);
	load224_var->setAlignment(16);
	Value* binop225_var = BinaryOperator::Create(Instruction::Add, load224_var, binop217_var, "", builder.GetInsertBlock());
	SwitchInst* switch226_var = builder.CreateSwitch(load210_var, block51, 2);
	switch226_var->addCase(cast<ConstantInt>(switch42_val42_int), block49);
	switch226_var->addCase(cast<ConstantInt>(gep4_val6_int), block50);
	
	builder.SetInsertPoint(block49);
	ArrayRef<Value*> gep226_array { binop225_var, };
	Value* gep226_var = builder.CreateInBoundsGEP(cast208_var, gep226_array);
	Value* cast227_var = builder.CreateCast(Instruction::BitCast, gep226_var, types[30]);
	llvm::LoadInst* load228_var = builder.CreateLoad(cast227_var, false);
	load228_var->setAlignment(2);
	Value* cast229_var = builder.CreateCast(Instruction::ZExt, load228_var, types[0]);
	builder.CreateBr(block52);
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep230_array { gep4_val4_int, cast205_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep230_var = builder.CreateInBoundsGEP(globals[5], gep230_array);
	llvm::LoadInst* load231_var = builder.CreateLoad(gep230_var, false);
	load231_var->setAlignment(8);
	Value* binop232_var = BinaryOperator::Create(Instruction::Add, load231_var, binop225_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep233_array { binop232_var, };
	Value* gep233_var = builder.CreateInBoundsGEP(cast208_var, gep233_array);
	llvm::LoadInst* load234_var = builder.CreateLoad(gep233_var, false);
	load234_var->setAlignment(1);
	Value* cast235_var = builder.CreateCast(Instruction::ZExt, load234_var, types[0]);
	builder.CreateBr(block52);
	
	builder.SetInsertPoint(block51);
	CallInst* call236_var = builder.CreateCall(globals[6], gep54_var);
	call236_var->setTailCall();
	call236_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block52);
	PHINode* phi237_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep238_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, switch10_val10_int, };
	Value* gep238_var = builder.CreateInBoundsGEP(arg3, gep238_array);
	llvm::LoadInst* load239_var = builder.CreateLoad(gep238_var, false);
	load239_var->setAlignment(4);
	Value* cmp240_var = builder.CreateICmp(CmpInst::ICMP_EQ, load239_var, gep4_val7_int);
	builder.CreateCondBr(cmp240_var, block62, block53);
	
	builder.SetInsertPoint(block53);
	Value* cast241_var = builder.CreateCast(Instruction::ZExt, load239_var, types[0]);
	ArrayRef<Value*> gep242_array { gep4_val4_int, cast241_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep242_var = builder.CreateInBoundsGEP(globals[5], gep242_array);
	llvm::LoadInst* load243_var = builder.CreateLoad(gep242_var, false);
	load243_var->setAlignment(16);
	Value* cast244_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep245_array { gep4_val4_int, cast241_var, switch10_val11_int, };
	Value* gep245_var = builder.CreateInBoundsGEP(globals[5], gep245_array);
	llvm::LoadInst* load246_var = builder.CreateLoad(gep245_var, false);
	load246_var->setAlignment(16);
	Value* cmp247_var = builder.CreateICmp(CmpInst::ICMP_EQ, load246_var, cmp25_val25_int);
	builder.CreateCondBr(cmp247_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep248_array { load243_var, };
	Value* gep248_var = builder.CreateInBoundsGEP(cast244_var, gep248_array);
	Value* cast249_var = builder.CreateCast(Instruction::BitCast, gep248_var, types[27]);
	llvm::LoadInst* load250_var = builder.CreateLoad(cast249_var, false);
	load250_var->setAlignment(8);
	builder.CreateBr(block61);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep251_array { gep4_val4_int, cast241_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep251_var = builder.CreateInBoundsGEP(globals[5], gep251_array);
	llvm::LoadInst* load252_var = builder.CreateLoad(gep251_var, false);
	load252_var->setAlignment(8);
	Value* binop253_var = BinaryOperator::Create(Instruction::Add, load252_var, load243_var, "", builder.GetInsertBlock());
	Value* cmp254_var = builder.CreateICmp(CmpInst::ICMP_EQ, load246_var, cmp33_val33_int);
	builder.CreateCondBr(cmp254_var, block56, block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep255_array { binop253_var, };
	Value* gep255_var = builder.CreateInBoundsGEP(cast244_var, gep255_array);
	Value* cast256_var = builder.CreateCast(Instruction::BitCast, gep255_var, types[28]);
	llvm::LoadInst* load257_var = builder.CreateLoad(cast256_var, false);
	load257_var->setAlignment(4);
	Value* cast258_var = builder.CreateCast(Instruction::ZExt, load257_var, types[0]);
	builder.CreateBr(block61);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep259_array { gep4_val4_int, cast241_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep259_var = builder.CreateInBoundsGEP(globals[5], gep259_array);
	llvm::LoadInst* load260_var = builder.CreateLoad(gep259_var, false);
	load260_var->setAlignment(16);
	Value* binop261_var = BinaryOperator::Create(Instruction::Add, load260_var, binop253_var, "", builder.GetInsertBlock());
	SwitchInst* switch262_var = builder.CreateSwitch(load246_var, block60, 2);
	switch262_var->addCase(cast<ConstantInt>(switch42_val42_int), block58);
	switch262_var->addCase(cast<ConstantInt>(gep4_val6_int), block59);
	
	builder.SetInsertPoint(block58);
	ArrayRef<Value*> gep262_array { binop261_var, };
	Value* gep262_var = builder.CreateInBoundsGEP(cast244_var, gep262_array);
	Value* cast263_var = builder.CreateCast(Instruction::BitCast, gep262_var, types[30]);
	llvm::LoadInst* load264_var = builder.CreateLoad(cast263_var, false);
	load264_var->setAlignment(2);
	Value* cast265_var = builder.CreateCast(Instruction::ZExt, load264_var, types[0]);
	builder.CreateBr(block61);
	
	builder.SetInsertPoint(block59);
	ArrayRef<Value*> gep266_array { gep4_val4_int, cast241_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep266_var = builder.CreateInBoundsGEP(globals[5], gep266_array);
	llvm::LoadInst* load267_var = builder.CreateLoad(gep266_var, false);
	load267_var->setAlignment(8);
	Value* binop268_var = BinaryOperator::Create(Instruction::Add, load267_var, binop261_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep269_array { binop268_var, };
	Value* gep269_var = builder.CreateInBoundsGEP(cast244_var, gep269_array);
	llvm::LoadInst* load270_var = builder.CreateLoad(gep269_var, false);
	load270_var->setAlignment(1);
	Value* cast271_var = builder.CreateCast(Instruction::ZExt, load270_var, types[0]);
	builder.CreateBr(block61);
	
	builder.SetInsertPoint(block60);
	CallInst* call272_var = builder.CreateCall(globals[6], gep54_var);
	call272_var->setTailCall();
	call272_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block61);
	PHINode* phi273_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep274_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, switch10_val12_int, };
	Value* gep274_var = builder.CreateInBoundsGEP(arg3, gep274_array);
	llvm::LoadInst* load275_var = builder.CreateLoad(gep274_var, false);
	load275_var->setAlignment(4);
	Value* cast276_var = builder.CreateCast(Instruction::SExt, load275_var, types[0]);
	Value* binop277_var = BinaryOperator::Create(Instruction::Mul, cast276_var, phi273_var, "", builder.GetInsertBlock());
	Value* binop278_var = BinaryOperator::Create(Instruction::Add, binop277_var, phi237_var, "", builder.GetInsertBlock());
	builder.CreateBr(block62);
	
	builder.SetInsertPoint(block62);
	PHINode* phi279_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep280_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, switch10_val11_int, };
	Value* gep280_var = builder.CreateInBoundsGEP(arg3, gep280_array);
	llvm::LoadInst* load281_var = builder.CreateLoad(gep280_var, false);
	load281_var->setAlignment(4);
	Value* cmp282_var = builder.CreateICmp(CmpInst::ICMP_EQ, load281_var, gep4_val7_int);
	builder.CreateCondBr(cmp282_var, block72, block63);
	
	builder.SetInsertPoint(block63);
	Value* cast283_var = builder.CreateCast(Instruction::ZExt, load281_var, types[0]);
	ArrayRef<Value*> gep284_array { gep4_val4_int, cast283_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep284_var = builder.CreateInBoundsGEP(globals[5], gep284_array);
	llvm::LoadInst* load285_var = builder.CreateLoad(gep284_var, false);
	load285_var->setAlignment(16);
	Value* cast286_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep287_array { gep4_val4_int, cast283_var, switch10_val11_int, };
	Value* gep287_var = builder.CreateInBoundsGEP(globals[5], gep287_array);
	llvm::LoadInst* load288_var = builder.CreateLoad(gep287_var, false);
	load288_var->setAlignment(16);
	Value* cmp289_var = builder.CreateICmp(CmpInst::ICMP_EQ, load288_var, cmp25_val25_int);
	builder.CreateCondBr(cmp289_var, block64, block65);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep290_array { load285_var, };
	Value* gep290_var = builder.CreateInBoundsGEP(cast286_var, gep290_array);
	Value* cast291_var = builder.CreateCast(Instruction::BitCast, gep290_var, types[27]);
	llvm::LoadInst* load292_var = builder.CreateLoad(cast291_var, false);
	load292_var->setAlignment(8);
	builder.CreateBr(block71);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep293_array { gep4_val4_int, cast283_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep293_var = builder.CreateInBoundsGEP(globals[5], gep293_array);
	llvm::LoadInst* load294_var = builder.CreateLoad(gep293_var, false);
	load294_var->setAlignment(8);
	Value* binop295_var = BinaryOperator::Create(Instruction::Add, load294_var, load285_var, "", builder.GetInsertBlock());
	Value* cmp296_var = builder.CreateICmp(CmpInst::ICMP_EQ, load288_var, cmp33_val33_int);
	builder.CreateCondBr(cmp296_var, block66, block67);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep297_array { binop295_var, };
	Value* gep297_var = builder.CreateInBoundsGEP(cast286_var, gep297_array);
	Value* cast298_var = builder.CreateCast(Instruction::BitCast, gep297_var, types[28]);
	llvm::LoadInst* load299_var = builder.CreateLoad(cast298_var, false);
	load299_var->setAlignment(4);
	Value* cast300_var = builder.CreateCast(Instruction::ZExt, load299_var, types[0]);
	builder.CreateBr(block71);
	
	builder.SetInsertPoint(block67);
	ArrayRef<Value*> gep301_array { gep4_val4_int, cast283_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep301_var = builder.CreateInBoundsGEP(globals[5], gep301_array);
	llvm::LoadInst* load302_var = builder.CreateLoad(gep301_var, false);
	load302_var->setAlignment(16);
	Value* binop303_var = BinaryOperator::Create(Instruction::Add, load302_var, binop295_var, "", builder.GetInsertBlock());
	SwitchInst* switch304_var = builder.CreateSwitch(load288_var, block70, 2);
	switch304_var->addCase(cast<ConstantInt>(switch42_val42_int), block68);
	switch304_var->addCase(cast<ConstantInt>(gep4_val6_int), block69);
	
	builder.SetInsertPoint(block68);
	ArrayRef<Value*> gep304_array { binop303_var, };
	Value* gep304_var = builder.CreateInBoundsGEP(cast286_var, gep304_array);
	Value* cast305_var = builder.CreateCast(Instruction::BitCast, gep304_var, types[30]);
	llvm::LoadInst* load306_var = builder.CreateLoad(cast305_var, false);
	load306_var->setAlignment(2);
	Value* cast307_var = builder.CreateCast(Instruction::ZExt, load306_var, types[0]);
	builder.CreateBr(block71);
	
	builder.SetInsertPoint(block69);
	ArrayRef<Value*> gep308_array { gep4_val4_int, cast283_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep308_var = builder.CreateInBoundsGEP(globals[5], gep308_array);
	llvm::LoadInst* load309_var = builder.CreateLoad(gep308_var, false);
	load309_var->setAlignment(8);
	Value* binop310_var = BinaryOperator::Create(Instruction::Add, load309_var, binop303_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep311_array { binop310_var, };
	Value* gep311_var = builder.CreateInBoundsGEP(cast286_var, gep311_array);
	llvm::LoadInst* load312_var = builder.CreateLoad(gep311_var, false);
	load312_var->setAlignment(1);
	Value* cast313_var = builder.CreateCast(Instruction::ZExt, load312_var, types[0]);
	builder.CreateBr(block71);
	
	builder.SetInsertPoint(block70);
	CallInst* call314_var = builder.CreateCall(globals[6], gep54_var);
	call314_var->setTailCall();
	call314_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block71);
	PHINode* phi315_var = builder.CreatePHI(types[0], 4);
	Value* binop316_var = BinaryOperator::Create(Instruction::Add, phi315_var, phi279_var, "", builder.GetInsertBlock());
	builder.CreateBr(block72);
	
	builder.SetInsertPoint(block72);
	PHINode* phi317_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep318_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val10_int, };
	Value* gep318_var = builder.CreateInBoundsGEP(arg3, gep318_array);
	llvm::LoadInst* load319_var = builder.CreateLoad(gep318_var, false);
	load319_var->setAlignment(1);
	Value* cast320_var = builder.CreateCast(Instruction::ZExt, load319_var, types[0]);
	CallInst* call321_var = builder.CreateCall3(globals[14], phi317_var, cast320_var, phi181_var);
	call321_var->setTailCall();
	builder.CreateBr(block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep323_array { gep4_val4_int, gep4_val4_int, };
	Value* gep323_var = builder.CreateInBoundsGEP(globals[15], gep323_array);
	CallInst* call323_var = builder.CreateCall(globals[6], gep323_var);
	call323_var->setTailCall();
	call323_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block74);
	phi92_var->addIncoming(gep4_val4_int, block10);
	phi92_var->addIncoming(load69_var, block12);
	phi92_var->addIncoming(cast77_var, block14);
	phi92_var->addIncoming(cast84_var, block16);
	phi92_var->addIncoming(cast90_var, block17);
	
	phi128_var->addIncoming(load105_var, block21);
	phi128_var->addIncoming(cast113_var, block23);
	phi128_var->addIncoming(cast120_var, block25);
	phi128_var->addIncoming(cast126_var, block26);
	
	phi134_var->addIncoming(binop133_var, block28);
	phi134_var->addIncoming(phi92_var, block19);
	
	phi170_var->addIncoming(load147_var, block31);
	phi170_var->addIncoming(cast155_var, block33);
	phi170_var->addIncoming(cast162_var, block35);
	phi170_var->addIncoming(cast168_var, block36);
	
	phi172_var->addIncoming(binop171_var, block38);
	phi172_var->addIncoming(phi134_var, block29);
	
	phi181_var->addIncoming(call176_var, block39);
	phi181_var->addIncoming(load15_var, block1);
	phi181_var->addIncoming(load29_var, block3);
	phi181_var->addIncoming(cast38_var, block5);
	phi181_var->addIncoming(cast46_var, block7);
	phi181_var->addIncoming(cast52_var, block8);
	
	phi237_var->addIncoming(gep4_val4_int, block43);
	phi237_var->addIncoming(load214_var, block45);
	phi237_var->addIncoming(cast222_var, block47);
	phi237_var->addIncoming(cast229_var, block49);
	phi237_var->addIncoming(cast235_var, block50);
	
	phi273_var->addIncoming(load250_var, block54);
	phi273_var->addIncoming(cast258_var, block56);
	phi273_var->addIncoming(cast265_var, block58);
	phi273_var->addIncoming(cast271_var, block59);
	
	phi279_var->addIncoming(binop278_var, block61);
	phi279_var->addIncoming(phi237_var, block52);
	
	phi315_var->addIncoming(load292_var, block64);
	phi315_var->addIncoming(cast300_var, block66);
	phi315_var->addIncoming(cast307_var, block68);
	phi315_var->addIncoming(cast313_var, block69);
	
	phi317_var->addIncoming(binop316_var, block71);
	phi317_var->addIncoming(phi279_var, block62);
	
	return;
}

void x86::x86_movabs(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[339], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movapd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[340], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movaps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[341], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movbe(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[342], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[343], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movddup(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[344], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movdq2q(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[345], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movdqa(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[346], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movdqu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[347], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movhlps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[348], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movhpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[349], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movhps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[350], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movlhps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[351], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movlpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[352], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movlps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[353], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movmskpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[354], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movmskps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[355], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movntdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[356], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movntdqa(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[357], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movnti(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[358], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movntpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[359], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movntps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[360], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movntq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[361], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movntsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[362], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movntss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[363], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[364], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movq2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[365], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[366], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[367], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movshdup(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[368], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movsldup(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[369], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movsq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[370], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[371], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[372], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movsx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[373], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movsxd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[374], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movupd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[375], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movups(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[376], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_movzx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[0], 1u);
	Constant* gep4_val7_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, gep4_val7_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load9_var = builder.CreateLoad(gep4_var, false);
	load9_var->setAlignment(4);
	SwitchInst* switch10_var = builder.CreateSwitch(load9_var, block40, 3);
	Constant* switch10_val10_int = ConstantInt::get(types[2], 2u);
	switch10_var->addCase(cast<ConstantInt>(switch10_val10_int), block1);
	Constant* switch10_val11_int = ConstantInt::get(types[2], 1u);
	switch10_var->addCase(cast<ConstantInt>(switch10_val11_int), block2);
	Constant* switch10_val12_int = ConstantInt::get(types[2], 3u);
	switch10_var->addCase(cast<ConstantInt>(switch10_val12_int), block10);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(arg3, gep13_array);
	Value* cast14_var = builder.CreateCast(Instruction::BitCast, gep13_var, types[27]);
	llvm::LoadInst* load15_var = builder.CreateLoad(cast14_var, false);
	load15_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, gep4_val7_int, };
	Value* gep16_var = builder.CreateGEP(arg3, gep16_array);
	llvm::LoadInst* load17_var = builder.CreateLoad(gep16_var, false);
	load17_var->setAlignment(4);
	Value* cast18_var = builder.CreateCast(Instruction::ZExt, load17_var, types[0]);
	ArrayRef<Value*> gep19_array { gep4_val4_int, cast18_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(globals[5], gep19_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep19_var, false);
	load21_var->setAlignment(16);
	Value* cast22_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep23_array { gep4_val4_int, cast18_var, switch10_val11_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep23_var, false);
	load24_var->setAlignment(16);
	Constant* cmp25_val25_int = ConstantInt::get(types[0], 8u);
	Value* cmp25_var = builder.CreateICmp(CmpInst::ICMP_EQ, load24_var, cmp25_val25_int);
	builder.CreateCondBr(cmp25_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep27_array { load21_var, };
	Value* gep27_var = builder.CreateInBoundsGEP(cast22_var, gep27_array);
	Value* cast28_var = builder.CreateCast(Instruction::BitCast, gep27_var, types[27]);
	llvm::LoadInst* load29_var = builder.CreateLoad(cast28_var, false);
	load29_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { gep4_val4_int, cast18_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep30_var = builder.CreateInBoundsGEP(globals[5], gep30_array);
	llvm::LoadInst* load31_var = builder.CreateLoad(gep30_var, false);
	load31_var->setAlignment(8);
	Value* binop32_var = BinaryOperator::Create(Instruction::Add, load31_var, load21_var, "", builder.GetInsertBlock());
	Constant* cmp33_val33_int = ConstantInt::get(types[0], 4u);
	Value* cmp33_var = builder.CreateICmp(CmpInst::ICMP_EQ, load24_var, cmp33_val33_int);
	builder.CreateCondBr(cmp33_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep35_array { binop32_var, };
	Value* gep35_var = builder.CreateInBoundsGEP(cast22_var, gep35_array);
	Value* cast36_var = builder.CreateCast(Instruction::BitCast, gep35_var, types[28]);
	llvm::LoadInst* load37_var = builder.CreateLoad(cast36_var, false);
	load37_var->setAlignment(4);
	Value* cast38_var = builder.CreateCast(Instruction::ZExt, load37_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep39_array { gep4_val4_int, cast18_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep39_var = builder.CreateInBoundsGEP(globals[5], gep39_array);
	llvm::LoadInst* load40_var = builder.CreateLoad(gep39_var, false);
	load40_var->setAlignment(16);
	Value* binop41_var = BinaryOperator::Create(Instruction::Add, load40_var, binop32_var, "", builder.GetInsertBlock());
	SwitchInst* switch42_var = builder.CreateSwitch(load24_var, block9, 2);
	Constant* switch42_val42_int = ConstantInt::get(types[0], 2u);
	switch42_var->addCase(cast<ConstantInt>(switch42_val42_int), block7);
	switch42_var->addCase(cast<ConstantInt>(gep4_val6_int), block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { binop41_var, };
	Value* gep43_var = builder.CreateInBoundsGEP(cast22_var, gep43_array);
	Value* cast44_var = builder.CreateCast(Instruction::BitCast, gep43_var, types[30]);
	llvm::LoadInst* load45_var = builder.CreateLoad(cast44_var, false);
	load45_var->setAlignment(2);
	Value* cast46_var = builder.CreateCast(Instruction::ZExt, load45_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast18_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, binop41_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep50_array { binop49_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast22_var, gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(1);
	Value* cast52_var = builder.CreateCast(Instruction::ZExt, load51_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val4_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[7], gep54_array);
	CallInst* call53_var = builder.CreateCall(globals[6], gep54_var);
	call53_var->setTailCall();
	call53_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep57_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, gep4_val7_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(arg3, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(4);
	Value* cmp59_var = builder.CreateICmp(CmpInst::ICMP_EQ, load58_var, gep4_val7_int);
	builder.CreateCondBr(cmp59_var, block19, block11);
	
	builder.SetInsertPoint(block11);
	Value* cast60_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast60_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep64_array { gep4_val4_int, cast60_var, switch10_val11_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(globals[5], gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(16);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp25_val25_int);
	builder.CreateCondBr(cmp66_var, block12, block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { load62_var, };
	Value* gep67_var = builder.CreateInBoundsGEP(cast63_var, gep67_array);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, gep67_var, types[27]);
	llvm::LoadInst* load69_var = builder.CreateLoad(cast68_var, false);
	load69_var->setAlignment(8);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep70_array { gep4_val4_int, cast60_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep70_var = builder.CreateInBoundsGEP(globals[5], gep70_array);
	llvm::LoadInst* load71_var = builder.CreateLoad(gep70_var, false);
	load71_var->setAlignment(8);
	Value* binop72_var = BinaryOperator::Create(Instruction::Add, load71_var, load62_var, "", builder.GetInsertBlock());
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp33_val33_int);
	builder.CreateCondBr(cmp73_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { binop72_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast63_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[28]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(4);
	Value* cast77_var = builder.CreateCast(Instruction::ZExt, load76_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { gep4_val4_int, cast60_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(globals[5], gep78_array);
	llvm::LoadInst* load79_var = builder.CreateLoad(gep78_var, false);
	load79_var->setAlignment(16);
	Value* binop80_var = BinaryOperator::Create(Instruction::Add, load79_var, binop72_var, "", builder.GetInsertBlock());
	SwitchInst* switch81_var = builder.CreateSwitch(load65_var, block18, 2);
	switch81_var->addCase(cast<ConstantInt>(switch42_val42_int), block16);
	switch81_var->addCase(cast<ConstantInt>(gep4_val6_int), block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { binop80_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast63_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[30]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(2);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast60_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(8);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop80_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast63_var, gep88_array);
	llvm::LoadInst* load89_var = builder.CreateLoad(gep88_var, false);
	load89_var->setAlignment(1);
	Value* cast90_var = builder.CreateCast(Instruction::ZExt, load89_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block18);
	CallInst* call91_var = builder.CreateCall(globals[6], gep54_var);
	call91_var->setTailCall();
	call91_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block19);
	PHINode* phi92_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep93_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, switch10_val10_int, };
	Value* gep93_var = builder.CreateInBoundsGEP(arg3, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(4);
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load94_var, gep4_val7_int);
	builder.CreateCondBr(cmp95_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast96_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast96_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cast99_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast96_var, switch10_val11_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp25_val25_int);
	builder.CreateCondBr(cmp102_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { load98_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast99_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[27]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep106_array { gep4_val4_int, cast96_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep106_var = builder.CreateInBoundsGEP(globals[5], gep106_array);
	llvm::LoadInst* load107_var = builder.CreateLoad(gep106_var, false);
	load107_var->setAlignment(8);
	Value* binop108_var = BinaryOperator::Create(Instruction::Add, load107_var, load98_var, "", builder.GetInsertBlock());
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp33_val33_int);
	builder.CreateCondBr(cmp109_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { binop108_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast99_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[28]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(4);
	Value* cast113_var = builder.CreateCast(Instruction::ZExt, load112_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { gep4_val4_int, cast96_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep114_var = builder.CreateInBoundsGEP(globals[5], gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(16);
	Value* binop116_var = BinaryOperator::Create(Instruction::Add, load115_var, binop108_var, "", builder.GetInsertBlock());
	SwitchInst* switch117_var = builder.CreateSwitch(load101_var, block27, 2);
	switch117_var->addCase(cast<ConstantInt>(switch42_val42_int), block25);
	switch117_var->addCase(cast<ConstantInt>(gep4_val6_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { binop116_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast99_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[30]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(2);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast96_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(8);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop116_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast99_var, gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(1);
	Value* cast126_var = builder.CreateCast(Instruction::ZExt, load125_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call127_var = builder.CreateCall(globals[6], gep54_var);
	call127_var->setTailCall();
	call127_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi128_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep129_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, switch10_val12_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(arg3, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(4);
	Value* cast131_var = builder.CreateCast(Instruction::SExt, load130_var, types[0]);
	Value* binop132_var = BinaryOperator::Create(Instruction::Mul, cast131_var, phi128_var, "", builder.GetInsertBlock());
	Value* binop133_var = BinaryOperator::Create(Instruction::Add, binop132_var, phi92_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi134_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep135_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val11_int, gep4_val7_int, switch10_val11_int, };
	Value* gep135_var = builder.CreateInBoundsGEP(arg3, gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(4);
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load136_var, gep4_val7_int);
	builder.CreateCondBr(cmp137_var, block39, block30);
	
	builder.SetInsertPoint(block30);
	Value* cast138_var = builder.CreateCast(Instruction::ZExt, load136_var, types[0]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast138_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cast141_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast138_var, switch10_val11_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp25_val25_int);
	builder.CreateCondBr(cmp144_var, block31, block32);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { load140_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast141_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[27]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(8);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast138_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, load140_var, "", builder.GetInsertBlock());
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp33_val33_int);
	builder.CreateCondBr(cmp151_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { binop150_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast141_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[28]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(4);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { gep4_val4_int, cast138_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep156_var = builder.CreateInBoundsGEP(globals[5], gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(16);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, load157_var, binop150_var, "", builder.GetInsertBlock());
	SwitchInst* switch159_var = builder.CreateSwitch(load143_var, block37, 2);
	switch159_var->addCase(cast<ConstantInt>(switch42_val42_int), block35);
	switch159_var->addCase(cast<ConstantInt>(gep4_val6_int), block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep159_array { binop158_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast141_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[30]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(2);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast138_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(8);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop158_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast141_var, gep166_array);
	llvm::LoadInst* load167_var = builder.CreateLoad(gep166_var, false);
	load167_var->setAlignment(1);
	Value* cast168_var = builder.CreateCast(Instruction::ZExt, load167_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block37);
	CallInst* call169_var = builder.CreateCall(globals[6], gep54_var);
	call169_var->setTailCall();
	call169_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block38);
	PHINode* phi170_var = builder.CreatePHI(types[0], 4);
	Value* binop171_var = BinaryOperator::Create(Instruction::Add, phi170_var, phi134_var, "", builder.GetInsertBlock());
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block39);
	PHINode* phi172_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep173_array { gep4_val4_int, gep4_val5_int, gep4_val6_int, switch10_val10_int, };
	Value* gep173_var = builder.CreateInBoundsGEP(arg3, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	CallInst* call176_var = builder.CreateCall2(globals[8], phi172_var, cast175_var);
	call176_var->setTailCall();
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block40);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep4_val4_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(globals[10], gep178_array);
	CallInst* call178_var = builder.CreateCall(globals[6], gep178_var);
	call178_var->setTailCall();
	call178_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block41);
	PHINode* phi181_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep182_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val7_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(arg3, gep182_array);
	llvm::LoadInst* load183_var = builder.CreateLoad(gep182_var, false);
	load183_var->setAlignment(4);
	SwitchInst* switch184_var = builder.CreateSwitch(load183_var, block73, 2);
	switch184_var->addCase(cast<ConstantInt>(switch10_val11_int), block42);
	switch184_var->addCase(cast<ConstantInt>(switch10_val12_int), block43);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, gep4_val7_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, switch10_val11_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Constant* binop189_val189_int = ConstantInt::get(types[0], 3u);
	Value* binop189_var = BinaryOperator::Create(Instruction::Shl, load188_var, binop189_val189_int, "", builder.GetInsertBlock());
	Constant* binop191_val191_int = ConstantInt::get(types[0], 64u);
	Value* binop191_var = BinaryOperator::Create(Instruction::Sub, binop191_val191_int, binop189_var, "", builder.GetInsertBlock());
	Constant* binop193_val193_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop193_var = BinaryOperator::Create(Instruction::LShr, binop193_val193_int, binop191_var, "", builder.GetInsertBlock());
	Value* binop195_var = BinaryOperator::Create(Instruction::And, binop193_var, phi181_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(16);
	Value* cast198_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep199_array { load197_var, };
	Value* gep199_var = builder.CreateInBoundsGEP(cast198_var, gep199_array);
	Value* cast200_var = builder.CreateCast(Instruction::BitCast, gep199_var, types[27]);
	llvm::StoreInst* store201_var = builder.CreateStore(binop195_var, cast200_var, false);
	store201_var->setAlignment(8);
	builder.CreateBr(block74);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep202_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, gep4_val7_int, };
	Value* gep202_var = builder.CreateInBoundsGEP(arg3, gep202_array);
	llvm::LoadInst* load203_var = builder.CreateLoad(gep202_var, false);
	load203_var->setAlignment(4);
	Value* cmp204_var = builder.CreateICmp(CmpInst::ICMP_EQ, load203_var, gep4_val7_int);
	builder.CreateCondBr(cmp204_var, block52, block44);
	
	builder.SetInsertPoint(block44);
	Value* cast205_var = builder.CreateCast(Instruction::ZExt, load203_var, types[0]);
	ArrayRef<Value*> gep206_array { gep4_val4_int, cast205_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep206_var = builder.CreateInBoundsGEP(globals[5], gep206_array);
	llvm::LoadInst* load207_var = builder.CreateLoad(gep206_var, false);
	load207_var->setAlignment(16);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep209_array { gep4_val4_int, cast205_var, switch10_val11_int, };
	Value* gep209_var = builder.CreateInBoundsGEP(globals[5], gep209_array);
	llvm::LoadInst* load210_var = builder.CreateLoad(gep209_var, false);
	load210_var->setAlignment(16);
	Value* cmp211_var = builder.CreateICmp(CmpInst::ICMP_EQ, load210_var, cmp25_val25_int);
	builder.CreateCondBr(cmp211_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep212_array { load207_var, };
	Value* gep212_var = builder.CreateInBoundsGEP(cast208_var, gep212_array);
	Value* cast213_var = builder.CreateCast(Instruction::BitCast, gep212_var, types[27]);
	llvm::LoadInst* load214_var = builder.CreateLoad(cast213_var, false);
	load214_var->setAlignment(8);
	builder.CreateBr(block52);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep215_array { gep4_val4_int, cast205_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep215_var = builder.CreateInBoundsGEP(globals[5], gep215_array);
	llvm::LoadInst* load216_var = builder.CreateLoad(gep215_var, false);
	load216_var->setAlignment(8);
	Value* binop217_var = BinaryOperator::Create(Instruction::Add, load216_var, load207_var, "", builder.GetInsertBlock());
	Value* cmp218_var = builder.CreateICmp(CmpInst::ICMP_EQ, load210_var, cmp33_val33_int);
	builder.CreateCondBr(cmp218_var, block47, block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep219_array { binop217_var, };
	Value* gep219_var = builder.CreateInBoundsGEP(cast208_var, gep219_array);
	Value* cast220_var = builder.CreateCast(Instruction::BitCast, gep219_var, types[28]);
	llvm::LoadInst* load221_var = builder.CreateLoad(cast220_var, false);
	load221_var->setAlignment(4);
	Value* cast222_var = builder.CreateCast(Instruction::ZExt, load221_var, types[0]);
	builder.CreateBr(block52);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep223_array { gep4_val4_int, cast205_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep223_var = builder.CreateInBoundsGEP(globals[5], gep223_array);
	llvm::LoadInst* load224_var = builder.CreateLoad(gep223_var, false);
	load224_var->setAlignment(16);
	Value* binop225_var = BinaryOperator::Create(Instruction::Add, load224_var, binop217_var, "", builder.GetInsertBlock());
	SwitchInst* switch226_var = builder.CreateSwitch(load210_var, block51, 2);
	switch226_var->addCase(cast<ConstantInt>(switch42_val42_int), block49);
	switch226_var->addCase(cast<ConstantInt>(gep4_val6_int), block50);
	
	builder.SetInsertPoint(block49);
	ArrayRef<Value*> gep226_array { binop225_var, };
	Value* gep226_var = builder.CreateInBoundsGEP(cast208_var, gep226_array);
	Value* cast227_var = builder.CreateCast(Instruction::BitCast, gep226_var, types[30]);
	llvm::LoadInst* load228_var = builder.CreateLoad(cast227_var, false);
	load228_var->setAlignment(2);
	Value* cast229_var = builder.CreateCast(Instruction::ZExt, load228_var, types[0]);
	builder.CreateBr(block52);
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep230_array { gep4_val4_int, cast205_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep230_var = builder.CreateInBoundsGEP(globals[5], gep230_array);
	llvm::LoadInst* load231_var = builder.CreateLoad(gep230_var, false);
	load231_var->setAlignment(8);
	Value* binop232_var = BinaryOperator::Create(Instruction::Add, load231_var, binop225_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep233_array { binop232_var, };
	Value* gep233_var = builder.CreateInBoundsGEP(cast208_var, gep233_array);
	llvm::LoadInst* load234_var = builder.CreateLoad(gep233_var, false);
	load234_var->setAlignment(1);
	Value* cast235_var = builder.CreateCast(Instruction::ZExt, load234_var, types[0]);
	builder.CreateBr(block52);
	
	builder.SetInsertPoint(block51);
	CallInst* call236_var = builder.CreateCall(globals[6], gep54_var);
	call236_var->setTailCall();
	call236_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block52);
	PHINode* phi237_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep238_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, switch10_val10_int, };
	Value* gep238_var = builder.CreateInBoundsGEP(arg3, gep238_array);
	llvm::LoadInst* load239_var = builder.CreateLoad(gep238_var, false);
	load239_var->setAlignment(4);
	Value* cmp240_var = builder.CreateICmp(CmpInst::ICMP_EQ, load239_var, gep4_val7_int);
	builder.CreateCondBr(cmp240_var, block62, block53);
	
	builder.SetInsertPoint(block53);
	Value* cast241_var = builder.CreateCast(Instruction::ZExt, load239_var, types[0]);
	ArrayRef<Value*> gep242_array { gep4_val4_int, cast241_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep242_var = builder.CreateInBoundsGEP(globals[5], gep242_array);
	llvm::LoadInst* load243_var = builder.CreateLoad(gep242_var, false);
	load243_var->setAlignment(16);
	Value* cast244_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep245_array { gep4_val4_int, cast241_var, switch10_val11_int, };
	Value* gep245_var = builder.CreateInBoundsGEP(globals[5], gep245_array);
	llvm::LoadInst* load246_var = builder.CreateLoad(gep245_var, false);
	load246_var->setAlignment(16);
	Value* cmp247_var = builder.CreateICmp(CmpInst::ICMP_EQ, load246_var, cmp25_val25_int);
	builder.CreateCondBr(cmp247_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep248_array { load243_var, };
	Value* gep248_var = builder.CreateInBoundsGEP(cast244_var, gep248_array);
	Value* cast249_var = builder.CreateCast(Instruction::BitCast, gep248_var, types[27]);
	llvm::LoadInst* load250_var = builder.CreateLoad(cast249_var, false);
	load250_var->setAlignment(8);
	builder.CreateBr(block61);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep251_array { gep4_val4_int, cast241_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep251_var = builder.CreateInBoundsGEP(globals[5], gep251_array);
	llvm::LoadInst* load252_var = builder.CreateLoad(gep251_var, false);
	load252_var->setAlignment(8);
	Value* binop253_var = BinaryOperator::Create(Instruction::Add, load252_var, load243_var, "", builder.GetInsertBlock());
	Value* cmp254_var = builder.CreateICmp(CmpInst::ICMP_EQ, load246_var, cmp33_val33_int);
	builder.CreateCondBr(cmp254_var, block56, block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep255_array { binop253_var, };
	Value* gep255_var = builder.CreateInBoundsGEP(cast244_var, gep255_array);
	Value* cast256_var = builder.CreateCast(Instruction::BitCast, gep255_var, types[28]);
	llvm::LoadInst* load257_var = builder.CreateLoad(cast256_var, false);
	load257_var->setAlignment(4);
	Value* cast258_var = builder.CreateCast(Instruction::ZExt, load257_var, types[0]);
	builder.CreateBr(block61);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep259_array { gep4_val4_int, cast241_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep259_var = builder.CreateInBoundsGEP(globals[5], gep259_array);
	llvm::LoadInst* load260_var = builder.CreateLoad(gep259_var, false);
	load260_var->setAlignment(16);
	Value* binop261_var = BinaryOperator::Create(Instruction::Add, load260_var, binop253_var, "", builder.GetInsertBlock());
	SwitchInst* switch262_var = builder.CreateSwitch(load246_var, block60, 2);
	switch262_var->addCase(cast<ConstantInt>(switch42_val42_int), block58);
	switch262_var->addCase(cast<ConstantInt>(gep4_val6_int), block59);
	
	builder.SetInsertPoint(block58);
	ArrayRef<Value*> gep262_array { binop261_var, };
	Value* gep262_var = builder.CreateInBoundsGEP(cast244_var, gep262_array);
	Value* cast263_var = builder.CreateCast(Instruction::BitCast, gep262_var, types[30]);
	llvm::LoadInst* load264_var = builder.CreateLoad(cast263_var, false);
	load264_var->setAlignment(2);
	Value* cast265_var = builder.CreateCast(Instruction::ZExt, load264_var, types[0]);
	builder.CreateBr(block61);
	
	builder.SetInsertPoint(block59);
	ArrayRef<Value*> gep266_array { gep4_val4_int, cast241_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep266_var = builder.CreateInBoundsGEP(globals[5], gep266_array);
	llvm::LoadInst* load267_var = builder.CreateLoad(gep266_var, false);
	load267_var->setAlignment(8);
	Value* binop268_var = BinaryOperator::Create(Instruction::Add, load267_var, binop261_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep269_array { binop268_var, };
	Value* gep269_var = builder.CreateInBoundsGEP(cast244_var, gep269_array);
	llvm::LoadInst* load270_var = builder.CreateLoad(gep269_var, false);
	load270_var->setAlignment(1);
	Value* cast271_var = builder.CreateCast(Instruction::ZExt, load270_var, types[0]);
	builder.CreateBr(block61);
	
	builder.SetInsertPoint(block60);
	CallInst* call272_var = builder.CreateCall(globals[6], gep54_var);
	call272_var->setTailCall();
	call272_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block61);
	PHINode* phi273_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep274_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, switch10_val12_int, };
	Value* gep274_var = builder.CreateInBoundsGEP(arg3, gep274_array);
	llvm::LoadInst* load275_var = builder.CreateLoad(gep274_var, false);
	load275_var->setAlignment(4);
	Value* cast276_var = builder.CreateCast(Instruction::SExt, load275_var, types[0]);
	Value* binop277_var = BinaryOperator::Create(Instruction::Mul, cast276_var, phi273_var, "", builder.GetInsertBlock());
	Value* binop278_var = BinaryOperator::Create(Instruction::Add, binop277_var, phi237_var, "", builder.GetInsertBlock());
	builder.CreateBr(block62);
	
	builder.SetInsertPoint(block62);
	PHINode* phi279_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep280_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val11_int, gep4_val7_int, switch10_val11_int, };
	Value* gep280_var = builder.CreateInBoundsGEP(arg3, gep280_array);
	llvm::LoadInst* load281_var = builder.CreateLoad(gep280_var, false);
	load281_var->setAlignment(4);
	Value* cmp282_var = builder.CreateICmp(CmpInst::ICMP_EQ, load281_var, gep4_val7_int);
	builder.CreateCondBr(cmp282_var, block72, block63);
	
	builder.SetInsertPoint(block63);
	Value* cast283_var = builder.CreateCast(Instruction::ZExt, load281_var, types[0]);
	ArrayRef<Value*> gep284_array { gep4_val4_int, cast283_var, gep4_val7_int, gep4_val7_int, gep4_val7_int, };
	Value* gep284_var = builder.CreateInBoundsGEP(globals[5], gep284_array);
	llvm::LoadInst* load285_var = builder.CreateLoad(gep284_var, false);
	load285_var->setAlignment(16);
	Value* cast286_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep287_array { gep4_val4_int, cast283_var, switch10_val11_int, };
	Value* gep287_var = builder.CreateInBoundsGEP(globals[5], gep287_array);
	llvm::LoadInst* load288_var = builder.CreateLoad(gep287_var, false);
	load288_var->setAlignment(16);
	Value* cmp289_var = builder.CreateICmp(CmpInst::ICMP_EQ, load288_var, cmp25_val25_int);
	builder.CreateCondBr(cmp289_var, block64, block65);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep290_array { load285_var, };
	Value* gep290_var = builder.CreateInBoundsGEP(cast286_var, gep290_array);
	Value* cast291_var = builder.CreateCast(Instruction::BitCast, gep290_var, types[27]);
	llvm::LoadInst* load292_var = builder.CreateLoad(cast291_var, false);
	load292_var->setAlignment(8);
	builder.CreateBr(block71);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep293_array { gep4_val4_int, cast283_var, gep4_val7_int, gep4_val7_int, switch10_val11_int, };
	Value* gep293_var = builder.CreateInBoundsGEP(globals[5], gep293_array);
	llvm::LoadInst* load294_var = builder.CreateLoad(gep293_var, false);
	load294_var->setAlignment(8);
	Value* binop295_var = BinaryOperator::Create(Instruction::Add, load294_var, load285_var, "", builder.GetInsertBlock());
	Value* cmp296_var = builder.CreateICmp(CmpInst::ICMP_EQ, load288_var, cmp33_val33_int);
	builder.CreateCondBr(cmp296_var, block66, block67);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep297_array { binop295_var, };
	Value* gep297_var = builder.CreateInBoundsGEP(cast286_var, gep297_array);
	Value* cast298_var = builder.CreateCast(Instruction::BitCast, gep297_var, types[28]);
	llvm::LoadInst* load299_var = builder.CreateLoad(cast298_var, false);
	load299_var->setAlignment(4);
	Value* cast300_var = builder.CreateCast(Instruction::ZExt, load299_var, types[0]);
	builder.CreateBr(block71);
	
	builder.SetInsertPoint(block67);
	ArrayRef<Value*> gep301_array { gep4_val4_int, cast283_var, gep4_val7_int, gep4_val7_int, switch10_val10_int, };
	Value* gep301_var = builder.CreateInBoundsGEP(globals[5], gep301_array);
	llvm::LoadInst* load302_var = builder.CreateLoad(gep301_var, false);
	load302_var->setAlignment(16);
	Value* binop303_var = BinaryOperator::Create(Instruction::Add, load302_var, binop295_var, "", builder.GetInsertBlock());
	SwitchInst* switch304_var = builder.CreateSwitch(load288_var, block70, 2);
	switch304_var->addCase(cast<ConstantInt>(switch42_val42_int), block68);
	switch304_var->addCase(cast<ConstantInt>(gep4_val6_int), block69);
	
	builder.SetInsertPoint(block68);
	ArrayRef<Value*> gep304_array { binop303_var, };
	Value* gep304_var = builder.CreateInBoundsGEP(cast286_var, gep304_array);
	Value* cast305_var = builder.CreateCast(Instruction::BitCast, gep304_var, types[30]);
	llvm::LoadInst* load306_var = builder.CreateLoad(cast305_var, false);
	load306_var->setAlignment(2);
	Value* cast307_var = builder.CreateCast(Instruction::ZExt, load306_var, types[0]);
	builder.CreateBr(block71);
	
	builder.SetInsertPoint(block69);
	ArrayRef<Value*> gep308_array { gep4_val4_int, cast283_var, gep4_val7_int, gep4_val7_int, switch10_val12_int, };
	Value* gep308_var = builder.CreateInBoundsGEP(globals[5], gep308_array);
	llvm::LoadInst* load309_var = builder.CreateLoad(gep308_var, false);
	load309_var->setAlignment(8);
	Value* binop310_var = BinaryOperator::Create(Instruction::Add, load309_var, binop303_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep311_array { binop310_var, };
	Value* gep311_var = builder.CreateInBoundsGEP(cast286_var, gep311_array);
	llvm::LoadInst* load312_var = builder.CreateLoad(gep311_var, false);
	load312_var->setAlignment(1);
	Value* cast313_var = builder.CreateCast(Instruction::ZExt, load312_var, types[0]);
	builder.CreateBr(block71);
	
	builder.SetInsertPoint(block70);
	CallInst* call314_var = builder.CreateCall(globals[6], gep54_var);
	call314_var->setTailCall();
	call314_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block71);
	PHINode* phi315_var = builder.CreatePHI(types[0], 4);
	Value* binop316_var = BinaryOperator::Create(Instruction::Add, phi315_var, phi279_var, "", builder.GetInsertBlock());
	builder.CreateBr(block72);
	
	builder.SetInsertPoint(block72);
	PHINode* phi317_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep318_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch10_val10_int, };
	Value* gep318_var = builder.CreateInBoundsGEP(arg3, gep318_array);
	llvm::LoadInst* load319_var = builder.CreateLoad(gep318_var, false);
	load319_var->setAlignment(1);
	Value* cast320_var = builder.CreateCast(Instruction::ZExt, load319_var, types[0]);
	CallInst* call321_var = builder.CreateCall3(globals[14], phi317_var, cast320_var, phi181_var);
	call321_var->setTailCall();
	builder.CreateBr(block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep323_array { gep4_val4_int, gep4_val4_int, };
	Value* gep323_var = builder.CreateInBoundsGEP(globals[15], gep323_array);
	CallInst* call323_var = builder.CreateCall(globals[6], gep323_var);
	call323_var->setTailCall();
	call323_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block74);
	phi92_var->addIncoming(gep4_val4_int, block10);
	phi92_var->addIncoming(load69_var, block12);
	phi92_var->addIncoming(cast77_var, block14);
	phi92_var->addIncoming(cast84_var, block16);
	phi92_var->addIncoming(cast90_var, block17);
	
	phi128_var->addIncoming(load105_var, block21);
	phi128_var->addIncoming(cast113_var, block23);
	phi128_var->addIncoming(cast120_var, block25);
	phi128_var->addIncoming(cast126_var, block26);
	
	phi134_var->addIncoming(binop133_var, block28);
	phi134_var->addIncoming(phi92_var, block19);
	
	phi170_var->addIncoming(load147_var, block31);
	phi170_var->addIncoming(cast155_var, block33);
	phi170_var->addIncoming(cast162_var, block35);
	phi170_var->addIncoming(cast168_var, block36);
	
	phi172_var->addIncoming(binop171_var, block38);
	phi172_var->addIncoming(phi134_var, block29);
	
	phi181_var->addIncoming(call176_var, block39);
	phi181_var->addIncoming(load15_var, block1);
	phi181_var->addIncoming(load29_var, block3);
	phi181_var->addIncoming(cast38_var, block5);
	phi181_var->addIncoming(cast46_var, block7);
	phi181_var->addIncoming(cast52_var, block8);
	
	phi237_var->addIncoming(gep4_val4_int, block43);
	phi237_var->addIncoming(load214_var, block45);
	phi237_var->addIncoming(cast222_var, block47);
	phi237_var->addIncoming(cast229_var, block49);
	phi237_var->addIncoming(cast235_var, block50);
	
	phi273_var->addIncoming(load250_var, block54);
	phi273_var->addIncoming(cast258_var, block56);
	phi273_var->addIncoming(cast265_var, block58);
	phi273_var->addIncoming(cast271_var, block59);
	
	phi279_var->addIncoming(binop278_var, block61);
	phi279_var->addIncoming(phi237_var, block52);
	
	phi315_var->addIncoming(load292_var, block64);
	phi315_var->addIncoming(cast300_var, block66);
	phi315_var->addIncoming(cast307_var, block68);
	phi315_var->addIncoming(cast313_var, block69);
	
	phi317_var->addIncoming(binop316_var, block71);
	phi317_var->addIncoming(phi279_var, block62);
	
	return;
}

void x86::x86_mpsadbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[377], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mul(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[378], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mulpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[379], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mulps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[380], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mulsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[381], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mulss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[382], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mulx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[383], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_mwait(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[384], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_neg(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[385], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_nop(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	return;
}

void x86::x86_not(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[386], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_or(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	BasicBlock* block84 = BasicBlock::Create(context, "", function);
	BasicBlock* block85 = BasicBlock::Create(context, "", function);
	BasicBlock* block86 = BasicBlock::Create(context, "", function);
	BasicBlock* block87 = BasicBlock::Create(context, "", function);
	BasicBlock* block88 = BasicBlock::Create(context, "", function);
	BasicBlock* block89 = BasicBlock::Create(context, "", function);
	BasicBlock* block90 = BasicBlock::Create(context, "", function);
	BasicBlock* block91 = BasicBlock::Create(context, "", function);
	BasicBlock* block92 = BasicBlock::Create(context, "", function);
	BasicBlock* block93 = BasicBlock::Create(context, "", function);
	BasicBlock* block94 = BasicBlock::Create(context, "", function);
	BasicBlock* block95 = BasicBlock::Create(context, "", function);
	BasicBlock* block96 = BasicBlock::Create(context, "", function);
	BasicBlock* block97 = BasicBlock::Create(context, "", function);
	BasicBlock* block98 = BasicBlock::Create(context, "", function);
	BasicBlock* block99 = BasicBlock::Create(context, "", function);
	BasicBlock* block100 = BasicBlock::Create(context, "", function);
	BasicBlock* block101 = BasicBlock::Create(context, "", function);
	BasicBlock* block102 = BasicBlock::Create(context, "", function);
	BasicBlock* block103 = BasicBlock::Create(context, "", function);
	BasicBlock* block104 = BasicBlock::Create(context, "", function);
	BasicBlock* block105 = BasicBlock::Create(context, "", function);
	BasicBlock* block106 = BasicBlock::Create(context, "", function);
	BasicBlock* block107 = BasicBlock::Create(context, "", function);
	BasicBlock* block108 = BasicBlock::Create(context, "", function);
	BasicBlock* block109 = BasicBlock::Create(context, "", function);
	BasicBlock* block110 = BasicBlock::Create(context, "", function);
	BasicBlock* block111 = BasicBlock::Create(context, "", function);
	BasicBlock* block112 = BasicBlock::Create(context, "", function);
	BasicBlock* block113 = BasicBlock::Create(context, "", function);
	BasicBlock* block114 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block39, 2);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block9);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep11_var = builder.CreateGEP(arg3, gep11_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep11_var, false);
	load12_var->setAlignment(4);
	Value* cast13_var = builder.CreateCast(Instruction::ZExt, load12_var, types[0]);
	ArrayRef<Value*> gep14_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(globals[5], gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast13_var, switch9_val9_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep18_var, false);
	load19_var->setAlignment(16);
	Constant* cmp20_val20_int = ConstantInt::get(types[0], 8u);
	Value* cmp20_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp20_val20_int);
	builder.CreateCondBr(cmp20_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep22_array { load16_var, };
	Value* gep22_var = builder.CreateInBoundsGEP(cast17_var, gep22_array);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, gep22_var, types[27]);
	llvm::LoadInst* load24_var = builder.CreateLoad(cast23_var, false);
	load24_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(8);
	Value* binop27_var = BinaryOperator::Create(Instruction::Add, load26_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 4u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { binop27_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast17_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[28]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(4);
	Value* cast33_var = builder.CreateCast(Instruction::ZExt, load32_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block5);
	Constant* gep34_val34_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep34_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop27_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load19_var, block8, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block6);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load45_var = builder.CreateLoad(gep44_var, false);
	load45_var->setAlignment(8);
	Value* binop46_var = BinaryOperator::Create(Instruction::Add, load45_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep47_array { binop46_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast17_var, gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(1);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep51_array { gep4_val4_int, gep4_val4_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[7], gep51_array);
	CallInst* call50_var = builder.CreateCall(globals[6], gep51_var);
	call50_var->setTailCall();
	call50_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val6_int);
	builder.CreateCondBr(cmp56_var, block18, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, switch9_val9_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp20_val20_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch38_val38_int), block15);
	switch78_var->addCase(cast<ConstantInt>(switch38_val39_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep51_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, gep4_val6_int);
	builder.CreateCondBr(cmp92_var, block28, block19);
	
	builder.SetInsertPoint(block19);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast93_var, switch9_val9_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp20_val20_int);
	builder.CreateCondBr(cmp99_var, block20, block21);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep100_array { load95_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast96_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[27]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(8);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(8);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, load95_var, "", builder.GetInsertBlock());
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { binop105_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast96_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[28]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(4);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop105_var, "", builder.GetInsertBlock());
	SwitchInst* switch114_var = builder.CreateSwitch(load98_var, block26, 2);
	switch114_var->addCase(cast<ConstantInt>(switch38_val38_int), block24);
	switch114_var->addCase(cast<ConstantInt>(switch38_val39_int), block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast96_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[30]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(2);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(8);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop113_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast96_var, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(1);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block26);
	CallInst* call124_var = builder.CreateCall(globals[6], gep51_var);
	call124_var->setTailCall();
	call124_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block27);
	PHINode* phi125_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep126_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(arg3, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(4);
	Value* cast128_var = builder.CreateCast(Instruction::SExt, load127_var, types[0]);
	Value* binop129_var = BinaryOperator::Create(Instruction::Mul, cast128_var, phi125_var, "", builder.GetInsertBlock());
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, binop129_var, phi89_var, "", builder.GetInsertBlock());
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep132_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, gep4_val6_int);
	builder.CreateCondBr(cmp134_var, block38, block29);
	
	builder.SetInsertPoint(block29);
	Value* cast135_var = builder.CreateCast(Instruction::ZExt, load133_var, types[0]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast135_var, switch9_val9_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp20_val20_int);
	builder.CreateCondBr(cmp141_var, block30, block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep142_array { load137_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast138_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[27]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(8);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(8);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, load137_var, "", builder.GetInsertBlock());
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { binop147_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast138_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[28]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(4);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop147_var, "", builder.GetInsertBlock());
	SwitchInst* switch156_var = builder.CreateSwitch(load140_var, block36, 2);
	switch156_var->addCase(cast<ConstantInt>(switch38_val38_int), block34);
	switch156_var->addCase(cast<ConstantInt>(switch38_val39_int), block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast138_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[30]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(2);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(8);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop155_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast138_var, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block36);
	CallInst* call166_var = builder.CreateCall(globals[6], gep51_var);
	call166_var->setTailCall();
	call166_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block37);
	PHINode* phi167_var = builder.CreatePHI(types[0], 4);
	Value* binop168_var = BinaryOperator::Create(Instruction::Add, phi167_var, phi131_var, "", builder.GetInsertBlock());
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block38);
	PHINode* phi169_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep170_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(arg3, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	CallInst* call173_var = builder.CreateCall2(globals[8], phi169_var, cast172_var);
	call173_var->setTailCall();
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val4_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[9], gep175_array);
	CallInst* call175_var = builder.CreateCall(globals[6], gep175_var);
	call175_var->setTailCall();
	call175_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi178_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep179_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep4_val6_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(arg3, gep179_array);
	llvm::LoadInst* load180_var = builder.CreateLoad(gep179_var, false);
	load180_var->setAlignment(4);
	SwitchInst* switch181_var = builder.CreateSwitch(load180_var, block80, 3);
	switch181_var->addCase(cast<ConstantInt>(gep34_val34_int), block41);
	switch181_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch181_var->addCase(cast<ConstantInt>(switch9_val10_int), block50);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep181_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(arg3, gep181_array);
	Value* cast182_var = builder.CreateCast(Instruction::BitCast, gep181_var, types[27]);
	llvm::LoadInst* load183_var = builder.CreateLoad(cast182_var, false);
	load183_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Value* cast189_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast186_var, switch9_val9_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp20_val20_int);
	builder.CreateCondBr(cmp192_var, block43, block44);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep193_array { load188_var, };
	Value* gep193_var = builder.CreateInBoundsGEP(cast189_var, gep193_array);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, gep193_var, types[27]);
	llvm::LoadInst* load195_var = builder.CreateLoad(cast194_var, false);
	load195_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(8);
	Value* binop198_var = BinaryOperator::Create(Instruction::Add, load197_var, load188_var, "", builder.GetInsertBlock());
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp28_val28_int);
	builder.CreateCondBr(cmp199_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep200_array { binop198_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast189_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[28]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(4);
	Value* cast203_var = builder.CreateCast(Instruction::ZExt, load202_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep204_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep204_var = builder.CreateInBoundsGEP(globals[5], gep204_array);
	llvm::LoadInst* load205_var = builder.CreateLoad(gep204_var, false);
	load205_var->setAlignment(16);
	Value* binop206_var = BinaryOperator::Create(Instruction::Add, load205_var, binop198_var, "", builder.GetInsertBlock());
	SwitchInst* switch207_var = builder.CreateSwitch(load191_var, block49, 2);
	switch207_var->addCase(cast<ConstantInt>(switch38_val38_int), block47);
	switch207_var->addCase(cast<ConstantInt>(switch38_val39_int), block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { binop206_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast189_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[30]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(2);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(8);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop206_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast189_var, gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(1);
	Value* cast216_var = builder.CreateCast(Instruction::ZExt, load215_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block49);
	CallInst* call217_var = builder.CreateCall(globals[6], gep51_var);
	call217_var->setTailCall();
	call217_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep218_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(arg3, gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(4);
	Value* cmp220_var = builder.CreateICmp(CmpInst::ICMP_EQ, load219_var, gep4_val6_int);
	builder.CreateCondBr(cmp220_var, block59, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load219_var, types[0]);
	ArrayRef<Value*> gep222_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep222_var = builder.CreateInBoundsGEP(globals[5], gep222_array);
	llvm::LoadInst* load223_var = builder.CreateLoad(gep222_var, false);
	load223_var->setAlignment(16);
	Value* cast224_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast221_var, switch9_val9_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cmp227_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp20_val20_int);
	builder.CreateCondBr(cmp227_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep228_array { load223_var, };
	Value* gep228_var = builder.CreateInBoundsGEP(cast224_var, gep228_array);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, gep228_var, types[27]);
	llvm::LoadInst* load230_var = builder.CreateLoad(cast229_var, false);
	load230_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep231_var = builder.CreateInBoundsGEP(globals[5], gep231_array);
	llvm::LoadInst* load232_var = builder.CreateLoad(gep231_var, false);
	load232_var->setAlignment(8);
	Value* binop233_var = BinaryOperator::Create(Instruction::Add, load232_var, load223_var, "", builder.GetInsertBlock());
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp28_val28_int);
	builder.CreateCondBr(cmp234_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep235_array { binop233_var, };
	Value* gep235_var = builder.CreateInBoundsGEP(cast224_var, gep235_array);
	Value* cast236_var = builder.CreateCast(Instruction::BitCast, gep235_var, types[28]);
	llvm::LoadInst* load237_var = builder.CreateLoad(cast236_var, false);
	load237_var->setAlignment(4);
	Value* cast238_var = builder.CreateCast(Instruction::ZExt, load237_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* binop241_var = BinaryOperator::Create(Instruction::Add, load240_var, binop233_var, "", builder.GetInsertBlock());
	SwitchInst* switch242_var = builder.CreateSwitch(load226_var, block58, 2);
	switch242_var->addCase(cast<ConstantInt>(switch38_val38_int), block56);
	switch242_var->addCase(cast<ConstantInt>(switch38_val39_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { binop241_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast224_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[30]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(2);
	Value* cast245_var = builder.CreateCast(Instruction::ZExt, load244_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep246_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep246_var = builder.CreateInBoundsGEP(globals[5], gep246_array);
	llvm::LoadInst* load247_var = builder.CreateLoad(gep246_var, false);
	load247_var->setAlignment(8);
	Value* binop248_var = BinaryOperator::Create(Instruction::Add, load247_var, binop241_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep249_array { binop248_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast224_var, gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(1);
	Value* cast251_var = builder.CreateCast(Instruction::ZExt, load250_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call252_var = builder.CreateCall(globals[6], gep51_var);
	call252_var->setTailCall();
	call252_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi253_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep254_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep254_var = builder.CreateInBoundsGEP(arg3, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(4);
	Value* cmp256_var = builder.CreateICmp(CmpInst::ICMP_EQ, load255_var, gep4_val6_int);
	builder.CreateCondBr(cmp256_var, block69, block60);
	
	builder.SetInsertPoint(block60);
	Value* cast257_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	ArrayRef<Value*> gep258_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep258_var = builder.CreateInBoundsGEP(globals[5], gep258_array);
	llvm::LoadInst* load259_var = builder.CreateLoad(gep258_var, false);
	load259_var->setAlignment(16);
	Value* cast260_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast257_var, switch9_val9_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cmp263_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp20_val20_int);
	builder.CreateCondBr(cmp263_var, block61, block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep264_array { load259_var, };
	Value* gep264_var = builder.CreateInBoundsGEP(cast260_var, gep264_array);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, gep264_var, types[27]);
	llvm::LoadInst* load266_var = builder.CreateLoad(cast265_var, false);
	load266_var->setAlignment(8);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep267_var = builder.CreateInBoundsGEP(globals[5], gep267_array);
	llvm::LoadInst* load268_var = builder.CreateLoad(gep267_var, false);
	load268_var->setAlignment(8);
	Value* binop269_var = BinaryOperator::Create(Instruction::Add, load268_var, load259_var, "", builder.GetInsertBlock());
	Value* cmp270_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp28_val28_int);
	builder.CreateCondBr(cmp270_var, block63, block64);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep271_array { binop269_var, };
	Value* gep271_var = builder.CreateInBoundsGEP(cast260_var, gep271_array);
	Value* cast272_var = builder.CreateCast(Instruction::BitCast, gep271_var, types[28]);
	llvm::LoadInst* load273_var = builder.CreateLoad(cast272_var, false);
	load273_var->setAlignment(4);
	Value* cast274_var = builder.CreateCast(Instruction::ZExt, load273_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep275_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[5], gep275_array);
	llvm::LoadInst* load276_var = builder.CreateLoad(gep275_var, false);
	load276_var->setAlignment(16);
	Value* binop277_var = BinaryOperator::Create(Instruction::Add, load276_var, binop269_var, "", builder.GetInsertBlock());
	SwitchInst* switch278_var = builder.CreateSwitch(load262_var, block67, 2);
	switch278_var->addCase(cast<ConstantInt>(switch38_val38_int), block65);
	switch278_var->addCase(cast<ConstantInt>(switch38_val39_int), block66);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { binop277_var, };
	Value* gep278_var = builder.CreateInBoundsGEP(cast260_var, gep278_array);
	Value* cast279_var = builder.CreateCast(Instruction::BitCast, gep278_var, types[30]);
	llvm::LoadInst* load280_var = builder.CreateLoad(cast279_var, false);
	load280_var->setAlignment(2);
	Value* cast281_var = builder.CreateCast(Instruction::ZExt, load280_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep282_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep282_var = builder.CreateInBoundsGEP(globals[5], gep282_array);
	llvm::LoadInst* load283_var = builder.CreateLoad(gep282_var, false);
	load283_var->setAlignment(8);
	Value* binop284_var = BinaryOperator::Create(Instruction::Add, load283_var, binop277_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep285_array { binop284_var, };
	Value* gep285_var = builder.CreateInBoundsGEP(cast260_var, gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(1);
	Value* cast287_var = builder.CreateCast(Instruction::ZExt, load286_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block67);
	CallInst* call288_var = builder.CreateCall(globals[6], gep51_var);
	call288_var->setTailCall();
	call288_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block68);
	PHINode* phi289_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep290_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep290_var = builder.CreateInBoundsGEP(arg3, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(4);
	Value* cast292_var = builder.CreateCast(Instruction::SExt, load291_var, types[0]);
	Value* binop293_var = BinaryOperator::Create(Instruction::Mul, cast292_var, phi289_var, "", builder.GetInsertBlock());
	Value* binop294_var = BinaryOperator::Create(Instruction::Add, binop293_var, phi253_var, "", builder.GetInsertBlock());
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block69);
	PHINode* phi295_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep296_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep296_var = builder.CreateInBoundsGEP(arg3, gep296_array);
	llvm::LoadInst* load297_var = builder.CreateLoad(gep296_var, false);
	load297_var->setAlignment(4);
	Value* cmp298_var = builder.CreateICmp(CmpInst::ICMP_EQ, load297_var, gep4_val6_int);
	builder.CreateCondBr(cmp298_var, block79, block70);
	
	builder.SetInsertPoint(block70);
	Value* cast299_var = builder.CreateCast(Instruction::ZExt, load297_var, types[0]);
	ArrayRef<Value*> gep300_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep300_var = builder.CreateInBoundsGEP(globals[5], gep300_array);
	llvm::LoadInst* load301_var = builder.CreateLoad(gep300_var, false);
	load301_var->setAlignment(16);
	Value* cast302_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast299_var, switch9_val9_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cmp305_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp20_val20_int);
	builder.CreateCondBr(cmp305_var, block71, block72);
	
	builder.SetInsertPoint(block71);
	ArrayRef<Value*> gep306_array { load301_var, };
	Value* gep306_var = builder.CreateInBoundsGEP(cast302_var, gep306_array);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, gep306_var, types[27]);
	llvm::LoadInst* load308_var = builder.CreateLoad(cast307_var, false);
	load308_var->setAlignment(8);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep309_var = builder.CreateInBoundsGEP(globals[5], gep309_array);
	llvm::LoadInst* load310_var = builder.CreateLoad(gep309_var, false);
	load310_var->setAlignment(8);
	Value* binop311_var = BinaryOperator::Create(Instruction::Add, load310_var, load301_var, "", builder.GetInsertBlock());
	Value* cmp312_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp28_val28_int);
	builder.CreateCondBr(cmp312_var, block73, block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep313_array { binop311_var, };
	Value* gep313_var = builder.CreateInBoundsGEP(cast302_var, gep313_array);
	Value* cast314_var = builder.CreateCast(Instruction::BitCast, gep313_var, types[28]);
	llvm::LoadInst* load315_var = builder.CreateLoad(cast314_var, false);
	load315_var->setAlignment(4);
	Value* cast316_var = builder.CreateCast(Instruction::ZExt, load315_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep317_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep317_var = builder.CreateInBoundsGEP(globals[5], gep317_array);
	llvm::LoadInst* load318_var = builder.CreateLoad(gep317_var, false);
	load318_var->setAlignment(16);
	Value* binop319_var = BinaryOperator::Create(Instruction::Add, load318_var, binop311_var, "", builder.GetInsertBlock());
	SwitchInst* switch320_var = builder.CreateSwitch(load304_var, block77, 2);
	switch320_var->addCase(cast<ConstantInt>(switch38_val38_int), block75);
	switch320_var->addCase(cast<ConstantInt>(switch38_val39_int), block76);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { binop319_var, };
	Value* gep320_var = builder.CreateInBoundsGEP(cast302_var, gep320_array);
	Value* cast321_var = builder.CreateCast(Instruction::BitCast, gep320_var, types[30]);
	llvm::LoadInst* load322_var = builder.CreateLoad(cast321_var, false);
	load322_var->setAlignment(2);
	Value* cast323_var = builder.CreateCast(Instruction::ZExt, load322_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep324_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep324_var = builder.CreateInBoundsGEP(globals[5], gep324_array);
	llvm::LoadInst* load325_var = builder.CreateLoad(gep324_var, false);
	load325_var->setAlignment(8);
	Value* binop326_var = BinaryOperator::Create(Instruction::Add, load325_var, binop319_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep327_array { binop326_var, };
	Value* gep327_var = builder.CreateInBoundsGEP(cast302_var, gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(1);
	Value* cast329_var = builder.CreateCast(Instruction::ZExt, load328_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block77);
	CallInst* call330_var = builder.CreateCall(globals[6], gep51_var);
	call330_var->setTailCall();
	call330_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block78);
	PHINode* phi331_var = builder.CreatePHI(types[0], 4);
	Value* binop332_var = BinaryOperator::Create(Instruction::Add, phi331_var, phi295_var, "", builder.GetInsertBlock());
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block79);
	PHINode* phi333_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep334_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep34_val34_int, };
	Value* gep334_var = builder.CreateInBoundsGEP(arg3, gep334_array);
	llvm::LoadInst* load335_var = builder.CreateLoad(gep334_var, false);
	load335_var->setAlignment(1);
	Value* cast336_var = builder.CreateCast(Instruction::ZExt, load335_var, types[0]);
	CallInst* call337_var = builder.CreateCall2(globals[8], phi333_var, cast336_var);
	call337_var->setTailCall();
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block80);
	ArrayRef<Value*> gep338_array { gep4_val4_int, gep4_val4_int, };
	Value* gep338_var = builder.CreateInBoundsGEP(globals[10], gep338_array);
	CallInst* call338_var = builder.CreateCall(globals[6], gep338_var);
	call338_var->setTailCall();
	call338_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block81);
	PHINode* phi341_var = builder.CreatePHI(types[0], 6);
	Value* binop342_var = BinaryOperator::Create(Instruction::Or, phi341_var, phi178_var, "", builder.GetInsertBlock());
	Constant* gep343_val343_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep343_array { gep4_val4_int, gep343_val343_int, };
	Value* gep343_var = builder.CreateInBoundsGEP(arg2, gep343_array);
	Constant* store345_val345_int = ConstantInt::get(types[11], 0u);
	llvm::StoreInst* store345_var = builder.CreateStore(store345_val345_int, gep343_var, false);
	store345_var->setAlignment(1);
	ArrayRef<Value*> gep347_array { gep4_val4_int, gep4_val6_int, };
	Value* gep347_var = builder.CreateInBoundsGEP(arg2, gep347_array);
	llvm::StoreInst* store348_var = builder.CreateStore(store345_val345_int, gep347_var, false);
	store348_var->setAlignment(1);
	ArrayRef<Value*> gep349_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep349_var = builder.CreateInBoundsGEP(arg3, gep349_array);
	llvm::LoadInst* load350_var = builder.CreateLoad(gep349_var, false);
	load350_var->setAlignment(1);
	Value* cast351_var = builder.CreateCast(Instruction::ZExt, load350_var, types[0]);
	Constant* binop352_val352_int = ConstantInt::get(types[0], 3u);
	Value* binop352_var = BinaryOperator::CreateNSW(Instruction::Shl, cast351_var, binop352_val352_int, "", builder.GetInsertBlock());
	Constant* binop354_val354_int = ConstantInt::get(types[0], 4294967295u);
	Value* binop354_var = BinaryOperator::CreateNSW(Instruction::Add, binop352_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop356_var = BinaryOperator::Create(Instruction::And, binop354_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop357_var = BinaryOperator::Create(Instruction::LShr, binop342_var, binop356_var, "", builder.GetInsertBlock());
	Value* cmp358_var = builder.CreateICmp(CmpInst::ICMP_NE, binop357_var, gep4_val4_int);
	Constant* gep359_val359_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep359_array { gep4_val4_int, gep359_val359_int, };
	Value* gep359_var = builder.CreateInBoundsGEP(arg2, gep359_array);
	Value* cast361_var = builder.CreateCast(Instruction::ZExt, cmp358_var, types[11]);
	llvm::StoreInst* store362_var = builder.CreateStore(cast361_var, gep359_var, false);
	store362_var->setAlignment(1);
	CallInst* call363_var = builder.CreateCall(globals[13], binop342_var);
	call363_var->setTailCall();
	call363_var->setDoesNotThrow();
	call363_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep365_array { gep4_val4_int, switch9_val9_int, };
	Value* gep365_var = builder.CreateInBoundsGEP(arg2, gep365_array);
	Value* cast366_var = builder.CreateCast(Instruction::Trunc, call363_var, types[11]);
	Constant* binop367_val367_int = ConstantInt::get(types[11], 1u);
	Value* binop367_var = BinaryOperator::Create(Instruction::And, cast366_var, binop367_val367_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store369_var = builder.CreateStore(binop367_var, gep365_var, false);
	store369_var->setAlignment(1);
	Value* cmp370_var = builder.CreateICmp(CmpInst::ICMP_EQ, binop342_var, gep4_val4_int);
	ArrayRef<Value*> gep371_array { gep4_val4_int, switch9_val10_int, };
	Value* gep371_var = builder.CreateInBoundsGEP(arg2, gep371_array);
	Value* cast372_var = builder.CreateCast(Instruction::ZExt, cmp370_var, types[11]);
	llvm::StoreInst* store373_var = builder.CreateStore(cast372_var, gep371_var, false);
	store373_var->setAlignment(1);
	ArrayRef<Value*> gep374_array { gep4_val4_int, gep34_val34_int, };
	Value* gep374_var = builder.CreateInBoundsGEP(arg2, gep374_array);
	llvm::StoreInst* store375_var = builder.CreateStore(store345_val345_int, gep374_var, false);
	store375_var->setAlignment(1);
	llvm::LoadInst* load376_var = builder.CreateLoad(gep4_var, false);
	load376_var->setAlignment(4);
	SwitchInst* switch377_var = builder.CreateSwitch(load376_var, block113, 2);
	switch377_var->addCase(cast<ConstantInt>(switch9_val9_int), block82);
	switch377_var->addCase(cast<ConstantInt>(switch9_val10_int), block83);
	
	builder.SetInsertPoint(block82);
	ArrayRef<Value*> gep377_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep377_var = builder.CreateGEP(arg3, gep377_array);
	llvm::LoadInst* load378_var = builder.CreateLoad(gep377_var, false);
	load378_var->setAlignment(4);
	Value* cast379_var = builder.CreateCast(Instruction::ZExt, load378_var, types[0]);
	ArrayRef<Value*> gep380_array { gep4_val4_int, cast379_var, switch9_val9_int, };
	Value* gep380_var = builder.CreateInBoundsGEP(globals[5], gep380_array);
	llvm::LoadInst* load381_var = builder.CreateLoad(gep380_var, false);
	load381_var->setAlignment(16);
	Value* binop382_var = BinaryOperator::Create(Instruction::Shl, load381_var, binop352_val352_int, "", builder.GetInsertBlock());
	Constant* binop383_val383_int = ConstantInt::get(types[0], 64u);
	Value* binop383_var = BinaryOperator::Create(Instruction::Sub, binop383_val383_int, binop382_var, "", builder.GetInsertBlock());
	Constant* binop385_val385_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop385_var = BinaryOperator::Create(Instruction::LShr, binop385_val385_int, binop383_var, "", builder.GetInsertBlock());
	Value* binop387_var = BinaryOperator::Create(Instruction::And, binop385_var, binop342_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep388_array { gep4_val4_int, cast379_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep388_var = builder.CreateInBoundsGEP(globals[5], gep388_array);
	llvm::LoadInst* load389_var = builder.CreateLoad(gep388_var, false);
	load389_var->setAlignment(16);
	Value* cast390_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep391_array { load389_var, };
	Value* gep391_var = builder.CreateInBoundsGEP(cast390_var, gep391_array);
	Value* cast392_var = builder.CreateCast(Instruction::BitCast, gep391_var, types[27]);
	llvm::StoreInst* store393_var = builder.CreateStore(binop387_var, cast392_var, false);
	store393_var->setAlignment(8);
	builder.CreateBr(block114);
	
	builder.SetInsertPoint(block83);
	ArrayRef<Value*> gep394_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep394_var = builder.CreateInBoundsGEP(arg3, gep394_array);
	llvm::LoadInst* load395_var = builder.CreateLoad(gep394_var, false);
	load395_var->setAlignment(4);
	Value* cmp396_var = builder.CreateICmp(CmpInst::ICMP_EQ, load395_var, gep4_val6_int);
	builder.CreateCondBr(cmp396_var, block92, block84);
	
	builder.SetInsertPoint(block84);
	Value* cast397_var = builder.CreateCast(Instruction::ZExt, load395_var, types[0]);
	ArrayRef<Value*> gep398_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep398_var = builder.CreateInBoundsGEP(globals[5], gep398_array);
	llvm::LoadInst* load399_var = builder.CreateLoad(gep398_var, false);
	load399_var->setAlignment(16);
	Value* cast400_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep401_array { gep4_val4_int, cast397_var, switch9_val9_int, };
	Value* gep401_var = builder.CreateInBoundsGEP(globals[5], gep401_array);
	llvm::LoadInst* load402_var = builder.CreateLoad(gep401_var, false);
	load402_var->setAlignment(16);
	Value* cmp403_var = builder.CreateICmp(CmpInst::ICMP_EQ, load402_var, cmp20_val20_int);
	builder.CreateCondBr(cmp403_var, block85, block86);
	
	builder.SetInsertPoint(block85);
	ArrayRef<Value*> gep404_array { load399_var, };
	Value* gep404_var = builder.CreateInBoundsGEP(cast400_var, gep404_array);
	Value* cast405_var = builder.CreateCast(Instruction::BitCast, gep404_var, types[27]);
	llvm::LoadInst* load406_var = builder.CreateLoad(cast405_var, false);
	load406_var->setAlignment(8);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block86);
	ArrayRef<Value*> gep407_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep407_var = builder.CreateInBoundsGEP(globals[5], gep407_array);
	llvm::LoadInst* load408_var = builder.CreateLoad(gep407_var, false);
	load408_var->setAlignment(8);
	Value* binop409_var = BinaryOperator::Create(Instruction::Add, load408_var, load399_var, "", builder.GetInsertBlock());
	Value* cmp410_var = builder.CreateICmp(CmpInst::ICMP_EQ, load402_var, cmp28_val28_int);
	builder.CreateCondBr(cmp410_var, block87, block88);
	
	builder.SetInsertPoint(block87);
	ArrayRef<Value*> gep411_array { binop409_var, };
	Value* gep411_var = builder.CreateInBoundsGEP(cast400_var, gep411_array);
	Value* cast412_var = builder.CreateCast(Instruction::BitCast, gep411_var, types[28]);
	llvm::LoadInst* load413_var = builder.CreateLoad(cast412_var, false);
	load413_var->setAlignment(4);
	Value* cast414_var = builder.CreateCast(Instruction::ZExt, load413_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block88);
	ArrayRef<Value*> gep415_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep415_var = builder.CreateInBoundsGEP(globals[5], gep415_array);
	llvm::LoadInst* load416_var = builder.CreateLoad(gep415_var, false);
	load416_var->setAlignment(16);
	Value* binop417_var = BinaryOperator::Create(Instruction::Add, load416_var, binop409_var, "", builder.GetInsertBlock());
	SwitchInst* switch418_var = builder.CreateSwitch(load402_var, block91, 2);
	switch418_var->addCase(cast<ConstantInt>(switch38_val38_int), block89);
	switch418_var->addCase(cast<ConstantInt>(switch38_val39_int), block90);
	
	builder.SetInsertPoint(block89);
	ArrayRef<Value*> gep418_array { binop417_var, };
	Value* gep418_var = builder.CreateInBoundsGEP(cast400_var, gep418_array);
	Value* cast419_var = builder.CreateCast(Instruction::BitCast, gep418_var, types[30]);
	llvm::LoadInst* load420_var = builder.CreateLoad(cast419_var, false);
	load420_var->setAlignment(2);
	Value* cast421_var = builder.CreateCast(Instruction::ZExt, load420_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block90);
	ArrayRef<Value*> gep422_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep422_var = builder.CreateInBoundsGEP(globals[5], gep422_array);
	llvm::LoadInst* load423_var = builder.CreateLoad(gep422_var, false);
	load423_var->setAlignment(8);
	Value* binop424_var = BinaryOperator::Create(Instruction::Add, load423_var, binop417_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep425_array { binop424_var, };
	Value* gep425_var = builder.CreateInBoundsGEP(cast400_var, gep425_array);
	llvm::LoadInst* load426_var = builder.CreateLoad(gep425_var, false);
	load426_var->setAlignment(1);
	Value* cast427_var = builder.CreateCast(Instruction::ZExt, load426_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block91);
	CallInst* call428_var = builder.CreateCall(globals[6], gep51_var);
	call428_var->setTailCall();
	call428_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block92);
	PHINode* phi429_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep430_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep430_var = builder.CreateInBoundsGEP(arg3, gep430_array);
	llvm::LoadInst* load431_var = builder.CreateLoad(gep430_var, false);
	load431_var->setAlignment(4);
	Value* cmp432_var = builder.CreateICmp(CmpInst::ICMP_EQ, load431_var, gep4_val6_int);
	builder.CreateCondBr(cmp432_var, block102, block93);
	
	builder.SetInsertPoint(block93);
	Value* cast433_var = builder.CreateCast(Instruction::ZExt, load431_var, types[0]);
	ArrayRef<Value*> gep434_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep434_var = builder.CreateInBoundsGEP(globals[5], gep434_array);
	llvm::LoadInst* load435_var = builder.CreateLoad(gep434_var, false);
	load435_var->setAlignment(16);
	Value* cast436_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep437_array { gep4_val4_int, cast433_var, switch9_val9_int, };
	Value* gep437_var = builder.CreateInBoundsGEP(globals[5], gep437_array);
	llvm::LoadInst* load438_var = builder.CreateLoad(gep437_var, false);
	load438_var->setAlignment(16);
	Value* cmp439_var = builder.CreateICmp(CmpInst::ICMP_EQ, load438_var, cmp20_val20_int);
	builder.CreateCondBr(cmp439_var, block94, block95);
	
	builder.SetInsertPoint(block94);
	ArrayRef<Value*> gep440_array { load435_var, };
	Value* gep440_var = builder.CreateInBoundsGEP(cast436_var, gep440_array);
	Value* cast441_var = builder.CreateCast(Instruction::BitCast, gep440_var, types[27]);
	llvm::LoadInst* load442_var = builder.CreateLoad(cast441_var, false);
	load442_var->setAlignment(8);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block95);
	ArrayRef<Value*> gep443_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep443_var = builder.CreateInBoundsGEP(globals[5], gep443_array);
	llvm::LoadInst* load444_var = builder.CreateLoad(gep443_var, false);
	load444_var->setAlignment(8);
	Value* binop445_var = BinaryOperator::Create(Instruction::Add, load444_var, load435_var, "", builder.GetInsertBlock());
	Value* cmp446_var = builder.CreateICmp(CmpInst::ICMP_EQ, load438_var, cmp28_val28_int);
	builder.CreateCondBr(cmp446_var, block96, block97);
	
	builder.SetInsertPoint(block96);
	ArrayRef<Value*> gep447_array { binop445_var, };
	Value* gep447_var = builder.CreateInBoundsGEP(cast436_var, gep447_array);
	Value* cast448_var = builder.CreateCast(Instruction::BitCast, gep447_var, types[28]);
	llvm::LoadInst* load449_var = builder.CreateLoad(cast448_var, false);
	load449_var->setAlignment(4);
	Value* cast450_var = builder.CreateCast(Instruction::ZExt, load449_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block97);
	ArrayRef<Value*> gep451_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep451_var = builder.CreateInBoundsGEP(globals[5], gep451_array);
	llvm::LoadInst* load452_var = builder.CreateLoad(gep451_var, false);
	load452_var->setAlignment(16);
	Value* binop453_var = BinaryOperator::Create(Instruction::Add, load452_var, binop445_var, "", builder.GetInsertBlock());
	SwitchInst* switch454_var = builder.CreateSwitch(load438_var, block100, 2);
	switch454_var->addCase(cast<ConstantInt>(switch38_val38_int), block98);
	switch454_var->addCase(cast<ConstantInt>(switch38_val39_int), block99);
	
	builder.SetInsertPoint(block98);
	ArrayRef<Value*> gep454_array { binop453_var, };
	Value* gep454_var = builder.CreateInBoundsGEP(cast436_var, gep454_array);
	Value* cast455_var = builder.CreateCast(Instruction::BitCast, gep454_var, types[30]);
	llvm::LoadInst* load456_var = builder.CreateLoad(cast455_var, false);
	load456_var->setAlignment(2);
	Value* cast457_var = builder.CreateCast(Instruction::ZExt, load456_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block99);
	ArrayRef<Value*> gep458_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep458_var = builder.CreateInBoundsGEP(globals[5], gep458_array);
	llvm::LoadInst* load459_var = builder.CreateLoad(gep458_var, false);
	load459_var->setAlignment(8);
	Value* binop460_var = BinaryOperator::Create(Instruction::Add, load459_var, binop453_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep461_array { binop460_var, };
	Value* gep461_var = builder.CreateInBoundsGEP(cast436_var, gep461_array);
	llvm::LoadInst* load462_var = builder.CreateLoad(gep461_var, false);
	load462_var->setAlignment(1);
	Value* cast463_var = builder.CreateCast(Instruction::ZExt, load462_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block100);
	CallInst* call464_var = builder.CreateCall(globals[6], gep51_var);
	call464_var->setTailCall();
	call464_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block101);
	PHINode* phi465_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep466_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep466_var = builder.CreateInBoundsGEP(arg3, gep466_array);
	llvm::LoadInst* load467_var = builder.CreateLoad(gep466_var, false);
	load467_var->setAlignment(4);
	Value* cast468_var = builder.CreateCast(Instruction::SExt, load467_var, types[0]);
	Value* binop469_var = BinaryOperator::Create(Instruction::Mul, cast468_var, phi465_var, "", builder.GetInsertBlock());
	Value* binop470_var = BinaryOperator::Create(Instruction::Add, binop469_var, phi429_var, "", builder.GetInsertBlock());
	builder.CreateBr(block102);
	
	builder.SetInsertPoint(block102);
	PHINode* phi471_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep472_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep472_var = builder.CreateInBoundsGEP(arg3, gep472_array);
	llvm::LoadInst* load473_var = builder.CreateLoad(gep472_var, false);
	load473_var->setAlignment(4);
	Value* cmp474_var = builder.CreateICmp(CmpInst::ICMP_EQ, load473_var, gep4_val6_int);
	builder.CreateCondBr(cmp474_var, block112, block103);
	
	builder.SetInsertPoint(block103);
	Value* cast475_var = builder.CreateCast(Instruction::ZExt, load473_var, types[0]);
	ArrayRef<Value*> gep476_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep476_var = builder.CreateInBoundsGEP(globals[5], gep476_array);
	llvm::LoadInst* load477_var = builder.CreateLoad(gep476_var, false);
	load477_var->setAlignment(16);
	Value* cast478_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep479_array { gep4_val4_int, cast475_var, switch9_val9_int, };
	Value* gep479_var = builder.CreateInBoundsGEP(globals[5], gep479_array);
	llvm::LoadInst* load480_var = builder.CreateLoad(gep479_var, false);
	load480_var->setAlignment(16);
	Value* cmp481_var = builder.CreateICmp(CmpInst::ICMP_EQ, load480_var, cmp20_val20_int);
	builder.CreateCondBr(cmp481_var, block104, block105);
	
	builder.SetInsertPoint(block104);
	ArrayRef<Value*> gep482_array { load477_var, };
	Value* gep482_var = builder.CreateInBoundsGEP(cast478_var, gep482_array);
	Value* cast483_var = builder.CreateCast(Instruction::BitCast, gep482_var, types[27]);
	llvm::LoadInst* load484_var = builder.CreateLoad(cast483_var, false);
	load484_var->setAlignment(8);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block105);
	ArrayRef<Value*> gep485_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep485_var = builder.CreateInBoundsGEP(globals[5], gep485_array);
	llvm::LoadInst* load486_var = builder.CreateLoad(gep485_var, false);
	load486_var->setAlignment(8);
	Value* binop487_var = BinaryOperator::Create(Instruction::Add, load486_var, load477_var, "", builder.GetInsertBlock());
	Value* cmp488_var = builder.CreateICmp(CmpInst::ICMP_EQ, load480_var, cmp28_val28_int);
	builder.CreateCondBr(cmp488_var, block106, block107);
	
	builder.SetInsertPoint(block106);
	ArrayRef<Value*> gep489_array { binop487_var, };
	Value* gep489_var = builder.CreateInBoundsGEP(cast478_var, gep489_array);
	Value* cast490_var = builder.CreateCast(Instruction::BitCast, gep489_var, types[28]);
	llvm::LoadInst* load491_var = builder.CreateLoad(cast490_var, false);
	load491_var->setAlignment(4);
	Value* cast492_var = builder.CreateCast(Instruction::ZExt, load491_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block107);
	ArrayRef<Value*> gep493_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep493_var = builder.CreateInBoundsGEP(globals[5], gep493_array);
	llvm::LoadInst* load494_var = builder.CreateLoad(gep493_var, false);
	load494_var->setAlignment(16);
	Value* binop495_var = BinaryOperator::Create(Instruction::Add, load494_var, binop487_var, "", builder.GetInsertBlock());
	SwitchInst* switch496_var = builder.CreateSwitch(load480_var, block110, 2);
	switch496_var->addCase(cast<ConstantInt>(switch38_val38_int), block108);
	switch496_var->addCase(cast<ConstantInt>(switch38_val39_int), block109);
	
	builder.SetInsertPoint(block108);
	ArrayRef<Value*> gep496_array { binop495_var, };
	Value* gep496_var = builder.CreateInBoundsGEP(cast478_var, gep496_array);
	Value* cast497_var = builder.CreateCast(Instruction::BitCast, gep496_var, types[30]);
	llvm::LoadInst* load498_var = builder.CreateLoad(cast497_var, false);
	load498_var->setAlignment(2);
	Value* cast499_var = builder.CreateCast(Instruction::ZExt, load498_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block109);
	ArrayRef<Value*> gep500_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep500_var = builder.CreateInBoundsGEP(globals[5], gep500_array);
	llvm::LoadInst* load501_var = builder.CreateLoad(gep500_var, false);
	load501_var->setAlignment(8);
	Value* binop502_var = BinaryOperator::Create(Instruction::Add, load501_var, binop495_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep503_array { binop502_var, };
	Value* gep503_var = builder.CreateInBoundsGEP(cast478_var, gep503_array);
	llvm::LoadInst* load504_var = builder.CreateLoad(gep503_var, false);
	load504_var->setAlignment(1);
	Value* cast505_var = builder.CreateCast(Instruction::ZExt, load504_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block110);
	CallInst* call506_var = builder.CreateCall(globals[6], gep51_var);
	call506_var->setTailCall();
	call506_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block111);
	PHINode* phi507_var = builder.CreatePHI(types[0], 4);
	Value* binop508_var = BinaryOperator::Create(Instruction::Add, phi507_var, phi471_var, "", builder.GetInsertBlock());
	builder.CreateBr(block112);
	
	builder.SetInsertPoint(block112);
	PHINode* phi509_var = builder.CreatePHI(types[0], 2);
	CallInst* call510_var = builder.CreateCall3(globals[14], phi509_var, cast351_var, binop342_var);
	call510_var->setTailCall();
	builder.CreateBr(block114);
	
	builder.SetInsertPoint(block113);
	ArrayRef<Value*> gep512_array { gep4_val4_int, gep4_val4_int, };
	Value* gep512_var = builder.CreateInBoundsGEP(globals[15], gep512_array);
	CallInst* call512_var = builder.CreateCall(globals[6], gep512_var);
	call512_var->setTailCall();
	call512_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block114);
	phi89_var->addIncoming(gep4_val4_int, block9);
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi125_var->addIncoming(load102_var, block20);
	phi125_var->addIncoming(cast110_var, block22);
	phi125_var->addIncoming(cast117_var, block24);
	phi125_var->addIncoming(cast123_var, block25);
	
	phi131_var->addIncoming(binop130_var, block27);
	phi131_var->addIncoming(phi89_var, block18);
	
	phi167_var->addIncoming(load144_var, block30);
	phi167_var->addIncoming(cast152_var, block32);
	phi167_var->addIncoming(cast159_var, block34);
	phi167_var->addIncoming(cast165_var, block35);
	
	phi169_var->addIncoming(binop168_var, block37);
	phi169_var->addIncoming(phi131_var, block28);
	
	phi178_var->addIncoming(call173_var, block38);
	phi178_var->addIncoming(load24_var, block2);
	phi178_var->addIncoming(cast33_var, block4);
	phi178_var->addIncoming(cast43_var, block6);
	phi178_var->addIncoming(cast49_var, block7);
	
	phi253_var->addIncoming(gep4_val4_int, block50);
	phi253_var->addIncoming(load230_var, block52);
	phi253_var->addIncoming(cast238_var, block54);
	phi253_var->addIncoming(cast245_var, block56);
	phi253_var->addIncoming(cast251_var, block57);
	
	phi289_var->addIncoming(load266_var, block61);
	phi289_var->addIncoming(cast274_var, block63);
	phi289_var->addIncoming(cast281_var, block65);
	phi289_var->addIncoming(cast287_var, block66);
	
	phi295_var->addIncoming(binop294_var, block68);
	phi295_var->addIncoming(phi253_var, block59);
	
	phi331_var->addIncoming(load308_var, block71);
	phi331_var->addIncoming(cast316_var, block73);
	phi331_var->addIncoming(cast323_var, block75);
	phi331_var->addIncoming(cast329_var, block76);
	
	phi333_var->addIncoming(binop332_var, block78);
	phi333_var->addIncoming(phi295_var, block69);
	
	phi341_var->addIncoming(call337_var, block79);
	phi341_var->addIncoming(load183_var, block41);
	phi341_var->addIncoming(load195_var, block43);
	phi341_var->addIncoming(cast203_var, block45);
	phi341_var->addIncoming(cast210_var, block47);
	phi341_var->addIncoming(cast216_var, block48);
	
	phi429_var->addIncoming(gep4_val4_int, block83);
	phi429_var->addIncoming(load406_var, block85);
	phi429_var->addIncoming(cast414_var, block87);
	phi429_var->addIncoming(cast421_var, block89);
	phi429_var->addIncoming(cast427_var, block90);
	
	phi465_var->addIncoming(load442_var, block94);
	phi465_var->addIncoming(cast450_var, block96);
	phi465_var->addIncoming(cast457_var, block98);
	phi465_var->addIncoming(cast463_var, block99);
	
	phi471_var->addIncoming(binop470_var, block101);
	phi471_var->addIncoming(phi429_var, block92);
	
	phi507_var->addIncoming(load484_var, block104);
	phi507_var->addIncoming(cast492_var, block106);
	phi507_var->addIncoming(cast499_var, block108);
	phi507_var->addIncoming(cast505_var, block109);
	
	phi509_var->addIncoming(binop508_var, block111);
	phi509_var->addIncoming(phi471_var, block102);
	
	return;
}

void x86::x86_orpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[387], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_orps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[388], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_out(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[389], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_outsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[390], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_outsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[391], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_outsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[392], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pabsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[393], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pabsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[394], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pabsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[395], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_packssdw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[396], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_packsswb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[397], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_packusdw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[398], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_packuswb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[399], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_paddb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[400], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_paddd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[401], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_paddq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[402], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_paddsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[403], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_paddsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[404], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_paddusb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[405], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_paddusw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[406], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_paddw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[407], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_palignr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[408], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pand(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[409], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pandn(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[410], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pause(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[411], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pavgb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[412], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pavgusb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[413], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pavgw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[414], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pblendvb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[415], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pblendw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[416], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pclmulqdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[417], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpeqb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[418], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpeqd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[419], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpeqq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[420], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpeqw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[421], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpestri(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[422], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpestrm(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[423], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpgtb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[424], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpgtd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[425], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpgtq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[426], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpgtw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[427], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpistri(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[428], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pcmpistrm(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[429], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pdep(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[430], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pext(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[431], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pextrb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[432], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pextrd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[433], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pextrq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[434], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pextrw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[435], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pf2id(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[436], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pf2iw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[437], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfacc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[438], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfadd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[439], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfcmpeq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[440], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfcmpge(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[441], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfcmpgt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[442], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfmax(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[443], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfmin(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[444], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfmul(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[445], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfnacc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[446], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfpnacc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[447], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfrcp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[448], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfrcpit1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[449], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfrcpit2(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[450], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfrsqit1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[451], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfrsqrt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[452], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfsub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[453], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pfsubr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[454], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_phaddd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[455], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_phaddsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[456], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_phaddw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[457], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_phminposuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[458], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_phsubd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[459], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_phsubsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[460], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_phsubw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[461], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pi2fd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[462], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pi2fw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[463], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pinsrb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[464], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pinsrd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[465], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pinsrq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[466], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pinsrw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[467], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmaddubsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[468], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmaddwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[469], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmaxsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[470], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmaxsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[471], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmaxsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[472], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmaxub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[473], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmaxud(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[474], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmaxuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[475], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pminsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[476], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pminsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[477], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pminsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[478], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pminub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[479], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pminud(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[480], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pminuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[481], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovmskb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[482], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovsxbd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[483], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovsxbq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[484], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovsxbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[485], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovsxdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[486], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovsxwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[487], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovsxwq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[488], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovzxbd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[489], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovzxbq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[490], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovzxbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[491], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovzxdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[492], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovzxwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[493], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmovzxwq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[494], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmuldq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[495], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmulhrsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[496], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmulhrw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[497], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmulhuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[498], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmulhw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[499], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmulld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[500], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmullw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[501], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pmuludq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[502], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pop(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(1);
	Value* cast9_var = builder.CreateCast(Instruction::ZExt, load8_var, types[0]);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep4_val6_int, };
	Value* gep10_var = builder.CreateGEP(arg0, gep10_array);
	llvm::LoadInst* load11_var = builder.CreateLoad(gep10_var, false);
	load11_var->setAlignment(4);
	Value* cast12_var = builder.CreateCast(Instruction::ZExt, load11_var, types[0]);
	Constant* gep13_val14_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep13_array { gep4_val4_int, cast12_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(globals[5], gep13_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep13_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	Constant* gep18_val18_int = ConstantInt::get(types[2], 1u);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast12_var, gep18_val18_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep18_var, false);
	load20_var->setAlignment(16);
	Constant* cmp21_val21_int = ConstantInt::get(types[0], 8u);
	Value* cmp21_var = builder.CreateICmp(CmpInst::ICMP_EQ, load20_var, cmp21_val21_int);
	builder.CreateCondBr(cmp21_var, block1, block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep23_array { load16_var, };
	Value* gep23_var = builder.CreateInBoundsGEP(cast17_var, gep23_array);
	Value* cast24_var = builder.CreateCast(Instruction::BitCast, gep23_var, types[27]);
	llvm::LoadInst* load25_var = builder.CreateLoad(cast24_var, false);
	load25_var->setAlignment(8);
	builder.CreateBr(block8);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep26_array { gep4_val4_int, cast12_var, gep13_val14_int, gep13_val14_int, gep18_val18_int, };
	Value* gep26_var = builder.CreateInBoundsGEP(globals[5], gep26_array);
	llvm::LoadInst* load27_var = builder.CreateLoad(gep26_var, false);
	load27_var->setAlignment(8);
	Value* binop28_var = BinaryOperator::Create(Instruction::Add, load27_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp29_val29_int = ConstantInt::get(types[0], 4u);
	Value* cmp29_var = builder.CreateICmp(CmpInst::ICMP_EQ, load20_var, cmp29_val29_int);
	builder.CreateCondBr(cmp29_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep31_array { binop28_var, };
	Value* gep31_var = builder.CreateInBoundsGEP(cast17_var, gep31_array);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, gep31_var, types[28]);
	llvm::LoadInst* load33_var = builder.CreateLoad(cast32_var, false);
	load33_var->setAlignment(4);
	Value* cast34_var = builder.CreateCast(Instruction::ZExt, load33_var, types[0]);
	builder.CreateBr(block8);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep35_array { gep4_val4_int, cast12_var, gep13_val14_int, gep13_val14_int, gep4_val6_int, };
	Value* gep35_var = builder.CreateInBoundsGEP(globals[5], gep35_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep35_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop28_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load20_var, block7, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block5);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block8);
	
	builder.SetInsertPoint(block6);
	Constant* gep44_val44_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast12_var, gep13_val14_int, gep13_val14_int, gep44_val44_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load46_var = builder.CreateLoad(gep44_var, false);
	load46_var->setAlignment(8);
	Value* binop47_var = BinaryOperator::Create(Instruction::Add, load46_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep48_array { binop47_var, };
	Value* gep48_var = builder.CreateInBoundsGEP(cast17_var, gep48_array);
	llvm::LoadInst* load49_var = builder.CreateLoad(gep48_var, false);
	load49_var->setAlignment(1);
	Value* cast50_var = builder.CreateCast(Instruction::ZExt, load49_var, types[0]);
	builder.CreateBr(block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep52_array { gep4_val4_int, gep4_val4_int, };
	Value* gep52_var = builder.CreateInBoundsGEP(globals[7], gep52_array);
	CallInst* call51_var = builder.CreateCall(globals[6], gep52_var);
	call51_var->setTailCall();
	call51_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block8);
	PHINode* phi55_var = builder.CreatePHI(types[0], 4);
	CallInst* call56_var = builder.CreateCall2(globals[8], phi55_var, cast9_var);
	call56_var->setTailCall();
	Value* binop58_var = BinaryOperator::Create(Instruction::Add, phi55_var, cast9_var, "", builder.GetInsertBlock());
	Constant* binop59_val59_int = ConstantInt::get(types[0], 3u);
	Value* binop59_var = BinaryOperator::Create(Instruction::Shl, load20_var, binop59_val59_int, "", builder.GetInsertBlock());
	Constant* binop61_val61_int = ConstantInt::get(types[0], 64u);
	Value* binop61_var = BinaryOperator::Create(Instruction::Sub, binop61_val61_int, binop59_var, "", builder.GetInsertBlock());
	Constant* binop63_val63_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop63_var = BinaryOperator::Create(Instruction::LShr, binop63_val63_int, binop61_var, "", builder.GetInsertBlock());
	Value* binop65_var = BinaryOperator::Create(Instruction::And, binop58_var, binop63_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep66_array { load16_var, };
	Value* gep66_var = builder.CreateInBoundsGEP(cast17_var, gep66_array);
	Value* cast67_var = builder.CreateCast(Instruction::BitCast, gep66_var, types[27]);
	llvm::StoreInst* store68_var = builder.CreateStore(binop65_var, cast67_var, false);
	store68_var->setAlignment(8);
	ArrayRef<Value*> gep69_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep13_val14_int, };
	Value* gep69_var = builder.CreateInBoundsGEP(arg3, gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(4);
	SwitchInst* switch71_var = builder.CreateSwitch(load70_var, block40, 2);
	switch71_var->addCase(cast<ConstantInt>(gep18_val18_int), block9);
	switch71_var->addCase(cast<ConstantInt>(gep44_val44_int), block10);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep71_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep18_val18_int, gep13_val14_int, gep13_val14_int, };
	Value* gep71_var = builder.CreateGEP(arg3, gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(4);
	Value* cast73_var = builder.CreateCast(Instruction::ZExt, load72_var, types[0]);
	ArrayRef<Value*> gep74_array { gep4_val4_int, cast73_var, gep18_val18_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[5], gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(16);
	Value* binop76_var = BinaryOperator::Create(Instruction::Shl, load75_var, binop59_val59_int, "", builder.GetInsertBlock());
	Value* binop77_var = BinaryOperator::Create(Instruction::Sub, binop61_val61_int, binop76_var, "", builder.GetInsertBlock());
	Value* binop78_var = BinaryOperator::Create(Instruction::LShr, binop63_val63_int, binop77_var, "", builder.GetInsertBlock());
	Value* binop79_var = BinaryOperator::Create(Instruction::And, binop78_var, call56_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep80_array { gep4_val4_int, cast73_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep80_var = builder.CreateInBoundsGEP(globals[5], gep80_array);
	llvm::LoadInst* load81_var = builder.CreateLoad(gep80_var, false);
	load81_var->setAlignment(16);
	ArrayRef<Value*> gep82_array { load81_var, };
	Value* gep82_var = builder.CreateInBoundsGEP(cast17_var, gep82_array);
	Value* cast83_var = builder.CreateCast(Instruction::BitCast, gep82_var, types[27]);
	llvm::StoreInst* store84_var = builder.CreateStore(binop79_var, cast83_var, false);
	store84_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep85_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep18_val18_int, gep13_val14_int, gep13_val14_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(arg3, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(4);
	Value* cmp87_var = builder.CreateICmp(CmpInst::ICMP_EQ, load86_var, gep13_val14_int);
	builder.CreateCondBr(cmp87_var, block19, block11);
	
	builder.SetInsertPoint(block11);
	Value* cast88_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast88_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(16);
	ArrayRef<Value*> gep91_array { gep4_val4_int, cast88_var, gep18_val18_int, };
	Value* gep91_var = builder.CreateInBoundsGEP(globals[5], gep91_array);
	llvm::LoadInst* load92_var = builder.CreateLoad(gep91_var, false);
	load92_var->setAlignment(16);
	Value* cmp93_var = builder.CreateICmp(CmpInst::ICMP_EQ, load92_var, cmp21_val21_int);
	builder.CreateCondBr(cmp93_var, block12, block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep94_array { load90_var, };
	Value* gep94_var = builder.CreateInBoundsGEP(cast17_var, gep94_array);
	Value* cast95_var = builder.CreateCast(Instruction::BitCast, gep94_var, types[27]);
	llvm::LoadInst* load96_var = builder.CreateLoad(cast95_var, false);
	load96_var->setAlignment(8);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast88_var, gep13_val14_int, gep13_val14_int, gep18_val18_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(8);
	Value* binop99_var = BinaryOperator::Create(Instruction::Add, load98_var, load90_var, "", builder.GetInsertBlock());
	Value* cmp100_var = builder.CreateICmp(CmpInst::ICMP_EQ, load92_var, cmp29_val29_int);
	builder.CreateCondBr(cmp100_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep101_array { binop99_var, };
	Value* gep101_var = builder.CreateInBoundsGEP(cast17_var, gep101_array);
	Value* cast102_var = builder.CreateCast(Instruction::BitCast, gep101_var, types[28]);
	llvm::LoadInst* load103_var = builder.CreateLoad(cast102_var, false);
	load103_var->setAlignment(4);
	Value* cast104_var = builder.CreateCast(Instruction::ZExt, load103_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep105_array { gep4_val4_int, cast88_var, gep13_val14_int, gep13_val14_int, gep4_val6_int, };
	Value* gep105_var = builder.CreateInBoundsGEP(globals[5], gep105_array);
	llvm::LoadInst* load106_var = builder.CreateLoad(gep105_var, false);
	load106_var->setAlignment(16);
	Value* binop107_var = BinaryOperator::Create(Instruction::Add, load106_var, binop99_var, "", builder.GetInsertBlock());
	SwitchInst* switch108_var = builder.CreateSwitch(load92_var, block18, 2);
	switch108_var->addCase(cast<ConstantInt>(switch38_val38_int), block16);
	switch108_var->addCase(cast<ConstantInt>(switch38_val39_int), block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep108_array { binop107_var, };
	Value* gep108_var = builder.CreateInBoundsGEP(cast17_var, gep108_array);
	Value* cast109_var = builder.CreateCast(Instruction::BitCast, gep108_var, types[30]);
	llvm::LoadInst* load110_var = builder.CreateLoad(cast109_var, false);
	load110_var->setAlignment(2);
	Value* cast111_var = builder.CreateCast(Instruction::ZExt, load110_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep112_array { gep4_val4_int, cast88_var, gep13_val14_int, gep13_val14_int, gep44_val44_int, };
	Value* gep112_var = builder.CreateInBoundsGEP(globals[5], gep112_array);
	llvm::LoadInst* load113_var = builder.CreateLoad(gep112_var, false);
	load113_var->setAlignment(8);
	Value* binop114_var = BinaryOperator::Create(Instruction::Add, load113_var, binop107_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep115_array { binop114_var, };
	Value* gep115_var = builder.CreateInBoundsGEP(cast17_var, gep115_array);
	llvm::LoadInst* load116_var = builder.CreateLoad(gep115_var, false);
	load116_var->setAlignment(1);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block18);
	CallInst* call118_var = builder.CreateCall(globals[6], gep52_var);
	call118_var->setTailCall();
	call118_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block19);
	PHINode* phi119_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep120_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep18_val18_int, gep13_val14_int, gep4_val6_int, };
	Value* gep120_var = builder.CreateInBoundsGEP(arg3, gep120_array);
	llvm::LoadInst* load121_var = builder.CreateLoad(gep120_var, false);
	load121_var->setAlignment(4);
	Value* cmp122_var = builder.CreateICmp(CmpInst::ICMP_EQ, load121_var, gep13_val14_int);
	builder.CreateCondBr(cmp122_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load121_var, types[0]);
	ArrayRef<Value*> gep124_array { gep4_val4_int, cast123_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep124_var = builder.CreateInBoundsGEP(globals[5], gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(16);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast123_var, gep18_val18_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(16);
	Value* cmp128_var = builder.CreateICmp(CmpInst::ICMP_EQ, load127_var, cmp21_val21_int);
	builder.CreateCondBr(cmp128_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep129_array { load125_var, };
	Value* gep129_var = builder.CreateInBoundsGEP(cast17_var, gep129_array);
	Value* cast130_var = builder.CreateCast(Instruction::BitCast, gep129_var, types[27]);
	llvm::LoadInst* load131_var = builder.CreateLoad(cast130_var, false);
	load131_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep132_array { gep4_val4_int, cast123_var, gep13_val14_int, gep13_val14_int, gep18_val18_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(globals[5], gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(8);
	Value* binop134_var = BinaryOperator::Create(Instruction::Add, load133_var, load125_var, "", builder.GetInsertBlock());
	Value* cmp135_var = builder.CreateICmp(CmpInst::ICMP_EQ, load127_var, cmp29_val29_int);
	builder.CreateCondBr(cmp135_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep136_array { binop134_var, };
	Value* gep136_var = builder.CreateInBoundsGEP(cast17_var, gep136_array);
	Value* cast137_var = builder.CreateCast(Instruction::BitCast, gep136_var, types[28]);
	llvm::LoadInst* load138_var = builder.CreateLoad(cast137_var, false);
	load138_var->setAlignment(4);
	Value* cast139_var = builder.CreateCast(Instruction::ZExt, load138_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep140_array { gep4_val4_int, cast123_var, gep13_val14_int, gep13_val14_int, gep4_val6_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(globals[5], gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(16);
	Value* binop142_var = BinaryOperator::Create(Instruction::Add, load141_var, binop134_var, "", builder.GetInsertBlock());
	SwitchInst* switch143_var = builder.CreateSwitch(load127_var, block27, 2);
	switch143_var->addCase(cast<ConstantInt>(switch38_val38_int), block25);
	switch143_var->addCase(cast<ConstantInt>(switch38_val39_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep143_array { binop142_var, };
	Value* gep143_var = builder.CreateInBoundsGEP(cast17_var, gep143_array);
	Value* cast144_var = builder.CreateCast(Instruction::BitCast, gep143_var, types[30]);
	llvm::LoadInst* load145_var = builder.CreateLoad(cast144_var, false);
	load145_var->setAlignment(2);
	Value* cast146_var = builder.CreateCast(Instruction::ZExt, load145_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep147_array { gep4_val4_int, cast123_var, gep13_val14_int, gep13_val14_int, gep44_val44_int, };
	Value* gep147_var = builder.CreateInBoundsGEP(globals[5], gep147_array);
	llvm::LoadInst* load148_var = builder.CreateLoad(gep147_var, false);
	load148_var->setAlignment(8);
	Value* binop149_var = BinaryOperator::Create(Instruction::Add, load148_var, binop142_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep150_array { binop149_var, };
	Value* gep150_var = builder.CreateInBoundsGEP(cast17_var, gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(1);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call153_var = builder.CreateCall(globals[6], gep52_var);
	call153_var->setTailCall();
	call153_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi154_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep155_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep18_val18_int, gep13_val14_int, gep44_val44_int, };
	Value* gep155_var = builder.CreateInBoundsGEP(arg3, gep155_array);
	llvm::LoadInst* load156_var = builder.CreateLoad(gep155_var, false);
	load156_var->setAlignment(4);
	Value* cast157_var = builder.CreateCast(Instruction::SExt, load156_var, types[0]);
	Value* binop158_var = BinaryOperator::Create(Instruction::Mul, cast157_var, phi154_var, "", builder.GetInsertBlock());
	Value* binop159_var = BinaryOperator::Create(Instruction::Add, binop158_var, phi119_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi160_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep161_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep18_val18_int, gep13_val14_int, gep18_val18_int, };
	Value* gep161_var = builder.CreateInBoundsGEP(arg3, gep161_array);
	llvm::LoadInst* load162_var = builder.CreateLoad(gep161_var, false);
	load162_var->setAlignment(4);
	Value* cmp163_var = builder.CreateICmp(CmpInst::ICMP_EQ, load162_var, gep13_val14_int);
	builder.CreateCondBr(cmp163_var, block39, block30);
	
	builder.SetInsertPoint(block30);
	Value* cast164_var = builder.CreateCast(Instruction::ZExt, load162_var, types[0]);
	ArrayRef<Value*> gep165_array { gep4_val4_int, cast164_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep165_var = builder.CreateInBoundsGEP(globals[5], gep165_array);
	llvm::LoadInst* load166_var = builder.CreateLoad(gep165_var, false);
	load166_var->setAlignment(16);
	ArrayRef<Value*> gep167_array { gep4_val4_int, cast164_var, gep18_val18_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[5], gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(16);
	Value* cmp169_var = builder.CreateICmp(CmpInst::ICMP_EQ, load168_var, cmp21_val21_int);
	builder.CreateCondBr(cmp169_var, block31, block32);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep170_array { load166_var, };
	Value* gep170_var = builder.CreateInBoundsGEP(cast17_var, gep170_array);
	Value* cast171_var = builder.CreateCast(Instruction::BitCast, gep170_var, types[27]);
	llvm::LoadInst* load172_var = builder.CreateLoad(cast171_var, false);
	load172_var->setAlignment(8);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep173_array { gep4_val4_int, cast164_var, gep13_val14_int, gep13_val14_int, gep18_val18_int, };
	Value* gep173_var = builder.CreateInBoundsGEP(globals[5], gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(8);
	Value* binop175_var = BinaryOperator::Create(Instruction::Add, load174_var, load166_var, "", builder.GetInsertBlock());
	Value* cmp176_var = builder.CreateICmp(CmpInst::ICMP_EQ, load168_var, cmp29_val29_int);
	builder.CreateCondBr(cmp176_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep177_array { binop175_var, };
	Value* gep177_var = builder.CreateInBoundsGEP(cast17_var, gep177_array);
	Value* cast178_var = builder.CreateCast(Instruction::BitCast, gep177_var, types[28]);
	llvm::LoadInst* load179_var = builder.CreateLoad(cast178_var, false);
	load179_var->setAlignment(4);
	Value* cast180_var = builder.CreateCast(Instruction::ZExt, load179_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep181_array { gep4_val4_int, cast164_var, gep13_val14_int, gep13_val14_int, gep4_val6_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(globals[5], gep181_array);
	llvm::LoadInst* load182_var = builder.CreateLoad(gep181_var, false);
	load182_var->setAlignment(16);
	Value* binop183_var = BinaryOperator::Create(Instruction::Add, load182_var, binop175_var, "", builder.GetInsertBlock());
	SwitchInst* switch184_var = builder.CreateSwitch(load168_var, block37, 2);
	switch184_var->addCase(cast<ConstantInt>(switch38_val38_int), block35);
	switch184_var->addCase(cast<ConstantInt>(switch38_val39_int), block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep184_array { binop183_var, };
	Value* gep184_var = builder.CreateInBoundsGEP(cast17_var, gep184_array);
	Value* cast185_var = builder.CreateCast(Instruction::BitCast, gep184_var, types[30]);
	llvm::LoadInst* load186_var = builder.CreateLoad(cast185_var, false);
	load186_var->setAlignment(2);
	Value* cast187_var = builder.CreateCast(Instruction::ZExt, load186_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep188_array { gep4_val4_int, cast164_var, gep13_val14_int, gep13_val14_int, gep44_val44_int, };
	Value* gep188_var = builder.CreateInBoundsGEP(globals[5], gep188_array);
	llvm::LoadInst* load189_var = builder.CreateLoad(gep188_var, false);
	load189_var->setAlignment(8);
	Value* binop190_var = BinaryOperator::Create(Instruction::Add, load189_var, binop183_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep191_array { binop190_var, };
	Value* gep191_var = builder.CreateInBoundsGEP(cast17_var, gep191_array);
	llvm::LoadInst* load192_var = builder.CreateLoad(gep191_var, false);
	load192_var->setAlignment(1);
	Value* cast193_var = builder.CreateCast(Instruction::ZExt, load192_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block37);
	CallInst* call194_var = builder.CreateCall(globals[6], gep52_var);
	call194_var->setTailCall();
	call194_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block38);
	PHINode* phi195_var = builder.CreatePHI(types[0], 4);
	Value* binop196_var = BinaryOperator::Create(Instruction::Add, phi195_var, phi160_var, "", builder.GetInsertBlock());
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block39);
	PHINode* phi197_var = builder.CreatePHI(types[0], 2);
	CallInst* call198_var = builder.CreateCall3(globals[14], phi197_var, cast9_var, call56_var);
	call198_var->setTailCall();
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block40);
	ArrayRef<Value*> gep200_array { gep4_val4_int, gep4_val4_int, };
	Value* gep200_var = builder.CreateInBoundsGEP(globals[15], gep200_array);
	CallInst* call200_var = builder.CreateCall(globals[6], gep200_var);
	call200_var->setTailCall();
	call200_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block41);
	phi55_var->addIncoming(load25_var, block1);
	phi55_var->addIncoming(cast34_var, block3);
	phi55_var->addIncoming(cast43_var, block5);
	phi55_var->addIncoming(cast50_var, block6);
	
	phi119_var->addIncoming(gep4_val4_int, block10);
	phi119_var->addIncoming(load96_var, block12);
	phi119_var->addIncoming(cast104_var, block14);
	phi119_var->addIncoming(cast111_var, block16);
	phi119_var->addIncoming(cast117_var, block17);
	
	phi154_var->addIncoming(load131_var, block21);
	phi154_var->addIncoming(cast139_var, block23);
	phi154_var->addIncoming(cast146_var, block25);
	phi154_var->addIncoming(cast152_var, block26);
	
	phi160_var->addIncoming(binop159_var, block28);
	phi160_var->addIncoming(phi119_var, block19);
	
	phi195_var->addIncoming(load172_var, block31);
	phi195_var->addIncoming(cast180_var, block33);
	phi195_var->addIncoming(cast187_var, block35);
	phi195_var->addIncoming(cast193_var, block36);
	
	phi197_var->addIncoming(binop196_var, block38);
	phi197_var->addIncoming(phi160_var, block29);
	
	return;
}

void x86::x86_popal(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[503], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_popaw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[504], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_popcnt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[505], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_popf(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[506], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_popfd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[507], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_popfq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[508], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_por(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[509], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_prefetch(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[510], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_prefetchnta(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[511], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_prefetcht0(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[512], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_prefetcht1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[513], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_prefetcht2(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[514], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_prefetchw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[515], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psadbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[516], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pshufb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[517], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pshufd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[518], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pshufhw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[519], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pshuflw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[520], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pshufw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[521], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psignb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[522], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psignd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[523], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psignw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[524], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pslld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[525], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pslldq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[526], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psllq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[527], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psllw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[528], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psrad(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[529], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psraw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[530], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psrld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[531], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psrldq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[532], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psrlq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[533], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psrlw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[534], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psubb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[535], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psubd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[536], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psubq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[537], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psubsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[538], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psubsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[539], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psubusb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[540], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psubusw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[541], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_psubw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[542], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pswapd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[543], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ptest(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[544], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_punpckhbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[545], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_punpckhdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[546], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_punpckhqdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[547], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_punpckhwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[548], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_punpcklbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[549], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_punpckldq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[550], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_punpcklqdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[551], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_punpcklwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[552], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_push(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block40, 3);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 2u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block2);
	Constant* switch9_val11_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val11_int), block10);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep12_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, };
	Value* gep12_var = builder.CreateInBoundsGEP(arg3, gep12_array);
	Value* cast13_var = builder.CreateCast(Instruction::BitCast, gep12_var, types[27]);
	llvm::LoadInst* load14_var = builder.CreateLoad(cast13_var, false);
	load14_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep15_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep15_var = builder.CreateGEP(arg3, gep15_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep15_var, false);
	load16_var->setAlignment(4);
	Value* cast17_var = builder.CreateCast(Instruction::ZExt, load16_var, types[0]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep18_var, false);
	load20_var->setAlignment(16);
	Value* cast21_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast17_var, switch9_val10_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load23_var = builder.CreateLoad(gep22_var, false);
	load23_var->setAlignment(16);
	Constant* cmp24_val24_int = ConstantInt::get(types[0], 8u);
	Value* cmp24_var = builder.CreateICmp(CmpInst::ICMP_EQ, load23_var, cmp24_val24_int);
	builder.CreateCondBr(cmp24_var, block3, block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep26_array { load20_var, };
	Value* gep26_var = builder.CreateInBoundsGEP(cast21_var, gep26_array);
	Value* cast27_var = builder.CreateCast(Instruction::BitCast, gep26_var, types[27]);
	llvm::LoadInst* load28_var = builder.CreateLoad(cast27_var, false);
	load28_var->setAlignment(8);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(8);
	Value* binop31_var = BinaryOperator::Create(Instruction::Add, load30_var, load20_var, "", builder.GetInsertBlock());
	Constant* cmp32_val32_int = ConstantInt::get(types[0], 4u);
	Value* cmp32_var = builder.CreateICmp(CmpInst::ICMP_EQ, load23_var, cmp32_val32_int);
	builder.CreateCondBr(cmp32_var, block5, block6);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep34_array { binop31_var, };
	Value* gep34_var = builder.CreateInBoundsGEP(cast21_var, gep34_array);
	Value* cast35_var = builder.CreateCast(Instruction::BitCast, gep34_var, types[28]);
	llvm::LoadInst* load36_var = builder.CreateLoad(cast35_var, false);
	load36_var->setAlignment(4);
	Value* cast37_var = builder.CreateCast(Instruction::ZExt, load36_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep38_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep38_var = builder.CreateInBoundsGEP(globals[5], gep38_array);
	llvm::LoadInst* load39_var = builder.CreateLoad(gep38_var, false);
	load39_var->setAlignment(16);
	Value* binop40_var = BinaryOperator::Create(Instruction::Add, load39_var, binop31_var, "", builder.GetInsertBlock());
	SwitchInst* switch41_var = builder.CreateSwitch(load23_var, block9, 2);
	Constant* switch41_val41_int = ConstantInt::get(types[0], 2u);
	switch41_var->addCase(cast<ConstantInt>(switch41_val41_int), block7);
	Constant* switch41_val42_int = ConstantInt::get(types[0], 1u);
	switch41_var->addCase(cast<ConstantInt>(switch41_val42_int), block8);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep43_array { binop40_var, };
	Value* gep43_var = builder.CreateInBoundsGEP(cast21_var, gep43_array);
	Value* cast44_var = builder.CreateCast(Instruction::BitCast, gep43_var, types[30]);
	llvm::LoadInst* load45_var = builder.CreateLoad(cast44_var, false);
	load45_var->setAlignment(2);
	Value* cast46_var = builder.CreateCast(Instruction::ZExt, load45_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast17_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, binop40_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep50_array { binop49_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast21_var, gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(1);
	Value* cast52_var = builder.CreateCast(Instruction::ZExt, load51_var, types[0]);
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val4_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(globals[7], gep54_array);
	CallInst* call53_var = builder.CreateCall(globals[6], gep54_var);
	call53_var->setTailCall();
	call53_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep57_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, gep4_val6_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(arg3, gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(4);
	Value* cmp59_var = builder.CreateICmp(CmpInst::ICMP_EQ, load58_var, gep4_val6_int);
	builder.CreateCondBr(cmp59_var, block19, block11);
	
	builder.SetInsertPoint(block11);
	Value* cast60_var = builder.CreateCast(Instruction::ZExt, load58_var, types[0]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep64_array { gep4_val4_int, cast60_var, switch9_val10_int, };
	Value* gep64_var = builder.CreateInBoundsGEP(globals[5], gep64_array);
	llvm::LoadInst* load65_var = builder.CreateLoad(gep64_var, false);
	load65_var->setAlignment(16);
	Value* cmp66_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp24_val24_int);
	builder.CreateCondBr(cmp66_var, block12, block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { load62_var, };
	Value* gep67_var = builder.CreateInBoundsGEP(cast63_var, gep67_array);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, gep67_var, types[27]);
	llvm::LoadInst* load69_var = builder.CreateLoad(cast68_var, false);
	load69_var->setAlignment(8);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep70_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep70_var = builder.CreateInBoundsGEP(globals[5], gep70_array);
	llvm::LoadInst* load71_var = builder.CreateLoad(gep70_var, false);
	load71_var->setAlignment(8);
	Value* binop72_var = BinaryOperator::Create(Instruction::Add, load71_var, load62_var, "", builder.GetInsertBlock());
	Value* cmp73_var = builder.CreateICmp(CmpInst::ICMP_EQ, load65_var, cmp32_val32_int);
	builder.CreateCondBr(cmp73_var, block14, block15);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep74_array { binop72_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast63_var, gep74_array);
	Value* cast75_var = builder.CreateCast(Instruction::BitCast, gep74_var, types[28]);
	llvm::LoadInst* load76_var = builder.CreateLoad(cast75_var, false);
	load76_var->setAlignment(4);
	Value* cast77_var = builder.CreateCast(Instruction::ZExt, load76_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(globals[5], gep78_array);
	llvm::LoadInst* load79_var = builder.CreateLoad(gep78_var, false);
	load79_var->setAlignment(16);
	Value* binop80_var = BinaryOperator::Create(Instruction::Add, load79_var, binop72_var, "", builder.GetInsertBlock());
	SwitchInst* switch81_var = builder.CreateSwitch(load65_var, block18, 2);
	switch81_var->addCase(cast<ConstantInt>(switch41_val41_int), block16);
	switch81_var->addCase(cast<ConstantInt>(switch41_val42_int), block17);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep81_array { binop80_var, };
	Value* gep81_var = builder.CreateInBoundsGEP(cast63_var, gep81_array);
	Value* cast82_var = builder.CreateCast(Instruction::BitCast, gep81_var, types[30]);
	llvm::LoadInst* load83_var = builder.CreateLoad(cast82_var, false);
	load83_var->setAlignment(2);
	Value* cast84_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast60_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(8);
	Value* binop87_var = BinaryOperator::Create(Instruction::Add, load86_var, binop80_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep88_array { binop87_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast63_var, gep88_array);
	llvm::LoadInst* load89_var = builder.CreateLoad(gep88_var, false);
	load89_var->setAlignment(1);
	Value* cast90_var = builder.CreateCast(Instruction::ZExt, load89_var, types[0]);
	builder.CreateBr(block19);
	
	builder.SetInsertPoint(block18);
	CallInst* call91_var = builder.CreateCall(globals[6], gep54_var);
	call91_var->setTailCall();
	call91_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block19);
	PHINode* phi92_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep93_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val9_int, };
	Value* gep93_var = builder.CreateInBoundsGEP(arg3, gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(4);
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load94_var, gep4_val6_int);
	builder.CreateCondBr(cmp95_var, block29, block20);
	
	builder.SetInsertPoint(block20);
	Value* cast96_var = builder.CreateCast(Instruction::ZExt, load94_var, types[0]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cast99_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast96_var, switch9_val10_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* cmp102_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp24_val24_int);
	builder.CreateCondBr(cmp102_var, block21, block22);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { load98_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast99_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[27]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(8);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep106_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep106_var = builder.CreateInBoundsGEP(globals[5], gep106_array);
	llvm::LoadInst* load107_var = builder.CreateLoad(gep106_var, false);
	load107_var->setAlignment(8);
	Value* binop108_var = BinaryOperator::Create(Instruction::Add, load107_var, load98_var, "", builder.GetInsertBlock());
	Value* cmp109_var = builder.CreateICmp(CmpInst::ICMP_EQ, load101_var, cmp32_val32_int);
	builder.CreateCondBr(cmp109_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep110_array { binop108_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast99_var, gep110_array);
	Value* cast111_var = builder.CreateCast(Instruction::BitCast, gep110_var, types[28]);
	llvm::LoadInst* load112_var = builder.CreateLoad(cast111_var, false);
	load112_var->setAlignment(4);
	Value* cast113_var = builder.CreateCast(Instruction::ZExt, load112_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep114_var = builder.CreateInBoundsGEP(globals[5], gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(16);
	Value* binop116_var = BinaryOperator::Create(Instruction::Add, load115_var, binop108_var, "", builder.GetInsertBlock());
	SwitchInst* switch117_var = builder.CreateSwitch(load101_var, block27, 2);
	switch117_var->addCase(cast<ConstantInt>(switch41_val41_int), block25);
	switch117_var->addCase(cast<ConstantInt>(switch41_val42_int), block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep117_array { binop116_var, };
	Value* gep117_var = builder.CreateInBoundsGEP(cast99_var, gep117_array);
	Value* cast118_var = builder.CreateCast(Instruction::BitCast, gep117_var, types[30]);
	llvm::LoadInst* load119_var = builder.CreateLoad(cast118_var, false);
	load119_var->setAlignment(2);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep121_array { gep4_val4_int, cast96_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(globals[5], gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(8);
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, load122_var, binop116_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep124_array { binop123_var, };
	Value* gep124_var = builder.CreateInBoundsGEP(cast99_var, gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(1);
	Value* cast126_var = builder.CreateCast(Instruction::ZExt, load125_var, types[0]);
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block27);
	CallInst* call127_var = builder.CreateCall(globals[6], gep54_var);
	call127_var->setTailCall();
	call127_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block28);
	PHINode* phi128_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep129_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val11_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(arg3, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(4);
	Value* cast131_var = builder.CreateCast(Instruction::SExt, load130_var, types[0]);
	Value* binop132_var = BinaryOperator::Create(Instruction::Mul, cast131_var, phi128_var, "", builder.GetInsertBlock());
	Value* binop133_var = BinaryOperator::Create(Instruction::Add, binop132_var, phi92_var, "", builder.GetInsertBlock());
	builder.CreateBr(block29);
	
	builder.SetInsertPoint(block29);
	PHINode* phi134_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep135_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val10_int, gep4_val6_int, switch9_val10_int, };
	Value* gep135_var = builder.CreateInBoundsGEP(arg3, gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(4);
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load136_var, gep4_val6_int);
	builder.CreateCondBr(cmp137_var, block39, block30);
	
	builder.SetInsertPoint(block30);
	Value* cast138_var = builder.CreateCast(Instruction::ZExt, load136_var, types[0]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cast141_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast138_var, switch9_val10_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* cmp144_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp24_val24_int);
	builder.CreateCondBr(cmp144_var, block31, block32);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { load140_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast141_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[27]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(8);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, load140_var, "", builder.GetInsertBlock());
	Value* cmp151_var = builder.CreateICmp(CmpInst::ICMP_EQ, load143_var, cmp32_val32_int);
	builder.CreateCondBr(cmp151_var, block33, block34);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep152_array { binop150_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast141_var, gep152_array);
	Value* cast153_var = builder.CreateCast(Instruction::BitCast, gep152_var, types[28]);
	llvm::LoadInst* load154_var = builder.CreateLoad(cast153_var, false);
	load154_var->setAlignment(4);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep156_var = builder.CreateInBoundsGEP(globals[5], gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(16);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, load157_var, binop150_var, "", builder.GetInsertBlock());
	SwitchInst* switch159_var = builder.CreateSwitch(load143_var, block37, 2);
	switch159_var->addCase(cast<ConstantInt>(switch41_val41_int), block35);
	switch159_var->addCase(cast<ConstantInt>(switch41_val42_int), block36);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep159_array { binop158_var, };
	Value* gep159_var = builder.CreateInBoundsGEP(cast141_var, gep159_array);
	Value* cast160_var = builder.CreateCast(Instruction::BitCast, gep159_var, types[30]);
	llvm::LoadInst* load161_var = builder.CreateLoad(cast160_var, false);
	load161_var->setAlignment(2);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block36);
	ArrayRef<Value*> gep163_array { gep4_val4_int, cast138_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[5], gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(8);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, load164_var, binop158_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep166_array { binop165_var, };
	Value* gep166_var = builder.CreateInBoundsGEP(cast141_var, gep166_array);
	llvm::LoadInst* load167_var = builder.CreateLoad(gep166_var, false);
	load167_var->setAlignment(1);
	Value* cast168_var = builder.CreateCast(Instruction::ZExt, load167_var, types[0]);
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block37);
	CallInst* call169_var = builder.CreateCall(globals[6], gep54_var);
	call169_var->setTailCall();
	call169_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block38);
	PHINode* phi170_var = builder.CreatePHI(types[0], 4);
	Value* binop171_var = BinaryOperator::Create(Instruction::Add, phi170_var, phi134_var, "", builder.GetInsertBlock());
	builder.CreateBr(block39);
	
	builder.SetInsertPoint(block39);
	PHINode* phi172_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep173_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, };
	Value* gep173_var = builder.CreateInBoundsGEP(arg3, gep173_array);
	llvm::LoadInst* load174_var = builder.CreateLoad(gep173_var, false);
	load174_var->setAlignment(1);
	Value* cast175_var = builder.CreateCast(Instruction::ZExt, load174_var, types[0]);
	CallInst* call176_var = builder.CreateCall2(globals[8], phi172_var, cast175_var);
	call176_var->setTailCall();
	builder.CreateBr(block41);
	
	builder.SetInsertPoint(block40);
	ArrayRef<Value*> gep178_array { gep4_val4_int, gep4_val4_int, };
	Value* gep178_var = builder.CreateInBoundsGEP(globals[10], gep178_array);
	CallInst* call178_var = builder.CreateCall(globals[6], gep178_var);
	call178_var->setTailCall();
	call178_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block41);
	PHINode* phi181_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep182_array { gep4_val4_int, switch9_val9_int, };
	Value* gep182_var = builder.CreateInBoundsGEP(arg0, gep182_array);
	llvm::LoadInst* load183_var = builder.CreateLoad(gep182_var, false);
	load183_var->setAlignment(4);
	Value* cast184_var = builder.CreateCast(Instruction::ZExt, load183_var, types[0]);
	ArrayRef<Value*> gep185_array { gep4_val4_int, cast184_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep185_var = builder.CreateInBoundsGEP(globals[5], gep185_array);
	llvm::LoadInst* load186_var = builder.CreateLoad(gep185_var, false);
	load186_var->setAlignment(16);
	Value* cast187_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep188_array { gep4_val4_int, cast184_var, switch9_val10_int, };
	Value* gep188_var = builder.CreateInBoundsGEP(globals[5], gep188_array);
	llvm::LoadInst* load189_var = builder.CreateLoad(gep188_var, false);
	load189_var->setAlignment(16);
	Value* cmp190_var = builder.CreateICmp(CmpInst::ICMP_EQ, load189_var, cmp24_val24_int);
	builder.CreateCondBr(cmp190_var, block42, block43);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep191_array { load186_var, };
	Value* gep191_var = builder.CreateInBoundsGEP(cast187_var, gep191_array);
	Value* cast192_var = builder.CreateCast(Instruction::BitCast, gep191_var, types[27]);
	llvm::LoadInst* load193_var = builder.CreateLoad(cast192_var, false);
	load193_var->setAlignment(8);
	builder.CreateBr(block49);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep194_array { gep4_val4_int, cast184_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep194_var = builder.CreateInBoundsGEP(globals[5], gep194_array);
	llvm::LoadInst* load195_var = builder.CreateLoad(gep194_var, false);
	load195_var->setAlignment(8);
	Value* binop196_var = BinaryOperator::Create(Instruction::Add, load195_var, load186_var, "", builder.GetInsertBlock());
	Value* cmp197_var = builder.CreateICmp(CmpInst::ICMP_EQ, load189_var, cmp32_val32_int);
	builder.CreateCondBr(cmp197_var, block44, block45);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep198_array { binop196_var, };
	Value* gep198_var = builder.CreateInBoundsGEP(cast187_var, gep198_array);
	Value* cast199_var = builder.CreateCast(Instruction::BitCast, gep198_var, types[28]);
	llvm::LoadInst* load200_var = builder.CreateLoad(cast199_var, false);
	load200_var->setAlignment(4);
	Value* cast201_var = builder.CreateCast(Instruction::ZExt, load200_var, types[0]);
	builder.CreateBr(block49);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep202_array { gep4_val4_int, cast184_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep202_var = builder.CreateInBoundsGEP(globals[5], gep202_array);
	llvm::LoadInst* load203_var = builder.CreateLoad(gep202_var, false);
	load203_var->setAlignment(16);
	Value* binop204_var = BinaryOperator::Create(Instruction::Add, load203_var, binop196_var, "", builder.GetInsertBlock());
	SwitchInst* switch205_var = builder.CreateSwitch(load189_var, block48, 2);
	switch205_var->addCase(cast<ConstantInt>(switch41_val41_int), block46);
	switch205_var->addCase(cast<ConstantInt>(switch41_val42_int), block47);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep205_array { binop204_var, };
	Value* gep205_var = builder.CreateInBoundsGEP(cast187_var, gep205_array);
	Value* cast206_var = builder.CreateCast(Instruction::BitCast, gep205_var, types[30]);
	llvm::LoadInst* load207_var = builder.CreateLoad(cast206_var, false);
	load207_var->setAlignment(2);
	Value* cast208_var = builder.CreateCast(Instruction::ZExt, load207_var, types[0]);
	builder.CreateBr(block49);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep209_array { gep4_val4_int, cast184_var, gep4_val6_int, gep4_val6_int, switch9_val11_int, };
	Value* gep209_var = builder.CreateInBoundsGEP(globals[5], gep209_array);
	llvm::LoadInst* load210_var = builder.CreateLoad(gep209_var, false);
	load210_var->setAlignment(8);
	Value* binop211_var = BinaryOperator::Create(Instruction::Add, load210_var, binop204_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep212_array { binop211_var, };
	Value* gep212_var = builder.CreateInBoundsGEP(cast187_var, gep212_array);
	llvm::LoadInst* load213_var = builder.CreateLoad(gep212_var, false);
	load213_var->setAlignment(1);
	Value* cast214_var = builder.CreateCast(Instruction::ZExt, load213_var, types[0]);
	builder.CreateBr(block49);
	
	builder.SetInsertPoint(block48);
	CallInst* call215_var = builder.CreateCall(globals[6], gep54_var);
	call215_var->setTailCall();
	call215_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block49);
	PHINode* phi216_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep217_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, };
	Value* gep217_var = builder.CreateInBoundsGEP(arg3, gep217_array);
	llvm::LoadInst* load218_var = builder.CreateLoad(gep217_var, false);
	load218_var->setAlignment(1);
	Value* cast219_var = builder.CreateCast(Instruction::ZExt, load218_var, types[0]);
	Value* binop220_var = BinaryOperator::Create(Instruction::Sub, phi216_var, cast219_var, "", builder.GetInsertBlock());
	CallInst* call221_var = builder.CreateCall3(globals[14], binop220_var, cast219_var, phi181_var);
	call221_var->setTailCall();
	Constant* binop223_val223_int = ConstantInt::get(types[0], 3u);
	Value* binop223_var = BinaryOperator::Create(Instruction::Shl, load189_var, binop223_val223_int, "", builder.GetInsertBlock());
	Constant* binop225_val225_int = ConstantInt::get(types[0], 64u);
	Value* binop225_var = BinaryOperator::Create(Instruction::Sub, binop225_val225_int, binop223_var, "", builder.GetInsertBlock());
	Constant* binop227_val227_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop227_var = BinaryOperator::Create(Instruction::LShr, binop227_val227_int, binop225_var, "", builder.GetInsertBlock());
	Value* binop229_var = BinaryOperator::Create(Instruction::And, binop227_var, binop220_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep230_array { load186_var, };
	Value* gep230_var = builder.CreateInBoundsGEP(cast187_var, gep230_array);
	Value* cast231_var = builder.CreateCast(Instruction::BitCast, gep230_var, types[27]);
	llvm::StoreInst* store232_var = builder.CreateStore(binop229_var, cast231_var, false);
	store232_var->setAlignment(8);
	phi92_var->addIncoming(gep4_val4_int, block10);
	phi92_var->addIncoming(load69_var, block12);
	phi92_var->addIncoming(cast77_var, block14);
	phi92_var->addIncoming(cast84_var, block16);
	phi92_var->addIncoming(cast90_var, block17);
	
	phi128_var->addIncoming(load105_var, block21);
	phi128_var->addIncoming(cast113_var, block23);
	phi128_var->addIncoming(cast120_var, block25);
	phi128_var->addIncoming(cast126_var, block26);
	
	phi134_var->addIncoming(binop133_var, block28);
	phi134_var->addIncoming(phi92_var, block19);
	
	phi170_var->addIncoming(load147_var, block31);
	phi170_var->addIncoming(cast155_var, block33);
	phi170_var->addIncoming(cast162_var, block35);
	phi170_var->addIncoming(cast168_var, block36);
	
	phi172_var->addIncoming(binop171_var, block38);
	phi172_var->addIncoming(phi134_var, block29);
	
	phi181_var->addIncoming(call176_var, block39);
	phi181_var->addIncoming(load14_var, block1);
	phi181_var->addIncoming(load28_var, block3);
	phi181_var->addIncoming(cast37_var, block5);
	phi181_var->addIncoming(cast46_var, block7);
	phi181_var->addIncoming(cast52_var, block8);
	
	phi216_var->addIncoming(load193_var, block42);
	phi216_var->addIncoming(cast201_var, block44);
	phi216_var->addIncoming(cast208_var, block46);
	phi216_var->addIncoming(cast214_var, block47);
	
	return;
}

void x86::x86_pushal(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[553], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pushaw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[554], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pushf(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[555], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pushfd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[556], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pushfq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[557], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_pxor(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[558], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rcl(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[559], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rcpps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[560], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rcpss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[561], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rcr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[562], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rdfsbase(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[563], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rdgsbase(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[564], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rdmsr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[565], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rdpmc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[566], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rdrand(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[567], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rdseed(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[568], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rdtsc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[569], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rdtscp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[570], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ret(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	CallInst* call4_var = builder.CreateCall2(globals[571], arg0, arg1);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_retf(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[572], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_retfq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[573], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rol(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[574], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ror(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[575], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rorx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[576], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_roundpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[577], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_roundps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[578], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_roundsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[579], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_roundss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[580], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rsm(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[581], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rsqrtps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[582], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_rsqrtss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[583], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sahf(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[584], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sal(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[585], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_salc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[586], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sar(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[587], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sarx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[588], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sbb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[589], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_scasb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[590], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_scasd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[591], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_scasq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[592], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_scasw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[593], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_seta(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block2);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg2, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(1);
	Value* cmp13_var = builder.CreateICmp(CmpInst::ICMP_EQ, load12_var, cmp8_val8_int);
	builder.CreateBr(block2);
	
	builder.SetInsertPoint(block2);
	PHINode* phi14_var = builder.CreatePHI(types[37], 2);
	Value* cast15_var = builder.CreateCast(Instruction::ZExt, phi14_var, types[0]);
	Constant* gep16_val16_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, gep4_val5_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	llvm::LoadInst* load18_var = builder.CreateLoad(gep16_var, false);
	load18_var->setAlignment(4);
	SwitchInst* switch19_var = builder.CreateSwitch(load18_var, block34, 2);
	Constant* switch19_val19_int = ConstantInt::get(types[2], 1u);
	switch19_var->addCase(cast<ConstantInt>(switch19_val19_int), block3);
	switch19_var->addCase(cast<ConstantInt>(gep10_val10_int), block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep20_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, gep4_val5_int, };
	Value* gep20_var = builder.CreateGEP(arg3, gep20_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep20_var, false);
	load21_var->setAlignment(4);
	Value* cast22_var = builder.CreateCast(Instruction::ZExt, load21_var, types[0]);
	ArrayRef<Value*> gep23_array { gep4_val4_int, cast22_var, switch19_val19_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep23_var, false);
	load25_var->setAlignment(16);
	Constant* binop26_val26_int = ConstantInt::get(types[0], 3u);
	Value* binop26_var = BinaryOperator::Create(Instruction::Shl, load25_var, binop26_val26_int, "", builder.GetInsertBlock());
	Constant* binop28_val28_int = ConstantInt::get(types[0], 64u);
	Value* binop28_var = BinaryOperator::Create(Instruction::Sub, binop28_val28_int, binop26_var, "", builder.GetInsertBlock());
	Constant* binop30_val30_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop30_var = BinaryOperator::Create(Instruction::LShr, binop30_val30_int, binop28_var, "", builder.GetInsertBlock());
	Value* binop32_var = BinaryOperator::Create(Instruction::And, binop30_var, cast15_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast22_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(16);
	Value* cast35_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep36_array { load34_var, };
	Value* gep36_var = builder.CreateInBoundsGEP(cast35_var, gep36_array);
	Value* cast37_var = builder.CreateCast(Instruction::BitCast, gep36_var, types[27]);
	llvm::StoreInst* store38_var = builder.CreateStore(binop32_var, cast37_var, false);
	store38_var->setAlignment(8);
	builder.CreateBr(block35);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep39_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, gep4_val5_int, };
	Value* gep39_var = builder.CreateInBoundsGEP(arg3, gep39_array);
	llvm::LoadInst* load40_var = builder.CreateLoad(gep39_var, false);
	load40_var->setAlignment(4);
	Value* cmp41_var = builder.CreateICmp(CmpInst::ICMP_EQ, load40_var, gep4_val5_int);
	builder.CreateCondBr(cmp41_var, block13, block5);
	
	builder.SetInsertPoint(block5);
	Value* cast42_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	ArrayRef<Value*> gep43_array { gep4_val4_int, cast42_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Value* cast45_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep46_array { gep4_val4_int, cast42_var, switch19_val19_int, };
	Value* gep46_var = builder.CreateInBoundsGEP(globals[5], gep46_array);
	llvm::LoadInst* load47_var = builder.CreateLoad(gep46_var, false);
	load47_var->setAlignment(16);
	Constant* cmp48_val48_int = ConstantInt::get(types[0], 8u);
	Value* cmp48_var = builder.CreateICmp(CmpInst::ICMP_EQ, load47_var, cmp48_val48_int);
	builder.CreateCondBr(cmp48_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep50_array { load44_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast45_var, gep50_array);
	Value* cast51_var = builder.CreateCast(Instruction::BitCast, gep50_var, types[27]);
	llvm::LoadInst* load52_var = builder.CreateLoad(cast51_var, false);
	load52_var->setAlignment(8);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep53_array { gep4_val4_int, cast42_var, gep4_val5_int, gep4_val5_int, switch19_val19_int, };
	Value* gep53_var = builder.CreateInBoundsGEP(globals[5], gep53_array);
	llvm::LoadInst* load54_var = builder.CreateLoad(gep53_var, false);
	load54_var->setAlignment(8);
	Value* binop55_var = BinaryOperator::Create(Instruction::Add, load54_var, load44_var, "", builder.GetInsertBlock());
	Constant* cmp56_val56_int = ConstantInt::get(types[0], 4u);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load47_var, cmp56_val56_int);
	builder.CreateCondBr(cmp56_var, block8, block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep58_array { binop55_var, };
	Value* gep58_var = builder.CreateInBoundsGEP(cast45_var, gep58_array);
	Value* cast59_var = builder.CreateCast(Instruction::BitCast, gep58_var, types[28]);
	llvm::LoadInst* load60_var = builder.CreateLoad(cast59_var, false);
	load60_var->setAlignment(4);
	Value* cast61_var = builder.CreateCast(Instruction::ZExt, load60_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block9);
	Constant* gep62_val62_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep62_array { gep4_val4_int, cast42_var, gep4_val5_int, gep4_val5_int, gep62_val62_int, };
	Value* gep62_var = builder.CreateInBoundsGEP(globals[5], gep62_array);
	llvm::LoadInst* load64_var = builder.CreateLoad(gep62_var, false);
	load64_var->setAlignment(16);
	Value* binop65_var = BinaryOperator::Create(Instruction::Add, load64_var, binop55_var, "", builder.GetInsertBlock());
	SwitchInst* switch66_var = builder.CreateSwitch(load47_var, block12, 2);
	Constant* switch66_val66_int = ConstantInt::get(types[0], 2u);
	switch66_var->addCase(cast<ConstantInt>(switch66_val66_int), block10);
	Constant* switch66_val67_int = ConstantInt::get(types[0], 1u);
	switch66_var->addCase(cast<ConstantInt>(switch66_val67_int), block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep68_array { binop65_var, };
	Value* gep68_var = builder.CreateInBoundsGEP(cast45_var, gep68_array);
	Value* cast69_var = builder.CreateCast(Instruction::BitCast, gep68_var, types[30]);
	llvm::LoadInst* load70_var = builder.CreateLoad(cast69_var, false);
	load70_var->setAlignment(2);
	Value* cast71_var = builder.CreateCast(Instruction::ZExt, load70_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep72_array { gep4_val4_int, cast42_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep72_var = builder.CreateInBoundsGEP(globals[5], gep72_array);
	llvm::LoadInst* load73_var = builder.CreateLoad(gep72_var, false);
	load73_var->setAlignment(8);
	Value* binop74_var = BinaryOperator::Create(Instruction::Add, load73_var, binop65_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep75_array { binop74_var, };
	Value* gep75_var = builder.CreateInBoundsGEP(cast45_var, gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(1);
	Value* cast77_var = builder.CreateCast(Instruction::ZExt, load76_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep79_array { gep4_val4_int, gep4_val4_int, };
	Value* gep79_var = builder.CreateInBoundsGEP(globals[7], gep79_array);
	CallInst* call78_var = builder.CreateCall(globals[6], gep79_var);
	call78_var->setTailCall();
	call78_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block13);
	PHINode* phi82_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep83_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, gep62_val62_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(arg3, gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(4);
	Value* cmp85_var = builder.CreateICmp(CmpInst::ICMP_EQ, load84_var, gep4_val5_int);
	builder.CreateCondBr(cmp85_var, block23, block14);
	
	builder.SetInsertPoint(block14);
	Value* cast86_var = builder.CreateCast(Instruction::ZExt, load84_var, types[0]);
	ArrayRef<Value*> gep87_array { gep4_val4_int, cast86_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep87_var = builder.CreateInBoundsGEP(globals[5], gep87_array);
	llvm::LoadInst* load88_var = builder.CreateLoad(gep87_var, false);
	load88_var->setAlignment(16);
	Value* cast89_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast86_var, switch19_val19_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(16);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, cmp48_val48_int);
	builder.CreateCondBr(cmp92_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep93_array { load88_var, };
	Value* gep93_var = builder.CreateInBoundsGEP(cast89_var, gep93_array);
	Value* cast94_var = builder.CreateCast(Instruction::BitCast, gep93_var, types[27]);
	llvm::LoadInst* load95_var = builder.CreateLoad(cast94_var, false);
	load95_var->setAlignment(8);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep96_array { gep4_val4_int, cast86_var, gep4_val5_int, gep4_val5_int, switch19_val19_int, };
	Value* gep96_var = builder.CreateInBoundsGEP(globals[5], gep96_array);
	llvm::LoadInst* load97_var = builder.CreateLoad(gep96_var, false);
	load97_var->setAlignment(8);
	Value* binop98_var = BinaryOperator::Create(Instruction::Add, load97_var, load88_var, "", builder.GetInsertBlock());
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, cmp56_val56_int);
	builder.CreateCondBr(cmp99_var, block17, block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep100_array { binop98_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast89_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[28]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(4);
	Value* cast103_var = builder.CreateCast(Instruction::ZExt, load102_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast86_var, gep4_val5_int, gep4_val5_int, gep62_val62_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* binop106_var = BinaryOperator::Create(Instruction::Add, load105_var, binop98_var, "", builder.GetInsertBlock());
	SwitchInst* switch107_var = builder.CreateSwitch(load91_var, block21, 2);
	switch107_var->addCase(cast<ConstantInt>(switch66_val66_int), block19);
	switch107_var->addCase(cast<ConstantInt>(switch66_val67_int), block20);
	
	builder.SetInsertPoint(block19);
	ArrayRef<Value*> gep107_array { binop106_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast89_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[30]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(2);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast86_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(8);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop106_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast89_var, gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(1);
	Value* cast116_var = builder.CreateCast(Instruction::ZExt, load115_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block21);
	CallInst* call117_var = builder.CreateCall(globals[6], gep79_var);
	call117_var->setTailCall();
	call117_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block22);
	PHINode* phi118_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep119_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, gep10_val10_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(arg3, gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(4);
	Value* cast121_var = builder.CreateCast(Instruction::SExt, load120_var, types[0]);
	Value* binop122_var = BinaryOperator::Create(Instruction::Mul, cast121_var, phi118_var, "", builder.GetInsertBlock());
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, binop122_var, phi82_var, "", builder.GetInsertBlock());
	builder.CreateBr(block23);
	
	builder.SetInsertPoint(block23);
	PHINode* phi124_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep125_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, switch19_val19_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(arg3, gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(4);
	Value* cmp127_var = builder.CreateICmp(CmpInst::ICMP_EQ, load126_var, gep4_val5_int);
	builder.CreateCondBr(cmp127_var, block33, block24);
	
	builder.SetInsertPoint(block24);
	Value* cast128_var = builder.CreateCast(Instruction::ZExt, load126_var, types[0]);
	ArrayRef<Value*> gep129_array { gep4_val4_int, cast128_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(globals[5], gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(16);
	Value* cast131_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep132_array { gep4_val4_int, cast128_var, switch19_val19_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(globals[5], gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(16);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, cmp48_val48_int);
	builder.CreateCondBr(cmp134_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep135_array { load130_var, };
	Value* gep135_var = builder.CreateInBoundsGEP(cast131_var, gep135_array);
	Value* cast136_var = builder.CreateCast(Instruction::BitCast, gep135_var, types[27]);
	llvm::LoadInst* load137_var = builder.CreateLoad(cast136_var, false);
	load137_var->setAlignment(8);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep138_array { gep4_val4_int, cast128_var, gep4_val5_int, gep4_val5_int, switch19_val19_int, };
	Value* gep138_var = builder.CreateInBoundsGEP(globals[5], gep138_array);
	llvm::LoadInst* load139_var = builder.CreateLoad(gep138_var, false);
	load139_var->setAlignment(8);
	Value* binop140_var = BinaryOperator::Create(Instruction::Add, load139_var, load130_var, "", builder.GetInsertBlock());
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, cmp56_val56_int);
	builder.CreateCondBr(cmp141_var, block27, block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep142_array { binop140_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast131_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[28]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(4);
	Value* cast145_var = builder.CreateCast(Instruction::ZExt, load144_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast128_var, gep4_val5_int, gep4_val5_int, gep62_val62_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* binop148_var = BinaryOperator::Create(Instruction::Add, load147_var, binop140_var, "", builder.GetInsertBlock());
	SwitchInst* switch149_var = builder.CreateSwitch(load133_var, block31, 2);
	switch149_var->addCase(cast<ConstantInt>(switch66_val66_int), block29);
	switch149_var->addCase(cast<ConstantInt>(switch66_val67_int), block30);
	
	builder.SetInsertPoint(block29);
	ArrayRef<Value*> gep149_array { binop148_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast131_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[30]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(2);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast128_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(8);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop148_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast131_var, gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(1);
	Value* cast158_var = builder.CreateCast(Instruction::ZExt, load157_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block31);
	CallInst* call159_var = builder.CreateCall(globals[6], gep79_var);
	call159_var->setTailCall();
	call159_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block32);
	PHINode* phi160_var = builder.CreatePHI(types[0], 4);
	Value* binop161_var = BinaryOperator::Create(Instruction::Add, phi160_var, phi124_var, "", builder.GetInsertBlock());
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block33);
	PHINode* phi162_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep163_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, gep62_val62_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(arg3, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	CallInst* call166_var = builder.CreateCall3(globals[14], phi162_var, cast165_var, cast15_var);
	call166_var->setTailCall();
	builder.CreateBr(block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep168_array { gep4_val4_int, gep4_val4_int, };
	Value* gep168_var = builder.CreateInBoundsGEP(globals[15], gep168_array);
	CallInst* call168_var = builder.CreateCall(globals[6], gep168_var);
	call168_var->setTailCall();
	call168_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block35);
	Constant* varval171_int = ConstantInt::get(types[37], 0u);
	phi14_var->addIncoming(varval171_int, block0);
	phi14_var->addIncoming(cmp13_var, block1);
	
	phi82_var->addIncoming(gep4_val4_int, block4);
	phi82_var->addIncoming(load52_var, block6);
	phi82_var->addIncoming(cast61_var, block8);
	phi82_var->addIncoming(cast71_var, block10);
	phi82_var->addIncoming(cast77_var, block11);
	
	phi118_var->addIncoming(load95_var, block15);
	phi118_var->addIncoming(cast103_var, block17);
	phi118_var->addIncoming(cast110_var, block19);
	phi118_var->addIncoming(cast116_var, block20);
	
	phi124_var->addIncoming(binop123_var, block22);
	phi124_var->addIncoming(phi82_var, block13);
	
	phi160_var->addIncoming(load137_var, block25);
	phi160_var->addIncoming(cast145_var, block27);
	phi160_var->addIncoming(cast152_var, block29);
	phi160_var->addIncoming(cast158_var, block30);
	
	phi162_var->addIncoming(binop161_var, block32);
	phi162_var->addIncoming(phi124_var, block23);
	
	return;
}

void x86::x86_setae(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* binop8_val8_int = ConstantInt::get(types[11], 1u);
	Value* binop8_var = BinaryOperator::Create(Instruction::Xor, load7_var, binop8_val8_int, "", builder.GetInsertBlock());
	Value* cast10_var = builder.CreateCast(Instruction::ZExt, binop8_var, types[0]);
	Constant* gep11_val11_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep4_val5_int, };
	Value* gep11_var = builder.CreateInBoundsGEP(arg3, gep11_array);
	llvm::LoadInst* load13_var = builder.CreateLoad(gep11_var, false);
	load13_var->setAlignment(4);
	SwitchInst* switch14_var = builder.CreateSwitch(load13_var, block32, 2);
	Constant* switch14_val14_int = ConstantInt::get(types[2], 1u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val14_int), block1);
	Constant* switch14_val15_int = ConstantInt::get(types[2], 3u);
	switch14_var->addCase(cast<ConstantInt>(switch14_val15_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch14_val14_int, gep4_val5_int, gep4_val5_int, };
	Value* gep16_var = builder.CreateGEP(arg3, gep16_array);
	llvm::LoadInst* load17_var = builder.CreateLoad(gep16_var, false);
	load17_var->setAlignment(4);
	Value* cast18_var = builder.CreateCast(Instruction::ZExt, load17_var, types[0]);
	ArrayRef<Value*> gep19_array { gep4_val4_int, cast18_var, switch14_val14_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(globals[5], gep19_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep19_var, false);
	load21_var->setAlignment(16);
	Constant* binop22_val22_int = ConstantInt::get(types[0], 3u);
	Value* binop22_var = BinaryOperator::Create(Instruction::Shl, load21_var, binop22_val22_int, "", builder.GetInsertBlock());
	Constant* binop24_val24_int = ConstantInt::get(types[0], 64u);
	Value* binop24_var = BinaryOperator::Create(Instruction::Sub, binop24_val24_int, binop22_var, "", builder.GetInsertBlock());
	Constant* binop26_val26_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop26_var = BinaryOperator::Create(Instruction::LShr, binop26_val26_int, binop24_var, "", builder.GetInsertBlock());
	Value* binop28_var = BinaryOperator::Create(Instruction::And, binop26_var, cast10_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast18_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(16);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep32_array { load30_var, };
	Value* gep32_var = builder.CreateInBoundsGEP(cast31_var, gep32_array);
	Value* cast33_var = builder.CreateCast(Instruction::BitCast, gep32_var, types[27]);
	llvm::StoreInst* store34_var = builder.CreateStore(binop28_var, cast33_var, false);
	store34_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep35_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch14_val14_int, gep4_val5_int, gep4_val5_int, };
	Value* gep35_var = builder.CreateInBoundsGEP(arg3, gep35_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep35_var, false);
	load36_var->setAlignment(4);
	Value* cmp37_var = builder.CreateICmp(CmpInst::ICMP_EQ, load36_var, gep4_val5_int);
	builder.CreateCondBr(cmp37_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast38_var = builder.CreateCast(Instruction::ZExt, load36_var, types[0]);
	ArrayRef<Value*> gep39_array { gep4_val4_int, cast38_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep39_var = builder.CreateInBoundsGEP(globals[5], gep39_array);
	llvm::LoadInst* load40_var = builder.CreateLoad(gep39_var, false);
	load40_var->setAlignment(16);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast38_var, switch14_val14_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Constant* cmp44_val44_int = ConstantInt::get(types[0], 8u);
	Value* cmp44_var = builder.CreateICmp(CmpInst::ICMP_EQ, load43_var, cmp44_val44_int);
	builder.CreateCondBr(cmp44_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep46_array { load40_var, };
	Value* gep46_var = builder.CreateInBoundsGEP(cast41_var, gep46_array);
	Value* cast47_var = builder.CreateCast(Instruction::BitCast, gep46_var, types[27]);
	llvm::LoadInst* load48_var = builder.CreateLoad(cast47_var, false);
	load48_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep49_array { gep4_val4_int, cast38_var, gep4_val5_int, gep4_val5_int, switch14_val14_int, };
	Value* gep49_var = builder.CreateInBoundsGEP(globals[5], gep49_array);
	llvm::LoadInst* load50_var = builder.CreateLoad(gep49_var, false);
	load50_var->setAlignment(8);
	Value* binop51_var = BinaryOperator::Create(Instruction::Add, load50_var, load40_var, "", builder.GetInsertBlock());
	Constant* cmp52_val52_int = ConstantInt::get(types[0], 4u);
	Value* cmp52_var = builder.CreateICmp(CmpInst::ICMP_EQ, load43_var, cmp52_val52_int);
	builder.CreateCondBr(cmp52_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep54_array { binop51_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast41_var, gep54_array);
	Value* cast55_var = builder.CreateCast(Instruction::BitCast, gep54_var, types[28]);
	llvm::LoadInst* load56_var = builder.CreateLoad(cast55_var, false);
	load56_var->setAlignment(4);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep58_val58_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast38_var, gep4_val5_int, gep4_val5_int, gep58_val58_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load60_var = builder.CreateLoad(gep58_var, false);
	load60_var->setAlignment(16);
	Value* binop61_var = BinaryOperator::Create(Instruction::Add, load60_var, binop51_var, "", builder.GetInsertBlock());
	SwitchInst* switch62_var = builder.CreateSwitch(load43_var, block10, 2);
	Constant* switch62_val62_int = ConstantInt::get(types[0], 2u);
	switch62_var->addCase(cast<ConstantInt>(switch62_val62_int), block8);
	Constant* switch62_val63_int = ConstantInt::get(types[0], 1u);
	switch62_var->addCase(cast<ConstantInt>(switch62_val63_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep64_array { binop61_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast41_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[30]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(2);
	Value* cast67_var = builder.CreateCast(Instruction::ZExt, load66_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast38_var, gep4_val5_int, gep4_val5_int, switch14_val15_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(8);
	Value* binop70_var = BinaryOperator::Create(Instruction::Add, load69_var, binop61_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep71_array { binop70_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast41_var, gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(1);
	Value* cast73_var = builder.CreateCast(Instruction::ZExt, load72_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep75_array { gep4_val4_int, gep4_val4_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[7], gep75_array);
	CallInst* call74_var = builder.CreateCall(globals[6], gep75_var);
	call74_var->setTailCall();
	call74_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi78_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep79_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch14_val14_int, gep4_val5_int, gep58_val58_int, };
	Value* gep79_var = builder.CreateInBoundsGEP(arg3, gep79_array);
	llvm::LoadInst* load80_var = builder.CreateLoad(gep79_var, false);
	load80_var->setAlignment(4);
	Value* cmp81_var = builder.CreateICmp(CmpInst::ICMP_EQ, load80_var, gep4_val5_int);
	builder.CreateCondBr(cmp81_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast82_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	ArrayRef<Value*> gep83_array { gep4_val4_int, cast82_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[5], gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(16);
	Value* cast85_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep86_array { gep4_val4_int, cast82_var, switch14_val14_int, };
	Value* gep86_var = builder.CreateInBoundsGEP(globals[5], gep86_array);
	llvm::LoadInst* load87_var = builder.CreateLoad(gep86_var, false);
	load87_var->setAlignment(16);
	Value* cmp88_var = builder.CreateICmp(CmpInst::ICMP_EQ, load87_var, cmp44_val44_int);
	builder.CreateCondBr(cmp88_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep89_array { load84_var, };
	Value* gep89_var = builder.CreateInBoundsGEP(cast85_var, gep89_array);
	Value* cast90_var = builder.CreateCast(Instruction::BitCast, gep89_var, types[27]);
	llvm::LoadInst* load91_var = builder.CreateLoad(cast90_var, false);
	load91_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep92_array { gep4_val4_int, cast82_var, gep4_val5_int, gep4_val5_int, switch14_val14_int, };
	Value* gep92_var = builder.CreateInBoundsGEP(globals[5], gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(8);
	Value* binop94_var = BinaryOperator::Create(Instruction::Add, load93_var, load84_var, "", builder.GetInsertBlock());
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load87_var, cmp52_val52_int);
	builder.CreateCondBr(cmp95_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep96_array { binop94_var, };
	Value* gep96_var = builder.CreateInBoundsGEP(cast85_var, gep96_array);
	Value* cast97_var = builder.CreateCast(Instruction::BitCast, gep96_var, types[28]);
	llvm::LoadInst* load98_var = builder.CreateLoad(cast97_var, false);
	load98_var->setAlignment(4);
	Value* cast99_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast82_var, gep4_val5_int, gep4_val5_int, gep58_val58_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* binop102_var = BinaryOperator::Create(Instruction::Add, load101_var, binop94_var, "", builder.GetInsertBlock());
	SwitchInst* switch103_var = builder.CreateSwitch(load87_var, block19, 2);
	switch103_var->addCase(cast<ConstantInt>(switch62_val62_int), block17);
	switch103_var->addCase(cast<ConstantInt>(switch62_val63_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep103_array { binop102_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast85_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[30]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(2);
	Value* cast106_var = builder.CreateCast(Instruction::ZExt, load105_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep107_array { gep4_val4_int, cast82_var, gep4_val5_int, gep4_val5_int, switch14_val15_int, };
	Value* gep107_var = builder.CreateInBoundsGEP(globals[5], gep107_array);
	llvm::LoadInst* load108_var = builder.CreateLoad(gep107_var, false);
	load108_var->setAlignment(8);
	Value* binop109_var = BinaryOperator::Create(Instruction::Add, load108_var, binop102_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep110_array { binop109_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast85_var, gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(1);
	Value* cast112_var = builder.CreateCast(Instruction::ZExt, load111_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call113_var = builder.CreateCall(globals[6], gep75_var);
	call113_var->setTailCall();
	call113_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi114_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep115_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch14_val14_int, gep4_val5_int, switch14_val15_int, };
	Value* gep115_var = builder.CreateInBoundsGEP(arg3, gep115_array);
	llvm::LoadInst* load116_var = builder.CreateLoad(gep115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::SExt, load116_var, types[0]);
	Value* binop118_var = BinaryOperator::Create(Instruction::Mul, cast117_var, phi114_var, "", builder.GetInsertBlock());
	Value* binop119_var = BinaryOperator::Create(Instruction::Add, binop118_var, phi78_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi120_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep121_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch14_val14_int, gep4_val5_int, switch14_val14_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(arg3, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(4);
	Value* cmp123_var = builder.CreateICmp(CmpInst::ICMP_EQ, load122_var, gep4_val5_int);
	builder.CreateCondBr(cmp123_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast124_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(16);
	Value* cast127_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast124_var, switch14_val14_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(16);
	Value* cmp130_var = builder.CreateICmp(CmpInst::ICMP_EQ, load129_var, cmp44_val44_int);
	builder.CreateCondBr(cmp130_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep131_array { load126_var, };
	Value* gep131_var = builder.CreateInBoundsGEP(cast127_var, gep131_array);
	Value* cast132_var = builder.CreateCast(Instruction::BitCast, gep131_var, types[27]);
	llvm::LoadInst* load133_var = builder.CreateLoad(cast132_var, false);
	load133_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep134_array { gep4_val4_int, cast124_var, gep4_val5_int, gep4_val5_int, switch14_val14_int, };
	Value* gep134_var = builder.CreateInBoundsGEP(globals[5], gep134_array);
	llvm::LoadInst* load135_var = builder.CreateLoad(gep134_var, false);
	load135_var->setAlignment(8);
	Value* binop136_var = BinaryOperator::Create(Instruction::Add, load135_var, load126_var, "", builder.GetInsertBlock());
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load129_var, cmp52_val52_int);
	builder.CreateCondBr(cmp137_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep138_array { binop136_var, };
	Value* gep138_var = builder.CreateInBoundsGEP(cast127_var, gep138_array);
	Value* cast139_var = builder.CreateCast(Instruction::BitCast, gep138_var, types[28]);
	llvm::LoadInst* load140_var = builder.CreateLoad(cast139_var, false);
	load140_var->setAlignment(4);
	Value* cast141_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast124_var, gep4_val5_int, gep4_val5_int, gep58_val58_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* binop144_var = BinaryOperator::Create(Instruction::Add, load143_var, binop136_var, "", builder.GetInsertBlock());
	SwitchInst* switch145_var = builder.CreateSwitch(load129_var, block29, 2);
	switch145_var->addCase(cast<ConstantInt>(switch62_val62_int), block27);
	switch145_var->addCase(cast<ConstantInt>(switch62_val63_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep145_array { binop144_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast127_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[30]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(2);
	Value* cast148_var = builder.CreateCast(Instruction::ZExt, load147_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep149_array { gep4_val4_int, cast124_var, gep4_val5_int, gep4_val5_int, switch14_val15_int, };
	Value* gep149_var = builder.CreateInBoundsGEP(globals[5], gep149_array);
	llvm::LoadInst* load150_var = builder.CreateLoad(gep149_var, false);
	load150_var->setAlignment(8);
	Value* binop151_var = BinaryOperator::Create(Instruction::Add, load150_var, binop144_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep152_array { binop151_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast127_var, gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(1);
	Value* cast154_var = builder.CreateCast(Instruction::ZExt, load153_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call155_var = builder.CreateCall(globals[6], gep75_var);
	call155_var->setTailCall();
	call155_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi156_var = builder.CreatePHI(types[0], 4);
	Value* binop157_var = BinaryOperator::Create(Instruction::Add, phi156_var, phi120_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi158_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep159_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep58_val58_int, };
	Value* gep159_var = builder.CreateInBoundsGEP(arg3, gep159_array);
	llvm::LoadInst* load160_var = builder.CreateLoad(gep159_var, false);
	load160_var->setAlignment(1);
	Value* cast161_var = builder.CreateCast(Instruction::ZExt, load160_var, types[0]);
	CallInst* call162_var = builder.CreateCall3(globals[14], phi158_var, cast161_var, cast10_var);
	call162_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep164_array { gep4_val4_int, gep4_val4_int, };
	Value* gep164_var = builder.CreateInBoundsGEP(globals[15], gep164_array);
	CallInst* call164_var = builder.CreateCall(globals[6], gep164_var);
	call164_var->setTailCall();
	call164_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi78_var->addIncoming(gep4_val4_int, block2);
	phi78_var->addIncoming(load48_var, block4);
	phi78_var->addIncoming(cast57_var, block6);
	phi78_var->addIncoming(cast67_var, block8);
	phi78_var->addIncoming(cast73_var, block9);
	
	phi114_var->addIncoming(load91_var, block13);
	phi114_var->addIncoming(cast99_var, block15);
	phi114_var->addIncoming(cast106_var, block17);
	phi114_var->addIncoming(cast112_var, block18);
	
	phi120_var->addIncoming(binop119_var, block20);
	phi120_var->addIncoming(phi78_var, block11);
	
	phi156_var->addIncoming(load133_var, block23);
	phi156_var->addIncoming(cast141_var, block25);
	phi156_var->addIncoming(cast148_var, block27);
	phi156_var->addIncoming(cast154_var, block28);
	
	phi158_var->addIncoming(binop157_var, block30);
	phi158_var->addIncoming(phi120_var, block21);
	
	return;
}

void x86::x86_setb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Value* cast8_var = builder.CreateCast(Instruction::ZExt, load7_var, types[0]);
	Constant* gep9_val9_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep9_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep4_val5_int, };
	Value* gep9_var = builder.CreateInBoundsGEP(arg3, gep9_array);
	llvm::LoadInst* load11_var = builder.CreateLoad(gep9_var, false);
	load11_var->setAlignment(4);
	SwitchInst* switch12_var = builder.CreateSwitch(load11_var, block32, 2);
	Constant* switch12_val12_int = ConstantInt::get(types[2], 1u);
	switch12_var->addCase(cast<ConstantInt>(switch12_val12_int), block1);
	Constant* switch12_val13_int = ConstantInt::get(types[2], 3u);
	switch12_var->addCase(cast<ConstantInt>(switch12_val13_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep14_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch12_val12_int, gep4_val5_int, gep4_val5_int, };
	Value* gep14_var = builder.CreateGEP(arg3, gep14_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep14_var, false);
	load15_var->setAlignment(4);
	Value* cast16_var = builder.CreateCast(Instruction::ZExt, load15_var, types[0]);
	ArrayRef<Value*> gep17_array { gep4_val4_int, cast16_var, switch12_val12_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(globals[5], gep17_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep17_var, false);
	load19_var->setAlignment(16);
	Constant* binop20_val20_int = ConstantInt::get(types[0], 3u);
	Value* binop20_var = BinaryOperator::Create(Instruction::Shl, load19_var, binop20_val20_int, "", builder.GetInsertBlock());
	Constant* binop22_val22_int = ConstantInt::get(types[0], 64u);
	Value* binop22_var = BinaryOperator::Create(Instruction::Sub, binop22_val22_int, binop20_var, "", builder.GetInsertBlock());
	Constant* binop24_val24_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop24_var = BinaryOperator::Create(Instruction::LShr, binop24_val24_int, binop22_var, "", builder.GetInsertBlock());
	Value* binop26_var = BinaryOperator::Create(Instruction::And, binop24_var, cast8_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast16_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load28_var = builder.CreateLoad(gep27_var, false);
	load28_var->setAlignment(16);
	Value* cast29_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep30_array { load28_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast29_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::StoreInst* store32_var = builder.CreateStore(binop26_var, cast31_var, false);
	store32_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep33_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch12_val12_int, gep4_val5_int, gep4_val5_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(arg3, gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(4);
	Value* cmp35_var = builder.CreateICmp(CmpInst::ICMP_EQ, load34_var, gep4_val5_int);
	builder.CreateCondBr(cmp35_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast36_var = builder.CreateCast(Instruction::ZExt, load34_var, types[0]);
	ArrayRef<Value*> gep37_array { gep4_val4_int, cast36_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep37_var = builder.CreateInBoundsGEP(globals[5], gep37_array);
	llvm::LoadInst* load38_var = builder.CreateLoad(gep37_var, false);
	load38_var->setAlignment(16);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep40_array { gep4_val4_int, cast36_var, switch12_val12_int, };
	Value* gep40_var = builder.CreateInBoundsGEP(globals[5], gep40_array);
	llvm::LoadInst* load41_var = builder.CreateLoad(gep40_var, false);
	load41_var->setAlignment(16);
	Constant* cmp42_val42_int = ConstantInt::get(types[0], 8u);
	Value* cmp42_var = builder.CreateICmp(CmpInst::ICMP_EQ, load41_var, cmp42_val42_int);
	builder.CreateCondBr(cmp42_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep44_array { load38_var, };
	Value* gep44_var = builder.CreateInBoundsGEP(cast39_var, gep44_array);
	Value* cast45_var = builder.CreateCast(Instruction::BitCast, gep44_var, types[27]);
	llvm::LoadInst* load46_var = builder.CreateLoad(cast45_var, false);
	load46_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast36_var, gep4_val5_int, gep4_val5_int, switch12_val12_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, load38_var, "", builder.GetInsertBlock());
	Constant* cmp50_val50_int = ConstantInt::get(types[0], 4u);
	Value* cmp50_var = builder.CreateICmp(CmpInst::ICMP_EQ, load41_var, cmp50_val50_int);
	builder.CreateCondBr(cmp50_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep52_array { binop49_var, };
	Value* gep52_var = builder.CreateInBoundsGEP(cast39_var, gep52_array);
	Value* cast53_var = builder.CreateCast(Instruction::BitCast, gep52_var, types[28]);
	llvm::LoadInst* load54_var = builder.CreateLoad(cast53_var, false);
	load54_var->setAlignment(4);
	Value* cast55_var = builder.CreateCast(Instruction::ZExt, load54_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep56_val56_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep56_array { gep4_val4_int, cast36_var, gep4_val5_int, gep4_val5_int, gep56_val56_int, };
	Value* gep56_var = builder.CreateInBoundsGEP(globals[5], gep56_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep56_var, false);
	load58_var->setAlignment(16);
	Value* binop59_var = BinaryOperator::Create(Instruction::Add, load58_var, binop49_var, "", builder.GetInsertBlock());
	SwitchInst* switch60_var = builder.CreateSwitch(load41_var, block10, 2);
	Constant* switch60_val60_int = ConstantInt::get(types[0], 2u);
	switch60_var->addCase(cast<ConstantInt>(switch60_val60_int), block8);
	Constant* switch60_val61_int = ConstantInt::get(types[0], 1u);
	switch60_var->addCase(cast<ConstantInt>(switch60_val61_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep62_array { binop59_var, };
	Value* gep62_var = builder.CreateInBoundsGEP(cast39_var, gep62_array);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, gep62_var, types[30]);
	llvm::LoadInst* load64_var = builder.CreateLoad(cast63_var, false);
	load64_var->setAlignment(2);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load64_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast36_var, gep4_val5_int, gep4_val5_int, switch12_val13_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(8);
	Value* binop68_var = BinaryOperator::Create(Instruction::Add, load67_var, binop59_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep69_array { binop68_var, };
	Value* gep69_var = builder.CreateInBoundsGEP(cast39_var, gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(1);
	Value* cast71_var = builder.CreateCast(Instruction::ZExt, load70_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep73_array { gep4_val4_int, gep4_val4_int, };
	Value* gep73_var = builder.CreateInBoundsGEP(globals[7], gep73_array);
	CallInst* call72_var = builder.CreateCall(globals[6], gep73_var);
	call72_var->setTailCall();
	call72_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi76_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep77_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch12_val12_int, gep4_val5_int, gep56_val56_int, };
	Value* gep77_var = builder.CreateInBoundsGEP(arg3, gep77_array);
	llvm::LoadInst* load78_var = builder.CreateLoad(gep77_var, false);
	load78_var->setAlignment(4);
	Value* cmp79_var = builder.CreateICmp(CmpInst::ICMP_EQ, load78_var, gep4_val5_int);
	builder.CreateCondBr(cmp79_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast80_var = builder.CreateCast(Instruction::ZExt, load78_var, types[0]);
	ArrayRef<Value*> gep81_array { gep4_val4_int, cast80_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep81_var = builder.CreateInBoundsGEP(globals[5], gep81_array);
	llvm::LoadInst* load82_var = builder.CreateLoad(gep81_var, false);
	load82_var->setAlignment(16);
	Value* cast83_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep84_array { gep4_val4_int, cast80_var, switch12_val12_int, };
	Value* gep84_var = builder.CreateInBoundsGEP(globals[5], gep84_array);
	llvm::LoadInst* load85_var = builder.CreateLoad(gep84_var, false);
	load85_var->setAlignment(16);
	Value* cmp86_var = builder.CreateICmp(CmpInst::ICMP_EQ, load85_var, cmp42_val42_int);
	builder.CreateCondBr(cmp86_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep87_array { load82_var, };
	Value* gep87_var = builder.CreateInBoundsGEP(cast83_var, gep87_array);
	Value* cast88_var = builder.CreateCast(Instruction::BitCast, gep87_var, types[27]);
	llvm::LoadInst* load89_var = builder.CreateLoad(cast88_var, false);
	load89_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast80_var, gep4_val5_int, gep4_val5_int, switch12_val12_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(8);
	Value* binop92_var = BinaryOperator::Create(Instruction::Add, load91_var, load82_var, "", builder.GetInsertBlock());
	Value* cmp93_var = builder.CreateICmp(CmpInst::ICMP_EQ, load85_var, cmp50_val50_int);
	builder.CreateCondBr(cmp93_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep94_array { binop92_var, };
	Value* gep94_var = builder.CreateInBoundsGEP(cast83_var, gep94_array);
	Value* cast95_var = builder.CreateCast(Instruction::BitCast, gep94_var, types[28]);
	llvm::LoadInst* load96_var = builder.CreateLoad(cast95_var, false);
	load96_var->setAlignment(4);
	Value* cast97_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep98_array { gep4_val4_int, cast80_var, gep4_val5_int, gep4_val5_int, gep56_val56_int, };
	Value* gep98_var = builder.CreateInBoundsGEP(globals[5], gep98_array);
	llvm::LoadInst* load99_var = builder.CreateLoad(gep98_var, false);
	load99_var->setAlignment(16);
	Value* binop100_var = BinaryOperator::Create(Instruction::Add, load99_var, binop92_var, "", builder.GetInsertBlock());
	SwitchInst* switch101_var = builder.CreateSwitch(load85_var, block19, 2);
	switch101_var->addCase(cast<ConstantInt>(switch60_val60_int), block17);
	switch101_var->addCase(cast<ConstantInt>(switch60_val61_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep101_array { binop100_var, };
	Value* gep101_var = builder.CreateInBoundsGEP(cast83_var, gep101_array);
	Value* cast102_var = builder.CreateCast(Instruction::BitCast, gep101_var, types[30]);
	llvm::LoadInst* load103_var = builder.CreateLoad(cast102_var, false);
	load103_var->setAlignment(2);
	Value* cast104_var = builder.CreateCast(Instruction::ZExt, load103_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep105_array { gep4_val4_int, cast80_var, gep4_val5_int, gep4_val5_int, switch12_val13_int, };
	Value* gep105_var = builder.CreateInBoundsGEP(globals[5], gep105_array);
	llvm::LoadInst* load106_var = builder.CreateLoad(gep105_var, false);
	load106_var->setAlignment(8);
	Value* binop107_var = BinaryOperator::Create(Instruction::Add, load106_var, binop100_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep108_array { binop107_var, };
	Value* gep108_var = builder.CreateInBoundsGEP(cast83_var, gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(1);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call111_var = builder.CreateCall(globals[6], gep73_var);
	call111_var->setTailCall();
	call111_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi112_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep113_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch12_val12_int, gep4_val5_int, switch12_val13_int, };
	Value* gep113_var = builder.CreateInBoundsGEP(arg3, gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(4);
	Value* cast115_var = builder.CreateCast(Instruction::SExt, load114_var, types[0]);
	Value* binop116_var = BinaryOperator::Create(Instruction::Mul, cast115_var, phi112_var, "", builder.GetInsertBlock());
	Value* binop117_var = BinaryOperator::Create(Instruction::Add, binop116_var, phi76_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi118_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep119_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch12_val12_int, gep4_val5_int, switch12_val12_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(arg3, gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(4);
	Value* cmp121_var = builder.CreateICmp(CmpInst::ICMP_EQ, load120_var, gep4_val5_int);
	builder.CreateCondBr(cmp121_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast122_var = builder.CreateCast(Instruction::ZExt, load120_var, types[0]);
	ArrayRef<Value*> gep123_array { gep4_val4_int, cast122_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep123_var = builder.CreateInBoundsGEP(globals[5], gep123_array);
	llvm::LoadInst* load124_var = builder.CreateLoad(gep123_var, false);
	load124_var->setAlignment(16);
	Value* cast125_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast122_var, switch12_val12_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(16);
	Value* cmp128_var = builder.CreateICmp(CmpInst::ICMP_EQ, load127_var, cmp42_val42_int);
	builder.CreateCondBr(cmp128_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep129_array { load124_var, };
	Value* gep129_var = builder.CreateInBoundsGEP(cast125_var, gep129_array);
	Value* cast130_var = builder.CreateCast(Instruction::BitCast, gep129_var, types[27]);
	llvm::LoadInst* load131_var = builder.CreateLoad(cast130_var, false);
	load131_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep132_array { gep4_val4_int, cast122_var, gep4_val5_int, gep4_val5_int, switch12_val12_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(globals[5], gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(8);
	Value* binop134_var = BinaryOperator::Create(Instruction::Add, load133_var, load124_var, "", builder.GetInsertBlock());
	Value* cmp135_var = builder.CreateICmp(CmpInst::ICMP_EQ, load127_var, cmp50_val50_int);
	builder.CreateCondBr(cmp135_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep136_array { binop134_var, };
	Value* gep136_var = builder.CreateInBoundsGEP(cast125_var, gep136_array);
	Value* cast137_var = builder.CreateCast(Instruction::BitCast, gep136_var, types[28]);
	llvm::LoadInst* load138_var = builder.CreateLoad(cast137_var, false);
	load138_var->setAlignment(4);
	Value* cast139_var = builder.CreateCast(Instruction::ZExt, load138_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep140_array { gep4_val4_int, cast122_var, gep4_val5_int, gep4_val5_int, gep56_val56_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(globals[5], gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(16);
	Value* binop142_var = BinaryOperator::Create(Instruction::Add, load141_var, binop134_var, "", builder.GetInsertBlock());
	SwitchInst* switch143_var = builder.CreateSwitch(load127_var, block29, 2);
	switch143_var->addCase(cast<ConstantInt>(switch60_val60_int), block27);
	switch143_var->addCase(cast<ConstantInt>(switch60_val61_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep143_array { binop142_var, };
	Value* gep143_var = builder.CreateInBoundsGEP(cast125_var, gep143_array);
	Value* cast144_var = builder.CreateCast(Instruction::BitCast, gep143_var, types[30]);
	llvm::LoadInst* load145_var = builder.CreateLoad(cast144_var, false);
	load145_var->setAlignment(2);
	Value* cast146_var = builder.CreateCast(Instruction::ZExt, load145_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep147_array { gep4_val4_int, cast122_var, gep4_val5_int, gep4_val5_int, switch12_val13_int, };
	Value* gep147_var = builder.CreateInBoundsGEP(globals[5], gep147_array);
	llvm::LoadInst* load148_var = builder.CreateLoad(gep147_var, false);
	load148_var->setAlignment(8);
	Value* binop149_var = BinaryOperator::Create(Instruction::Add, load148_var, binop142_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep150_array { binop149_var, };
	Value* gep150_var = builder.CreateInBoundsGEP(cast125_var, gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(1);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call153_var = builder.CreateCall(globals[6], gep73_var);
	call153_var->setTailCall();
	call153_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi154_var = builder.CreatePHI(types[0], 4);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, phi154_var, phi118_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi156_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep157_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep56_val56_int, };
	Value* gep157_var = builder.CreateInBoundsGEP(arg3, gep157_array);
	llvm::LoadInst* load158_var = builder.CreateLoad(gep157_var, false);
	load158_var->setAlignment(1);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	CallInst* call160_var = builder.CreateCall3(globals[14], phi156_var, cast159_var, cast8_var);
	call160_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep162_array { gep4_val4_int, gep4_val4_int, };
	Value* gep162_var = builder.CreateInBoundsGEP(globals[15], gep162_array);
	CallInst* call162_var = builder.CreateCall(globals[6], gep162_var);
	call162_var->setTailCall();
	call162_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi76_var->addIncoming(gep4_val4_int, block2);
	phi76_var->addIncoming(load46_var, block4);
	phi76_var->addIncoming(cast55_var, block6);
	phi76_var->addIncoming(cast65_var, block8);
	phi76_var->addIncoming(cast71_var, block9);
	
	phi112_var->addIncoming(load89_var, block13);
	phi112_var->addIncoming(cast97_var, block15);
	phi112_var->addIncoming(cast104_var, block17);
	phi112_var->addIncoming(cast110_var, block18);
	
	phi118_var->addIncoming(binop117_var, block20);
	phi118_var->addIncoming(phi76_var, block11);
	
	phi154_var->addIncoming(load131_var, block23);
	phi154_var->addIncoming(cast139_var, block25);
	phi154_var->addIncoming(cast146_var, block27);
	phi154_var->addIncoming(cast152_var, block28);
	
	phi156_var->addIncoming(binop155_var, block30);
	phi156_var->addIncoming(phi118_var, block21);
	
	return;
}

void x86::x86_setbe(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block2);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg2, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(1);
	Value* cmp13_var = builder.CreateICmp(CmpInst::ICMP_EQ, load12_var, cmp8_val8_int);
	builder.CreateBr(block2);
	
	builder.SetInsertPoint(block2);
	PHINode* phi14_var = builder.CreatePHI(types[37], 2);
	Value* cast15_var = builder.CreateCast(Instruction::ZExt, phi14_var, types[0]);
	Constant* gep16_val16_int = ConstantInt::get(types[2], 15u);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, gep4_val5_int, };
	Value* gep16_var = builder.CreateInBoundsGEP(arg3, gep16_array);
	llvm::LoadInst* load18_var = builder.CreateLoad(gep16_var, false);
	load18_var->setAlignment(4);
	SwitchInst* switch19_var = builder.CreateSwitch(load18_var, block34, 2);
	Constant* switch19_val19_int = ConstantInt::get(types[2], 1u);
	switch19_var->addCase(cast<ConstantInt>(switch19_val19_int), block3);
	switch19_var->addCase(cast<ConstantInt>(gep10_val10_int), block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep20_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, gep4_val5_int, };
	Value* gep20_var = builder.CreateGEP(arg3, gep20_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep20_var, false);
	load21_var->setAlignment(4);
	Value* cast22_var = builder.CreateCast(Instruction::ZExt, load21_var, types[0]);
	ArrayRef<Value*> gep23_array { gep4_val4_int, cast22_var, switch19_val19_int, };
	Value* gep23_var = builder.CreateInBoundsGEP(globals[5], gep23_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep23_var, false);
	load25_var->setAlignment(16);
	Constant* binop26_val26_int = ConstantInt::get(types[0], 3u);
	Value* binop26_var = BinaryOperator::Create(Instruction::Shl, load25_var, binop26_val26_int, "", builder.GetInsertBlock());
	Constant* binop28_val28_int = ConstantInt::get(types[0], 64u);
	Value* binop28_var = BinaryOperator::Create(Instruction::Sub, binop28_val28_int, binop26_var, "", builder.GetInsertBlock());
	Constant* binop30_val30_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop30_var = BinaryOperator::Create(Instruction::LShr, binop30_val30_int, binop28_var, "", builder.GetInsertBlock());
	Value* binop32_var = BinaryOperator::Create(Instruction::And, binop30_var, cast15_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep33_array { gep4_val4_int, cast22_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(globals[5], gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(16);
	Value* cast35_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep36_array { load34_var, };
	Value* gep36_var = builder.CreateInBoundsGEP(cast35_var, gep36_array);
	Value* cast37_var = builder.CreateCast(Instruction::BitCast, gep36_var, types[27]);
	llvm::StoreInst* store38_var = builder.CreateStore(binop32_var, cast37_var, false);
	store38_var->setAlignment(8);
	builder.CreateBr(block35);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep39_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, gep4_val5_int, };
	Value* gep39_var = builder.CreateInBoundsGEP(arg3, gep39_array);
	llvm::LoadInst* load40_var = builder.CreateLoad(gep39_var, false);
	load40_var->setAlignment(4);
	Value* cmp41_var = builder.CreateICmp(CmpInst::ICMP_EQ, load40_var, gep4_val5_int);
	builder.CreateCondBr(cmp41_var, block13, block5);
	
	builder.SetInsertPoint(block5);
	Value* cast42_var = builder.CreateCast(Instruction::ZExt, load40_var, types[0]);
	ArrayRef<Value*> gep43_array { gep4_val4_int, cast42_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Value* cast45_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep46_array { gep4_val4_int, cast42_var, switch19_val19_int, };
	Value* gep46_var = builder.CreateInBoundsGEP(globals[5], gep46_array);
	llvm::LoadInst* load47_var = builder.CreateLoad(gep46_var, false);
	load47_var->setAlignment(16);
	Constant* cmp48_val48_int = ConstantInt::get(types[0], 8u);
	Value* cmp48_var = builder.CreateICmp(CmpInst::ICMP_EQ, load47_var, cmp48_val48_int);
	builder.CreateCondBr(cmp48_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep50_array { load44_var, };
	Value* gep50_var = builder.CreateInBoundsGEP(cast45_var, gep50_array);
	Value* cast51_var = builder.CreateCast(Instruction::BitCast, gep50_var, types[27]);
	llvm::LoadInst* load52_var = builder.CreateLoad(cast51_var, false);
	load52_var->setAlignment(8);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep53_array { gep4_val4_int, cast42_var, gep4_val5_int, gep4_val5_int, switch19_val19_int, };
	Value* gep53_var = builder.CreateInBoundsGEP(globals[5], gep53_array);
	llvm::LoadInst* load54_var = builder.CreateLoad(gep53_var, false);
	load54_var->setAlignment(8);
	Value* binop55_var = BinaryOperator::Create(Instruction::Add, load54_var, load44_var, "", builder.GetInsertBlock());
	Constant* cmp56_val56_int = ConstantInt::get(types[0], 4u);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load47_var, cmp56_val56_int);
	builder.CreateCondBr(cmp56_var, block8, block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep58_array { binop55_var, };
	Value* gep58_var = builder.CreateInBoundsGEP(cast45_var, gep58_array);
	Value* cast59_var = builder.CreateCast(Instruction::BitCast, gep58_var, types[28]);
	llvm::LoadInst* load60_var = builder.CreateLoad(cast59_var, false);
	load60_var->setAlignment(4);
	Value* cast61_var = builder.CreateCast(Instruction::ZExt, load60_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block9);
	Constant* gep62_val62_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep62_array { gep4_val4_int, cast42_var, gep4_val5_int, gep4_val5_int, gep62_val62_int, };
	Value* gep62_var = builder.CreateInBoundsGEP(globals[5], gep62_array);
	llvm::LoadInst* load64_var = builder.CreateLoad(gep62_var, false);
	load64_var->setAlignment(16);
	Value* binop65_var = BinaryOperator::Create(Instruction::Add, load64_var, binop55_var, "", builder.GetInsertBlock());
	SwitchInst* switch66_var = builder.CreateSwitch(load47_var, block12, 2);
	Constant* switch66_val66_int = ConstantInt::get(types[0], 2u);
	switch66_var->addCase(cast<ConstantInt>(switch66_val66_int), block10);
	Constant* switch66_val67_int = ConstantInt::get(types[0], 1u);
	switch66_var->addCase(cast<ConstantInt>(switch66_val67_int), block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep68_array { binop65_var, };
	Value* gep68_var = builder.CreateInBoundsGEP(cast45_var, gep68_array);
	Value* cast69_var = builder.CreateCast(Instruction::BitCast, gep68_var, types[30]);
	llvm::LoadInst* load70_var = builder.CreateLoad(cast69_var, false);
	load70_var->setAlignment(2);
	Value* cast71_var = builder.CreateCast(Instruction::ZExt, load70_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep72_array { gep4_val4_int, cast42_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep72_var = builder.CreateInBoundsGEP(globals[5], gep72_array);
	llvm::LoadInst* load73_var = builder.CreateLoad(gep72_var, false);
	load73_var->setAlignment(8);
	Value* binop74_var = BinaryOperator::Create(Instruction::Add, load73_var, binop65_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep75_array { binop74_var, };
	Value* gep75_var = builder.CreateInBoundsGEP(cast45_var, gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(1);
	Value* cast77_var = builder.CreateCast(Instruction::ZExt, load76_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep79_array { gep4_val4_int, gep4_val4_int, };
	Value* gep79_var = builder.CreateInBoundsGEP(globals[7], gep79_array);
	CallInst* call78_var = builder.CreateCall(globals[6], gep79_var);
	call78_var->setTailCall();
	call78_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block13);
	PHINode* phi82_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep83_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, gep62_val62_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(arg3, gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(4);
	Value* cmp85_var = builder.CreateICmp(CmpInst::ICMP_EQ, load84_var, gep4_val5_int);
	builder.CreateCondBr(cmp85_var, block23, block14);
	
	builder.SetInsertPoint(block14);
	Value* cast86_var = builder.CreateCast(Instruction::ZExt, load84_var, types[0]);
	ArrayRef<Value*> gep87_array { gep4_val4_int, cast86_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep87_var = builder.CreateInBoundsGEP(globals[5], gep87_array);
	llvm::LoadInst* load88_var = builder.CreateLoad(gep87_var, false);
	load88_var->setAlignment(16);
	Value* cast89_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast86_var, switch19_val19_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(16);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, cmp48_val48_int);
	builder.CreateCondBr(cmp92_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep93_array { load88_var, };
	Value* gep93_var = builder.CreateInBoundsGEP(cast89_var, gep93_array);
	Value* cast94_var = builder.CreateCast(Instruction::BitCast, gep93_var, types[27]);
	llvm::LoadInst* load95_var = builder.CreateLoad(cast94_var, false);
	load95_var->setAlignment(8);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep96_array { gep4_val4_int, cast86_var, gep4_val5_int, gep4_val5_int, switch19_val19_int, };
	Value* gep96_var = builder.CreateInBoundsGEP(globals[5], gep96_array);
	llvm::LoadInst* load97_var = builder.CreateLoad(gep96_var, false);
	load97_var->setAlignment(8);
	Value* binop98_var = BinaryOperator::Create(Instruction::Add, load97_var, load88_var, "", builder.GetInsertBlock());
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, cmp56_val56_int);
	builder.CreateCondBr(cmp99_var, block17, block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep100_array { binop98_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast89_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[28]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(4);
	Value* cast103_var = builder.CreateCast(Instruction::ZExt, load102_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep104_array { gep4_val4_int, cast86_var, gep4_val5_int, gep4_val5_int, gep62_val62_int, };
	Value* gep104_var = builder.CreateInBoundsGEP(globals[5], gep104_array);
	llvm::LoadInst* load105_var = builder.CreateLoad(gep104_var, false);
	load105_var->setAlignment(16);
	Value* binop106_var = BinaryOperator::Create(Instruction::Add, load105_var, binop98_var, "", builder.GetInsertBlock());
	SwitchInst* switch107_var = builder.CreateSwitch(load91_var, block21, 2);
	switch107_var->addCase(cast<ConstantInt>(switch66_val66_int), block19);
	switch107_var->addCase(cast<ConstantInt>(switch66_val67_int), block20);
	
	builder.SetInsertPoint(block19);
	ArrayRef<Value*> gep107_array { binop106_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast89_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[30]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(2);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast86_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(8);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop106_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast89_var, gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(1);
	Value* cast116_var = builder.CreateCast(Instruction::ZExt, load115_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block21);
	CallInst* call117_var = builder.CreateCall(globals[6], gep79_var);
	call117_var->setTailCall();
	call117_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block22);
	PHINode* phi118_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep119_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, gep10_val10_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(arg3, gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(4);
	Value* cast121_var = builder.CreateCast(Instruction::SExt, load120_var, types[0]);
	Value* binop122_var = BinaryOperator::Create(Instruction::Mul, cast121_var, phi118_var, "", builder.GetInsertBlock());
	Value* binop123_var = BinaryOperator::Create(Instruction::Add, binop122_var, phi82_var, "", builder.GetInsertBlock());
	builder.CreateBr(block23);
	
	builder.SetInsertPoint(block23);
	PHINode* phi124_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep125_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, switch19_val19_int, gep4_val5_int, switch19_val19_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(arg3, gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(4);
	Value* cmp127_var = builder.CreateICmp(CmpInst::ICMP_EQ, load126_var, gep4_val5_int);
	builder.CreateCondBr(cmp127_var, block33, block24);
	
	builder.SetInsertPoint(block24);
	Value* cast128_var = builder.CreateCast(Instruction::ZExt, load126_var, types[0]);
	ArrayRef<Value*> gep129_array { gep4_val4_int, cast128_var, gep4_val5_int, gep4_val5_int, gep4_val5_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(globals[5], gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(16);
	Value* cast131_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep132_array { gep4_val4_int, cast128_var, switch19_val19_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(globals[5], gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(16);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, cmp48_val48_int);
	builder.CreateCondBr(cmp134_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep135_array { load130_var, };
	Value* gep135_var = builder.CreateInBoundsGEP(cast131_var, gep135_array);
	Value* cast136_var = builder.CreateCast(Instruction::BitCast, gep135_var, types[27]);
	llvm::LoadInst* load137_var = builder.CreateLoad(cast136_var, false);
	load137_var->setAlignment(8);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep138_array { gep4_val4_int, cast128_var, gep4_val5_int, gep4_val5_int, switch19_val19_int, };
	Value* gep138_var = builder.CreateInBoundsGEP(globals[5], gep138_array);
	llvm::LoadInst* load139_var = builder.CreateLoad(gep138_var, false);
	load139_var->setAlignment(8);
	Value* binop140_var = BinaryOperator::Create(Instruction::Add, load139_var, load130_var, "", builder.GetInsertBlock());
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, cmp56_val56_int);
	builder.CreateCondBr(cmp141_var, block27, block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep142_array { binop140_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast131_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[28]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(4);
	Value* cast145_var = builder.CreateCast(Instruction::ZExt, load144_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep146_array { gep4_val4_int, cast128_var, gep4_val5_int, gep4_val5_int, gep62_val62_int, };
	Value* gep146_var = builder.CreateInBoundsGEP(globals[5], gep146_array);
	llvm::LoadInst* load147_var = builder.CreateLoad(gep146_var, false);
	load147_var->setAlignment(16);
	Value* binop148_var = BinaryOperator::Create(Instruction::Add, load147_var, binop140_var, "", builder.GetInsertBlock());
	SwitchInst* switch149_var = builder.CreateSwitch(load133_var, block31, 2);
	switch149_var->addCase(cast<ConstantInt>(switch66_val66_int), block29);
	switch149_var->addCase(cast<ConstantInt>(switch66_val67_int), block30);
	
	builder.SetInsertPoint(block29);
	ArrayRef<Value*> gep149_array { binop148_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast131_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[30]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(2);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast128_var, gep4_val5_int, gep4_val5_int, gep10_val10_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(8);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop148_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast131_var, gep156_array);
	llvm::LoadInst* load157_var = builder.CreateLoad(gep156_var, false);
	load157_var->setAlignment(1);
	Value* cast158_var = builder.CreateCast(Instruction::ZExt, load157_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block31);
	CallInst* call159_var = builder.CreateCall(globals[6], gep79_var);
	call159_var->setTailCall();
	call159_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block32);
	PHINode* phi160_var = builder.CreatePHI(types[0], 4);
	Value* binop161_var = BinaryOperator::Create(Instruction::Add, phi160_var, phi124_var, "", builder.GetInsertBlock());
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block33);
	PHINode* phi162_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep163_array { gep4_val4_int, gep16_val16_int, gep4_val4_int, gep62_val62_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(arg3, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	CallInst* call166_var = builder.CreateCall3(globals[14], phi162_var, cast165_var, cast15_var);
	call166_var->setTailCall();
	builder.CreateBr(block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep168_array { gep4_val4_int, gep4_val4_int, };
	Value* gep168_var = builder.CreateInBoundsGEP(globals[15], gep168_array);
	CallInst* call168_var = builder.CreateCall(globals[6], gep168_var);
	call168_var->setTailCall();
	call168_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block35);
	Constant* varval171_int = ConstantInt::get(types[37], 1u);
	phi14_var->addIncoming(varval171_int, block0);
	phi14_var->addIncoming(cmp13_var, block1);
	
	phi82_var->addIncoming(gep4_val4_int, block4);
	phi82_var->addIncoming(load52_var, block6);
	phi82_var->addIncoming(cast61_var, block8);
	phi82_var->addIncoming(cast71_var, block10);
	phi82_var->addIncoming(cast77_var, block11);
	
	phi118_var->addIncoming(load95_var, block15);
	phi118_var->addIncoming(cast103_var, block17);
	phi118_var->addIncoming(cast110_var, block19);
	phi118_var->addIncoming(cast116_var, block20);
	
	phi124_var->addIncoming(binop123_var, block22);
	phi124_var->addIncoming(phi82_var, block13);
	
	phi160_var->addIncoming(load137_var, block25);
	phi160_var->addIncoming(cast145_var, block27);
	phi160_var->addIncoming(cast152_var, block29);
	phi160_var->addIncoming(cast158_var, block30);
	
	phi162_var->addIncoming(binop161_var, block32);
	phi162_var->addIncoming(phi124_var, block23);
	
	return;
}

void x86::x86_sete(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Value* cast8_var = builder.CreateCast(Instruction::ZExt, load7_var, types[0]);
	Constant* gep9_val9_int = ConstantInt::get(types[2], 15u);
	Constant* gep9_val10_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep9_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep9_val10_int, };
	Value* gep9_var = builder.CreateInBoundsGEP(arg3, gep9_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep9_var, false);
	load12_var->setAlignment(4);
	SwitchInst* switch13_var = builder.CreateSwitch(load12_var, block32, 2);
	Constant* switch13_val13_int = ConstantInt::get(types[2], 1u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val13_int), block1);
	switch13_var->addCase(cast<ConstantInt>(gep4_val5_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep14_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep9_val10_int, };
	Value* gep14_var = builder.CreateGEP(arg3, gep14_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep14_var, false);
	load15_var->setAlignment(4);
	Value* cast16_var = builder.CreateCast(Instruction::ZExt, load15_var, types[0]);
	ArrayRef<Value*> gep17_array { gep4_val4_int, cast16_var, switch13_val13_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(globals[5], gep17_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep17_var, false);
	load19_var->setAlignment(16);
	Constant* binop20_val20_int = ConstantInt::get(types[0], 3u);
	Value* binop20_var = BinaryOperator::Create(Instruction::Shl, load19_var, binop20_val20_int, "", builder.GetInsertBlock());
	Constant* binop22_val22_int = ConstantInt::get(types[0], 64u);
	Value* binop22_var = BinaryOperator::Create(Instruction::Sub, binop22_val22_int, binop20_var, "", builder.GetInsertBlock());
	Constant* binop24_val24_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop24_var = BinaryOperator::Create(Instruction::LShr, binop24_val24_int, binop22_var, "", builder.GetInsertBlock());
	Value* binop26_var = BinaryOperator::Create(Instruction::And, binop24_var, cast8_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast16_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load28_var = builder.CreateLoad(gep27_var, false);
	load28_var->setAlignment(16);
	Value* cast29_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep30_array { load28_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast29_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::StoreInst* store32_var = builder.CreateStore(binop26_var, cast31_var, false);
	store32_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep33_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep9_val10_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(arg3, gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(4);
	Value* cmp35_var = builder.CreateICmp(CmpInst::ICMP_EQ, load34_var, gep9_val10_int);
	builder.CreateCondBr(cmp35_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast36_var = builder.CreateCast(Instruction::ZExt, load34_var, types[0]);
	ArrayRef<Value*> gep37_array { gep4_val4_int, cast36_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep37_var = builder.CreateInBoundsGEP(globals[5], gep37_array);
	llvm::LoadInst* load38_var = builder.CreateLoad(gep37_var, false);
	load38_var->setAlignment(16);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep40_array { gep4_val4_int, cast36_var, switch13_val13_int, };
	Value* gep40_var = builder.CreateInBoundsGEP(globals[5], gep40_array);
	llvm::LoadInst* load41_var = builder.CreateLoad(gep40_var, false);
	load41_var->setAlignment(16);
	Constant* cmp42_val42_int = ConstantInt::get(types[0], 8u);
	Value* cmp42_var = builder.CreateICmp(CmpInst::ICMP_EQ, load41_var, cmp42_val42_int);
	builder.CreateCondBr(cmp42_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep44_array { load38_var, };
	Value* gep44_var = builder.CreateInBoundsGEP(cast39_var, gep44_array);
	Value* cast45_var = builder.CreateCast(Instruction::BitCast, gep44_var, types[27]);
	llvm::LoadInst* load46_var = builder.CreateLoad(cast45_var, false);
	load46_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast36_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, load38_var, "", builder.GetInsertBlock());
	Constant* cmp50_val50_int = ConstantInt::get(types[0], 4u);
	Value* cmp50_var = builder.CreateICmp(CmpInst::ICMP_EQ, load41_var, cmp50_val50_int);
	builder.CreateCondBr(cmp50_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep52_array { binop49_var, };
	Value* gep52_var = builder.CreateInBoundsGEP(cast39_var, gep52_array);
	Value* cast53_var = builder.CreateCast(Instruction::BitCast, gep52_var, types[28]);
	llvm::LoadInst* load54_var = builder.CreateLoad(cast53_var, false);
	load54_var->setAlignment(4);
	Value* cast55_var = builder.CreateCast(Instruction::ZExt, load54_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep56_val56_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep56_array { gep4_val4_int, cast36_var, gep9_val10_int, gep9_val10_int, gep56_val56_int, };
	Value* gep56_var = builder.CreateInBoundsGEP(globals[5], gep56_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep56_var, false);
	load58_var->setAlignment(16);
	Value* binop59_var = BinaryOperator::Create(Instruction::Add, load58_var, binop49_var, "", builder.GetInsertBlock());
	SwitchInst* switch60_var = builder.CreateSwitch(load41_var, block10, 2);
	Constant* switch60_val60_int = ConstantInt::get(types[0], 2u);
	switch60_var->addCase(cast<ConstantInt>(switch60_val60_int), block8);
	Constant* switch60_val61_int = ConstantInt::get(types[0], 1u);
	switch60_var->addCase(cast<ConstantInt>(switch60_val61_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep62_array { binop59_var, };
	Value* gep62_var = builder.CreateInBoundsGEP(cast39_var, gep62_array);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, gep62_var, types[30]);
	llvm::LoadInst* load64_var = builder.CreateLoad(cast63_var, false);
	load64_var->setAlignment(2);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load64_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast36_var, gep9_val10_int, gep9_val10_int, gep4_val5_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(8);
	Value* binop68_var = BinaryOperator::Create(Instruction::Add, load67_var, binop59_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep69_array { binop68_var, };
	Value* gep69_var = builder.CreateInBoundsGEP(cast39_var, gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(1);
	Value* cast71_var = builder.CreateCast(Instruction::ZExt, load70_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep73_array { gep4_val4_int, gep4_val4_int, };
	Value* gep73_var = builder.CreateInBoundsGEP(globals[7], gep73_array);
	CallInst* call72_var = builder.CreateCall(globals[6], gep73_var);
	call72_var->setTailCall();
	call72_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi76_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep77_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep56_val56_int, };
	Value* gep77_var = builder.CreateInBoundsGEP(arg3, gep77_array);
	llvm::LoadInst* load78_var = builder.CreateLoad(gep77_var, false);
	load78_var->setAlignment(4);
	Value* cmp79_var = builder.CreateICmp(CmpInst::ICMP_EQ, load78_var, gep9_val10_int);
	builder.CreateCondBr(cmp79_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast80_var = builder.CreateCast(Instruction::ZExt, load78_var, types[0]);
	ArrayRef<Value*> gep81_array { gep4_val4_int, cast80_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep81_var = builder.CreateInBoundsGEP(globals[5], gep81_array);
	llvm::LoadInst* load82_var = builder.CreateLoad(gep81_var, false);
	load82_var->setAlignment(16);
	Value* cast83_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep84_array { gep4_val4_int, cast80_var, switch13_val13_int, };
	Value* gep84_var = builder.CreateInBoundsGEP(globals[5], gep84_array);
	llvm::LoadInst* load85_var = builder.CreateLoad(gep84_var, false);
	load85_var->setAlignment(16);
	Value* cmp86_var = builder.CreateICmp(CmpInst::ICMP_EQ, load85_var, cmp42_val42_int);
	builder.CreateCondBr(cmp86_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep87_array { load82_var, };
	Value* gep87_var = builder.CreateInBoundsGEP(cast83_var, gep87_array);
	Value* cast88_var = builder.CreateCast(Instruction::BitCast, gep87_var, types[27]);
	llvm::LoadInst* load89_var = builder.CreateLoad(cast88_var, false);
	load89_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast80_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(8);
	Value* binop92_var = BinaryOperator::Create(Instruction::Add, load91_var, load82_var, "", builder.GetInsertBlock());
	Value* cmp93_var = builder.CreateICmp(CmpInst::ICMP_EQ, load85_var, cmp50_val50_int);
	builder.CreateCondBr(cmp93_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep94_array { binop92_var, };
	Value* gep94_var = builder.CreateInBoundsGEP(cast83_var, gep94_array);
	Value* cast95_var = builder.CreateCast(Instruction::BitCast, gep94_var, types[28]);
	llvm::LoadInst* load96_var = builder.CreateLoad(cast95_var, false);
	load96_var->setAlignment(4);
	Value* cast97_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep98_array { gep4_val4_int, cast80_var, gep9_val10_int, gep9_val10_int, gep56_val56_int, };
	Value* gep98_var = builder.CreateInBoundsGEP(globals[5], gep98_array);
	llvm::LoadInst* load99_var = builder.CreateLoad(gep98_var, false);
	load99_var->setAlignment(16);
	Value* binop100_var = BinaryOperator::Create(Instruction::Add, load99_var, binop92_var, "", builder.GetInsertBlock());
	SwitchInst* switch101_var = builder.CreateSwitch(load85_var, block19, 2);
	switch101_var->addCase(cast<ConstantInt>(switch60_val60_int), block17);
	switch101_var->addCase(cast<ConstantInt>(switch60_val61_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep101_array { binop100_var, };
	Value* gep101_var = builder.CreateInBoundsGEP(cast83_var, gep101_array);
	Value* cast102_var = builder.CreateCast(Instruction::BitCast, gep101_var, types[30]);
	llvm::LoadInst* load103_var = builder.CreateLoad(cast102_var, false);
	load103_var->setAlignment(2);
	Value* cast104_var = builder.CreateCast(Instruction::ZExt, load103_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep105_array { gep4_val4_int, cast80_var, gep9_val10_int, gep9_val10_int, gep4_val5_int, };
	Value* gep105_var = builder.CreateInBoundsGEP(globals[5], gep105_array);
	llvm::LoadInst* load106_var = builder.CreateLoad(gep105_var, false);
	load106_var->setAlignment(8);
	Value* binop107_var = BinaryOperator::Create(Instruction::Add, load106_var, binop100_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep108_array { binop107_var, };
	Value* gep108_var = builder.CreateInBoundsGEP(cast83_var, gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(1);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call111_var = builder.CreateCall(globals[6], gep73_var);
	call111_var->setTailCall();
	call111_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi112_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep113_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep4_val5_int, };
	Value* gep113_var = builder.CreateInBoundsGEP(arg3, gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(4);
	Value* cast115_var = builder.CreateCast(Instruction::SExt, load114_var, types[0]);
	Value* binop116_var = BinaryOperator::Create(Instruction::Mul, cast115_var, phi112_var, "", builder.GetInsertBlock());
	Value* binop117_var = BinaryOperator::Create(Instruction::Add, binop116_var, phi76_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi118_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep119_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, switch13_val13_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(arg3, gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(4);
	Value* cmp121_var = builder.CreateICmp(CmpInst::ICMP_EQ, load120_var, gep9_val10_int);
	builder.CreateCondBr(cmp121_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast122_var = builder.CreateCast(Instruction::ZExt, load120_var, types[0]);
	ArrayRef<Value*> gep123_array { gep4_val4_int, cast122_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep123_var = builder.CreateInBoundsGEP(globals[5], gep123_array);
	llvm::LoadInst* load124_var = builder.CreateLoad(gep123_var, false);
	load124_var->setAlignment(16);
	Value* cast125_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast122_var, switch13_val13_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(16);
	Value* cmp128_var = builder.CreateICmp(CmpInst::ICMP_EQ, load127_var, cmp42_val42_int);
	builder.CreateCondBr(cmp128_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep129_array { load124_var, };
	Value* gep129_var = builder.CreateInBoundsGEP(cast125_var, gep129_array);
	Value* cast130_var = builder.CreateCast(Instruction::BitCast, gep129_var, types[27]);
	llvm::LoadInst* load131_var = builder.CreateLoad(cast130_var, false);
	load131_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep132_array { gep4_val4_int, cast122_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(globals[5], gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(8);
	Value* binop134_var = BinaryOperator::Create(Instruction::Add, load133_var, load124_var, "", builder.GetInsertBlock());
	Value* cmp135_var = builder.CreateICmp(CmpInst::ICMP_EQ, load127_var, cmp50_val50_int);
	builder.CreateCondBr(cmp135_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep136_array { binop134_var, };
	Value* gep136_var = builder.CreateInBoundsGEP(cast125_var, gep136_array);
	Value* cast137_var = builder.CreateCast(Instruction::BitCast, gep136_var, types[28]);
	llvm::LoadInst* load138_var = builder.CreateLoad(cast137_var, false);
	load138_var->setAlignment(4);
	Value* cast139_var = builder.CreateCast(Instruction::ZExt, load138_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep140_array { gep4_val4_int, cast122_var, gep9_val10_int, gep9_val10_int, gep56_val56_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(globals[5], gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(16);
	Value* binop142_var = BinaryOperator::Create(Instruction::Add, load141_var, binop134_var, "", builder.GetInsertBlock());
	SwitchInst* switch143_var = builder.CreateSwitch(load127_var, block29, 2);
	switch143_var->addCase(cast<ConstantInt>(switch60_val60_int), block27);
	switch143_var->addCase(cast<ConstantInt>(switch60_val61_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep143_array { binop142_var, };
	Value* gep143_var = builder.CreateInBoundsGEP(cast125_var, gep143_array);
	Value* cast144_var = builder.CreateCast(Instruction::BitCast, gep143_var, types[30]);
	llvm::LoadInst* load145_var = builder.CreateLoad(cast144_var, false);
	load145_var->setAlignment(2);
	Value* cast146_var = builder.CreateCast(Instruction::ZExt, load145_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep147_array { gep4_val4_int, cast122_var, gep9_val10_int, gep9_val10_int, gep4_val5_int, };
	Value* gep147_var = builder.CreateInBoundsGEP(globals[5], gep147_array);
	llvm::LoadInst* load148_var = builder.CreateLoad(gep147_var, false);
	load148_var->setAlignment(8);
	Value* binop149_var = BinaryOperator::Create(Instruction::Add, load148_var, binop142_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep150_array { binop149_var, };
	Value* gep150_var = builder.CreateInBoundsGEP(cast125_var, gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(1);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call153_var = builder.CreateCall(globals[6], gep73_var);
	call153_var->setTailCall();
	call153_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi154_var = builder.CreatePHI(types[0], 4);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, phi154_var, phi118_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi156_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep157_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep56_val56_int, };
	Value* gep157_var = builder.CreateInBoundsGEP(arg3, gep157_array);
	llvm::LoadInst* load158_var = builder.CreateLoad(gep157_var, false);
	load158_var->setAlignment(1);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	CallInst* call160_var = builder.CreateCall3(globals[14], phi156_var, cast159_var, cast8_var);
	call160_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep162_array { gep4_val4_int, gep4_val4_int, };
	Value* gep162_var = builder.CreateInBoundsGEP(globals[15], gep162_array);
	CallInst* call162_var = builder.CreateCall(globals[6], gep162_var);
	call162_var->setTailCall();
	call162_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi76_var->addIncoming(gep4_val4_int, block2);
	phi76_var->addIncoming(load46_var, block4);
	phi76_var->addIncoming(cast55_var, block6);
	phi76_var->addIncoming(cast65_var, block8);
	phi76_var->addIncoming(cast71_var, block9);
	
	phi112_var->addIncoming(load89_var, block13);
	phi112_var->addIncoming(cast97_var, block15);
	phi112_var->addIncoming(cast104_var, block17);
	phi112_var->addIncoming(cast110_var, block18);
	
	phi118_var->addIncoming(binop117_var, block20);
	phi118_var->addIncoming(phi76_var, block11);
	
	phi154_var->addIncoming(load131_var, block23);
	phi154_var->addIncoming(cast139_var, block25);
	phi154_var->addIncoming(cast146_var, block27);
	phi154_var->addIncoming(cast152_var, block28);
	
	phi156_var->addIncoming(binop155_var, block30);
	phi156_var->addIncoming(phi118_var, block21);
	
	return;
}

void x86::x86_setg(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block2);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg2, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(1);
	Constant* gep13_val13_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep13_val13_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(arg2, gep13_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep13_var, false);
	load15_var->setAlignment(1);
	Value* cmp16_var = builder.CreateICmp(CmpInst::ICMP_EQ, load12_var, load15_var);
	builder.CreateBr(block2);
	
	builder.SetInsertPoint(block2);
	PHINode* phi17_var = builder.CreatePHI(types[37], 2);
	Value* cast18_var = builder.CreateCast(Instruction::ZExt, phi17_var, types[0]);
	Constant* gep19_val19_int = ConstantInt::get(types[2], 15u);
	Constant* gep19_val20_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, gep19_val20_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(arg3, gep19_array);
	llvm::LoadInst* load22_var = builder.CreateLoad(gep19_var, false);
	load22_var->setAlignment(4);
	SwitchInst* switch23_var = builder.CreateSwitch(load22_var, block34, 2);
	Constant* switch23_val23_int = ConstantInt::get(types[2], 1u);
	switch23_var->addCase(cast<ConstantInt>(switch23_val23_int), block3);
	switch23_var->addCase(cast<ConstantInt>(gep4_val5_int), block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep24_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, gep19_val20_int, };
	Value* gep24_var = builder.CreateGEP(arg3, gep24_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep24_var, false);
	load25_var->setAlignment(4);
	Value* cast26_var = builder.CreateCast(Instruction::ZExt, load25_var, types[0]);
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast26_var, switch23_val23_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load29_var = builder.CreateLoad(gep27_var, false);
	load29_var->setAlignment(16);
	Constant* binop30_val30_int = ConstantInt::get(types[0], 3u);
	Value* binop30_var = BinaryOperator::Create(Instruction::Shl, load29_var, binop30_val30_int, "", builder.GetInsertBlock());
	Constant* binop32_val32_int = ConstantInt::get(types[0], 64u);
	Value* binop32_var = BinaryOperator::Create(Instruction::Sub, binop32_val32_int, binop30_var, "", builder.GetInsertBlock());
	Constant* binop34_val34_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop34_var = BinaryOperator::Create(Instruction::LShr, binop34_val34_int, binop32_var, "", builder.GetInsertBlock());
	Value* binop36_var = BinaryOperator::Create(Instruction::And, binop34_var, cast18_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep37_array { gep4_val4_int, cast26_var, gep19_val20_int, gep19_val20_int, gep19_val20_int, };
	Value* gep37_var = builder.CreateInBoundsGEP(globals[5], gep37_array);
	llvm::LoadInst* load38_var = builder.CreateLoad(gep37_var, false);
	load38_var->setAlignment(16);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep40_array { load38_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast39_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[27]);
	llvm::StoreInst* store42_var = builder.CreateStore(binop36_var, cast41_var, false);
	store42_var->setAlignment(8);
	builder.CreateBr(block35);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep43_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, gep19_val20_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(arg3, gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(4);
	Value* cmp45_var = builder.CreateICmp(CmpInst::ICMP_EQ, load44_var, gep19_val20_int);
	builder.CreateCondBr(cmp45_var, block13, block5);
	
	builder.SetInsertPoint(block5);
	Value* cast46_var = builder.CreateCast(Instruction::ZExt, load44_var, types[0]);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast46_var, gep19_val20_int, gep19_val20_int, gep19_val20_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(16);
	Value* cast49_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep50_array { gep4_val4_int, cast46_var, switch23_val23_int, };
	Value* gep50_var = builder.CreateInBoundsGEP(globals[5], gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(16);
	Constant* cmp52_val52_int = ConstantInt::get(types[0], 8u);
	Value* cmp52_var = builder.CreateICmp(CmpInst::ICMP_EQ, load51_var, cmp52_val52_int);
	builder.CreateCondBr(cmp52_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep54_array { load48_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast49_var, gep54_array);
	Value* cast55_var = builder.CreateCast(Instruction::BitCast, gep54_var, types[27]);
	llvm::LoadInst* load56_var = builder.CreateLoad(cast55_var, false);
	load56_var->setAlignment(8);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep57_array { gep4_val4_int, cast46_var, gep19_val20_int, gep19_val20_int, switch23_val23_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(globals[5], gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(8);
	Value* binop59_var = BinaryOperator::Create(Instruction::Add, load58_var, load48_var, "", builder.GetInsertBlock());
	Constant* cmp60_val60_int = ConstantInt::get(types[0], 4u);
	Value* cmp60_var = builder.CreateICmp(CmpInst::ICMP_EQ, load51_var, cmp60_val60_int);
	builder.CreateCondBr(cmp60_var, block8, block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep62_array { binop59_var, };
	Value* gep62_var = builder.CreateInBoundsGEP(cast49_var, gep62_array);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, gep62_var, types[28]);
	llvm::LoadInst* load64_var = builder.CreateLoad(cast63_var, false);
	load64_var->setAlignment(4);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load64_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block9);
	Constant* gep66_val66_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast46_var, gep19_val20_int, gep19_val20_int, gep66_val66_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep66_var, false);
	load68_var->setAlignment(16);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, binop59_var, "", builder.GetInsertBlock());
	SwitchInst* switch70_var = builder.CreateSwitch(load51_var, block12, 2);
	Constant* switch70_val70_int = ConstantInt::get(types[0], 2u);
	switch70_var->addCase(cast<ConstantInt>(switch70_val70_int), block10);
	Constant* switch70_val71_int = ConstantInt::get(types[0], 1u);
	switch70_var->addCase(cast<ConstantInt>(switch70_val71_int), block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep72_array { binop69_var, };
	Value* gep72_var = builder.CreateInBoundsGEP(cast49_var, gep72_array);
	Value* cast73_var = builder.CreateCast(Instruction::BitCast, gep72_var, types[30]);
	llvm::LoadInst* load74_var = builder.CreateLoad(cast73_var, false);
	load74_var->setAlignment(2);
	Value* cast75_var = builder.CreateCast(Instruction::ZExt, load74_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep76_array { gep4_val4_int, cast46_var, gep19_val20_int, gep19_val20_int, gep4_val5_int, };
	Value* gep76_var = builder.CreateInBoundsGEP(globals[5], gep76_array);
	llvm::LoadInst* load77_var = builder.CreateLoad(gep76_var, false);
	load77_var->setAlignment(8);
	Value* binop78_var = BinaryOperator::Create(Instruction::Add, load77_var, binop69_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep79_array { binop78_var, };
	Value* gep79_var = builder.CreateInBoundsGEP(cast49_var, gep79_array);
	llvm::LoadInst* load80_var = builder.CreateLoad(gep79_var, false);
	load80_var->setAlignment(1);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep83_array { gep4_val4_int, gep4_val4_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[7], gep83_array);
	CallInst* call82_var = builder.CreateCall(globals[6], gep83_var);
	call82_var->setTailCall();
	call82_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block13);
	PHINode* phi86_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep87_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, gep66_val66_int, };
	Value* gep87_var = builder.CreateInBoundsGEP(arg3, gep87_array);
	llvm::LoadInst* load88_var = builder.CreateLoad(gep87_var, false);
	load88_var->setAlignment(4);
	Value* cmp89_var = builder.CreateICmp(CmpInst::ICMP_EQ, load88_var, gep19_val20_int);
	builder.CreateCondBr(cmp89_var, block23, block14);
	
	builder.SetInsertPoint(block14);
	Value* cast90_var = builder.CreateCast(Instruction::ZExt, load88_var, types[0]);
	ArrayRef<Value*> gep91_array { gep4_val4_int, cast90_var, gep19_val20_int, gep19_val20_int, gep19_val20_int, };
	Value* gep91_var = builder.CreateInBoundsGEP(globals[5], gep91_array);
	llvm::LoadInst* load92_var = builder.CreateLoad(gep91_var, false);
	load92_var->setAlignment(16);
	Value* cast93_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast90_var, switch23_val23_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cmp96_var = builder.CreateICmp(CmpInst::ICMP_EQ, load95_var, cmp52_val52_int);
	builder.CreateCondBr(cmp96_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep97_array { load92_var, };
	Value* gep97_var = builder.CreateInBoundsGEP(cast93_var, gep97_array);
	Value* cast98_var = builder.CreateCast(Instruction::BitCast, gep97_var, types[27]);
	llvm::LoadInst* load99_var = builder.CreateLoad(cast98_var, false);
	load99_var->setAlignment(8);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast90_var, gep19_val20_int, gep19_val20_int, switch23_val23_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(8);
	Value* binop102_var = BinaryOperator::Create(Instruction::Add, load101_var, load92_var, "", builder.GetInsertBlock());
	Value* cmp103_var = builder.CreateICmp(CmpInst::ICMP_EQ, load95_var, cmp60_val60_int);
	builder.CreateCondBr(cmp103_var, block17, block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep104_array { binop102_var, };
	Value* gep104_var = builder.CreateInBoundsGEP(cast93_var, gep104_array);
	Value* cast105_var = builder.CreateCast(Instruction::BitCast, gep104_var, types[28]);
	llvm::LoadInst* load106_var = builder.CreateLoad(cast105_var, false);
	load106_var->setAlignment(4);
	Value* cast107_var = builder.CreateCast(Instruction::ZExt, load106_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep108_array { gep4_val4_int, cast90_var, gep19_val20_int, gep19_val20_int, gep66_val66_int, };
	Value* gep108_var = builder.CreateInBoundsGEP(globals[5], gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(16);
	Value* binop110_var = BinaryOperator::Create(Instruction::Add, load109_var, binop102_var, "", builder.GetInsertBlock());
	SwitchInst* switch111_var = builder.CreateSwitch(load95_var, block21, 2);
	switch111_var->addCase(cast<ConstantInt>(switch70_val70_int), block19);
	switch111_var->addCase(cast<ConstantInt>(switch70_val71_int), block20);
	
	builder.SetInsertPoint(block19);
	ArrayRef<Value*> gep111_array { binop110_var, };
	Value* gep111_var = builder.CreateInBoundsGEP(cast93_var, gep111_array);
	Value* cast112_var = builder.CreateCast(Instruction::BitCast, gep111_var, types[30]);
	llvm::LoadInst* load113_var = builder.CreateLoad(cast112_var, false);
	load113_var->setAlignment(2);
	Value* cast114_var = builder.CreateCast(Instruction::ZExt, load113_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep115_array { gep4_val4_int, cast90_var, gep19_val20_int, gep19_val20_int, gep4_val5_int, };
	Value* gep115_var = builder.CreateInBoundsGEP(globals[5], gep115_array);
	llvm::LoadInst* load116_var = builder.CreateLoad(gep115_var, false);
	load116_var->setAlignment(8);
	Value* binop117_var = BinaryOperator::Create(Instruction::Add, load116_var, binop110_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep118_array { binop117_var, };
	Value* gep118_var = builder.CreateInBoundsGEP(cast93_var, gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(1);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block21);
	CallInst* call121_var = builder.CreateCall(globals[6], gep83_var);
	call121_var->setTailCall();
	call121_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block22);
	PHINode* phi122_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep123_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, gep4_val5_int, };
	Value* gep123_var = builder.CreateInBoundsGEP(arg3, gep123_array);
	llvm::LoadInst* load124_var = builder.CreateLoad(gep123_var, false);
	load124_var->setAlignment(4);
	Value* cast125_var = builder.CreateCast(Instruction::SExt, load124_var, types[0]);
	Value* binop126_var = BinaryOperator::Create(Instruction::Mul, cast125_var, phi122_var, "", builder.GetInsertBlock());
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, binop126_var, phi86_var, "", builder.GetInsertBlock());
	builder.CreateBr(block23);
	
	builder.SetInsertPoint(block23);
	PHINode* phi128_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep129_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, switch23_val23_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(arg3, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(4);
	Value* cmp131_var = builder.CreateICmp(CmpInst::ICMP_EQ, load130_var, gep19_val20_int);
	builder.CreateCondBr(cmp131_var, block33, block24);
	
	builder.SetInsertPoint(block24);
	Value* cast132_var = builder.CreateCast(Instruction::ZExt, load130_var, types[0]);
	ArrayRef<Value*> gep133_array { gep4_val4_int, cast132_var, gep19_val20_int, gep19_val20_int, gep19_val20_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(globals[5], gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(16);
	Value* cast135_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast132_var, switch23_val23_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cmp138_var = builder.CreateICmp(CmpInst::ICMP_EQ, load137_var, cmp52_val52_int);
	builder.CreateCondBr(cmp138_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep139_array { load134_var, };
	Value* gep139_var = builder.CreateInBoundsGEP(cast135_var, gep139_array);
	Value* cast140_var = builder.CreateCast(Instruction::BitCast, gep139_var, types[27]);
	llvm::LoadInst* load141_var = builder.CreateLoad(cast140_var, false);
	load141_var->setAlignment(8);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast132_var, gep19_val20_int, gep19_val20_int, switch23_val23_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(8);
	Value* binop144_var = BinaryOperator::Create(Instruction::Add, load143_var, load134_var, "", builder.GetInsertBlock());
	Value* cmp145_var = builder.CreateICmp(CmpInst::ICMP_EQ, load137_var, cmp60_val60_int);
	builder.CreateCondBr(cmp145_var, block27, block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep146_array { binop144_var, };
	Value* gep146_var = builder.CreateInBoundsGEP(cast135_var, gep146_array);
	Value* cast147_var = builder.CreateCast(Instruction::BitCast, gep146_var, types[28]);
	llvm::LoadInst* load148_var = builder.CreateLoad(cast147_var, false);
	load148_var->setAlignment(4);
	Value* cast149_var = builder.CreateCast(Instruction::ZExt, load148_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep150_array { gep4_val4_int, cast132_var, gep19_val20_int, gep19_val20_int, gep66_val66_int, };
	Value* gep150_var = builder.CreateInBoundsGEP(globals[5], gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(16);
	Value* binop152_var = BinaryOperator::Create(Instruction::Add, load151_var, binop144_var, "", builder.GetInsertBlock());
	SwitchInst* switch153_var = builder.CreateSwitch(load137_var, block31, 2);
	switch153_var->addCase(cast<ConstantInt>(switch70_val70_int), block29);
	switch153_var->addCase(cast<ConstantInt>(switch70_val71_int), block30);
	
	builder.SetInsertPoint(block29);
	ArrayRef<Value*> gep153_array { binop152_var, };
	Value* gep153_var = builder.CreateInBoundsGEP(cast135_var, gep153_array);
	Value* cast154_var = builder.CreateCast(Instruction::BitCast, gep153_var, types[30]);
	llvm::LoadInst* load155_var = builder.CreateLoad(cast154_var, false);
	load155_var->setAlignment(2);
	Value* cast156_var = builder.CreateCast(Instruction::ZExt, load155_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep157_array { gep4_val4_int, cast132_var, gep19_val20_int, gep19_val20_int, gep4_val5_int, };
	Value* gep157_var = builder.CreateInBoundsGEP(globals[5], gep157_array);
	llvm::LoadInst* load158_var = builder.CreateLoad(gep157_var, false);
	load158_var->setAlignment(8);
	Value* binop159_var = BinaryOperator::Create(Instruction::Add, load158_var, binop152_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep160_array { binop159_var, };
	Value* gep160_var = builder.CreateInBoundsGEP(cast135_var, gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(1);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block31);
	CallInst* call163_var = builder.CreateCall(globals[6], gep83_var);
	call163_var->setTailCall();
	call163_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block32);
	PHINode* phi164_var = builder.CreatePHI(types[0], 4);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, phi164_var, phi128_var, "", builder.GetInsertBlock());
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block33);
	PHINode* phi166_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep167_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, gep66_val66_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(arg3, gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(1);
	Value* cast169_var = builder.CreateCast(Instruction::ZExt, load168_var, types[0]);
	CallInst* call170_var = builder.CreateCall3(globals[14], phi166_var, cast169_var, cast18_var);
	call170_var->setTailCall();
	builder.CreateBr(block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep172_array { gep4_val4_int, gep4_val4_int, };
	Value* gep172_var = builder.CreateInBoundsGEP(globals[15], gep172_array);
	CallInst* call172_var = builder.CreateCall(globals[6], gep172_var);
	call172_var->setTailCall();
	call172_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block35);
	Constant* varval175_int = ConstantInt::get(types[37], 0u);
	phi17_var->addIncoming(varval175_int, block0);
	phi17_var->addIncoming(cmp16_var, block1);
	
	phi86_var->addIncoming(gep4_val4_int, block4);
	phi86_var->addIncoming(load56_var, block6);
	phi86_var->addIncoming(cast65_var, block8);
	phi86_var->addIncoming(cast75_var, block10);
	phi86_var->addIncoming(cast81_var, block11);
	
	phi122_var->addIncoming(load99_var, block15);
	phi122_var->addIncoming(cast107_var, block17);
	phi122_var->addIncoming(cast114_var, block19);
	phi122_var->addIncoming(cast120_var, block20);
	
	phi128_var->addIncoming(binop127_var, block22);
	phi128_var->addIncoming(phi86_var, block13);
	
	phi164_var->addIncoming(load141_var, block25);
	phi164_var->addIncoming(cast149_var, block27);
	phi164_var->addIncoming(cast156_var, block29);
	phi164_var->addIncoming(cast162_var, block30);
	
	phi166_var->addIncoming(binop165_var, block32);
	phi166_var->addIncoming(phi128_var, block23);
	
	return;
}

void x86::x86_setge(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* gep8_val8_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep8_array { gep4_val4_int, gep8_val8_int, };
	Value* gep8_var = builder.CreateInBoundsGEP(arg2, gep8_array);
	llvm::LoadInst* load10_var = builder.CreateLoad(gep8_var, false);
	load10_var->setAlignment(1);
	Value* cmp11_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, load10_var);
	Value* cast12_var = builder.CreateCast(Instruction::ZExt, cmp11_var, types[0]);
	Constant* gep13_val13_int = ConstantInt::get(types[2], 15u);
	Constant* gep13_val14_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, gep13_val14_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(arg3, gep13_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep13_var, false);
	load16_var->setAlignment(4);
	SwitchInst* switch17_var = builder.CreateSwitch(load16_var, block32, 2);
	Constant* switch17_val17_int = ConstantInt::get(types[2], 1u);
	switch17_var->addCase(cast<ConstantInt>(switch17_val17_int), block1);
	Constant* switch17_val18_int = ConstantInt::get(types[2], 3u);
	switch17_var->addCase(cast<ConstantInt>(switch17_val18_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, gep13_val14_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast21_var, switch17_val17_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	Constant* binop25_val25_int = ConstantInt::get(types[0], 3u);
	Value* binop25_var = BinaryOperator::Create(Instruction::Shl, load24_var, binop25_val25_int, "", builder.GetInsertBlock());
	Constant* binop27_val27_int = ConstantInt::get(types[0], 64u);
	Value* binop27_var = BinaryOperator::Create(Instruction::Sub, binop27_val27_int, binop25_var, "", builder.GetInsertBlock());
	Constant* binop29_val29_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop29_var = BinaryOperator::Create(Instruction::LShr, binop29_val29_int, binop27_var, "", builder.GetInsertBlock());
	Value* binop31_var = BinaryOperator::Create(Instruction::And, binop29_var, cast12_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep32_array { gep4_val4_int, cast21_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep32_var = builder.CreateInBoundsGEP(globals[5], gep32_array);
	llvm::LoadInst* load33_var = builder.CreateLoad(gep32_var, false);
	load33_var->setAlignment(16);
	Value* cast34_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep35_array { load33_var, };
	Value* gep35_var = builder.CreateInBoundsGEP(cast34_var, gep35_array);
	Value* cast36_var = builder.CreateCast(Instruction::BitCast, gep35_var, types[27]);
	llvm::StoreInst* store37_var = builder.CreateStore(binop31_var, cast36_var, false);
	store37_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep38_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, gep13_val14_int, };
	Value* gep38_var = builder.CreateInBoundsGEP(arg3, gep38_array);
	llvm::LoadInst* load39_var = builder.CreateLoad(gep38_var, false);
	load39_var->setAlignment(4);
	Value* cmp40_var = builder.CreateICmp(CmpInst::ICMP_EQ, load39_var, gep13_val14_int);
	builder.CreateCondBr(cmp40_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load39_var, types[0]);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast41_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* cast44_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep45_array { gep4_val4_int, cast41_var, switch17_val17_int, };
	Value* gep45_var = builder.CreateInBoundsGEP(globals[5], gep45_array);
	llvm::LoadInst* load46_var = builder.CreateLoad(gep45_var, false);
	load46_var->setAlignment(16);
	Constant* cmp47_val47_int = ConstantInt::get(types[0], 8u);
	Value* cmp47_var = builder.CreateICmp(CmpInst::ICMP_EQ, load46_var, cmp47_val47_int);
	builder.CreateCondBr(cmp47_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep49_array { load43_var, };
	Value* gep49_var = builder.CreateInBoundsGEP(cast44_var, gep49_array);
	Value* cast50_var = builder.CreateCast(Instruction::BitCast, gep49_var, types[27]);
	llvm::LoadInst* load51_var = builder.CreateLoad(cast50_var, false);
	load51_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep52_array { gep4_val4_int, cast41_var, gep13_val14_int, gep13_val14_int, switch17_val17_int, };
	Value* gep52_var = builder.CreateInBoundsGEP(globals[5], gep52_array);
	llvm::LoadInst* load53_var = builder.CreateLoad(gep52_var, false);
	load53_var->setAlignment(8);
	Value* binop54_var = BinaryOperator::Create(Instruction::Add, load53_var, load43_var, "", builder.GetInsertBlock());
	Constant* cmp55_val55_int = ConstantInt::get(types[0], 4u);
	Value* cmp55_var = builder.CreateICmp(CmpInst::ICMP_EQ, load46_var, cmp55_val55_int);
	builder.CreateCondBr(cmp55_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep57_array { binop54_var, };
	Value* gep57_var = builder.CreateInBoundsGEP(cast44_var, gep57_array);
	Value* cast58_var = builder.CreateCast(Instruction::BitCast, gep57_var, types[28]);
	llvm::LoadInst* load59_var = builder.CreateLoad(cast58_var, false);
	load59_var->setAlignment(4);
	Value* cast60_var = builder.CreateCast(Instruction::ZExt, load59_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep61_val61_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast41_var, gep13_val14_int, gep13_val14_int, gep61_val61_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load63_var = builder.CreateLoad(gep61_var, false);
	load63_var->setAlignment(16);
	Value* binop64_var = BinaryOperator::Create(Instruction::Add, load63_var, binop54_var, "", builder.GetInsertBlock());
	SwitchInst* switch65_var = builder.CreateSwitch(load46_var, block10, 2);
	Constant* switch65_val65_int = ConstantInt::get(types[0], 2u);
	switch65_var->addCase(cast<ConstantInt>(switch65_val65_int), block8);
	Constant* switch65_val66_int = ConstantInt::get(types[0], 1u);
	switch65_var->addCase(cast<ConstantInt>(switch65_val66_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep67_array { binop64_var, };
	Value* gep67_var = builder.CreateInBoundsGEP(cast44_var, gep67_array);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, gep67_var, types[30]);
	llvm::LoadInst* load69_var = builder.CreateLoad(cast68_var, false);
	load69_var->setAlignment(2);
	Value* cast70_var = builder.CreateCast(Instruction::ZExt, load69_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep71_array { gep4_val4_int, cast41_var, gep13_val14_int, gep13_val14_int, switch17_val18_int, };
	Value* gep71_var = builder.CreateInBoundsGEP(globals[5], gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(8);
	Value* binop73_var = BinaryOperator::Create(Instruction::Add, load72_var, binop64_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep74_array { binop73_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast44_var, gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(1);
	Value* cast76_var = builder.CreateCast(Instruction::ZExt, load75_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep78_array { gep4_val4_int, gep4_val4_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(globals[7], gep78_array);
	CallInst* call77_var = builder.CreateCall(globals[6], gep78_var);
	call77_var->setTailCall();
	call77_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi81_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep82_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, gep61_val61_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(arg3, gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(4);
	Value* cmp84_var = builder.CreateICmp(CmpInst::ICMP_EQ, load83_var, gep13_val14_int);
	builder.CreateCondBr(cmp84_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast85_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	ArrayRef<Value*> gep86_array { gep4_val4_int, cast85_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep86_var = builder.CreateInBoundsGEP(globals[5], gep86_array);
	llvm::LoadInst* load87_var = builder.CreateLoad(gep86_var, false);
	load87_var->setAlignment(16);
	Value* cast88_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast85_var, switch17_val17_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(16);
	Value* cmp91_var = builder.CreateICmp(CmpInst::ICMP_EQ, load90_var, cmp47_val47_int);
	builder.CreateCondBr(cmp91_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep92_array { load87_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast88_var, gep92_array);
	Value* cast93_var = builder.CreateCast(Instruction::BitCast, gep92_var, types[27]);
	llvm::LoadInst* load94_var = builder.CreateLoad(cast93_var, false);
	load94_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep95_array { gep4_val4_int, cast85_var, gep13_val14_int, gep13_val14_int, switch17_val17_int, };
	Value* gep95_var = builder.CreateInBoundsGEP(globals[5], gep95_array);
	llvm::LoadInst* load96_var = builder.CreateLoad(gep95_var, false);
	load96_var->setAlignment(8);
	Value* binop97_var = BinaryOperator::Create(Instruction::Add, load96_var, load87_var, "", builder.GetInsertBlock());
	Value* cmp98_var = builder.CreateICmp(CmpInst::ICMP_EQ, load90_var, cmp55_val55_int);
	builder.CreateCondBr(cmp98_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep99_array { binop97_var, };
	Value* gep99_var = builder.CreateInBoundsGEP(cast88_var, gep99_array);
	Value* cast100_var = builder.CreateCast(Instruction::BitCast, gep99_var, types[28]);
	llvm::LoadInst* load101_var = builder.CreateLoad(cast100_var, false);
	load101_var->setAlignment(4);
	Value* cast102_var = builder.CreateCast(Instruction::ZExt, load101_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast85_var, gep13_val14_int, gep13_val14_int, gep61_val61_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(16);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, binop97_var, "", builder.GetInsertBlock());
	SwitchInst* switch106_var = builder.CreateSwitch(load90_var, block19, 2);
	switch106_var->addCase(cast<ConstantInt>(switch65_val65_int), block17);
	switch106_var->addCase(cast<ConstantInt>(switch65_val66_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep106_array { binop105_var, };
	Value* gep106_var = builder.CreateInBoundsGEP(cast88_var, gep106_array);
	Value* cast107_var = builder.CreateCast(Instruction::BitCast, gep106_var, types[30]);
	llvm::LoadInst* load108_var = builder.CreateLoad(cast107_var, false);
	load108_var->setAlignment(2);
	Value* cast109_var = builder.CreateCast(Instruction::ZExt, load108_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep110_array { gep4_val4_int, cast85_var, gep13_val14_int, gep13_val14_int, switch17_val18_int, };
	Value* gep110_var = builder.CreateInBoundsGEP(globals[5], gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(8);
	Value* binop112_var = BinaryOperator::Create(Instruction::Add, load111_var, binop105_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep113_array { binop112_var, };
	Value* gep113_var = builder.CreateInBoundsGEP(cast88_var, gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(1);
	Value* cast115_var = builder.CreateCast(Instruction::ZExt, load114_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call116_var = builder.CreateCall(globals[6], gep78_var);
	call116_var->setTailCall();
	call116_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi117_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep118_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, switch17_val18_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(arg3, gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(4);
	Value* cast120_var = builder.CreateCast(Instruction::SExt, load119_var, types[0]);
	Value* binop121_var = BinaryOperator::Create(Instruction::Mul, cast120_var, phi117_var, "", builder.GetInsertBlock());
	Value* binop122_var = BinaryOperator::Create(Instruction::Add, binop121_var, phi81_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi123_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep124_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, switch17_val17_int, };
	Value* gep124_var = builder.CreateInBoundsGEP(arg3, gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(4);
	Value* cmp126_var = builder.CreateICmp(CmpInst::ICMP_EQ, load125_var, gep13_val14_int);
	builder.CreateCondBr(cmp126_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast127_var = builder.CreateCast(Instruction::ZExt, load125_var, types[0]);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast127_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(16);
	Value* cast130_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep131_array { gep4_val4_int, cast127_var, switch17_val17_int, };
	Value* gep131_var = builder.CreateInBoundsGEP(globals[5], gep131_array);
	llvm::LoadInst* load132_var = builder.CreateLoad(gep131_var, false);
	load132_var->setAlignment(16);
	Value* cmp133_var = builder.CreateICmp(CmpInst::ICMP_EQ, load132_var, cmp47_val47_int);
	builder.CreateCondBr(cmp133_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep134_array { load129_var, };
	Value* gep134_var = builder.CreateInBoundsGEP(cast130_var, gep134_array);
	Value* cast135_var = builder.CreateCast(Instruction::BitCast, gep134_var, types[27]);
	llvm::LoadInst* load136_var = builder.CreateLoad(cast135_var, false);
	load136_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep137_array { gep4_val4_int, cast127_var, gep13_val14_int, gep13_val14_int, switch17_val17_int, };
	Value* gep137_var = builder.CreateInBoundsGEP(globals[5], gep137_array);
	llvm::LoadInst* load138_var = builder.CreateLoad(gep137_var, false);
	load138_var->setAlignment(8);
	Value* binop139_var = BinaryOperator::Create(Instruction::Add, load138_var, load129_var, "", builder.GetInsertBlock());
	Value* cmp140_var = builder.CreateICmp(CmpInst::ICMP_EQ, load132_var, cmp55_val55_int);
	builder.CreateCondBr(cmp140_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep141_array { binop139_var, };
	Value* gep141_var = builder.CreateInBoundsGEP(cast130_var, gep141_array);
	Value* cast142_var = builder.CreateCast(Instruction::BitCast, gep141_var, types[28]);
	llvm::LoadInst* load143_var = builder.CreateLoad(cast142_var, false);
	load143_var->setAlignment(4);
	Value* cast144_var = builder.CreateCast(Instruction::ZExt, load143_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast127_var, gep13_val14_int, gep13_val14_int, gep61_val61_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(16);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, binop139_var, "", builder.GetInsertBlock());
	SwitchInst* switch148_var = builder.CreateSwitch(load132_var, block29, 2);
	switch148_var->addCase(cast<ConstantInt>(switch65_val65_int), block27);
	switch148_var->addCase(cast<ConstantInt>(switch65_val66_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep148_array { binop147_var, };
	Value* gep148_var = builder.CreateInBoundsGEP(cast130_var, gep148_array);
	Value* cast149_var = builder.CreateCast(Instruction::BitCast, gep148_var, types[30]);
	llvm::LoadInst* load150_var = builder.CreateLoad(cast149_var, false);
	load150_var->setAlignment(2);
	Value* cast151_var = builder.CreateCast(Instruction::ZExt, load150_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep152_array { gep4_val4_int, cast127_var, gep13_val14_int, gep13_val14_int, switch17_val18_int, };
	Value* gep152_var = builder.CreateInBoundsGEP(globals[5], gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(8);
	Value* binop154_var = BinaryOperator::Create(Instruction::Add, load153_var, binop147_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep155_array { binop154_var, };
	Value* gep155_var = builder.CreateInBoundsGEP(cast130_var, gep155_array);
	llvm::LoadInst* load156_var = builder.CreateLoad(gep155_var, false);
	load156_var->setAlignment(1);
	Value* cast157_var = builder.CreateCast(Instruction::ZExt, load156_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call158_var = builder.CreateCall(globals[6], gep78_var);
	call158_var->setTailCall();
	call158_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi159_var = builder.CreatePHI(types[0], 4);
	Value* binop160_var = BinaryOperator::Create(Instruction::Add, phi159_var, phi123_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi161_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep162_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, gep61_val61_int, };
	Value* gep162_var = builder.CreateInBoundsGEP(arg3, gep162_array);
	llvm::LoadInst* load163_var = builder.CreateLoad(gep162_var, false);
	load163_var->setAlignment(1);
	Value* cast164_var = builder.CreateCast(Instruction::ZExt, load163_var, types[0]);
	CallInst* call165_var = builder.CreateCall3(globals[14], phi161_var, cast164_var, cast12_var);
	call165_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep167_array { gep4_val4_int, gep4_val4_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[15], gep167_array);
	CallInst* call167_var = builder.CreateCall(globals[6], gep167_var);
	call167_var->setTailCall();
	call167_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi81_var->addIncoming(gep4_val4_int, block2);
	phi81_var->addIncoming(load51_var, block4);
	phi81_var->addIncoming(cast60_var, block6);
	phi81_var->addIncoming(cast70_var, block8);
	phi81_var->addIncoming(cast76_var, block9);
	
	phi117_var->addIncoming(load94_var, block13);
	phi117_var->addIncoming(cast102_var, block15);
	phi117_var->addIncoming(cast109_var, block17);
	phi117_var->addIncoming(cast115_var, block18);
	
	phi123_var->addIncoming(binop122_var, block20);
	phi123_var->addIncoming(phi81_var, block11);
	
	phi159_var->addIncoming(load136_var, block23);
	phi159_var->addIncoming(cast144_var, block25);
	phi159_var->addIncoming(cast151_var, block27);
	phi159_var->addIncoming(cast157_var, block28);
	
	phi161_var->addIncoming(binop160_var, block30);
	phi161_var->addIncoming(phi123_var, block21);
	
	return;
}

void x86::x86_setl(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* gep8_val8_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep8_array { gep4_val4_int, gep8_val8_int, };
	Value* gep8_var = builder.CreateInBoundsGEP(arg2, gep8_array);
	llvm::LoadInst* load10_var = builder.CreateLoad(gep8_var, false);
	load10_var->setAlignment(1);
	Value* cmp11_var = builder.CreateICmp(CmpInst::ICMP_NE, load7_var, load10_var);
	Value* cast12_var = builder.CreateCast(Instruction::ZExt, cmp11_var, types[0]);
	Constant* gep13_val13_int = ConstantInt::get(types[2], 15u);
	Constant* gep13_val14_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, gep13_val14_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(arg3, gep13_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep13_var, false);
	load16_var->setAlignment(4);
	SwitchInst* switch17_var = builder.CreateSwitch(load16_var, block32, 2);
	Constant* switch17_val17_int = ConstantInt::get(types[2], 1u);
	switch17_var->addCase(cast<ConstantInt>(switch17_val17_int), block1);
	Constant* switch17_val18_int = ConstantInt::get(types[2], 3u);
	switch17_var->addCase(cast<ConstantInt>(switch17_val18_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, gep13_val14_int, };
	Value* gep19_var = builder.CreateGEP(arg3, gep19_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep19_var, false);
	load20_var->setAlignment(4);
	Value* cast21_var = builder.CreateCast(Instruction::ZExt, load20_var, types[0]);
	ArrayRef<Value*> gep22_array { gep4_val4_int, cast21_var, switch17_val17_int, };
	Value* gep22_var = builder.CreateInBoundsGEP(globals[5], gep22_array);
	llvm::LoadInst* load24_var = builder.CreateLoad(gep22_var, false);
	load24_var->setAlignment(16);
	Constant* binop25_val25_int = ConstantInt::get(types[0], 3u);
	Value* binop25_var = BinaryOperator::Create(Instruction::Shl, load24_var, binop25_val25_int, "", builder.GetInsertBlock());
	Constant* binop27_val27_int = ConstantInt::get(types[0], 64u);
	Value* binop27_var = BinaryOperator::Create(Instruction::Sub, binop27_val27_int, binop25_var, "", builder.GetInsertBlock());
	Constant* binop29_val29_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop29_var = BinaryOperator::Create(Instruction::LShr, binop29_val29_int, binop27_var, "", builder.GetInsertBlock());
	Value* binop31_var = BinaryOperator::Create(Instruction::And, binop29_var, cast12_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep32_array { gep4_val4_int, cast21_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep32_var = builder.CreateInBoundsGEP(globals[5], gep32_array);
	llvm::LoadInst* load33_var = builder.CreateLoad(gep32_var, false);
	load33_var->setAlignment(16);
	Value* cast34_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep35_array { load33_var, };
	Value* gep35_var = builder.CreateInBoundsGEP(cast34_var, gep35_array);
	Value* cast36_var = builder.CreateCast(Instruction::BitCast, gep35_var, types[27]);
	llvm::StoreInst* store37_var = builder.CreateStore(binop31_var, cast36_var, false);
	store37_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep38_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, gep13_val14_int, };
	Value* gep38_var = builder.CreateInBoundsGEP(arg3, gep38_array);
	llvm::LoadInst* load39_var = builder.CreateLoad(gep38_var, false);
	load39_var->setAlignment(4);
	Value* cmp40_var = builder.CreateICmp(CmpInst::ICMP_EQ, load39_var, gep13_val14_int);
	builder.CreateCondBr(cmp40_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast41_var = builder.CreateCast(Instruction::ZExt, load39_var, types[0]);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast41_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Value* cast44_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep45_array { gep4_val4_int, cast41_var, switch17_val17_int, };
	Value* gep45_var = builder.CreateInBoundsGEP(globals[5], gep45_array);
	llvm::LoadInst* load46_var = builder.CreateLoad(gep45_var, false);
	load46_var->setAlignment(16);
	Constant* cmp47_val47_int = ConstantInt::get(types[0], 8u);
	Value* cmp47_var = builder.CreateICmp(CmpInst::ICMP_EQ, load46_var, cmp47_val47_int);
	builder.CreateCondBr(cmp47_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep49_array { load43_var, };
	Value* gep49_var = builder.CreateInBoundsGEP(cast44_var, gep49_array);
	Value* cast50_var = builder.CreateCast(Instruction::BitCast, gep49_var, types[27]);
	llvm::LoadInst* load51_var = builder.CreateLoad(cast50_var, false);
	load51_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep52_array { gep4_val4_int, cast41_var, gep13_val14_int, gep13_val14_int, switch17_val17_int, };
	Value* gep52_var = builder.CreateInBoundsGEP(globals[5], gep52_array);
	llvm::LoadInst* load53_var = builder.CreateLoad(gep52_var, false);
	load53_var->setAlignment(8);
	Value* binop54_var = BinaryOperator::Create(Instruction::Add, load53_var, load43_var, "", builder.GetInsertBlock());
	Constant* cmp55_val55_int = ConstantInt::get(types[0], 4u);
	Value* cmp55_var = builder.CreateICmp(CmpInst::ICMP_EQ, load46_var, cmp55_val55_int);
	builder.CreateCondBr(cmp55_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep57_array { binop54_var, };
	Value* gep57_var = builder.CreateInBoundsGEP(cast44_var, gep57_array);
	Value* cast58_var = builder.CreateCast(Instruction::BitCast, gep57_var, types[28]);
	llvm::LoadInst* load59_var = builder.CreateLoad(cast58_var, false);
	load59_var->setAlignment(4);
	Value* cast60_var = builder.CreateCast(Instruction::ZExt, load59_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep61_val61_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast41_var, gep13_val14_int, gep13_val14_int, gep61_val61_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load63_var = builder.CreateLoad(gep61_var, false);
	load63_var->setAlignment(16);
	Value* binop64_var = BinaryOperator::Create(Instruction::Add, load63_var, binop54_var, "", builder.GetInsertBlock());
	SwitchInst* switch65_var = builder.CreateSwitch(load46_var, block10, 2);
	Constant* switch65_val65_int = ConstantInt::get(types[0], 2u);
	switch65_var->addCase(cast<ConstantInt>(switch65_val65_int), block8);
	Constant* switch65_val66_int = ConstantInt::get(types[0], 1u);
	switch65_var->addCase(cast<ConstantInt>(switch65_val66_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep67_array { binop64_var, };
	Value* gep67_var = builder.CreateInBoundsGEP(cast44_var, gep67_array);
	Value* cast68_var = builder.CreateCast(Instruction::BitCast, gep67_var, types[30]);
	llvm::LoadInst* load69_var = builder.CreateLoad(cast68_var, false);
	load69_var->setAlignment(2);
	Value* cast70_var = builder.CreateCast(Instruction::ZExt, load69_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep71_array { gep4_val4_int, cast41_var, gep13_val14_int, gep13_val14_int, switch17_val18_int, };
	Value* gep71_var = builder.CreateInBoundsGEP(globals[5], gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(8);
	Value* binop73_var = BinaryOperator::Create(Instruction::Add, load72_var, binop64_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep74_array { binop73_var, };
	Value* gep74_var = builder.CreateInBoundsGEP(cast44_var, gep74_array);
	llvm::LoadInst* load75_var = builder.CreateLoad(gep74_var, false);
	load75_var->setAlignment(1);
	Value* cast76_var = builder.CreateCast(Instruction::ZExt, load75_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep78_array { gep4_val4_int, gep4_val4_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(globals[7], gep78_array);
	CallInst* call77_var = builder.CreateCall(globals[6], gep78_var);
	call77_var->setTailCall();
	call77_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi81_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep82_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, gep61_val61_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(arg3, gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(4);
	Value* cmp84_var = builder.CreateICmp(CmpInst::ICMP_EQ, load83_var, gep13_val14_int);
	builder.CreateCondBr(cmp84_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast85_var = builder.CreateCast(Instruction::ZExt, load83_var, types[0]);
	ArrayRef<Value*> gep86_array { gep4_val4_int, cast85_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep86_var = builder.CreateInBoundsGEP(globals[5], gep86_array);
	llvm::LoadInst* load87_var = builder.CreateLoad(gep86_var, false);
	load87_var->setAlignment(16);
	Value* cast88_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep89_array { gep4_val4_int, cast85_var, switch17_val17_int, };
	Value* gep89_var = builder.CreateInBoundsGEP(globals[5], gep89_array);
	llvm::LoadInst* load90_var = builder.CreateLoad(gep89_var, false);
	load90_var->setAlignment(16);
	Value* cmp91_var = builder.CreateICmp(CmpInst::ICMP_EQ, load90_var, cmp47_val47_int);
	builder.CreateCondBr(cmp91_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep92_array { load87_var, };
	Value* gep92_var = builder.CreateInBoundsGEP(cast88_var, gep92_array);
	Value* cast93_var = builder.CreateCast(Instruction::BitCast, gep92_var, types[27]);
	llvm::LoadInst* load94_var = builder.CreateLoad(cast93_var, false);
	load94_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep95_array { gep4_val4_int, cast85_var, gep13_val14_int, gep13_val14_int, switch17_val17_int, };
	Value* gep95_var = builder.CreateInBoundsGEP(globals[5], gep95_array);
	llvm::LoadInst* load96_var = builder.CreateLoad(gep95_var, false);
	load96_var->setAlignment(8);
	Value* binop97_var = BinaryOperator::Create(Instruction::Add, load96_var, load87_var, "", builder.GetInsertBlock());
	Value* cmp98_var = builder.CreateICmp(CmpInst::ICMP_EQ, load90_var, cmp55_val55_int);
	builder.CreateCondBr(cmp98_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep99_array { binop97_var, };
	Value* gep99_var = builder.CreateInBoundsGEP(cast88_var, gep99_array);
	Value* cast100_var = builder.CreateCast(Instruction::BitCast, gep99_var, types[28]);
	llvm::LoadInst* load101_var = builder.CreateLoad(cast100_var, false);
	load101_var->setAlignment(4);
	Value* cast102_var = builder.CreateCast(Instruction::ZExt, load101_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast85_var, gep13_val14_int, gep13_val14_int, gep61_val61_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(16);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, binop97_var, "", builder.GetInsertBlock());
	SwitchInst* switch106_var = builder.CreateSwitch(load90_var, block19, 2);
	switch106_var->addCase(cast<ConstantInt>(switch65_val65_int), block17);
	switch106_var->addCase(cast<ConstantInt>(switch65_val66_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep106_array { binop105_var, };
	Value* gep106_var = builder.CreateInBoundsGEP(cast88_var, gep106_array);
	Value* cast107_var = builder.CreateCast(Instruction::BitCast, gep106_var, types[30]);
	llvm::LoadInst* load108_var = builder.CreateLoad(cast107_var, false);
	load108_var->setAlignment(2);
	Value* cast109_var = builder.CreateCast(Instruction::ZExt, load108_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep110_array { gep4_val4_int, cast85_var, gep13_val14_int, gep13_val14_int, switch17_val18_int, };
	Value* gep110_var = builder.CreateInBoundsGEP(globals[5], gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(8);
	Value* binop112_var = BinaryOperator::Create(Instruction::Add, load111_var, binop105_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep113_array { binop112_var, };
	Value* gep113_var = builder.CreateInBoundsGEP(cast88_var, gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(1);
	Value* cast115_var = builder.CreateCast(Instruction::ZExt, load114_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call116_var = builder.CreateCall(globals[6], gep78_var);
	call116_var->setTailCall();
	call116_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi117_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep118_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, switch17_val18_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(arg3, gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(4);
	Value* cast120_var = builder.CreateCast(Instruction::SExt, load119_var, types[0]);
	Value* binop121_var = BinaryOperator::Create(Instruction::Mul, cast120_var, phi117_var, "", builder.GetInsertBlock());
	Value* binop122_var = BinaryOperator::Create(Instruction::Add, binop121_var, phi81_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi123_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep124_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, switch17_val17_int, gep13_val14_int, switch17_val17_int, };
	Value* gep124_var = builder.CreateInBoundsGEP(arg3, gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(4);
	Value* cmp126_var = builder.CreateICmp(CmpInst::ICMP_EQ, load125_var, gep13_val14_int);
	builder.CreateCondBr(cmp126_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast127_var = builder.CreateCast(Instruction::ZExt, load125_var, types[0]);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast127_var, gep13_val14_int, gep13_val14_int, gep13_val14_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(16);
	Value* cast130_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep131_array { gep4_val4_int, cast127_var, switch17_val17_int, };
	Value* gep131_var = builder.CreateInBoundsGEP(globals[5], gep131_array);
	llvm::LoadInst* load132_var = builder.CreateLoad(gep131_var, false);
	load132_var->setAlignment(16);
	Value* cmp133_var = builder.CreateICmp(CmpInst::ICMP_EQ, load132_var, cmp47_val47_int);
	builder.CreateCondBr(cmp133_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep134_array { load129_var, };
	Value* gep134_var = builder.CreateInBoundsGEP(cast130_var, gep134_array);
	Value* cast135_var = builder.CreateCast(Instruction::BitCast, gep134_var, types[27]);
	llvm::LoadInst* load136_var = builder.CreateLoad(cast135_var, false);
	load136_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep137_array { gep4_val4_int, cast127_var, gep13_val14_int, gep13_val14_int, switch17_val17_int, };
	Value* gep137_var = builder.CreateInBoundsGEP(globals[5], gep137_array);
	llvm::LoadInst* load138_var = builder.CreateLoad(gep137_var, false);
	load138_var->setAlignment(8);
	Value* binop139_var = BinaryOperator::Create(Instruction::Add, load138_var, load129_var, "", builder.GetInsertBlock());
	Value* cmp140_var = builder.CreateICmp(CmpInst::ICMP_EQ, load132_var, cmp55_val55_int);
	builder.CreateCondBr(cmp140_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep141_array { binop139_var, };
	Value* gep141_var = builder.CreateInBoundsGEP(cast130_var, gep141_array);
	Value* cast142_var = builder.CreateCast(Instruction::BitCast, gep141_var, types[28]);
	llvm::LoadInst* load143_var = builder.CreateLoad(cast142_var, false);
	load143_var->setAlignment(4);
	Value* cast144_var = builder.CreateCast(Instruction::ZExt, load143_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast127_var, gep13_val14_int, gep13_val14_int, gep61_val61_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(16);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, binop139_var, "", builder.GetInsertBlock());
	SwitchInst* switch148_var = builder.CreateSwitch(load132_var, block29, 2);
	switch148_var->addCase(cast<ConstantInt>(switch65_val65_int), block27);
	switch148_var->addCase(cast<ConstantInt>(switch65_val66_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep148_array { binop147_var, };
	Value* gep148_var = builder.CreateInBoundsGEP(cast130_var, gep148_array);
	Value* cast149_var = builder.CreateCast(Instruction::BitCast, gep148_var, types[30]);
	llvm::LoadInst* load150_var = builder.CreateLoad(cast149_var, false);
	load150_var->setAlignment(2);
	Value* cast151_var = builder.CreateCast(Instruction::ZExt, load150_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep152_array { gep4_val4_int, cast127_var, gep13_val14_int, gep13_val14_int, switch17_val18_int, };
	Value* gep152_var = builder.CreateInBoundsGEP(globals[5], gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(8);
	Value* binop154_var = BinaryOperator::Create(Instruction::Add, load153_var, binop147_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep155_array { binop154_var, };
	Value* gep155_var = builder.CreateInBoundsGEP(cast130_var, gep155_array);
	llvm::LoadInst* load156_var = builder.CreateLoad(gep155_var, false);
	load156_var->setAlignment(1);
	Value* cast157_var = builder.CreateCast(Instruction::ZExt, load156_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call158_var = builder.CreateCall(globals[6], gep78_var);
	call158_var->setTailCall();
	call158_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi159_var = builder.CreatePHI(types[0], 4);
	Value* binop160_var = BinaryOperator::Create(Instruction::Add, phi159_var, phi123_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi161_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep162_array { gep4_val4_int, gep13_val13_int, gep4_val4_int, gep61_val61_int, };
	Value* gep162_var = builder.CreateInBoundsGEP(arg3, gep162_array);
	llvm::LoadInst* load163_var = builder.CreateLoad(gep162_var, false);
	load163_var->setAlignment(1);
	Value* cast164_var = builder.CreateCast(Instruction::ZExt, load163_var, types[0]);
	CallInst* call165_var = builder.CreateCall3(globals[14], phi161_var, cast164_var, cast12_var);
	call165_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep167_array { gep4_val4_int, gep4_val4_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(globals[15], gep167_array);
	CallInst* call167_var = builder.CreateCall(globals[6], gep167_var);
	call167_var->setTailCall();
	call167_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi81_var->addIncoming(gep4_val4_int, block2);
	phi81_var->addIncoming(load51_var, block4);
	phi81_var->addIncoming(cast60_var, block6);
	phi81_var->addIncoming(cast70_var, block8);
	phi81_var->addIncoming(cast76_var, block9);
	
	phi117_var->addIncoming(load94_var, block13);
	phi117_var->addIncoming(cast102_var, block15);
	phi117_var->addIncoming(cast109_var, block17);
	phi117_var->addIncoming(cast115_var, block18);
	
	phi123_var->addIncoming(binop122_var, block20);
	phi123_var->addIncoming(phi81_var, block11);
	
	phi159_var->addIncoming(load136_var, block23);
	phi159_var->addIncoming(cast144_var, block25);
	phi159_var->addIncoming(cast151_var, block27);
	phi159_var->addIncoming(cast157_var, block28);
	
	phi161_var->addIncoming(binop160_var, block30);
	phi161_var->addIncoming(phi123_var, block21);
	
	return;
}

void x86::x86_setle(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* cmp8_val8_int = ConstantInt::get(types[11], 0u);
	Value* cmp8_var = builder.CreateICmp(CmpInst::ICMP_EQ, load7_var, cmp8_val8_int);
	builder.CreateCondBr(cmp8_var, block1, block2);
	
	builder.SetInsertPoint(block1);
	Constant* gep10_val10_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep10_array { gep4_val4_int, gep10_val10_int, };
	Value* gep10_var = builder.CreateInBoundsGEP(arg2, gep10_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep10_var, false);
	load12_var->setAlignment(1);
	Constant* gep13_val13_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep13_array { gep4_val4_int, gep13_val13_int, };
	Value* gep13_var = builder.CreateInBoundsGEP(arg2, gep13_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep13_var, false);
	load15_var->setAlignment(1);
	Value* cmp16_var = builder.CreateICmp(CmpInst::ICMP_NE, load12_var, load15_var);
	builder.CreateBr(block2);
	
	builder.SetInsertPoint(block2);
	PHINode* phi17_var = builder.CreatePHI(types[37], 2);
	Value* cast18_var = builder.CreateCast(Instruction::ZExt, phi17_var, types[0]);
	Constant* gep19_val19_int = ConstantInt::get(types[2], 15u);
	Constant* gep19_val20_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep19_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, gep19_val20_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(arg3, gep19_array);
	llvm::LoadInst* load22_var = builder.CreateLoad(gep19_var, false);
	load22_var->setAlignment(4);
	SwitchInst* switch23_var = builder.CreateSwitch(load22_var, block34, 2);
	Constant* switch23_val23_int = ConstantInt::get(types[2], 1u);
	switch23_var->addCase(cast<ConstantInt>(switch23_val23_int), block3);
	switch23_var->addCase(cast<ConstantInt>(gep4_val5_int), block4);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep24_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, gep19_val20_int, };
	Value* gep24_var = builder.CreateGEP(arg3, gep24_array);
	llvm::LoadInst* load25_var = builder.CreateLoad(gep24_var, false);
	load25_var->setAlignment(4);
	Value* cast26_var = builder.CreateCast(Instruction::ZExt, load25_var, types[0]);
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast26_var, switch23_val23_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load29_var = builder.CreateLoad(gep27_var, false);
	load29_var->setAlignment(16);
	Constant* binop30_val30_int = ConstantInt::get(types[0], 3u);
	Value* binop30_var = BinaryOperator::Create(Instruction::Shl, load29_var, binop30_val30_int, "", builder.GetInsertBlock());
	Constant* binop32_val32_int = ConstantInt::get(types[0], 64u);
	Value* binop32_var = BinaryOperator::Create(Instruction::Sub, binop32_val32_int, binop30_var, "", builder.GetInsertBlock());
	Constant* binop34_val34_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop34_var = BinaryOperator::Create(Instruction::LShr, binop34_val34_int, binop32_var, "", builder.GetInsertBlock());
	Value* binop36_var = BinaryOperator::Create(Instruction::And, binop34_var, cast18_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep37_array { gep4_val4_int, cast26_var, gep19_val20_int, gep19_val20_int, gep19_val20_int, };
	Value* gep37_var = builder.CreateInBoundsGEP(globals[5], gep37_array);
	llvm::LoadInst* load38_var = builder.CreateLoad(gep37_var, false);
	load38_var->setAlignment(16);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep40_array { load38_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast39_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[27]);
	llvm::StoreInst* store42_var = builder.CreateStore(binop36_var, cast41_var, false);
	store42_var->setAlignment(8);
	builder.CreateBr(block35);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep43_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, gep19_val20_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(arg3, gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(4);
	Value* cmp45_var = builder.CreateICmp(CmpInst::ICMP_EQ, load44_var, gep19_val20_int);
	builder.CreateCondBr(cmp45_var, block13, block5);
	
	builder.SetInsertPoint(block5);
	Value* cast46_var = builder.CreateCast(Instruction::ZExt, load44_var, types[0]);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast46_var, gep19_val20_int, gep19_val20_int, gep19_val20_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(16);
	Value* cast49_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep50_array { gep4_val4_int, cast46_var, switch23_val23_int, };
	Value* gep50_var = builder.CreateInBoundsGEP(globals[5], gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(16);
	Constant* cmp52_val52_int = ConstantInt::get(types[0], 8u);
	Value* cmp52_var = builder.CreateICmp(CmpInst::ICMP_EQ, load51_var, cmp52_val52_int);
	builder.CreateCondBr(cmp52_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep54_array { load48_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast49_var, gep54_array);
	Value* cast55_var = builder.CreateCast(Instruction::BitCast, gep54_var, types[27]);
	llvm::LoadInst* load56_var = builder.CreateLoad(cast55_var, false);
	load56_var->setAlignment(8);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep57_array { gep4_val4_int, cast46_var, gep19_val20_int, gep19_val20_int, switch23_val23_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(globals[5], gep57_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep57_var, false);
	load58_var->setAlignment(8);
	Value* binop59_var = BinaryOperator::Create(Instruction::Add, load58_var, load48_var, "", builder.GetInsertBlock());
	Constant* cmp60_val60_int = ConstantInt::get(types[0], 4u);
	Value* cmp60_var = builder.CreateICmp(CmpInst::ICMP_EQ, load51_var, cmp60_val60_int);
	builder.CreateCondBr(cmp60_var, block8, block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep62_array { binop59_var, };
	Value* gep62_var = builder.CreateInBoundsGEP(cast49_var, gep62_array);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, gep62_var, types[28]);
	llvm::LoadInst* load64_var = builder.CreateLoad(cast63_var, false);
	load64_var->setAlignment(4);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load64_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block9);
	Constant* gep66_val66_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast46_var, gep19_val20_int, gep19_val20_int, gep66_val66_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep66_var, false);
	load68_var->setAlignment(16);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, binop59_var, "", builder.GetInsertBlock());
	SwitchInst* switch70_var = builder.CreateSwitch(load51_var, block12, 2);
	Constant* switch70_val70_int = ConstantInt::get(types[0], 2u);
	switch70_var->addCase(cast<ConstantInt>(switch70_val70_int), block10);
	Constant* switch70_val71_int = ConstantInt::get(types[0], 1u);
	switch70_var->addCase(cast<ConstantInt>(switch70_val71_int), block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep72_array { binop69_var, };
	Value* gep72_var = builder.CreateInBoundsGEP(cast49_var, gep72_array);
	Value* cast73_var = builder.CreateCast(Instruction::BitCast, gep72_var, types[30]);
	llvm::LoadInst* load74_var = builder.CreateLoad(cast73_var, false);
	load74_var->setAlignment(2);
	Value* cast75_var = builder.CreateCast(Instruction::ZExt, load74_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep76_array { gep4_val4_int, cast46_var, gep19_val20_int, gep19_val20_int, gep4_val5_int, };
	Value* gep76_var = builder.CreateInBoundsGEP(globals[5], gep76_array);
	llvm::LoadInst* load77_var = builder.CreateLoad(gep76_var, false);
	load77_var->setAlignment(8);
	Value* binop78_var = BinaryOperator::Create(Instruction::Add, load77_var, binop69_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep79_array { binop78_var, };
	Value* gep79_var = builder.CreateInBoundsGEP(cast49_var, gep79_array);
	llvm::LoadInst* load80_var = builder.CreateLoad(gep79_var, false);
	load80_var->setAlignment(1);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block13);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep83_array { gep4_val4_int, gep4_val4_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[7], gep83_array);
	CallInst* call82_var = builder.CreateCall(globals[6], gep83_var);
	call82_var->setTailCall();
	call82_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block13);
	PHINode* phi86_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep87_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, gep66_val66_int, };
	Value* gep87_var = builder.CreateInBoundsGEP(arg3, gep87_array);
	llvm::LoadInst* load88_var = builder.CreateLoad(gep87_var, false);
	load88_var->setAlignment(4);
	Value* cmp89_var = builder.CreateICmp(CmpInst::ICMP_EQ, load88_var, gep19_val20_int);
	builder.CreateCondBr(cmp89_var, block23, block14);
	
	builder.SetInsertPoint(block14);
	Value* cast90_var = builder.CreateCast(Instruction::ZExt, load88_var, types[0]);
	ArrayRef<Value*> gep91_array { gep4_val4_int, cast90_var, gep19_val20_int, gep19_val20_int, gep19_val20_int, };
	Value* gep91_var = builder.CreateInBoundsGEP(globals[5], gep91_array);
	llvm::LoadInst* load92_var = builder.CreateLoad(gep91_var, false);
	load92_var->setAlignment(16);
	Value* cast93_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast90_var, switch23_val23_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cmp96_var = builder.CreateICmp(CmpInst::ICMP_EQ, load95_var, cmp52_val52_int);
	builder.CreateCondBr(cmp96_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep97_array { load92_var, };
	Value* gep97_var = builder.CreateInBoundsGEP(cast93_var, gep97_array);
	Value* cast98_var = builder.CreateCast(Instruction::BitCast, gep97_var, types[27]);
	llvm::LoadInst* load99_var = builder.CreateLoad(cast98_var, false);
	load99_var->setAlignment(8);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast90_var, gep19_val20_int, gep19_val20_int, switch23_val23_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(8);
	Value* binop102_var = BinaryOperator::Create(Instruction::Add, load101_var, load92_var, "", builder.GetInsertBlock());
	Value* cmp103_var = builder.CreateICmp(CmpInst::ICMP_EQ, load95_var, cmp60_val60_int);
	builder.CreateCondBr(cmp103_var, block17, block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep104_array { binop102_var, };
	Value* gep104_var = builder.CreateInBoundsGEP(cast93_var, gep104_array);
	Value* cast105_var = builder.CreateCast(Instruction::BitCast, gep104_var, types[28]);
	llvm::LoadInst* load106_var = builder.CreateLoad(cast105_var, false);
	load106_var->setAlignment(4);
	Value* cast107_var = builder.CreateCast(Instruction::ZExt, load106_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep108_array { gep4_val4_int, cast90_var, gep19_val20_int, gep19_val20_int, gep66_val66_int, };
	Value* gep108_var = builder.CreateInBoundsGEP(globals[5], gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(16);
	Value* binop110_var = BinaryOperator::Create(Instruction::Add, load109_var, binop102_var, "", builder.GetInsertBlock());
	SwitchInst* switch111_var = builder.CreateSwitch(load95_var, block21, 2);
	switch111_var->addCase(cast<ConstantInt>(switch70_val70_int), block19);
	switch111_var->addCase(cast<ConstantInt>(switch70_val71_int), block20);
	
	builder.SetInsertPoint(block19);
	ArrayRef<Value*> gep111_array { binop110_var, };
	Value* gep111_var = builder.CreateInBoundsGEP(cast93_var, gep111_array);
	Value* cast112_var = builder.CreateCast(Instruction::BitCast, gep111_var, types[30]);
	llvm::LoadInst* load113_var = builder.CreateLoad(cast112_var, false);
	load113_var->setAlignment(2);
	Value* cast114_var = builder.CreateCast(Instruction::ZExt, load113_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep115_array { gep4_val4_int, cast90_var, gep19_val20_int, gep19_val20_int, gep4_val5_int, };
	Value* gep115_var = builder.CreateInBoundsGEP(globals[5], gep115_array);
	llvm::LoadInst* load116_var = builder.CreateLoad(gep115_var, false);
	load116_var->setAlignment(8);
	Value* binop117_var = BinaryOperator::Create(Instruction::Add, load116_var, binop110_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep118_array { binop117_var, };
	Value* gep118_var = builder.CreateInBoundsGEP(cast93_var, gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(1);
	Value* cast120_var = builder.CreateCast(Instruction::ZExt, load119_var, types[0]);
	builder.CreateBr(block22);
	
	builder.SetInsertPoint(block21);
	CallInst* call121_var = builder.CreateCall(globals[6], gep83_var);
	call121_var->setTailCall();
	call121_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block22);
	PHINode* phi122_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep123_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, gep4_val5_int, };
	Value* gep123_var = builder.CreateInBoundsGEP(arg3, gep123_array);
	llvm::LoadInst* load124_var = builder.CreateLoad(gep123_var, false);
	load124_var->setAlignment(4);
	Value* cast125_var = builder.CreateCast(Instruction::SExt, load124_var, types[0]);
	Value* binop126_var = BinaryOperator::Create(Instruction::Mul, cast125_var, phi122_var, "", builder.GetInsertBlock());
	Value* binop127_var = BinaryOperator::Create(Instruction::Add, binop126_var, phi86_var, "", builder.GetInsertBlock());
	builder.CreateBr(block23);
	
	builder.SetInsertPoint(block23);
	PHINode* phi128_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep129_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, switch23_val23_int, gep19_val20_int, switch23_val23_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(arg3, gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(4);
	Value* cmp131_var = builder.CreateICmp(CmpInst::ICMP_EQ, load130_var, gep19_val20_int);
	builder.CreateCondBr(cmp131_var, block33, block24);
	
	builder.SetInsertPoint(block24);
	Value* cast132_var = builder.CreateCast(Instruction::ZExt, load130_var, types[0]);
	ArrayRef<Value*> gep133_array { gep4_val4_int, cast132_var, gep19_val20_int, gep19_val20_int, gep19_val20_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(globals[5], gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(16);
	Value* cast135_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast132_var, switch23_val23_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cmp138_var = builder.CreateICmp(CmpInst::ICMP_EQ, load137_var, cmp52_val52_int);
	builder.CreateCondBr(cmp138_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep139_array { load134_var, };
	Value* gep139_var = builder.CreateInBoundsGEP(cast135_var, gep139_array);
	Value* cast140_var = builder.CreateCast(Instruction::BitCast, gep139_var, types[27]);
	llvm::LoadInst* load141_var = builder.CreateLoad(cast140_var, false);
	load141_var->setAlignment(8);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast132_var, gep19_val20_int, gep19_val20_int, switch23_val23_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(8);
	Value* binop144_var = BinaryOperator::Create(Instruction::Add, load143_var, load134_var, "", builder.GetInsertBlock());
	Value* cmp145_var = builder.CreateICmp(CmpInst::ICMP_EQ, load137_var, cmp60_val60_int);
	builder.CreateCondBr(cmp145_var, block27, block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep146_array { binop144_var, };
	Value* gep146_var = builder.CreateInBoundsGEP(cast135_var, gep146_array);
	Value* cast147_var = builder.CreateCast(Instruction::BitCast, gep146_var, types[28]);
	llvm::LoadInst* load148_var = builder.CreateLoad(cast147_var, false);
	load148_var->setAlignment(4);
	Value* cast149_var = builder.CreateCast(Instruction::ZExt, load148_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep150_array { gep4_val4_int, cast132_var, gep19_val20_int, gep19_val20_int, gep66_val66_int, };
	Value* gep150_var = builder.CreateInBoundsGEP(globals[5], gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(16);
	Value* binop152_var = BinaryOperator::Create(Instruction::Add, load151_var, binop144_var, "", builder.GetInsertBlock());
	SwitchInst* switch153_var = builder.CreateSwitch(load137_var, block31, 2);
	switch153_var->addCase(cast<ConstantInt>(switch70_val70_int), block29);
	switch153_var->addCase(cast<ConstantInt>(switch70_val71_int), block30);
	
	builder.SetInsertPoint(block29);
	ArrayRef<Value*> gep153_array { binop152_var, };
	Value* gep153_var = builder.CreateInBoundsGEP(cast135_var, gep153_array);
	Value* cast154_var = builder.CreateCast(Instruction::BitCast, gep153_var, types[30]);
	llvm::LoadInst* load155_var = builder.CreateLoad(cast154_var, false);
	load155_var->setAlignment(2);
	Value* cast156_var = builder.CreateCast(Instruction::ZExt, load155_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep157_array { gep4_val4_int, cast132_var, gep19_val20_int, gep19_val20_int, gep4_val5_int, };
	Value* gep157_var = builder.CreateInBoundsGEP(globals[5], gep157_array);
	llvm::LoadInst* load158_var = builder.CreateLoad(gep157_var, false);
	load158_var->setAlignment(8);
	Value* binop159_var = BinaryOperator::Create(Instruction::Add, load158_var, binop152_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep160_array { binop159_var, };
	Value* gep160_var = builder.CreateInBoundsGEP(cast135_var, gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(1);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	builder.CreateBr(block32);
	
	builder.SetInsertPoint(block31);
	CallInst* call163_var = builder.CreateCall(globals[6], gep83_var);
	call163_var->setTailCall();
	call163_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block32);
	PHINode* phi164_var = builder.CreatePHI(types[0], 4);
	Value* binop165_var = BinaryOperator::Create(Instruction::Add, phi164_var, phi128_var, "", builder.GetInsertBlock());
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block33);
	PHINode* phi166_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep167_array { gep4_val4_int, gep19_val19_int, gep4_val4_int, gep66_val66_int, };
	Value* gep167_var = builder.CreateInBoundsGEP(arg3, gep167_array);
	llvm::LoadInst* load168_var = builder.CreateLoad(gep167_var, false);
	load168_var->setAlignment(1);
	Value* cast169_var = builder.CreateCast(Instruction::ZExt, load168_var, types[0]);
	CallInst* call170_var = builder.CreateCall3(globals[14], phi166_var, cast169_var, cast18_var);
	call170_var->setTailCall();
	builder.CreateBr(block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep172_array { gep4_val4_int, gep4_val4_int, };
	Value* gep172_var = builder.CreateInBoundsGEP(globals[15], gep172_array);
	CallInst* call172_var = builder.CreateCall(globals[6], gep172_var);
	call172_var->setTailCall();
	call172_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block35);
	Constant* varval175_int = ConstantInt::get(types[37], 1u);
	phi17_var->addIncoming(varval175_int, block0);
	phi17_var->addIncoming(cmp16_var, block1);
	
	phi86_var->addIncoming(gep4_val4_int, block4);
	phi86_var->addIncoming(load56_var, block6);
	phi86_var->addIncoming(cast65_var, block8);
	phi86_var->addIncoming(cast75_var, block10);
	phi86_var->addIncoming(cast81_var, block11);
	
	phi122_var->addIncoming(load99_var, block15);
	phi122_var->addIncoming(cast107_var, block17);
	phi122_var->addIncoming(cast114_var, block19);
	phi122_var->addIncoming(cast120_var, block20);
	
	phi128_var->addIncoming(binop127_var, block22);
	phi128_var->addIncoming(phi86_var, block13);
	
	phi164_var->addIncoming(load141_var, block25);
	phi164_var->addIncoming(cast149_var, block27);
	phi164_var->addIncoming(cast156_var, block29);
	phi164_var->addIncoming(cast162_var, block30);
	
	phi166_var->addIncoming(binop165_var, block32);
	phi166_var->addIncoming(phi128_var, block23);
	
	return;
}

void x86::x86_setne(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 3u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* binop8_val8_int = ConstantInt::get(types[11], 1u);
	Value* binop8_var = BinaryOperator::Create(Instruction::Xor, load7_var, binop8_val8_int, "", builder.GetInsertBlock());
	Value* cast10_var = builder.CreateCast(Instruction::ZExt, binop8_var, types[0]);
	Constant* gep11_val11_int = ConstantInt::get(types[2], 15u);
	Constant* gep11_val12_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep11_val12_int, };
	Value* gep11_var = builder.CreateInBoundsGEP(arg3, gep11_array);
	llvm::LoadInst* load14_var = builder.CreateLoad(gep11_var, false);
	load14_var->setAlignment(4);
	SwitchInst* switch15_var = builder.CreateSwitch(load14_var, block32, 2);
	Constant* switch15_val15_int = ConstantInt::get(types[2], 1u);
	switch15_var->addCase(cast<ConstantInt>(switch15_val15_int), block1);
	switch15_var->addCase(cast<ConstantInt>(gep4_val5_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep11_val12_int, };
	Value* gep16_var = builder.CreateGEP(arg3, gep16_array);
	llvm::LoadInst* load17_var = builder.CreateLoad(gep16_var, false);
	load17_var->setAlignment(4);
	Value* cast18_var = builder.CreateCast(Instruction::ZExt, load17_var, types[0]);
	ArrayRef<Value*> gep19_array { gep4_val4_int, cast18_var, switch15_val15_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(globals[5], gep19_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep19_var, false);
	load21_var->setAlignment(16);
	Constant* binop22_val22_int = ConstantInt::get(types[0], 3u);
	Value* binop22_var = BinaryOperator::Create(Instruction::Shl, load21_var, binop22_val22_int, "", builder.GetInsertBlock());
	Constant* binop24_val24_int = ConstantInt::get(types[0], 64u);
	Value* binop24_var = BinaryOperator::Create(Instruction::Sub, binop24_val24_int, binop22_var, "", builder.GetInsertBlock());
	Constant* binop26_val26_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop26_var = BinaryOperator::Create(Instruction::LShr, binop26_val26_int, binop24_var, "", builder.GetInsertBlock());
	Value* binop28_var = BinaryOperator::Create(Instruction::And, binop26_var, cast10_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast18_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(16);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep32_array { load30_var, };
	Value* gep32_var = builder.CreateInBoundsGEP(cast31_var, gep32_array);
	Value* cast33_var = builder.CreateCast(Instruction::BitCast, gep32_var, types[27]);
	llvm::StoreInst* store34_var = builder.CreateStore(binop28_var, cast33_var, false);
	store34_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep35_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep11_val12_int, };
	Value* gep35_var = builder.CreateInBoundsGEP(arg3, gep35_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep35_var, false);
	load36_var->setAlignment(4);
	Value* cmp37_var = builder.CreateICmp(CmpInst::ICMP_EQ, load36_var, gep11_val12_int);
	builder.CreateCondBr(cmp37_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast38_var = builder.CreateCast(Instruction::ZExt, load36_var, types[0]);
	ArrayRef<Value*> gep39_array { gep4_val4_int, cast38_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep39_var = builder.CreateInBoundsGEP(globals[5], gep39_array);
	llvm::LoadInst* load40_var = builder.CreateLoad(gep39_var, false);
	load40_var->setAlignment(16);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast38_var, switch15_val15_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Constant* cmp44_val44_int = ConstantInt::get(types[0], 8u);
	Value* cmp44_var = builder.CreateICmp(CmpInst::ICMP_EQ, load43_var, cmp44_val44_int);
	builder.CreateCondBr(cmp44_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep46_array { load40_var, };
	Value* gep46_var = builder.CreateInBoundsGEP(cast41_var, gep46_array);
	Value* cast47_var = builder.CreateCast(Instruction::BitCast, gep46_var, types[27]);
	llvm::LoadInst* load48_var = builder.CreateLoad(cast47_var, false);
	load48_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep49_array { gep4_val4_int, cast38_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep49_var = builder.CreateInBoundsGEP(globals[5], gep49_array);
	llvm::LoadInst* load50_var = builder.CreateLoad(gep49_var, false);
	load50_var->setAlignment(8);
	Value* binop51_var = BinaryOperator::Create(Instruction::Add, load50_var, load40_var, "", builder.GetInsertBlock());
	Constant* cmp52_val52_int = ConstantInt::get(types[0], 4u);
	Value* cmp52_var = builder.CreateICmp(CmpInst::ICMP_EQ, load43_var, cmp52_val52_int);
	builder.CreateCondBr(cmp52_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep54_array { binop51_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast41_var, gep54_array);
	Value* cast55_var = builder.CreateCast(Instruction::BitCast, gep54_var, types[28]);
	llvm::LoadInst* load56_var = builder.CreateLoad(cast55_var, false);
	load56_var->setAlignment(4);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep58_val58_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast38_var, gep11_val12_int, gep11_val12_int, gep58_val58_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load60_var = builder.CreateLoad(gep58_var, false);
	load60_var->setAlignment(16);
	Value* binop61_var = BinaryOperator::Create(Instruction::Add, load60_var, binop51_var, "", builder.GetInsertBlock());
	SwitchInst* switch62_var = builder.CreateSwitch(load43_var, block10, 2);
	Constant* switch62_val62_int = ConstantInt::get(types[0], 2u);
	switch62_var->addCase(cast<ConstantInt>(switch62_val62_int), block8);
	Constant* switch62_val63_int = ConstantInt::get(types[0], 1u);
	switch62_var->addCase(cast<ConstantInt>(switch62_val63_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep64_array { binop61_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast41_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[30]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(2);
	Value* cast67_var = builder.CreateCast(Instruction::ZExt, load66_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast38_var, gep11_val12_int, gep11_val12_int, gep4_val5_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(8);
	Value* binop70_var = BinaryOperator::Create(Instruction::Add, load69_var, binop61_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep71_array { binop70_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast41_var, gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(1);
	Value* cast73_var = builder.CreateCast(Instruction::ZExt, load72_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep75_array { gep4_val4_int, gep4_val4_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[7], gep75_array);
	CallInst* call74_var = builder.CreateCall(globals[6], gep75_var);
	call74_var->setTailCall();
	call74_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi78_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep79_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep58_val58_int, };
	Value* gep79_var = builder.CreateInBoundsGEP(arg3, gep79_array);
	llvm::LoadInst* load80_var = builder.CreateLoad(gep79_var, false);
	load80_var->setAlignment(4);
	Value* cmp81_var = builder.CreateICmp(CmpInst::ICMP_EQ, load80_var, gep11_val12_int);
	builder.CreateCondBr(cmp81_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast82_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	ArrayRef<Value*> gep83_array { gep4_val4_int, cast82_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[5], gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(16);
	Value* cast85_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep86_array { gep4_val4_int, cast82_var, switch15_val15_int, };
	Value* gep86_var = builder.CreateInBoundsGEP(globals[5], gep86_array);
	llvm::LoadInst* load87_var = builder.CreateLoad(gep86_var, false);
	load87_var->setAlignment(16);
	Value* cmp88_var = builder.CreateICmp(CmpInst::ICMP_EQ, load87_var, cmp44_val44_int);
	builder.CreateCondBr(cmp88_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep89_array { load84_var, };
	Value* gep89_var = builder.CreateInBoundsGEP(cast85_var, gep89_array);
	Value* cast90_var = builder.CreateCast(Instruction::BitCast, gep89_var, types[27]);
	llvm::LoadInst* load91_var = builder.CreateLoad(cast90_var, false);
	load91_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep92_array { gep4_val4_int, cast82_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep92_var = builder.CreateInBoundsGEP(globals[5], gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(8);
	Value* binop94_var = BinaryOperator::Create(Instruction::Add, load93_var, load84_var, "", builder.GetInsertBlock());
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load87_var, cmp52_val52_int);
	builder.CreateCondBr(cmp95_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep96_array { binop94_var, };
	Value* gep96_var = builder.CreateInBoundsGEP(cast85_var, gep96_array);
	Value* cast97_var = builder.CreateCast(Instruction::BitCast, gep96_var, types[28]);
	llvm::LoadInst* load98_var = builder.CreateLoad(cast97_var, false);
	load98_var->setAlignment(4);
	Value* cast99_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast82_var, gep11_val12_int, gep11_val12_int, gep58_val58_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* binop102_var = BinaryOperator::Create(Instruction::Add, load101_var, binop94_var, "", builder.GetInsertBlock());
	SwitchInst* switch103_var = builder.CreateSwitch(load87_var, block19, 2);
	switch103_var->addCase(cast<ConstantInt>(switch62_val62_int), block17);
	switch103_var->addCase(cast<ConstantInt>(switch62_val63_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep103_array { binop102_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast85_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[30]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(2);
	Value* cast106_var = builder.CreateCast(Instruction::ZExt, load105_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep107_array { gep4_val4_int, cast82_var, gep11_val12_int, gep11_val12_int, gep4_val5_int, };
	Value* gep107_var = builder.CreateInBoundsGEP(globals[5], gep107_array);
	llvm::LoadInst* load108_var = builder.CreateLoad(gep107_var, false);
	load108_var->setAlignment(8);
	Value* binop109_var = BinaryOperator::Create(Instruction::Add, load108_var, binop102_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep110_array { binop109_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast85_var, gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(1);
	Value* cast112_var = builder.CreateCast(Instruction::ZExt, load111_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call113_var = builder.CreateCall(globals[6], gep75_var);
	call113_var->setTailCall();
	call113_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi114_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep115_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep4_val5_int, };
	Value* gep115_var = builder.CreateInBoundsGEP(arg3, gep115_array);
	llvm::LoadInst* load116_var = builder.CreateLoad(gep115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::SExt, load116_var, types[0]);
	Value* binop118_var = BinaryOperator::Create(Instruction::Mul, cast117_var, phi114_var, "", builder.GetInsertBlock());
	Value* binop119_var = BinaryOperator::Create(Instruction::Add, binop118_var, phi78_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi120_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep121_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, switch15_val15_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(arg3, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(4);
	Value* cmp123_var = builder.CreateICmp(CmpInst::ICMP_EQ, load122_var, gep11_val12_int);
	builder.CreateCondBr(cmp123_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast124_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(16);
	Value* cast127_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast124_var, switch15_val15_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(16);
	Value* cmp130_var = builder.CreateICmp(CmpInst::ICMP_EQ, load129_var, cmp44_val44_int);
	builder.CreateCondBr(cmp130_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep131_array { load126_var, };
	Value* gep131_var = builder.CreateInBoundsGEP(cast127_var, gep131_array);
	Value* cast132_var = builder.CreateCast(Instruction::BitCast, gep131_var, types[27]);
	llvm::LoadInst* load133_var = builder.CreateLoad(cast132_var, false);
	load133_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep134_array { gep4_val4_int, cast124_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep134_var = builder.CreateInBoundsGEP(globals[5], gep134_array);
	llvm::LoadInst* load135_var = builder.CreateLoad(gep134_var, false);
	load135_var->setAlignment(8);
	Value* binop136_var = BinaryOperator::Create(Instruction::Add, load135_var, load126_var, "", builder.GetInsertBlock());
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load129_var, cmp52_val52_int);
	builder.CreateCondBr(cmp137_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep138_array { binop136_var, };
	Value* gep138_var = builder.CreateInBoundsGEP(cast127_var, gep138_array);
	Value* cast139_var = builder.CreateCast(Instruction::BitCast, gep138_var, types[28]);
	llvm::LoadInst* load140_var = builder.CreateLoad(cast139_var, false);
	load140_var->setAlignment(4);
	Value* cast141_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast124_var, gep11_val12_int, gep11_val12_int, gep58_val58_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* binop144_var = BinaryOperator::Create(Instruction::Add, load143_var, binop136_var, "", builder.GetInsertBlock());
	SwitchInst* switch145_var = builder.CreateSwitch(load129_var, block29, 2);
	switch145_var->addCase(cast<ConstantInt>(switch62_val62_int), block27);
	switch145_var->addCase(cast<ConstantInt>(switch62_val63_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep145_array { binop144_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast127_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[30]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(2);
	Value* cast148_var = builder.CreateCast(Instruction::ZExt, load147_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep149_array { gep4_val4_int, cast124_var, gep11_val12_int, gep11_val12_int, gep4_val5_int, };
	Value* gep149_var = builder.CreateInBoundsGEP(globals[5], gep149_array);
	llvm::LoadInst* load150_var = builder.CreateLoad(gep149_var, false);
	load150_var->setAlignment(8);
	Value* binop151_var = BinaryOperator::Create(Instruction::Add, load150_var, binop144_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep152_array { binop151_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast127_var, gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(1);
	Value* cast154_var = builder.CreateCast(Instruction::ZExt, load153_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call155_var = builder.CreateCall(globals[6], gep75_var);
	call155_var->setTailCall();
	call155_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi156_var = builder.CreatePHI(types[0], 4);
	Value* binop157_var = BinaryOperator::Create(Instruction::Add, phi156_var, phi120_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi158_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep159_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep58_val58_int, };
	Value* gep159_var = builder.CreateInBoundsGEP(arg3, gep159_array);
	llvm::LoadInst* load160_var = builder.CreateLoad(gep159_var, false);
	load160_var->setAlignment(1);
	Value* cast161_var = builder.CreateCast(Instruction::ZExt, load160_var, types[0]);
	CallInst* call162_var = builder.CreateCall3(globals[14], phi158_var, cast161_var, cast10_var);
	call162_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep164_array { gep4_val4_int, gep4_val4_int, };
	Value* gep164_var = builder.CreateInBoundsGEP(globals[15], gep164_array);
	CallInst* call164_var = builder.CreateCall(globals[6], gep164_var);
	call164_var->setTailCall();
	call164_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi78_var->addIncoming(gep4_val4_int, block2);
	phi78_var->addIncoming(load48_var, block4);
	phi78_var->addIncoming(cast57_var, block6);
	phi78_var->addIncoming(cast67_var, block8);
	phi78_var->addIncoming(cast73_var, block9);
	
	phi114_var->addIncoming(load91_var, block13);
	phi114_var->addIncoming(cast99_var, block15);
	phi114_var->addIncoming(cast106_var, block17);
	phi114_var->addIncoming(cast112_var, block18);
	
	phi120_var->addIncoming(binop119_var, block20);
	phi120_var->addIncoming(phi78_var, block11);
	
	phi156_var->addIncoming(load133_var, block23);
	phi156_var->addIncoming(cast141_var, block25);
	phi156_var->addIncoming(cast148_var, block27);
	phi156_var->addIncoming(cast154_var, block28);
	
	phi158_var->addIncoming(binop157_var, block30);
	phi158_var->addIncoming(phi120_var, block21);
	
	return;
}

void x86::x86_setno(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* binop8_val8_int = ConstantInt::get(types[11], 1u);
	Value* binop8_var = BinaryOperator::Create(Instruction::Xor, load7_var, binop8_val8_int, "", builder.GetInsertBlock());
	Value* cast10_var = builder.CreateCast(Instruction::ZExt, binop8_var, types[0]);
	Constant* gep11_val11_int = ConstantInt::get(types[2], 15u);
	Constant* gep11_val12_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep11_val12_int, };
	Value* gep11_var = builder.CreateInBoundsGEP(arg3, gep11_array);
	llvm::LoadInst* load14_var = builder.CreateLoad(gep11_var, false);
	load14_var->setAlignment(4);
	SwitchInst* switch15_var = builder.CreateSwitch(load14_var, block32, 2);
	Constant* switch15_val15_int = ConstantInt::get(types[2], 1u);
	switch15_var->addCase(cast<ConstantInt>(switch15_val15_int), block1);
	Constant* switch15_val16_int = ConstantInt::get(types[2], 3u);
	switch15_var->addCase(cast<ConstantInt>(switch15_val16_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep11_val12_int, };
	Value* gep17_var = builder.CreateGEP(arg3, gep17_array);
	llvm::LoadInst* load18_var = builder.CreateLoad(gep17_var, false);
	load18_var->setAlignment(4);
	Value* cast19_var = builder.CreateCast(Instruction::ZExt, load18_var, types[0]);
	ArrayRef<Value*> gep20_array { gep4_val4_int, cast19_var, switch15_val15_int, };
	Value* gep20_var = builder.CreateInBoundsGEP(globals[5], gep20_array);
	llvm::LoadInst* load22_var = builder.CreateLoad(gep20_var, false);
	load22_var->setAlignment(16);
	Constant* binop23_val23_int = ConstantInt::get(types[0], 3u);
	Value* binop23_var = BinaryOperator::Create(Instruction::Shl, load22_var, binop23_val23_int, "", builder.GetInsertBlock());
	Constant* binop25_val25_int = ConstantInt::get(types[0], 64u);
	Value* binop25_var = BinaryOperator::Create(Instruction::Sub, binop25_val25_int, binop23_var, "", builder.GetInsertBlock());
	Constant* binop27_val27_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop27_var = BinaryOperator::Create(Instruction::LShr, binop27_val27_int, binop25_var, "", builder.GetInsertBlock());
	Value* binop29_var = BinaryOperator::Create(Instruction::And, binop27_var, cast10_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep30_array { gep4_val4_int, cast19_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep30_var = builder.CreateInBoundsGEP(globals[5], gep30_array);
	llvm::LoadInst* load31_var = builder.CreateLoad(gep30_var, false);
	load31_var->setAlignment(16);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep33_array { load31_var, };
	Value* gep33_var = builder.CreateInBoundsGEP(cast32_var, gep33_array);
	Value* cast34_var = builder.CreateCast(Instruction::BitCast, gep33_var, types[27]);
	llvm::StoreInst* store35_var = builder.CreateStore(binop29_var, cast34_var, false);
	store35_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep36_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep11_val12_int, };
	Value* gep36_var = builder.CreateInBoundsGEP(arg3, gep36_array);
	llvm::LoadInst* load37_var = builder.CreateLoad(gep36_var, false);
	load37_var->setAlignment(4);
	Value* cmp38_var = builder.CreateICmp(CmpInst::ICMP_EQ, load37_var, gep11_val12_int);
	builder.CreateCondBr(cmp38_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast39_var = builder.CreateCast(Instruction::ZExt, load37_var, types[0]);
	ArrayRef<Value*> gep40_array { gep4_val4_int, cast39_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep40_var = builder.CreateInBoundsGEP(globals[5], gep40_array);
	llvm::LoadInst* load41_var = builder.CreateLoad(gep40_var, false);
	load41_var->setAlignment(16);
	Value* cast42_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep43_array { gep4_val4_int, cast39_var, switch15_val15_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Constant* cmp45_val45_int = ConstantInt::get(types[0], 8u);
	Value* cmp45_var = builder.CreateICmp(CmpInst::ICMP_EQ, load44_var, cmp45_val45_int);
	builder.CreateCondBr(cmp45_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep47_array { load41_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast42_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[27]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep50_array { gep4_val4_int, cast39_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep50_var = builder.CreateInBoundsGEP(globals[5], gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(8);
	Value* binop52_var = BinaryOperator::Create(Instruction::Add, load51_var, load41_var, "", builder.GetInsertBlock());
	Constant* cmp53_val53_int = ConstantInt::get(types[0], 4u);
	Value* cmp53_var = builder.CreateICmp(CmpInst::ICMP_EQ, load44_var, cmp53_val53_int);
	builder.CreateCondBr(cmp53_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep55_array { binop52_var, };
	Value* gep55_var = builder.CreateInBoundsGEP(cast42_var, gep55_array);
	Value* cast56_var = builder.CreateCast(Instruction::BitCast, gep55_var, types[28]);
	llvm::LoadInst* load57_var = builder.CreateLoad(cast56_var, false);
	load57_var->setAlignment(4);
	Value* cast58_var = builder.CreateCast(Instruction::ZExt, load57_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep59_val59_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep59_array { gep4_val4_int, cast39_var, gep11_val12_int, gep11_val12_int, gep59_val59_int, };
	Value* gep59_var = builder.CreateInBoundsGEP(globals[5], gep59_array);
	llvm::LoadInst* load61_var = builder.CreateLoad(gep59_var, false);
	load61_var->setAlignment(16);
	Value* binop62_var = BinaryOperator::Create(Instruction::Add, load61_var, binop52_var, "", builder.GetInsertBlock());
	SwitchInst* switch63_var = builder.CreateSwitch(load44_var, block10, 2);
	Constant* switch63_val63_int = ConstantInt::get(types[0], 2u);
	switch63_var->addCase(cast<ConstantInt>(switch63_val63_int), block8);
	Constant* switch63_val64_int = ConstantInt::get(types[0], 1u);
	switch63_var->addCase(cast<ConstantInt>(switch63_val64_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep65_array { binop62_var, };
	Value* gep65_var = builder.CreateInBoundsGEP(cast42_var, gep65_array);
	Value* cast66_var = builder.CreateCast(Instruction::BitCast, gep65_var, types[30]);
	llvm::LoadInst* load67_var = builder.CreateLoad(cast66_var, false);
	load67_var->setAlignment(2);
	Value* cast68_var = builder.CreateCast(Instruction::ZExt, load67_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep69_array { gep4_val4_int, cast39_var, gep11_val12_int, gep11_val12_int, switch15_val16_int, };
	Value* gep69_var = builder.CreateInBoundsGEP(globals[5], gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(8);
	Value* binop71_var = BinaryOperator::Create(Instruction::Add, load70_var, binop62_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep72_array { binop71_var, };
	Value* gep72_var = builder.CreateInBoundsGEP(cast42_var, gep72_array);
	llvm::LoadInst* load73_var = builder.CreateLoad(gep72_var, false);
	load73_var->setAlignment(1);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep76_array { gep4_val4_int, gep4_val4_int, };
	Value* gep76_var = builder.CreateInBoundsGEP(globals[7], gep76_array);
	CallInst* call75_var = builder.CreateCall(globals[6], gep76_var);
	call75_var->setTailCall();
	call75_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi79_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep80_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep59_val59_int, };
	Value* gep80_var = builder.CreateInBoundsGEP(arg3, gep80_array);
	llvm::LoadInst* load81_var = builder.CreateLoad(gep80_var, false);
	load81_var->setAlignment(4);
	Value* cmp82_var = builder.CreateICmp(CmpInst::ICMP_EQ, load81_var, gep11_val12_int);
	builder.CreateCondBr(cmp82_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast83_var = builder.CreateCast(Instruction::ZExt, load81_var, types[0]);
	ArrayRef<Value*> gep84_array { gep4_val4_int, cast83_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep84_var = builder.CreateInBoundsGEP(globals[5], gep84_array);
	llvm::LoadInst* load85_var = builder.CreateLoad(gep84_var, false);
	load85_var->setAlignment(16);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep87_array { gep4_val4_int, cast83_var, switch15_val15_int, };
	Value* gep87_var = builder.CreateInBoundsGEP(globals[5], gep87_array);
	llvm::LoadInst* load88_var = builder.CreateLoad(gep87_var, false);
	load88_var->setAlignment(16);
	Value* cmp89_var = builder.CreateICmp(CmpInst::ICMP_EQ, load88_var, cmp45_val45_int);
	builder.CreateCondBr(cmp89_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep90_array { load85_var, };
	Value* gep90_var = builder.CreateInBoundsGEP(cast86_var, gep90_array);
	Value* cast91_var = builder.CreateCast(Instruction::BitCast, gep90_var, types[27]);
	llvm::LoadInst* load92_var = builder.CreateLoad(cast91_var, false);
	load92_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep93_array { gep4_val4_int, cast83_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep93_var = builder.CreateInBoundsGEP(globals[5], gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(8);
	Value* binop95_var = BinaryOperator::Create(Instruction::Add, load94_var, load85_var, "", builder.GetInsertBlock());
	Value* cmp96_var = builder.CreateICmp(CmpInst::ICMP_EQ, load88_var, cmp53_val53_int);
	builder.CreateCondBr(cmp96_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep97_array { binop95_var, };
	Value* gep97_var = builder.CreateInBoundsGEP(cast86_var, gep97_array);
	Value* cast98_var = builder.CreateCast(Instruction::BitCast, gep97_var, types[28]);
	llvm::LoadInst* load99_var = builder.CreateLoad(cast98_var, false);
	load99_var->setAlignment(4);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load99_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep101_array { gep4_val4_int, cast83_var, gep11_val12_int, gep11_val12_int, gep59_val59_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* binop103_var = BinaryOperator::Create(Instruction::Add, load102_var, binop95_var, "", builder.GetInsertBlock());
	SwitchInst* switch104_var = builder.CreateSwitch(load88_var, block19, 2);
	switch104_var->addCase(cast<ConstantInt>(switch63_val63_int), block17);
	switch104_var->addCase(cast<ConstantInt>(switch63_val64_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep104_array { binop103_var, };
	Value* gep104_var = builder.CreateInBoundsGEP(cast86_var, gep104_array);
	Value* cast105_var = builder.CreateCast(Instruction::BitCast, gep104_var, types[30]);
	llvm::LoadInst* load106_var = builder.CreateLoad(cast105_var, false);
	load106_var->setAlignment(2);
	Value* cast107_var = builder.CreateCast(Instruction::ZExt, load106_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep108_array { gep4_val4_int, cast83_var, gep11_val12_int, gep11_val12_int, switch15_val16_int, };
	Value* gep108_var = builder.CreateInBoundsGEP(globals[5], gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(8);
	Value* binop110_var = BinaryOperator::Create(Instruction::Add, load109_var, binop103_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep111_array { binop110_var, };
	Value* gep111_var = builder.CreateInBoundsGEP(cast86_var, gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(1);
	Value* cast113_var = builder.CreateCast(Instruction::ZExt, load112_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call114_var = builder.CreateCall(globals[6], gep76_var);
	call114_var->setTailCall();
	call114_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi115_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep116_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, switch15_val16_int, };
	Value* gep116_var = builder.CreateInBoundsGEP(arg3, gep116_array);
	llvm::LoadInst* load117_var = builder.CreateLoad(gep116_var, false);
	load117_var->setAlignment(4);
	Value* cast118_var = builder.CreateCast(Instruction::SExt, load117_var, types[0]);
	Value* binop119_var = BinaryOperator::Create(Instruction::Mul, cast118_var, phi115_var, "", builder.GetInsertBlock());
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, binop119_var, phi79_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi121_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep122_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, switch15_val15_int, };
	Value* gep122_var = builder.CreateInBoundsGEP(arg3, gep122_array);
	llvm::LoadInst* load123_var = builder.CreateLoad(gep122_var, false);
	load123_var->setAlignment(4);
	Value* cmp124_var = builder.CreateICmp(CmpInst::ICMP_EQ, load123_var, gep11_val12_int);
	builder.CreateCondBr(cmp124_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast125_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast125_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(16);
	Value* cast128_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep129_array { gep4_val4_int, cast125_var, switch15_val15_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(globals[5], gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(16);
	Value* cmp131_var = builder.CreateICmp(CmpInst::ICMP_EQ, load130_var, cmp45_val45_int);
	builder.CreateCondBr(cmp131_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep132_array { load127_var, };
	Value* gep132_var = builder.CreateInBoundsGEP(cast128_var, gep132_array);
	Value* cast133_var = builder.CreateCast(Instruction::BitCast, gep132_var, types[27]);
	llvm::LoadInst* load134_var = builder.CreateLoad(cast133_var, false);
	load134_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep135_array { gep4_val4_int, cast125_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep135_var = builder.CreateInBoundsGEP(globals[5], gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(8);
	Value* binop137_var = BinaryOperator::Create(Instruction::Add, load136_var, load127_var, "", builder.GetInsertBlock());
	Value* cmp138_var = builder.CreateICmp(CmpInst::ICMP_EQ, load130_var, cmp53_val53_int);
	builder.CreateCondBr(cmp138_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep139_array { binop137_var, };
	Value* gep139_var = builder.CreateInBoundsGEP(cast128_var, gep139_array);
	Value* cast140_var = builder.CreateCast(Instruction::BitCast, gep139_var, types[28]);
	llvm::LoadInst* load141_var = builder.CreateLoad(cast140_var, false);
	load141_var->setAlignment(4);
	Value* cast142_var = builder.CreateCast(Instruction::ZExt, load141_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep143_array { gep4_val4_int, cast125_var, gep11_val12_int, gep11_val12_int, gep59_val59_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* binop145_var = BinaryOperator::Create(Instruction::Add, load144_var, binop137_var, "", builder.GetInsertBlock());
	SwitchInst* switch146_var = builder.CreateSwitch(load130_var, block29, 2);
	switch146_var->addCase(cast<ConstantInt>(switch63_val63_int), block27);
	switch146_var->addCase(cast<ConstantInt>(switch63_val64_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep146_array { binop145_var, };
	Value* gep146_var = builder.CreateInBoundsGEP(cast128_var, gep146_array);
	Value* cast147_var = builder.CreateCast(Instruction::BitCast, gep146_var, types[30]);
	llvm::LoadInst* load148_var = builder.CreateLoad(cast147_var, false);
	load148_var->setAlignment(2);
	Value* cast149_var = builder.CreateCast(Instruction::ZExt, load148_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep150_array { gep4_val4_int, cast125_var, gep11_val12_int, gep11_val12_int, switch15_val16_int, };
	Value* gep150_var = builder.CreateInBoundsGEP(globals[5], gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(8);
	Value* binop152_var = BinaryOperator::Create(Instruction::Add, load151_var, binop145_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep153_array { binop152_var, };
	Value* gep153_var = builder.CreateInBoundsGEP(cast128_var, gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(1);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call156_var = builder.CreateCall(globals[6], gep76_var);
	call156_var->setTailCall();
	call156_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi157_var = builder.CreatePHI(types[0], 4);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, phi157_var, phi121_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi159_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep160_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep59_val59_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(arg3, gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(1);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	CallInst* call163_var = builder.CreateCall3(globals[14], phi159_var, cast162_var, cast10_var);
	call163_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep165_array { gep4_val4_int, gep4_val4_int, };
	Value* gep165_var = builder.CreateInBoundsGEP(globals[15], gep165_array);
	CallInst* call165_var = builder.CreateCall(globals[6], gep165_var);
	call165_var->setTailCall();
	call165_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi79_var->addIncoming(gep4_val4_int, block2);
	phi79_var->addIncoming(load49_var, block4);
	phi79_var->addIncoming(cast58_var, block6);
	phi79_var->addIncoming(cast68_var, block8);
	phi79_var->addIncoming(cast74_var, block9);
	
	phi115_var->addIncoming(load92_var, block13);
	phi115_var->addIncoming(cast100_var, block15);
	phi115_var->addIncoming(cast107_var, block17);
	phi115_var->addIncoming(cast113_var, block18);
	
	phi121_var->addIncoming(binop120_var, block20);
	phi121_var->addIncoming(phi79_var, block11);
	
	phi157_var->addIncoming(load134_var, block23);
	phi157_var->addIncoming(cast142_var, block25);
	phi157_var->addIncoming(cast149_var, block27);
	phi157_var->addIncoming(cast155_var, block28);
	
	phi159_var->addIncoming(binop158_var, block30);
	phi159_var->addIncoming(phi121_var, block21);
	
	return;
}

void x86::x86_setnp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 1u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* binop8_val8_int = ConstantInt::get(types[11], 1u);
	Value* binop8_var = BinaryOperator::Create(Instruction::Xor, load7_var, binop8_val8_int, "", builder.GetInsertBlock());
	Value* cast10_var = builder.CreateCast(Instruction::ZExt, binop8_var, types[0]);
	Constant* gep11_val11_int = ConstantInt::get(types[2], 15u);
	Constant* gep11_val12_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep11_val12_int, };
	Value* gep11_var = builder.CreateInBoundsGEP(arg3, gep11_array);
	llvm::LoadInst* load14_var = builder.CreateLoad(gep11_var, false);
	load14_var->setAlignment(4);
	SwitchInst* switch15_var = builder.CreateSwitch(load14_var, block32, 2);
	switch15_var->addCase(cast<ConstantInt>(gep4_val5_int), block1);
	Constant* switch15_val15_int = ConstantInt::get(types[2], 3u);
	switch15_var->addCase(cast<ConstantInt>(switch15_val15_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep16_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep4_val5_int, gep11_val12_int, gep11_val12_int, };
	Value* gep16_var = builder.CreateGEP(arg3, gep16_array);
	llvm::LoadInst* load17_var = builder.CreateLoad(gep16_var, false);
	load17_var->setAlignment(4);
	Value* cast18_var = builder.CreateCast(Instruction::ZExt, load17_var, types[0]);
	ArrayRef<Value*> gep19_array { gep4_val4_int, cast18_var, gep4_val5_int, };
	Value* gep19_var = builder.CreateInBoundsGEP(globals[5], gep19_array);
	llvm::LoadInst* load21_var = builder.CreateLoad(gep19_var, false);
	load21_var->setAlignment(16);
	Constant* binop22_val22_int = ConstantInt::get(types[0], 3u);
	Value* binop22_var = BinaryOperator::Create(Instruction::Shl, load21_var, binop22_val22_int, "", builder.GetInsertBlock());
	Constant* binop24_val24_int = ConstantInt::get(types[0], 64u);
	Value* binop24_var = BinaryOperator::Create(Instruction::Sub, binop24_val24_int, binop22_var, "", builder.GetInsertBlock());
	Constant* binop26_val26_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop26_var = BinaryOperator::Create(Instruction::LShr, binop26_val26_int, binop24_var, "", builder.GetInsertBlock());
	Value* binop28_var = BinaryOperator::Create(Instruction::And, binop26_var, cast10_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep29_array { gep4_val4_int, cast18_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep29_var = builder.CreateInBoundsGEP(globals[5], gep29_array);
	llvm::LoadInst* load30_var = builder.CreateLoad(gep29_var, false);
	load30_var->setAlignment(16);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep32_array { load30_var, };
	Value* gep32_var = builder.CreateInBoundsGEP(cast31_var, gep32_array);
	Value* cast33_var = builder.CreateCast(Instruction::BitCast, gep32_var, types[27]);
	llvm::StoreInst* store34_var = builder.CreateStore(binop28_var, cast33_var, false);
	store34_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep35_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep4_val5_int, gep11_val12_int, gep11_val12_int, };
	Value* gep35_var = builder.CreateInBoundsGEP(arg3, gep35_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep35_var, false);
	load36_var->setAlignment(4);
	Value* cmp37_var = builder.CreateICmp(CmpInst::ICMP_EQ, load36_var, gep11_val12_int);
	builder.CreateCondBr(cmp37_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast38_var = builder.CreateCast(Instruction::ZExt, load36_var, types[0]);
	ArrayRef<Value*> gep39_array { gep4_val4_int, cast38_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep39_var = builder.CreateInBoundsGEP(globals[5], gep39_array);
	llvm::LoadInst* load40_var = builder.CreateLoad(gep39_var, false);
	load40_var->setAlignment(16);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep42_array { gep4_val4_int, cast38_var, gep4_val5_int, };
	Value* gep42_var = builder.CreateInBoundsGEP(globals[5], gep42_array);
	llvm::LoadInst* load43_var = builder.CreateLoad(gep42_var, false);
	load43_var->setAlignment(16);
	Constant* cmp44_val44_int = ConstantInt::get(types[0], 8u);
	Value* cmp44_var = builder.CreateICmp(CmpInst::ICMP_EQ, load43_var, cmp44_val44_int);
	builder.CreateCondBr(cmp44_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep46_array { load40_var, };
	Value* gep46_var = builder.CreateInBoundsGEP(cast41_var, gep46_array);
	Value* cast47_var = builder.CreateCast(Instruction::BitCast, gep46_var, types[27]);
	llvm::LoadInst* load48_var = builder.CreateLoad(cast47_var, false);
	load48_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep49_array { gep4_val4_int, cast38_var, gep11_val12_int, gep11_val12_int, gep4_val5_int, };
	Value* gep49_var = builder.CreateInBoundsGEP(globals[5], gep49_array);
	llvm::LoadInst* load50_var = builder.CreateLoad(gep49_var, false);
	load50_var->setAlignment(8);
	Value* binop51_var = BinaryOperator::Create(Instruction::Add, load50_var, load40_var, "", builder.GetInsertBlock());
	Constant* cmp52_val52_int = ConstantInt::get(types[0], 4u);
	Value* cmp52_var = builder.CreateICmp(CmpInst::ICMP_EQ, load43_var, cmp52_val52_int);
	builder.CreateCondBr(cmp52_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep54_array { binop51_var, };
	Value* gep54_var = builder.CreateInBoundsGEP(cast41_var, gep54_array);
	Value* cast55_var = builder.CreateCast(Instruction::BitCast, gep54_var, types[28]);
	llvm::LoadInst* load56_var = builder.CreateLoad(cast55_var, false);
	load56_var->setAlignment(4);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load56_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep58_val58_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast38_var, gep11_val12_int, gep11_val12_int, gep58_val58_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load60_var = builder.CreateLoad(gep58_var, false);
	load60_var->setAlignment(16);
	Value* binop61_var = BinaryOperator::Create(Instruction::Add, load60_var, binop51_var, "", builder.GetInsertBlock());
	SwitchInst* switch62_var = builder.CreateSwitch(load43_var, block10, 2);
	Constant* switch62_val62_int = ConstantInt::get(types[0], 2u);
	switch62_var->addCase(cast<ConstantInt>(switch62_val62_int), block8);
	Constant* switch62_val63_int = ConstantInt::get(types[0], 1u);
	switch62_var->addCase(cast<ConstantInt>(switch62_val63_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep64_array { binop61_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast41_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[30]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(2);
	Value* cast67_var = builder.CreateCast(Instruction::ZExt, load66_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep68_array { gep4_val4_int, cast38_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep68_var = builder.CreateInBoundsGEP(globals[5], gep68_array);
	llvm::LoadInst* load69_var = builder.CreateLoad(gep68_var, false);
	load69_var->setAlignment(8);
	Value* binop70_var = BinaryOperator::Create(Instruction::Add, load69_var, binop61_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep71_array { binop70_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast41_var, gep71_array);
	llvm::LoadInst* load72_var = builder.CreateLoad(gep71_var, false);
	load72_var->setAlignment(1);
	Value* cast73_var = builder.CreateCast(Instruction::ZExt, load72_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep75_array { gep4_val4_int, gep4_val4_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[7], gep75_array);
	CallInst* call74_var = builder.CreateCall(globals[6], gep75_var);
	call74_var->setTailCall();
	call74_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi78_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep79_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep4_val5_int, gep11_val12_int, gep58_val58_int, };
	Value* gep79_var = builder.CreateInBoundsGEP(arg3, gep79_array);
	llvm::LoadInst* load80_var = builder.CreateLoad(gep79_var, false);
	load80_var->setAlignment(4);
	Value* cmp81_var = builder.CreateICmp(CmpInst::ICMP_EQ, load80_var, gep11_val12_int);
	builder.CreateCondBr(cmp81_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast82_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	ArrayRef<Value*> gep83_array { gep4_val4_int, cast82_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep83_var = builder.CreateInBoundsGEP(globals[5], gep83_array);
	llvm::LoadInst* load84_var = builder.CreateLoad(gep83_var, false);
	load84_var->setAlignment(16);
	Value* cast85_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep86_array { gep4_val4_int, cast82_var, gep4_val5_int, };
	Value* gep86_var = builder.CreateInBoundsGEP(globals[5], gep86_array);
	llvm::LoadInst* load87_var = builder.CreateLoad(gep86_var, false);
	load87_var->setAlignment(16);
	Value* cmp88_var = builder.CreateICmp(CmpInst::ICMP_EQ, load87_var, cmp44_val44_int);
	builder.CreateCondBr(cmp88_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep89_array { load84_var, };
	Value* gep89_var = builder.CreateInBoundsGEP(cast85_var, gep89_array);
	Value* cast90_var = builder.CreateCast(Instruction::BitCast, gep89_var, types[27]);
	llvm::LoadInst* load91_var = builder.CreateLoad(cast90_var, false);
	load91_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep92_array { gep4_val4_int, cast82_var, gep11_val12_int, gep11_val12_int, gep4_val5_int, };
	Value* gep92_var = builder.CreateInBoundsGEP(globals[5], gep92_array);
	llvm::LoadInst* load93_var = builder.CreateLoad(gep92_var, false);
	load93_var->setAlignment(8);
	Value* binop94_var = BinaryOperator::Create(Instruction::Add, load93_var, load84_var, "", builder.GetInsertBlock());
	Value* cmp95_var = builder.CreateICmp(CmpInst::ICMP_EQ, load87_var, cmp52_val52_int);
	builder.CreateCondBr(cmp95_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep96_array { binop94_var, };
	Value* gep96_var = builder.CreateInBoundsGEP(cast85_var, gep96_array);
	Value* cast97_var = builder.CreateCast(Instruction::BitCast, gep96_var, types[28]);
	llvm::LoadInst* load98_var = builder.CreateLoad(cast97_var, false);
	load98_var->setAlignment(4);
	Value* cast99_var = builder.CreateCast(Instruction::ZExt, load98_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep100_array { gep4_val4_int, cast82_var, gep11_val12_int, gep11_val12_int, gep58_val58_int, };
	Value* gep100_var = builder.CreateInBoundsGEP(globals[5], gep100_array);
	llvm::LoadInst* load101_var = builder.CreateLoad(gep100_var, false);
	load101_var->setAlignment(16);
	Value* binop102_var = BinaryOperator::Create(Instruction::Add, load101_var, binop94_var, "", builder.GetInsertBlock());
	SwitchInst* switch103_var = builder.CreateSwitch(load87_var, block19, 2);
	switch103_var->addCase(cast<ConstantInt>(switch62_val62_int), block17);
	switch103_var->addCase(cast<ConstantInt>(switch62_val63_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep103_array { binop102_var, };
	Value* gep103_var = builder.CreateInBoundsGEP(cast85_var, gep103_array);
	Value* cast104_var = builder.CreateCast(Instruction::BitCast, gep103_var, types[30]);
	llvm::LoadInst* load105_var = builder.CreateLoad(cast104_var, false);
	load105_var->setAlignment(2);
	Value* cast106_var = builder.CreateCast(Instruction::ZExt, load105_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep107_array { gep4_val4_int, cast82_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep107_var = builder.CreateInBoundsGEP(globals[5], gep107_array);
	llvm::LoadInst* load108_var = builder.CreateLoad(gep107_var, false);
	load108_var->setAlignment(8);
	Value* binop109_var = BinaryOperator::Create(Instruction::Add, load108_var, binop102_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep110_array { binop109_var, };
	Value* gep110_var = builder.CreateInBoundsGEP(cast85_var, gep110_array);
	llvm::LoadInst* load111_var = builder.CreateLoad(gep110_var, false);
	load111_var->setAlignment(1);
	Value* cast112_var = builder.CreateCast(Instruction::ZExt, load111_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call113_var = builder.CreateCall(globals[6], gep75_var);
	call113_var->setTailCall();
	call113_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi114_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep115_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep4_val5_int, gep11_val12_int, switch15_val15_int, };
	Value* gep115_var = builder.CreateInBoundsGEP(arg3, gep115_array);
	llvm::LoadInst* load116_var = builder.CreateLoad(gep115_var, false);
	load116_var->setAlignment(4);
	Value* cast117_var = builder.CreateCast(Instruction::SExt, load116_var, types[0]);
	Value* binop118_var = BinaryOperator::Create(Instruction::Mul, cast117_var, phi114_var, "", builder.GetInsertBlock());
	Value* binop119_var = BinaryOperator::Create(Instruction::Add, binop118_var, phi78_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi120_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep121_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep4_val5_int, gep11_val12_int, gep4_val5_int, };
	Value* gep121_var = builder.CreateInBoundsGEP(arg3, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(4);
	Value* cmp123_var = builder.CreateICmp(CmpInst::ICMP_EQ, load122_var, gep11_val12_int);
	builder.CreateCondBr(cmp123_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast124_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	ArrayRef<Value*> gep125_array { gep4_val4_int, cast124_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep125_var = builder.CreateInBoundsGEP(globals[5], gep125_array);
	llvm::LoadInst* load126_var = builder.CreateLoad(gep125_var, false);
	load126_var->setAlignment(16);
	Value* cast127_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep128_array { gep4_val4_int, cast124_var, gep4_val5_int, };
	Value* gep128_var = builder.CreateInBoundsGEP(globals[5], gep128_array);
	llvm::LoadInst* load129_var = builder.CreateLoad(gep128_var, false);
	load129_var->setAlignment(16);
	Value* cmp130_var = builder.CreateICmp(CmpInst::ICMP_EQ, load129_var, cmp44_val44_int);
	builder.CreateCondBr(cmp130_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep131_array { load126_var, };
	Value* gep131_var = builder.CreateInBoundsGEP(cast127_var, gep131_array);
	Value* cast132_var = builder.CreateCast(Instruction::BitCast, gep131_var, types[27]);
	llvm::LoadInst* load133_var = builder.CreateLoad(cast132_var, false);
	load133_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep134_array { gep4_val4_int, cast124_var, gep11_val12_int, gep11_val12_int, gep4_val5_int, };
	Value* gep134_var = builder.CreateInBoundsGEP(globals[5], gep134_array);
	llvm::LoadInst* load135_var = builder.CreateLoad(gep134_var, false);
	load135_var->setAlignment(8);
	Value* binop136_var = BinaryOperator::Create(Instruction::Add, load135_var, load126_var, "", builder.GetInsertBlock());
	Value* cmp137_var = builder.CreateICmp(CmpInst::ICMP_EQ, load129_var, cmp52_val52_int);
	builder.CreateCondBr(cmp137_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep138_array { binop136_var, };
	Value* gep138_var = builder.CreateInBoundsGEP(cast127_var, gep138_array);
	Value* cast139_var = builder.CreateCast(Instruction::BitCast, gep138_var, types[28]);
	llvm::LoadInst* load140_var = builder.CreateLoad(cast139_var, false);
	load140_var->setAlignment(4);
	Value* cast141_var = builder.CreateCast(Instruction::ZExt, load140_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep142_array { gep4_val4_int, cast124_var, gep11_val12_int, gep11_val12_int, gep58_val58_int, };
	Value* gep142_var = builder.CreateInBoundsGEP(globals[5], gep142_array);
	llvm::LoadInst* load143_var = builder.CreateLoad(gep142_var, false);
	load143_var->setAlignment(16);
	Value* binop144_var = BinaryOperator::Create(Instruction::Add, load143_var, binop136_var, "", builder.GetInsertBlock());
	SwitchInst* switch145_var = builder.CreateSwitch(load129_var, block29, 2);
	switch145_var->addCase(cast<ConstantInt>(switch62_val62_int), block27);
	switch145_var->addCase(cast<ConstantInt>(switch62_val63_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep145_array { binop144_var, };
	Value* gep145_var = builder.CreateInBoundsGEP(cast127_var, gep145_array);
	Value* cast146_var = builder.CreateCast(Instruction::BitCast, gep145_var, types[30]);
	llvm::LoadInst* load147_var = builder.CreateLoad(cast146_var, false);
	load147_var->setAlignment(2);
	Value* cast148_var = builder.CreateCast(Instruction::ZExt, load147_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep149_array { gep4_val4_int, cast124_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep149_var = builder.CreateInBoundsGEP(globals[5], gep149_array);
	llvm::LoadInst* load150_var = builder.CreateLoad(gep149_var, false);
	load150_var->setAlignment(8);
	Value* binop151_var = BinaryOperator::Create(Instruction::Add, load150_var, binop144_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep152_array { binop151_var, };
	Value* gep152_var = builder.CreateInBoundsGEP(cast127_var, gep152_array);
	llvm::LoadInst* load153_var = builder.CreateLoad(gep152_var, false);
	load153_var->setAlignment(1);
	Value* cast154_var = builder.CreateCast(Instruction::ZExt, load153_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call155_var = builder.CreateCall(globals[6], gep75_var);
	call155_var->setTailCall();
	call155_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi156_var = builder.CreatePHI(types[0], 4);
	Value* binop157_var = BinaryOperator::Create(Instruction::Add, phi156_var, phi120_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi158_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep159_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep58_val58_int, };
	Value* gep159_var = builder.CreateInBoundsGEP(arg3, gep159_array);
	llvm::LoadInst* load160_var = builder.CreateLoad(gep159_var, false);
	load160_var->setAlignment(1);
	Value* cast161_var = builder.CreateCast(Instruction::ZExt, load160_var, types[0]);
	CallInst* call162_var = builder.CreateCall3(globals[14], phi158_var, cast161_var, cast10_var);
	call162_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep164_array { gep4_val4_int, gep4_val4_int, };
	Value* gep164_var = builder.CreateInBoundsGEP(globals[15], gep164_array);
	CallInst* call164_var = builder.CreateCall(globals[6], gep164_var);
	call164_var->setTailCall();
	call164_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi78_var->addIncoming(gep4_val4_int, block2);
	phi78_var->addIncoming(load48_var, block4);
	phi78_var->addIncoming(cast57_var, block6);
	phi78_var->addIncoming(cast67_var, block8);
	phi78_var->addIncoming(cast73_var, block9);
	
	phi114_var->addIncoming(load91_var, block13);
	phi114_var->addIncoming(cast99_var, block15);
	phi114_var->addIncoming(cast106_var, block17);
	phi114_var->addIncoming(cast112_var, block18);
	
	phi120_var->addIncoming(binop119_var, block20);
	phi120_var->addIncoming(phi78_var, block11);
	
	phi156_var->addIncoming(load133_var, block23);
	phi156_var->addIncoming(cast141_var, block25);
	phi156_var->addIncoming(cast148_var, block27);
	phi156_var->addIncoming(cast154_var, block28);
	
	phi158_var->addIncoming(binop157_var, block30);
	phi158_var->addIncoming(phi120_var, block21);
	
	return;
}

void x86::x86_setns(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Constant* binop8_val8_int = ConstantInt::get(types[11], 1u);
	Value* binop8_var = BinaryOperator::Create(Instruction::Xor, load7_var, binop8_val8_int, "", builder.GetInsertBlock());
	Value* cast10_var = builder.CreateCast(Instruction::ZExt, binop8_var, types[0]);
	Constant* gep11_val11_int = ConstantInt::get(types[2], 15u);
	Constant* gep11_val12_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep11_val12_int, };
	Value* gep11_var = builder.CreateInBoundsGEP(arg3, gep11_array);
	llvm::LoadInst* load14_var = builder.CreateLoad(gep11_var, false);
	load14_var->setAlignment(4);
	SwitchInst* switch15_var = builder.CreateSwitch(load14_var, block32, 2);
	Constant* switch15_val15_int = ConstantInt::get(types[2], 1u);
	switch15_var->addCase(cast<ConstantInt>(switch15_val15_int), block1);
	Constant* switch15_val16_int = ConstantInt::get(types[2], 3u);
	switch15_var->addCase(cast<ConstantInt>(switch15_val16_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep17_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep11_val12_int, };
	Value* gep17_var = builder.CreateGEP(arg3, gep17_array);
	llvm::LoadInst* load18_var = builder.CreateLoad(gep17_var, false);
	load18_var->setAlignment(4);
	Value* cast19_var = builder.CreateCast(Instruction::ZExt, load18_var, types[0]);
	ArrayRef<Value*> gep20_array { gep4_val4_int, cast19_var, switch15_val15_int, };
	Value* gep20_var = builder.CreateInBoundsGEP(globals[5], gep20_array);
	llvm::LoadInst* load22_var = builder.CreateLoad(gep20_var, false);
	load22_var->setAlignment(16);
	Constant* binop23_val23_int = ConstantInt::get(types[0], 3u);
	Value* binop23_var = BinaryOperator::Create(Instruction::Shl, load22_var, binop23_val23_int, "", builder.GetInsertBlock());
	Constant* binop25_val25_int = ConstantInt::get(types[0], 64u);
	Value* binop25_var = BinaryOperator::Create(Instruction::Sub, binop25_val25_int, binop23_var, "", builder.GetInsertBlock());
	Constant* binop27_val27_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop27_var = BinaryOperator::Create(Instruction::LShr, binop27_val27_int, binop25_var, "", builder.GetInsertBlock());
	Value* binop29_var = BinaryOperator::Create(Instruction::And, binop27_var, cast10_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep30_array { gep4_val4_int, cast19_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep30_var = builder.CreateInBoundsGEP(globals[5], gep30_array);
	llvm::LoadInst* load31_var = builder.CreateLoad(gep30_var, false);
	load31_var->setAlignment(16);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep33_array { load31_var, };
	Value* gep33_var = builder.CreateInBoundsGEP(cast32_var, gep33_array);
	Value* cast34_var = builder.CreateCast(Instruction::BitCast, gep33_var, types[27]);
	llvm::StoreInst* store35_var = builder.CreateStore(binop29_var, cast34_var, false);
	store35_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep36_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep11_val12_int, };
	Value* gep36_var = builder.CreateInBoundsGEP(arg3, gep36_array);
	llvm::LoadInst* load37_var = builder.CreateLoad(gep36_var, false);
	load37_var->setAlignment(4);
	Value* cmp38_var = builder.CreateICmp(CmpInst::ICMP_EQ, load37_var, gep11_val12_int);
	builder.CreateCondBr(cmp38_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast39_var = builder.CreateCast(Instruction::ZExt, load37_var, types[0]);
	ArrayRef<Value*> gep40_array { gep4_val4_int, cast39_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep40_var = builder.CreateInBoundsGEP(globals[5], gep40_array);
	llvm::LoadInst* load41_var = builder.CreateLoad(gep40_var, false);
	load41_var->setAlignment(16);
	Value* cast42_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep43_array { gep4_val4_int, cast39_var, switch15_val15_int, };
	Value* gep43_var = builder.CreateInBoundsGEP(globals[5], gep43_array);
	llvm::LoadInst* load44_var = builder.CreateLoad(gep43_var, false);
	load44_var->setAlignment(16);
	Constant* cmp45_val45_int = ConstantInt::get(types[0], 8u);
	Value* cmp45_var = builder.CreateICmp(CmpInst::ICMP_EQ, load44_var, cmp45_val45_int);
	builder.CreateCondBr(cmp45_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep47_array { load41_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast42_var, gep47_array);
	Value* cast48_var = builder.CreateCast(Instruction::BitCast, gep47_var, types[27]);
	llvm::LoadInst* load49_var = builder.CreateLoad(cast48_var, false);
	load49_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep50_array { gep4_val4_int, cast39_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep50_var = builder.CreateInBoundsGEP(globals[5], gep50_array);
	llvm::LoadInst* load51_var = builder.CreateLoad(gep50_var, false);
	load51_var->setAlignment(8);
	Value* binop52_var = BinaryOperator::Create(Instruction::Add, load51_var, load41_var, "", builder.GetInsertBlock());
	Constant* cmp53_val53_int = ConstantInt::get(types[0], 4u);
	Value* cmp53_var = builder.CreateICmp(CmpInst::ICMP_EQ, load44_var, cmp53_val53_int);
	builder.CreateCondBr(cmp53_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep55_array { binop52_var, };
	Value* gep55_var = builder.CreateInBoundsGEP(cast42_var, gep55_array);
	Value* cast56_var = builder.CreateCast(Instruction::BitCast, gep55_var, types[28]);
	llvm::LoadInst* load57_var = builder.CreateLoad(cast56_var, false);
	load57_var->setAlignment(4);
	Value* cast58_var = builder.CreateCast(Instruction::ZExt, load57_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep59_val59_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep59_array { gep4_val4_int, cast39_var, gep11_val12_int, gep11_val12_int, gep59_val59_int, };
	Value* gep59_var = builder.CreateInBoundsGEP(globals[5], gep59_array);
	llvm::LoadInst* load61_var = builder.CreateLoad(gep59_var, false);
	load61_var->setAlignment(16);
	Value* binop62_var = BinaryOperator::Create(Instruction::Add, load61_var, binop52_var, "", builder.GetInsertBlock());
	SwitchInst* switch63_var = builder.CreateSwitch(load44_var, block10, 2);
	Constant* switch63_val63_int = ConstantInt::get(types[0], 2u);
	switch63_var->addCase(cast<ConstantInt>(switch63_val63_int), block8);
	Constant* switch63_val64_int = ConstantInt::get(types[0], 1u);
	switch63_var->addCase(cast<ConstantInt>(switch63_val64_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep65_array { binop62_var, };
	Value* gep65_var = builder.CreateInBoundsGEP(cast42_var, gep65_array);
	Value* cast66_var = builder.CreateCast(Instruction::BitCast, gep65_var, types[30]);
	llvm::LoadInst* load67_var = builder.CreateLoad(cast66_var, false);
	load67_var->setAlignment(2);
	Value* cast68_var = builder.CreateCast(Instruction::ZExt, load67_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep69_array { gep4_val4_int, cast39_var, gep11_val12_int, gep11_val12_int, switch15_val16_int, };
	Value* gep69_var = builder.CreateInBoundsGEP(globals[5], gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(8);
	Value* binop71_var = BinaryOperator::Create(Instruction::Add, load70_var, binop62_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep72_array { binop71_var, };
	Value* gep72_var = builder.CreateInBoundsGEP(cast42_var, gep72_array);
	llvm::LoadInst* load73_var = builder.CreateLoad(gep72_var, false);
	load73_var->setAlignment(1);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep76_array { gep4_val4_int, gep4_val4_int, };
	Value* gep76_var = builder.CreateInBoundsGEP(globals[7], gep76_array);
	CallInst* call75_var = builder.CreateCall(globals[6], gep76_var);
	call75_var->setTailCall();
	call75_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi79_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep80_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, gep59_val59_int, };
	Value* gep80_var = builder.CreateInBoundsGEP(arg3, gep80_array);
	llvm::LoadInst* load81_var = builder.CreateLoad(gep80_var, false);
	load81_var->setAlignment(4);
	Value* cmp82_var = builder.CreateICmp(CmpInst::ICMP_EQ, load81_var, gep11_val12_int);
	builder.CreateCondBr(cmp82_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast83_var = builder.CreateCast(Instruction::ZExt, load81_var, types[0]);
	ArrayRef<Value*> gep84_array { gep4_val4_int, cast83_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep84_var = builder.CreateInBoundsGEP(globals[5], gep84_array);
	llvm::LoadInst* load85_var = builder.CreateLoad(gep84_var, false);
	load85_var->setAlignment(16);
	Value* cast86_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep87_array { gep4_val4_int, cast83_var, switch15_val15_int, };
	Value* gep87_var = builder.CreateInBoundsGEP(globals[5], gep87_array);
	llvm::LoadInst* load88_var = builder.CreateLoad(gep87_var, false);
	load88_var->setAlignment(16);
	Value* cmp89_var = builder.CreateICmp(CmpInst::ICMP_EQ, load88_var, cmp45_val45_int);
	builder.CreateCondBr(cmp89_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep90_array { load85_var, };
	Value* gep90_var = builder.CreateInBoundsGEP(cast86_var, gep90_array);
	Value* cast91_var = builder.CreateCast(Instruction::BitCast, gep90_var, types[27]);
	llvm::LoadInst* load92_var = builder.CreateLoad(cast91_var, false);
	load92_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep93_array { gep4_val4_int, cast83_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep93_var = builder.CreateInBoundsGEP(globals[5], gep93_array);
	llvm::LoadInst* load94_var = builder.CreateLoad(gep93_var, false);
	load94_var->setAlignment(8);
	Value* binop95_var = BinaryOperator::Create(Instruction::Add, load94_var, load85_var, "", builder.GetInsertBlock());
	Value* cmp96_var = builder.CreateICmp(CmpInst::ICMP_EQ, load88_var, cmp53_val53_int);
	builder.CreateCondBr(cmp96_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep97_array { binop95_var, };
	Value* gep97_var = builder.CreateInBoundsGEP(cast86_var, gep97_array);
	Value* cast98_var = builder.CreateCast(Instruction::BitCast, gep97_var, types[28]);
	llvm::LoadInst* load99_var = builder.CreateLoad(cast98_var, false);
	load99_var->setAlignment(4);
	Value* cast100_var = builder.CreateCast(Instruction::ZExt, load99_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep101_array { gep4_val4_int, cast83_var, gep11_val12_int, gep11_val12_int, gep59_val59_int, };
	Value* gep101_var = builder.CreateInBoundsGEP(globals[5], gep101_array);
	llvm::LoadInst* load102_var = builder.CreateLoad(gep101_var, false);
	load102_var->setAlignment(16);
	Value* binop103_var = BinaryOperator::Create(Instruction::Add, load102_var, binop95_var, "", builder.GetInsertBlock());
	SwitchInst* switch104_var = builder.CreateSwitch(load88_var, block19, 2);
	switch104_var->addCase(cast<ConstantInt>(switch63_val63_int), block17);
	switch104_var->addCase(cast<ConstantInt>(switch63_val64_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep104_array { binop103_var, };
	Value* gep104_var = builder.CreateInBoundsGEP(cast86_var, gep104_array);
	Value* cast105_var = builder.CreateCast(Instruction::BitCast, gep104_var, types[30]);
	llvm::LoadInst* load106_var = builder.CreateLoad(cast105_var, false);
	load106_var->setAlignment(2);
	Value* cast107_var = builder.CreateCast(Instruction::ZExt, load106_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep108_array { gep4_val4_int, cast83_var, gep11_val12_int, gep11_val12_int, switch15_val16_int, };
	Value* gep108_var = builder.CreateInBoundsGEP(globals[5], gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(8);
	Value* binop110_var = BinaryOperator::Create(Instruction::Add, load109_var, binop103_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep111_array { binop110_var, };
	Value* gep111_var = builder.CreateInBoundsGEP(cast86_var, gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(1);
	Value* cast113_var = builder.CreateCast(Instruction::ZExt, load112_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call114_var = builder.CreateCall(globals[6], gep76_var);
	call114_var->setTailCall();
	call114_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi115_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep116_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, switch15_val16_int, };
	Value* gep116_var = builder.CreateInBoundsGEP(arg3, gep116_array);
	llvm::LoadInst* load117_var = builder.CreateLoad(gep116_var, false);
	load117_var->setAlignment(4);
	Value* cast118_var = builder.CreateCast(Instruction::SExt, load117_var, types[0]);
	Value* binop119_var = BinaryOperator::Create(Instruction::Mul, cast118_var, phi115_var, "", builder.GetInsertBlock());
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, binop119_var, phi79_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi121_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep122_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, switch15_val15_int, gep11_val12_int, switch15_val15_int, };
	Value* gep122_var = builder.CreateInBoundsGEP(arg3, gep122_array);
	llvm::LoadInst* load123_var = builder.CreateLoad(gep122_var, false);
	load123_var->setAlignment(4);
	Value* cmp124_var = builder.CreateICmp(CmpInst::ICMP_EQ, load123_var, gep11_val12_int);
	builder.CreateCondBr(cmp124_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast125_var = builder.CreateCast(Instruction::ZExt, load123_var, types[0]);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast125_var, gep11_val12_int, gep11_val12_int, gep11_val12_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(16);
	Value* cast128_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep129_array { gep4_val4_int, cast125_var, switch15_val15_int, };
	Value* gep129_var = builder.CreateInBoundsGEP(globals[5], gep129_array);
	llvm::LoadInst* load130_var = builder.CreateLoad(gep129_var, false);
	load130_var->setAlignment(16);
	Value* cmp131_var = builder.CreateICmp(CmpInst::ICMP_EQ, load130_var, cmp45_val45_int);
	builder.CreateCondBr(cmp131_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep132_array { load127_var, };
	Value* gep132_var = builder.CreateInBoundsGEP(cast128_var, gep132_array);
	Value* cast133_var = builder.CreateCast(Instruction::BitCast, gep132_var, types[27]);
	llvm::LoadInst* load134_var = builder.CreateLoad(cast133_var, false);
	load134_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep135_array { gep4_val4_int, cast125_var, gep11_val12_int, gep11_val12_int, switch15_val15_int, };
	Value* gep135_var = builder.CreateInBoundsGEP(globals[5], gep135_array);
	llvm::LoadInst* load136_var = builder.CreateLoad(gep135_var, false);
	load136_var->setAlignment(8);
	Value* binop137_var = BinaryOperator::Create(Instruction::Add, load136_var, load127_var, "", builder.GetInsertBlock());
	Value* cmp138_var = builder.CreateICmp(CmpInst::ICMP_EQ, load130_var, cmp53_val53_int);
	builder.CreateCondBr(cmp138_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep139_array { binop137_var, };
	Value* gep139_var = builder.CreateInBoundsGEP(cast128_var, gep139_array);
	Value* cast140_var = builder.CreateCast(Instruction::BitCast, gep139_var, types[28]);
	llvm::LoadInst* load141_var = builder.CreateLoad(cast140_var, false);
	load141_var->setAlignment(4);
	Value* cast142_var = builder.CreateCast(Instruction::ZExt, load141_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep143_array { gep4_val4_int, cast125_var, gep11_val12_int, gep11_val12_int, gep59_val59_int, };
	Value* gep143_var = builder.CreateInBoundsGEP(globals[5], gep143_array);
	llvm::LoadInst* load144_var = builder.CreateLoad(gep143_var, false);
	load144_var->setAlignment(16);
	Value* binop145_var = BinaryOperator::Create(Instruction::Add, load144_var, binop137_var, "", builder.GetInsertBlock());
	SwitchInst* switch146_var = builder.CreateSwitch(load130_var, block29, 2);
	switch146_var->addCase(cast<ConstantInt>(switch63_val63_int), block27);
	switch146_var->addCase(cast<ConstantInt>(switch63_val64_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep146_array { binop145_var, };
	Value* gep146_var = builder.CreateInBoundsGEP(cast128_var, gep146_array);
	Value* cast147_var = builder.CreateCast(Instruction::BitCast, gep146_var, types[30]);
	llvm::LoadInst* load148_var = builder.CreateLoad(cast147_var, false);
	load148_var->setAlignment(2);
	Value* cast149_var = builder.CreateCast(Instruction::ZExt, load148_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep150_array { gep4_val4_int, cast125_var, gep11_val12_int, gep11_val12_int, switch15_val16_int, };
	Value* gep150_var = builder.CreateInBoundsGEP(globals[5], gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(8);
	Value* binop152_var = BinaryOperator::Create(Instruction::Add, load151_var, binop145_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep153_array { binop152_var, };
	Value* gep153_var = builder.CreateInBoundsGEP(cast128_var, gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(1);
	Value* cast155_var = builder.CreateCast(Instruction::ZExt, load154_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call156_var = builder.CreateCall(globals[6], gep76_var);
	call156_var->setTailCall();
	call156_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi157_var = builder.CreatePHI(types[0], 4);
	Value* binop158_var = BinaryOperator::Create(Instruction::Add, phi157_var, phi121_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi159_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep160_array { gep4_val4_int, gep11_val11_int, gep4_val4_int, gep59_val59_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(arg3, gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(1);
	Value* cast162_var = builder.CreateCast(Instruction::ZExt, load161_var, types[0]);
	CallInst* call163_var = builder.CreateCall3(globals[14], phi159_var, cast162_var, cast10_var);
	call163_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep165_array { gep4_val4_int, gep4_val4_int, };
	Value* gep165_var = builder.CreateInBoundsGEP(globals[15], gep165_array);
	CallInst* call165_var = builder.CreateCall(globals[6], gep165_var);
	call165_var->setTailCall();
	call165_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi79_var->addIncoming(gep4_val4_int, block2);
	phi79_var->addIncoming(load49_var, block4);
	phi79_var->addIncoming(cast58_var, block6);
	phi79_var->addIncoming(cast68_var, block8);
	phi79_var->addIncoming(cast74_var, block9);
	
	phi115_var->addIncoming(load92_var, block13);
	phi115_var->addIncoming(cast100_var, block15);
	phi115_var->addIncoming(cast107_var, block17);
	phi115_var->addIncoming(cast113_var, block18);
	
	phi121_var->addIncoming(binop120_var, block20);
	phi121_var->addIncoming(phi79_var, block11);
	
	phi157_var->addIncoming(load134_var, block23);
	phi157_var->addIncoming(cast142_var, block25);
	phi157_var->addIncoming(cast149_var, block27);
	phi157_var->addIncoming(cast155_var, block28);
	
	phi159_var->addIncoming(binop158_var, block30);
	phi159_var->addIncoming(phi121_var, block21);
	
	return;
}

void x86::x86_seto(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Value* cast8_var = builder.CreateCast(Instruction::ZExt, load7_var, types[0]);
	Constant* gep9_val9_int = ConstantInt::get(types[2], 15u);
	Constant* gep9_val10_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep9_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep9_val10_int, };
	Value* gep9_var = builder.CreateInBoundsGEP(arg3, gep9_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep9_var, false);
	load12_var->setAlignment(4);
	SwitchInst* switch13_var = builder.CreateSwitch(load12_var, block32, 2);
	Constant* switch13_val13_int = ConstantInt::get(types[2], 1u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val13_int), block1);
	Constant* switch13_val14_int = ConstantInt::get(types[2], 3u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val14_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep15_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep9_val10_int, };
	Value* gep15_var = builder.CreateGEP(arg3, gep15_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep15_var, false);
	load16_var->setAlignment(4);
	Value* cast17_var = builder.CreateCast(Instruction::ZExt, load16_var, types[0]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast17_var, switch13_val13_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep18_var, false);
	load20_var->setAlignment(16);
	Constant* binop21_val21_int = ConstantInt::get(types[0], 3u);
	Value* binop21_var = BinaryOperator::Create(Instruction::Shl, load20_var, binop21_val21_int, "", builder.GetInsertBlock());
	Constant* binop23_val23_int = ConstantInt::get(types[0], 64u);
	Value* binop23_var = BinaryOperator::Create(Instruction::Sub, binop23_val23_int, binop21_var, "", builder.GetInsertBlock());
	Constant* binop25_val25_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop25_var = BinaryOperator::Create(Instruction::LShr, binop25_val25_int, binop23_var, "", builder.GetInsertBlock());
	Value* binop27_var = BinaryOperator::Create(Instruction::And, binop25_var, cast8_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep28_array { gep4_val4_int, cast17_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep28_var = builder.CreateInBoundsGEP(globals[5], gep28_array);
	llvm::LoadInst* load29_var = builder.CreateLoad(gep28_var, false);
	load29_var->setAlignment(16);
	Value* cast30_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep31_array { load29_var, };
	Value* gep31_var = builder.CreateInBoundsGEP(cast30_var, gep31_array);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, gep31_var, types[27]);
	llvm::StoreInst* store33_var = builder.CreateStore(binop27_var, cast32_var, false);
	store33_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep34_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep9_val10_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(arg3, gep34_array);
	llvm::LoadInst* load35_var = builder.CreateLoad(gep34_var, false);
	load35_var->setAlignment(4);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load35_var, gep9_val10_int);
	builder.CreateCondBr(cmp36_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast37_var = builder.CreateCast(Instruction::ZExt, load35_var, types[0]);
	ArrayRef<Value*> gep38_array { gep4_val4_int, cast37_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep38_var = builder.CreateInBoundsGEP(globals[5], gep38_array);
	llvm::LoadInst* load39_var = builder.CreateLoad(gep38_var, false);
	load39_var->setAlignment(16);
	Value* cast40_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep41_array { gep4_val4_int, cast37_var, switch13_val13_int, };
	Value* gep41_var = builder.CreateInBoundsGEP(globals[5], gep41_array);
	llvm::LoadInst* load42_var = builder.CreateLoad(gep41_var, false);
	load42_var->setAlignment(16);
	Constant* cmp43_val43_int = ConstantInt::get(types[0], 8u);
	Value* cmp43_var = builder.CreateICmp(CmpInst::ICMP_EQ, load42_var, cmp43_val43_int);
	builder.CreateCondBr(cmp43_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep45_array { load39_var, };
	Value* gep45_var = builder.CreateInBoundsGEP(cast40_var, gep45_array);
	Value* cast46_var = builder.CreateCast(Instruction::BitCast, gep45_var, types[27]);
	llvm::LoadInst* load47_var = builder.CreateLoad(cast46_var, false);
	load47_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep48_array { gep4_val4_int, cast37_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep48_var = builder.CreateInBoundsGEP(globals[5], gep48_array);
	llvm::LoadInst* load49_var = builder.CreateLoad(gep48_var, false);
	load49_var->setAlignment(8);
	Value* binop50_var = BinaryOperator::Create(Instruction::Add, load49_var, load39_var, "", builder.GetInsertBlock());
	Constant* cmp51_val51_int = ConstantInt::get(types[0], 4u);
	Value* cmp51_var = builder.CreateICmp(CmpInst::ICMP_EQ, load42_var, cmp51_val51_int);
	builder.CreateCondBr(cmp51_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep53_array { binop50_var, };
	Value* gep53_var = builder.CreateInBoundsGEP(cast40_var, gep53_array);
	Value* cast54_var = builder.CreateCast(Instruction::BitCast, gep53_var, types[28]);
	llvm::LoadInst* load55_var = builder.CreateLoad(cast54_var, false);
	load55_var->setAlignment(4);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep57_val57_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep57_array { gep4_val4_int, cast37_var, gep9_val10_int, gep9_val10_int, gep57_val57_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(globals[5], gep57_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep57_var, false);
	load59_var->setAlignment(16);
	Value* binop60_var = BinaryOperator::Create(Instruction::Add, load59_var, binop50_var, "", builder.GetInsertBlock());
	SwitchInst* switch61_var = builder.CreateSwitch(load42_var, block10, 2);
	Constant* switch61_val61_int = ConstantInt::get(types[0], 2u);
	switch61_var->addCase(cast<ConstantInt>(switch61_val61_int), block8);
	Constant* switch61_val62_int = ConstantInt::get(types[0], 1u);
	switch61_var->addCase(cast<ConstantInt>(switch61_val62_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep63_array { binop60_var, };
	Value* gep63_var = builder.CreateInBoundsGEP(cast40_var, gep63_array);
	Value* cast64_var = builder.CreateCast(Instruction::BitCast, gep63_var, types[30]);
	llvm::LoadInst* load65_var = builder.CreateLoad(cast64_var, false);
	load65_var->setAlignment(2);
	Value* cast66_var = builder.CreateCast(Instruction::ZExt, load65_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast37_var, gep9_val10_int, gep9_val10_int, switch13_val14_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, binop60_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep70_array { binop69_var, };
	Value* gep70_var = builder.CreateInBoundsGEP(cast40_var, gep70_array);
	llvm::LoadInst* load71_var = builder.CreateLoad(gep70_var, false);
	load71_var->setAlignment(1);
	Value* cast72_var = builder.CreateCast(Instruction::ZExt, load71_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep74_array { gep4_val4_int, gep4_val4_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[7], gep74_array);
	CallInst* call73_var = builder.CreateCall(globals[6], gep74_var);
	call73_var->setTailCall();
	call73_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi77_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep78_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep57_val57_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(arg3, gep78_array);
	llvm::LoadInst* load79_var = builder.CreateLoad(gep78_var, false);
	load79_var->setAlignment(4);
	Value* cmp80_var = builder.CreateICmp(CmpInst::ICMP_EQ, load79_var, gep9_val10_int);
	builder.CreateCondBr(cmp80_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load79_var, types[0]);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast81_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* cast84_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast81_var, switch13_val13_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(16);
	Value* cmp87_var = builder.CreateICmp(CmpInst::ICMP_EQ, load86_var, cmp43_val43_int);
	builder.CreateCondBr(cmp87_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep88_array { load83_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast84_var, gep88_array);
	Value* cast89_var = builder.CreateCast(Instruction::BitCast, gep88_var, types[27]);
	llvm::LoadInst* load90_var = builder.CreateLoad(cast89_var, false);
	load90_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep91_array { gep4_val4_int, cast81_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep91_var = builder.CreateInBoundsGEP(globals[5], gep91_array);
	llvm::LoadInst* load92_var = builder.CreateLoad(gep91_var, false);
	load92_var->setAlignment(8);
	Value* binop93_var = BinaryOperator::Create(Instruction::Add, load92_var, load83_var, "", builder.GetInsertBlock());
	Value* cmp94_var = builder.CreateICmp(CmpInst::ICMP_EQ, load86_var, cmp51_val51_int);
	builder.CreateCondBr(cmp94_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep95_array { binop93_var, };
	Value* gep95_var = builder.CreateInBoundsGEP(cast84_var, gep95_array);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, gep95_var, types[28]);
	llvm::LoadInst* load97_var = builder.CreateLoad(cast96_var, false);
	load97_var->setAlignment(4);
	Value* cast98_var = builder.CreateCast(Instruction::ZExt, load97_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep99_array { gep4_val4_int, cast81_var, gep9_val10_int, gep9_val10_int, gep57_val57_int, };
	Value* gep99_var = builder.CreateInBoundsGEP(globals[5], gep99_array);
	llvm::LoadInst* load100_var = builder.CreateLoad(gep99_var, false);
	load100_var->setAlignment(16);
	Value* binop101_var = BinaryOperator::Create(Instruction::Add, load100_var, binop93_var, "", builder.GetInsertBlock());
	SwitchInst* switch102_var = builder.CreateSwitch(load86_var, block19, 2);
	switch102_var->addCase(cast<ConstantInt>(switch61_val61_int), block17);
	switch102_var->addCase(cast<ConstantInt>(switch61_val62_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep102_array { binop101_var, };
	Value* gep102_var = builder.CreateInBoundsGEP(cast84_var, gep102_array);
	Value* cast103_var = builder.CreateCast(Instruction::BitCast, gep102_var, types[30]);
	llvm::LoadInst* load104_var = builder.CreateLoad(cast103_var, false);
	load104_var->setAlignment(2);
	Value* cast105_var = builder.CreateCast(Instruction::ZExt, load104_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep106_array { gep4_val4_int, cast81_var, gep9_val10_int, gep9_val10_int, switch13_val14_int, };
	Value* gep106_var = builder.CreateInBoundsGEP(globals[5], gep106_array);
	llvm::LoadInst* load107_var = builder.CreateLoad(gep106_var, false);
	load107_var->setAlignment(8);
	Value* binop108_var = BinaryOperator::Create(Instruction::Add, load107_var, binop101_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep109_array { binop108_var, };
	Value* gep109_var = builder.CreateInBoundsGEP(cast84_var, gep109_array);
	llvm::LoadInst* load110_var = builder.CreateLoad(gep109_var, false);
	load110_var->setAlignment(1);
	Value* cast111_var = builder.CreateCast(Instruction::ZExt, load110_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call112_var = builder.CreateCall(globals[6], gep74_var);
	call112_var->setTailCall();
	call112_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi113_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep114_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, switch13_val14_int, };
	Value* gep114_var = builder.CreateInBoundsGEP(arg3, gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(4);
	Value* cast116_var = builder.CreateCast(Instruction::SExt, load115_var, types[0]);
	Value* binop117_var = BinaryOperator::Create(Instruction::Mul, cast116_var, phi113_var, "", builder.GetInsertBlock());
	Value* binop118_var = BinaryOperator::Create(Instruction::Add, binop117_var, phi77_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi119_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep120_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, switch13_val13_int, };
	Value* gep120_var = builder.CreateInBoundsGEP(arg3, gep120_array);
	llvm::LoadInst* load121_var = builder.CreateLoad(gep120_var, false);
	load121_var->setAlignment(4);
	Value* cmp122_var = builder.CreateICmp(CmpInst::ICMP_EQ, load121_var, gep9_val10_int);
	builder.CreateCondBr(cmp122_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load121_var, types[0]);
	ArrayRef<Value*> gep124_array { gep4_val4_int, cast123_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep124_var = builder.CreateInBoundsGEP(globals[5], gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(16);
	Value* cast126_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep127_array { gep4_val4_int, cast123_var, switch13_val13_int, };
	Value* gep127_var = builder.CreateInBoundsGEP(globals[5], gep127_array);
	llvm::LoadInst* load128_var = builder.CreateLoad(gep127_var, false);
	load128_var->setAlignment(16);
	Value* cmp129_var = builder.CreateICmp(CmpInst::ICMP_EQ, load128_var, cmp43_val43_int);
	builder.CreateCondBr(cmp129_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep130_array { load125_var, };
	Value* gep130_var = builder.CreateInBoundsGEP(cast126_var, gep130_array);
	Value* cast131_var = builder.CreateCast(Instruction::BitCast, gep130_var, types[27]);
	llvm::LoadInst* load132_var = builder.CreateLoad(cast131_var, false);
	load132_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep133_array { gep4_val4_int, cast123_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(globals[5], gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(8);
	Value* binop135_var = BinaryOperator::Create(Instruction::Add, load134_var, load125_var, "", builder.GetInsertBlock());
	Value* cmp136_var = builder.CreateICmp(CmpInst::ICMP_EQ, load128_var, cmp51_val51_int);
	builder.CreateCondBr(cmp136_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep137_array { binop135_var, };
	Value* gep137_var = builder.CreateInBoundsGEP(cast126_var, gep137_array);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, gep137_var, types[28]);
	llvm::LoadInst* load139_var = builder.CreateLoad(cast138_var, false);
	load139_var->setAlignment(4);
	Value* cast140_var = builder.CreateCast(Instruction::ZExt, load139_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep141_array { gep4_val4_int, cast123_var, gep9_val10_int, gep9_val10_int, gep57_val57_int, };
	Value* gep141_var = builder.CreateInBoundsGEP(globals[5], gep141_array);
	llvm::LoadInst* load142_var = builder.CreateLoad(gep141_var, false);
	load142_var->setAlignment(16);
	Value* binop143_var = BinaryOperator::Create(Instruction::Add, load142_var, binop135_var, "", builder.GetInsertBlock());
	SwitchInst* switch144_var = builder.CreateSwitch(load128_var, block29, 2);
	switch144_var->addCase(cast<ConstantInt>(switch61_val61_int), block27);
	switch144_var->addCase(cast<ConstantInt>(switch61_val62_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep144_array { binop143_var, };
	Value* gep144_var = builder.CreateInBoundsGEP(cast126_var, gep144_array);
	Value* cast145_var = builder.CreateCast(Instruction::BitCast, gep144_var, types[30]);
	llvm::LoadInst* load146_var = builder.CreateLoad(cast145_var, false);
	load146_var->setAlignment(2);
	Value* cast147_var = builder.CreateCast(Instruction::ZExt, load146_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast123_var, gep9_val10_int, gep9_val10_int, switch13_val14_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, binop143_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep151_array { binop150_var, };
	Value* gep151_var = builder.CreateInBoundsGEP(cast126_var, gep151_array);
	llvm::LoadInst* load152_var = builder.CreateLoad(gep151_var, false);
	load152_var->setAlignment(1);
	Value* cast153_var = builder.CreateCast(Instruction::ZExt, load152_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call154_var = builder.CreateCall(globals[6], gep74_var);
	call154_var->setTailCall();
	call154_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi155_var = builder.CreatePHI(types[0], 4);
	Value* binop156_var = BinaryOperator::Create(Instruction::Add, phi155_var, phi119_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi157_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep158_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep57_val57_int, };
	Value* gep158_var = builder.CreateInBoundsGEP(arg3, gep158_array);
	llvm::LoadInst* load159_var = builder.CreateLoad(gep158_var, false);
	load159_var->setAlignment(1);
	Value* cast160_var = builder.CreateCast(Instruction::ZExt, load159_var, types[0]);
	CallInst* call161_var = builder.CreateCall3(globals[14], phi157_var, cast160_var, cast8_var);
	call161_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep163_array { gep4_val4_int, gep4_val4_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[15], gep163_array);
	CallInst* call163_var = builder.CreateCall(globals[6], gep163_var);
	call163_var->setTailCall();
	call163_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi77_var->addIncoming(gep4_val4_int, block2);
	phi77_var->addIncoming(load47_var, block4);
	phi77_var->addIncoming(cast56_var, block6);
	phi77_var->addIncoming(cast66_var, block8);
	phi77_var->addIncoming(cast72_var, block9);
	
	phi113_var->addIncoming(load90_var, block13);
	phi113_var->addIncoming(cast98_var, block15);
	phi113_var->addIncoming(cast105_var, block17);
	phi113_var->addIncoming(cast111_var, block18);
	
	phi119_var->addIncoming(binop118_var, block20);
	phi119_var->addIncoming(phi77_var, block11);
	
	phi155_var->addIncoming(load132_var, block23);
	phi155_var->addIncoming(cast140_var, block25);
	phi155_var->addIncoming(cast147_var, block27);
	phi155_var->addIncoming(cast153_var, block28);
	
	phi157_var->addIncoming(binop156_var, block30);
	phi157_var->addIncoming(phi119_var, block21);
	
	return;
}

void x86::x86_setp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 1u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Value* cast8_var = builder.CreateCast(Instruction::ZExt, load7_var, types[0]);
	Constant* gep9_val9_int = ConstantInt::get(types[2], 15u);
	Constant* gep9_val10_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep9_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep9_val10_int, };
	Value* gep9_var = builder.CreateInBoundsGEP(arg3, gep9_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep9_var, false);
	load12_var->setAlignment(4);
	SwitchInst* switch13_var = builder.CreateSwitch(load12_var, block32, 2);
	switch13_var->addCase(cast<ConstantInt>(gep4_val5_int), block1);
	Constant* switch13_val13_int = ConstantInt::get(types[2], 3u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val13_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep14_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep4_val5_int, gep9_val10_int, gep9_val10_int, };
	Value* gep14_var = builder.CreateGEP(arg3, gep14_array);
	llvm::LoadInst* load15_var = builder.CreateLoad(gep14_var, false);
	load15_var->setAlignment(4);
	Value* cast16_var = builder.CreateCast(Instruction::ZExt, load15_var, types[0]);
	ArrayRef<Value*> gep17_array { gep4_val4_int, cast16_var, gep4_val5_int, };
	Value* gep17_var = builder.CreateInBoundsGEP(globals[5], gep17_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep17_var, false);
	load19_var->setAlignment(16);
	Constant* binop20_val20_int = ConstantInt::get(types[0], 3u);
	Value* binop20_var = BinaryOperator::Create(Instruction::Shl, load19_var, binop20_val20_int, "", builder.GetInsertBlock());
	Constant* binop22_val22_int = ConstantInt::get(types[0], 64u);
	Value* binop22_var = BinaryOperator::Create(Instruction::Sub, binop22_val22_int, binop20_var, "", builder.GetInsertBlock());
	Constant* binop24_val24_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop24_var = BinaryOperator::Create(Instruction::LShr, binop24_val24_int, binop22_var, "", builder.GetInsertBlock());
	Value* binop26_var = BinaryOperator::Create(Instruction::And, binop24_var, cast8_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep27_array { gep4_val4_int, cast16_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep27_var = builder.CreateInBoundsGEP(globals[5], gep27_array);
	llvm::LoadInst* load28_var = builder.CreateLoad(gep27_var, false);
	load28_var->setAlignment(16);
	Value* cast29_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep30_array { load28_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast29_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[27]);
	llvm::StoreInst* store32_var = builder.CreateStore(binop26_var, cast31_var, false);
	store32_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep33_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep4_val5_int, gep9_val10_int, gep9_val10_int, };
	Value* gep33_var = builder.CreateInBoundsGEP(arg3, gep33_array);
	llvm::LoadInst* load34_var = builder.CreateLoad(gep33_var, false);
	load34_var->setAlignment(4);
	Value* cmp35_var = builder.CreateICmp(CmpInst::ICMP_EQ, load34_var, gep9_val10_int);
	builder.CreateCondBr(cmp35_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast36_var = builder.CreateCast(Instruction::ZExt, load34_var, types[0]);
	ArrayRef<Value*> gep37_array { gep4_val4_int, cast36_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep37_var = builder.CreateInBoundsGEP(globals[5], gep37_array);
	llvm::LoadInst* load38_var = builder.CreateLoad(gep37_var, false);
	load38_var->setAlignment(16);
	Value* cast39_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep40_array { gep4_val4_int, cast36_var, gep4_val5_int, };
	Value* gep40_var = builder.CreateInBoundsGEP(globals[5], gep40_array);
	llvm::LoadInst* load41_var = builder.CreateLoad(gep40_var, false);
	load41_var->setAlignment(16);
	Constant* cmp42_val42_int = ConstantInt::get(types[0], 8u);
	Value* cmp42_var = builder.CreateICmp(CmpInst::ICMP_EQ, load41_var, cmp42_val42_int);
	builder.CreateCondBr(cmp42_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep44_array { load38_var, };
	Value* gep44_var = builder.CreateInBoundsGEP(cast39_var, gep44_array);
	Value* cast45_var = builder.CreateCast(Instruction::BitCast, gep44_var, types[27]);
	llvm::LoadInst* load46_var = builder.CreateLoad(cast45_var, false);
	load46_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep47_array { gep4_val4_int, cast36_var, gep9_val10_int, gep9_val10_int, gep4_val5_int, };
	Value* gep47_var = builder.CreateInBoundsGEP(globals[5], gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(8);
	Value* binop49_var = BinaryOperator::Create(Instruction::Add, load48_var, load38_var, "", builder.GetInsertBlock());
	Constant* cmp50_val50_int = ConstantInt::get(types[0], 4u);
	Value* cmp50_var = builder.CreateICmp(CmpInst::ICMP_EQ, load41_var, cmp50_val50_int);
	builder.CreateCondBr(cmp50_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep52_array { binop49_var, };
	Value* gep52_var = builder.CreateInBoundsGEP(cast39_var, gep52_array);
	Value* cast53_var = builder.CreateCast(Instruction::BitCast, gep52_var, types[28]);
	llvm::LoadInst* load54_var = builder.CreateLoad(cast53_var, false);
	load54_var->setAlignment(4);
	Value* cast55_var = builder.CreateCast(Instruction::ZExt, load54_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep56_val56_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep56_array { gep4_val4_int, cast36_var, gep9_val10_int, gep9_val10_int, gep56_val56_int, };
	Value* gep56_var = builder.CreateInBoundsGEP(globals[5], gep56_array);
	llvm::LoadInst* load58_var = builder.CreateLoad(gep56_var, false);
	load58_var->setAlignment(16);
	Value* binop59_var = BinaryOperator::Create(Instruction::Add, load58_var, binop49_var, "", builder.GetInsertBlock());
	SwitchInst* switch60_var = builder.CreateSwitch(load41_var, block10, 2);
	Constant* switch60_val60_int = ConstantInt::get(types[0], 2u);
	switch60_var->addCase(cast<ConstantInt>(switch60_val60_int), block8);
	Constant* switch60_val61_int = ConstantInt::get(types[0], 1u);
	switch60_var->addCase(cast<ConstantInt>(switch60_val61_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep62_array { binop59_var, };
	Value* gep62_var = builder.CreateInBoundsGEP(cast39_var, gep62_array);
	Value* cast63_var = builder.CreateCast(Instruction::BitCast, gep62_var, types[30]);
	llvm::LoadInst* load64_var = builder.CreateLoad(cast63_var, false);
	load64_var->setAlignment(2);
	Value* cast65_var = builder.CreateCast(Instruction::ZExt, load64_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep66_array { gep4_val4_int, cast36_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep66_var = builder.CreateInBoundsGEP(globals[5], gep66_array);
	llvm::LoadInst* load67_var = builder.CreateLoad(gep66_var, false);
	load67_var->setAlignment(8);
	Value* binop68_var = BinaryOperator::Create(Instruction::Add, load67_var, binop59_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep69_array { binop68_var, };
	Value* gep69_var = builder.CreateInBoundsGEP(cast39_var, gep69_array);
	llvm::LoadInst* load70_var = builder.CreateLoad(gep69_var, false);
	load70_var->setAlignment(1);
	Value* cast71_var = builder.CreateCast(Instruction::ZExt, load70_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep73_array { gep4_val4_int, gep4_val4_int, };
	Value* gep73_var = builder.CreateInBoundsGEP(globals[7], gep73_array);
	CallInst* call72_var = builder.CreateCall(globals[6], gep73_var);
	call72_var->setTailCall();
	call72_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi76_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep77_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep4_val5_int, gep9_val10_int, gep56_val56_int, };
	Value* gep77_var = builder.CreateInBoundsGEP(arg3, gep77_array);
	llvm::LoadInst* load78_var = builder.CreateLoad(gep77_var, false);
	load78_var->setAlignment(4);
	Value* cmp79_var = builder.CreateICmp(CmpInst::ICMP_EQ, load78_var, gep9_val10_int);
	builder.CreateCondBr(cmp79_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast80_var = builder.CreateCast(Instruction::ZExt, load78_var, types[0]);
	ArrayRef<Value*> gep81_array { gep4_val4_int, cast80_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep81_var = builder.CreateInBoundsGEP(globals[5], gep81_array);
	llvm::LoadInst* load82_var = builder.CreateLoad(gep81_var, false);
	load82_var->setAlignment(16);
	Value* cast83_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep84_array { gep4_val4_int, cast80_var, gep4_val5_int, };
	Value* gep84_var = builder.CreateInBoundsGEP(globals[5], gep84_array);
	llvm::LoadInst* load85_var = builder.CreateLoad(gep84_var, false);
	load85_var->setAlignment(16);
	Value* cmp86_var = builder.CreateICmp(CmpInst::ICMP_EQ, load85_var, cmp42_val42_int);
	builder.CreateCondBr(cmp86_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep87_array { load82_var, };
	Value* gep87_var = builder.CreateInBoundsGEP(cast83_var, gep87_array);
	Value* cast88_var = builder.CreateCast(Instruction::BitCast, gep87_var, types[27]);
	llvm::LoadInst* load89_var = builder.CreateLoad(cast88_var, false);
	load89_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep90_array { gep4_val4_int, cast80_var, gep9_val10_int, gep9_val10_int, gep4_val5_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(globals[5], gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(8);
	Value* binop92_var = BinaryOperator::Create(Instruction::Add, load91_var, load82_var, "", builder.GetInsertBlock());
	Value* cmp93_var = builder.CreateICmp(CmpInst::ICMP_EQ, load85_var, cmp50_val50_int);
	builder.CreateCondBr(cmp93_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep94_array { binop92_var, };
	Value* gep94_var = builder.CreateInBoundsGEP(cast83_var, gep94_array);
	Value* cast95_var = builder.CreateCast(Instruction::BitCast, gep94_var, types[28]);
	llvm::LoadInst* load96_var = builder.CreateLoad(cast95_var, false);
	load96_var->setAlignment(4);
	Value* cast97_var = builder.CreateCast(Instruction::ZExt, load96_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep98_array { gep4_val4_int, cast80_var, gep9_val10_int, gep9_val10_int, gep56_val56_int, };
	Value* gep98_var = builder.CreateInBoundsGEP(globals[5], gep98_array);
	llvm::LoadInst* load99_var = builder.CreateLoad(gep98_var, false);
	load99_var->setAlignment(16);
	Value* binop100_var = BinaryOperator::Create(Instruction::Add, load99_var, binop92_var, "", builder.GetInsertBlock());
	SwitchInst* switch101_var = builder.CreateSwitch(load85_var, block19, 2);
	switch101_var->addCase(cast<ConstantInt>(switch60_val60_int), block17);
	switch101_var->addCase(cast<ConstantInt>(switch60_val61_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep101_array { binop100_var, };
	Value* gep101_var = builder.CreateInBoundsGEP(cast83_var, gep101_array);
	Value* cast102_var = builder.CreateCast(Instruction::BitCast, gep101_var, types[30]);
	llvm::LoadInst* load103_var = builder.CreateLoad(cast102_var, false);
	load103_var->setAlignment(2);
	Value* cast104_var = builder.CreateCast(Instruction::ZExt, load103_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep105_array { gep4_val4_int, cast80_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep105_var = builder.CreateInBoundsGEP(globals[5], gep105_array);
	llvm::LoadInst* load106_var = builder.CreateLoad(gep105_var, false);
	load106_var->setAlignment(8);
	Value* binop107_var = BinaryOperator::Create(Instruction::Add, load106_var, binop100_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep108_array { binop107_var, };
	Value* gep108_var = builder.CreateInBoundsGEP(cast83_var, gep108_array);
	llvm::LoadInst* load109_var = builder.CreateLoad(gep108_var, false);
	load109_var->setAlignment(1);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call111_var = builder.CreateCall(globals[6], gep73_var);
	call111_var->setTailCall();
	call111_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi112_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep113_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep4_val5_int, gep9_val10_int, switch13_val13_int, };
	Value* gep113_var = builder.CreateInBoundsGEP(arg3, gep113_array);
	llvm::LoadInst* load114_var = builder.CreateLoad(gep113_var, false);
	load114_var->setAlignment(4);
	Value* cast115_var = builder.CreateCast(Instruction::SExt, load114_var, types[0]);
	Value* binop116_var = BinaryOperator::Create(Instruction::Mul, cast115_var, phi112_var, "", builder.GetInsertBlock());
	Value* binop117_var = BinaryOperator::Create(Instruction::Add, binop116_var, phi76_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi118_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep119_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep4_val5_int, gep9_val10_int, gep4_val5_int, };
	Value* gep119_var = builder.CreateInBoundsGEP(arg3, gep119_array);
	llvm::LoadInst* load120_var = builder.CreateLoad(gep119_var, false);
	load120_var->setAlignment(4);
	Value* cmp121_var = builder.CreateICmp(CmpInst::ICMP_EQ, load120_var, gep9_val10_int);
	builder.CreateCondBr(cmp121_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast122_var = builder.CreateCast(Instruction::ZExt, load120_var, types[0]);
	ArrayRef<Value*> gep123_array { gep4_val4_int, cast122_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep123_var = builder.CreateInBoundsGEP(globals[5], gep123_array);
	llvm::LoadInst* load124_var = builder.CreateLoad(gep123_var, false);
	load124_var->setAlignment(16);
	Value* cast125_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep126_array { gep4_val4_int, cast122_var, gep4_val5_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(globals[5], gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(16);
	Value* cmp128_var = builder.CreateICmp(CmpInst::ICMP_EQ, load127_var, cmp42_val42_int);
	builder.CreateCondBr(cmp128_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep129_array { load124_var, };
	Value* gep129_var = builder.CreateInBoundsGEP(cast125_var, gep129_array);
	Value* cast130_var = builder.CreateCast(Instruction::BitCast, gep129_var, types[27]);
	llvm::LoadInst* load131_var = builder.CreateLoad(cast130_var, false);
	load131_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep132_array { gep4_val4_int, cast122_var, gep9_val10_int, gep9_val10_int, gep4_val5_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(globals[5], gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(8);
	Value* binop134_var = BinaryOperator::Create(Instruction::Add, load133_var, load124_var, "", builder.GetInsertBlock());
	Value* cmp135_var = builder.CreateICmp(CmpInst::ICMP_EQ, load127_var, cmp50_val50_int);
	builder.CreateCondBr(cmp135_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep136_array { binop134_var, };
	Value* gep136_var = builder.CreateInBoundsGEP(cast125_var, gep136_array);
	Value* cast137_var = builder.CreateCast(Instruction::BitCast, gep136_var, types[28]);
	llvm::LoadInst* load138_var = builder.CreateLoad(cast137_var, false);
	load138_var->setAlignment(4);
	Value* cast139_var = builder.CreateCast(Instruction::ZExt, load138_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep140_array { gep4_val4_int, cast122_var, gep9_val10_int, gep9_val10_int, gep56_val56_int, };
	Value* gep140_var = builder.CreateInBoundsGEP(globals[5], gep140_array);
	llvm::LoadInst* load141_var = builder.CreateLoad(gep140_var, false);
	load141_var->setAlignment(16);
	Value* binop142_var = BinaryOperator::Create(Instruction::Add, load141_var, binop134_var, "", builder.GetInsertBlock());
	SwitchInst* switch143_var = builder.CreateSwitch(load127_var, block29, 2);
	switch143_var->addCase(cast<ConstantInt>(switch60_val60_int), block27);
	switch143_var->addCase(cast<ConstantInt>(switch60_val61_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep143_array { binop142_var, };
	Value* gep143_var = builder.CreateInBoundsGEP(cast125_var, gep143_array);
	Value* cast144_var = builder.CreateCast(Instruction::BitCast, gep143_var, types[30]);
	llvm::LoadInst* load145_var = builder.CreateLoad(cast144_var, false);
	load145_var->setAlignment(2);
	Value* cast146_var = builder.CreateCast(Instruction::ZExt, load145_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep147_array { gep4_val4_int, cast122_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep147_var = builder.CreateInBoundsGEP(globals[5], gep147_array);
	llvm::LoadInst* load148_var = builder.CreateLoad(gep147_var, false);
	load148_var->setAlignment(8);
	Value* binop149_var = BinaryOperator::Create(Instruction::Add, load148_var, binop142_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep150_array { binop149_var, };
	Value* gep150_var = builder.CreateInBoundsGEP(cast125_var, gep150_array);
	llvm::LoadInst* load151_var = builder.CreateLoad(gep150_var, false);
	load151_var->setAlignment(1);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call153_var = builder.CreateCall(globals[6], gep73_var);
	call153_var->setTailCall();
	call153_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi154_var = builder.CreatePHI(types[0], 4);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, phi154_var, phi118_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi156_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep157_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep56_val56_int, };
	Value* gep157_var = builder.CreateInBoundsGEP(arg3, gep157_array);
	llvm::LoadInst* load158_var = builder.CreateLoad(gep157_var, false);
	load158_var->setAlignment(1);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	CallInst* call160_var = builder.CreateCall3(globals[14], phi156_var, cast159_var, cast8_var);
	call160_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep162_array { gep4_val4_int, gep4_val4_int, };
	Value* gep162_var = builder.CreateInBoundsGEP(globals[15], gep162_array);
	CallInst* call162_var = builder.CreateCall(globals[6], gep162_var);
	call162_var->setTailCall();
	call162_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi76_var->addIncoming(gep4_val4_int, block2);
	phi76_var->addIncoming(load46_var, block4);
	phi76_var->addIncoming(cast55_var, block6);
	phi76_var->addIncoming(cast65_var, block8);
	phi76_var->addIncoming(cast71_var, block9);
	
	phi112_var->addIncoming(load89_var, block13);
	phi112_var->addIncoming(cast97_var, block15);
	phi112_var->addIncoming(cast104_var, block17);
	phi112_var->addIncoming(cast110_var, block18);
	
	phi118_var->addIncoming(binop117_var, block20);
	phi118_var->addIncoming(phi76_var, block11);
	
	phi154_var->addIncoming(load131_var, block23);
	phi154_var->addIncoming(cast139_var, block25);
	phi154_var->addIncoming(cast146_var, block27);
	phi154_var->addIncoming(cast152_var, block28);
	
	phi156_var->addIncoming(binop155_var, block30);
	phi156_var->addIncoming(phi118_var, block21);
	
	return;
}

void x86::x86_sets(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg2, gep4_array);
	llvm::LoadInst* load7_var = builder.CreateLoad(gep4_var, false);
	load7_var->setAlignment(1);
	Value* cast8_var = builder.CreateCast(Instruction::ZExt, load7_var, types[0]);
	Constant* gep9_val9_int = ConstantInt::get(types[2], 15u);
	Constant* gep9_val10_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep9_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep9_val10_int, };
	Value* gep9_var = builder.CreateInBoundsGEP(arg3, gep9_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep9_var, false);
	load12_var->setAlignment(4);
	SwitchInst* switch13_var = builder.CreateSwitch(load12_var, block32, 2);
	Constant* switch13_val13_int = ConstantInt::get(types[2], 1u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val13_int), block1);
	Constant* switch13_val14_int = ConstantInt::get(types[2], 3u);
	switch13_var->addCase(cast<ConstantInt>(switch13_val14_int), block2);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep15_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep9_val10_int, };
	Value* gep15_var = builder.CreateGEP(arg3, gep15_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep15_var, false);
	load16_var->setAlignment(4);
	Value* cast17_var = builder.CreateCast(Instruction::ZExt, load16_var, types[0]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast17_var, switch13_val13_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load20_var = builder.CreateLoad(gep18_var, false);
	load20_var->setAlignment(16);
	Constant* binop21_val21_int = ConstantInt::get(types[0], 3u);
	Value* binop21_var = BinaryOperator::Create(Instruction::Shl, load20_var, binop21_val21_int, "", builder.GetInsertBlock());
	Constant* binop23_val23_int = ConstantInt::get(types[0], 64u);
	Value* binop23_var = BinaryOperator::Create(Instruction::Sub, binop23_val23_int, binop21_var, "", builder.GetInsertBlock());
	Constant* binop25_val25_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop25_var = BinaryOperator::Create(Instruction::LShr, binop25_val25_int, binop23_var, "", builder.GetInsertBlock());
	Value* binop27_var = BinaryOperator::Create(Instruction::And, binop25_var, cast8_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep28_array { gep4_val4_int, cast17_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep28_var = builder.CreateInBoundsGEP(globals[5], gep28_array);
	llvm::LoadInst* load29_var = builder.CreateLoad(gep28_var, false);
	load29_var->setAlignment(16);
	Value* cast30_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep31_array { load29_var, };
	Value* gep31_var = builder.CreateInBoundsGEP(cast30_var, gep31_array);
	Value* cast32_var = builder.CreateCast(Instruction::BitCast, gep31_var, types[27]);
	llvm::StoreInst* store33_var = builder.CreateStore(binop27_var, cast32_var, false);
	store33_var->setAlignment(8);
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep34_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep9_val10_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(arg3, gep34_array);
	llvm::LoadInst* load35_var = builder.CreateLoad(gep34_var, false);
	load35_var->setAlignment(4);
	Value* cmp36_var = builder.CreateICmp(CmpInst::ICMP_EQ, load35_var, gep9_val10_int);
	builder.CreateCondBr(cmp36_var, block11, block3);
	
	builder.SetInsertPoint(block3);
	Value* cast37_var = builder.CreateCast(Instruction::ZExt, load35_var, types[0]);
	ArrayRef<Value*> gep38_array { gep4_val4_int, cast37_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep38_var = builder.CreateInBoundsGEP(globals[5], gep38_array);
	llvm::LoadInst* load39_var = builder.CreateLoad(gep38_var, false);
	load39_var->setAlignment(16);
	Value* cast40_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep41_array { gep4_val4_int, cast37_var, switch13_val13_int, };
	Value* gep41_var = builder.CreateInBoundsGEP(globals[5], gep41_array);
	llvm::LoadInst* load42_var = builder.CreateLoad(gep41_var, false);
	load42_var->setAlignment(16);
	Constant* cmp43_val43_int = ConstantInt::get(types[0], 8u);
	Value* cmp43_var = builder.CreateICmp(CmpInst::ICMP_EQ, load42_var, cmp43_val43_int);
	builder.CreateCondBr(cmp43_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep45_array { load39_var, };
	Value* gep45_var = builder.CreateInBoundsGEP(cast40_var, gep45_array);
	Value* cast46_var = builder.CreateCast(Instruction::BitCast, gep45_var, types[27]);
	llvm::LoadInst* load47_var = builder.CreateLoad(cast46_var, false);
	load47_var->setAlignment(8);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block5);
	ArrayRef<Value*> gep48_array { gep4_val4_int, cast37_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep48_var = builder.CreateInBoundsGEP(globals[5], gep48_array);
	llvm::LoadInst* load49_var = builder.CreateLoad(gep48_var, false);
	load49_var->setAlignment(8);
	Value* binop50_var = BinaryOperator::Create(Instruction::Add, load49_var, load39_var, "", builder.GetInsertBlock());
	Constant* cmp51_val51_int = ConstantInt::get(types[0], 4u);
	Value* cmp51_var = builder.CreateICmp(CmpInst::ICMP_EQ, load42_var, cmp51_val51_int);
	builder.CreateCondBr(cmp51_var, block6, block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep53_array { binop50_var, };
	Value* gep53_var = builder.CreateInBoundsGEP(cast40_var, gep53_array);
	Value* cast54_var = builder.CreateCast(Instruction::BitCast, gep53_var, types[28]);
	llvm::LoadInst* load55_var = builder.CreateLoad(cast54_var, false);
	load55_var->setAlignment(4);
	Value* cast56_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block7);
	Constant* gep57_val57_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep57_array { gep4_val4_int, cast37_var, gep9_val10_int, gep9_val10_int, gep57_val57_int, };
	Value* gep57_var = builder.CreateInBoundsGEP(globals[5], gep57_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep57_var, false);
	load59_var->setAlignment(16);
	Value* binop60_var = BinaryOperator::Create(Instruction::Add, load59_var, binop50_var, "", builder.GetInsertBlock());
	SwitchInst* switch61_var = builder.CreateSwitch(load42_var, block10, 2);
	Constant* switch61_val61_int = ConstantInt::get(types[0], 2u);
	switch61_var->addCase(cast<ConstantInt>(switch61_val61_int), block8);
	Constant* switch61_val62_int = ConstantInt::get(types[0], 1u);
	switch61_var->addCase(cast<ConstantInt>(switch61_val62_int), block9);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep63_array { binop60_var, };
	Value* gep63_var = builder.CreateInBoundsGEP(cast40_var, gep63_array);
	Value* cast64_var = builder.CreateCast(Instruction::BitCast, gep63_var, types[30]);
	llvm::LoadInst* load65_var = builder.CreateLoad(cast64_var, false);
	load65_var->setAlignment(2);
	Value* cast66_var = builder.CreateCast(Instruction::ZExt, load65_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast37_var, gep9_val10_int, gep9_val10_int, switch13_val14_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, binop60_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep70_array { binop69_var, };
	Value* gep70_var = builder.CreateInBoundsGEP(cast40_var, gep70_array);
	llvm::LoadInst* load71_var = builder.CreateLoad(gep70_var, false);
	load71_var->setAlignment(1);
	Value* cast72_var = builder.CreateCast(Instruction::ZExt, load71_var, types[0]);
	builder.CreateBr(block11);
	
	builder.SetInsertPoint(block10);
	ArrayRef<Value*> gep74_array { gep4_val4_int, gep4_val4_int, };
	Value* gep74_var = builder.CreateInBoundsGEP(globals[7], gep74_array);
	CallInst* call73_var = builder.CreateCall(globals[6], gep74_var);
	call73_var->setTailCall();
	call73_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block11);
	PHINode* phi77_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep78_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, gep57_val57_int, };
	Value* gep78_var = builder.CreateInBoundsGEP(arg3, gep78_array);
	llvm::LoadInst* load79_var = builder.CreateLoad(gep78_var, false);
	load79_var->setAlignment(4);
	Value* cmp80_var = builder.CreateICmp(CmpInst::ICMP_EQ, load79_var, gep9_val10_int);
	builder.CreateCondBr(cmp80_var, block21, block12);
	
	builder.SetInsertPoint(block12);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load79_var, types[0]);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast81_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(16);
	Value* cast84_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep85_array { gep4_val4_int, cast81_var, switch13_val13_int, };
	Value* gep85_var = builder.CreateInBoundsGEP(globals[5], gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(16);
	Value* cmp87_var = builder.CreateICmp(CmpInst::ICMP_EQ, load86_var, cmp43_val43_int);
	builder.CreateCondBr(cmp87_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep88_array { load83_var, };
	Value* gep88_var = builder.CreateInBoundsGEP(cast84_var, gep88_array);
	Value* cast89_var = builder.CreateCast(Instruction::BitCast, gep88_var, types[27]);
	llvm::LoadInst* load90_var = builder.CreateLoad(cast89_var, false);
	load90_var->setAlignment(8);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep91_array { gep4_val4_int, cast81_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep91_var = builder.CreateInBoundsGEP(globals[5], gep91_array);
	llvm::LoadInst* load92_var = builder.CreateLoad(gep91_var, false);
	load92_var->setAlignment(8);
	Value* binop93_var = BinaryOperator::Create(Instruction::Add, load92_var, load83_var, "", builder.GetInsertBlock());
	Value* cmp94_var = builder.CreateICmp(CmpInst::ICMP_EQ, load86_var, cmp51_val51_int);
	builder.CreateCondBr(cmp94_var, block15, block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep95_array { binop93_var, };
	Value* gep95_var = builder.CreateInBoundsGEP(cast84_var, gep95_array);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, gep95_var, types[28]);
	llvm::LoadInst* load97_var = builder.CreateLoad(cast96_var, false);
	load97_var->setAlignment(4);
	Value* cast98_var = builder.CreateCast(Instruction::ZExt, load97_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep99_array { gep4_val4_int, cast81_var, gep9_val10_int, gep9_val10_int, gep57_val57_int, };
	Value* gep99_var = builder.CreateInBoundsGEP(globals[5], gep99_array);
	llvm::LoadInst* load100_var = builder.CreateLoad(gep99_var, false);
	load100_var->setAlignment(16);
	Value* binop101_var = BinaryOperator::Create(Instruction::Add, load100_var, binop93_var, "", builder.GetInsertBlock());
	SwitchInst* switch102_var = builder.CreateSwitch(load86_var, block19, 2);
	switch102_var->addCase(cast<ConstantInt>(switch61_val61_int), block17);
	switch102_var->addCase(cast<ConstantInt>(switch61_val62_int), block18);
	
	builder.SetInsertPoint(block17);
	ArrayRef<Value*> gep102_array { binop101_var, };
	Value* gep102_var = builder.CreateInBoundsGEP(cast84_var, gep102_array);
	Value* cast103_var = builder.CreateCast(Instruction::BitCast, gep102_var, types[30]);
	llvm::LoadInst* load104_var = builder.CreateLoad(cast103_var, false);
	load104_var->setAlignment(2);
	Value* cast105_var = builder.CreateCast(Instruction::ZExt, load104_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block18);
	ArrayRef<Value*> gep106_array { gep4_val4_int, cast81_var, gep9_val10_int, gep9_val10_int, switch13_val14_int, };
	Value* gep106_var = builder.CreateInBoundsGEP(globals[5], gep106_array);
	llvm::LoadInst* load107_var = builder.CreateLoad(gep106_var, false);
	load107_var->setAlignment(8);
	Value* binop108_var = BinaryOperator::Create(Instruction::Add, load107_var, binop101_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep109_array { binop108_var, };
	Value* gep109_var = builder.CreateInBoundsGEP(cast84_var, gep109_array);
	llvm::LoadInst* load110_var = builder.CreateLoad(gep109_var, false);
	load110_var->setAlignment(1);
	Value* cast111_var = builder.CreateCast(Instruction::ZExt, load110_var, types[0]);
	builder.CreateBr(block20);
	
	builder.SetInsertPoint(block19);
	CallInst* call112_var = builder.CreateCall(globals[6], gep74_var);
	call112_var->setTailCall();
	call112_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block20);
	PHINode* phi113_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep114_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, switch13_val14_int, };
	Value* gep114_var = builder.CreateInBoundsGEP(arg3, gep114_array);
	llvm::LoadInst* load115_var = builder.CreateLoad(gep114_var, false);
	load115_var->setAlignment(4);
	Value* cast116_var = builder.CreateCast(Instruction::SExt, load115_var, types[0]);
	Value* binop117_var = BinaryOperator::Create(Instruction::Mul, cast116_var, phi113_var, "", builder.GetInsertBlock());
	Value* binop118_var = BinaryOperator::Create(Instruction::Add, binop117_var, phi77_var, "", builder.GetInsertBlock());
	builder.CreateBr(block21);
	
	builder.SetInsertPoint(block21);
	PHINode* phi119_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep120_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, switch13_val13_int, gep9_val10_int, switch13_val13_int, };
	Value* gep120_var = builder.CreateInBoundsGEP(arg3, gep120_array);
	llvm::LoadInst* load121_var = builder.CreateLoad(gep120_var, false);
	load121_var->setAlignment(4);
	Value* cmp122_var = builder.CreateICmp(CmpInst::ICMP_EQ, load121_var, gep9_val10_int);
	builder.CreateCondBr(cmp122_var, block31, block22);
	
	builder.SetInsertPoint(block22);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load121_var, types[0]);
	ArrayRef<Value*> gep124_array { gep4_val4_int, cast123_var, gep9_val10_int, gep9_val10_int, gep9_val10_int, };
	Value* gep124_var = builder.CreateInBoundsGEP(globals[5], gep124_array);
	llvm::LoadInst* load125_var = builder.CreateLoad(gep124_var, false);
	load125_var->setAlignment(16);
	Value* cast126_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep127_array { gep4_val4_int, cast123_var, switch13_val13_int, };
	Value* gep127_var = builder.CreateInBoundsGEP(globals[5], gep127_array);
	llvm::LoadInst* load128_var = builder.CreateLoad(gep127_var, false);
	load128_var->setAlignment(16);
	Value* cmp129_var = builder.CreateICmp(CmpInst::ICMP_EQ, load128_var, cmp43_val43_int);
	builder.CreateCondBr(cmp129_var, block23, block24);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep130_array { load125_var, };
	Value* gep130_var = builder.CreateInBoundsGEP(cast126_var, gep130_array);
	Value* cast131_var = builder.CreateCast(Instruction::BitCast, gep130_var, types[27]);
	llvm::LoadInst* load132_var = builder.CreateLoad(cast131_var, false);
	load132_var->setAlignment(8);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep133_array { gep4_val4_int, cast123_var, gep9_val10_int, gep9_val10_int, switch13_val13_int, };
	Value* gep133_var = builder.CreateInBoundsGEP(globals[5], gep133_array);
	llvm::LoadInst* load134_var = builder.CreateLoad(gep133_var, false);
	load134_var->setAlignment(8);
	Value* binop135_var = BinaryOperator::Create(Instruction::Add, load134_var, load125_var, "", builder.GetInsertBlock());
	Value* cmp136_var = builder.CreateICmp(CmpInst::ICMP_EQ, load128_var, cmp51_val51_int);
	builder.CreateCondBr(cmp136_var, block25, block26);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep137_array { binop135_var, };
	Value* gep137_var = builder.CreateInBoundsGEP(cast126_var, gep137_array);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, gep137_var, types[28]);
	llvm::LoadInst* load139_var = builder.CreateLoad(cast138_var, false);
	load139_var->setAlignment(4);
	Value* cast140_var = builder.CreateCast(Instruction::ZExt, load139_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block26);
	ArrayRef<Value*> gep141_array { gep4_val4_int, cast123_var, gep9_val10_int, gep9_val10_int, gep57_val57_int, };
	Value* gep141_var = builder.CreateInBoundsGEP(globals[5], gep141_array);
	llvm::LoadInst* load142_var = builder.CreateLoad(gep141_var, false);
	load142_var->setAlignment(16);
	Value* binop143_var = BinaryOperator::Create(Instruction::Add, load142_var, binop135_var, "", builder.GetInsertBlock());
	SwitchInst* switch144_var = builder.CreateSwitch(load128_var, block29, 2);
	switch144_var->addCase(cast<ConstantInt>(switch61_val61_int), block27);
	switch144_var->addCase(cast<ConstantInt>(switch61_val62_int), block28);
	
	builder.SetInsertPoint(block27);
	ArrayRef<Value*> gep144_array { binop143_var, };
	Value* gep144_var = builder.CreateInBoundsGEP(cast126_var, gep144_array);
	Value* cast145_var = builder.CreateCast(Instruction::BitCast, gep144_var, types[30]);
	llvm::LoadInst* load146_var = builder.CreateLoad(cast145_var, false);
	load146_var->setAlignment(2);
	Value* cast147_var = builder.CreateCast(Instruction::ZExt, load146_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block28);
	ArrayRef<Value*> gep148_array { gep4_val4_int, cast123_var, gep9_val10_int, gep9_val10_int, switch13_val14_int, };
	Value* gep148_var = builder.CreateInBoundsGEP(globals[5], gep148_array);
	llvm::LoadInst* load149_var = builder.CreateLoad(gep148_var, false);
	load149_var->setAlignment(8);
	Value* binop150_var = BinaryOperator::Create(Instruction::Add, load149_var, binop143_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep151_array { binop150_var, };
	Value* gep151_var = builder.CreateInBoundsGEP(cast126_var, gep151_array);
	llvm::LoadInst* load152_var = builder.CreateLoad(gep151_var, false);
	load152_var->setAlignment(1);
	Value* cast153_var = builder.CreateCast(Instruction::ZExt, load152_var, types[0]);
	builder.CreateBr(block30);
	
	builder.SetInsertPoint(block29);
	CallInst* call154_var = builder.CreateCall(globals[6], gep74_var);
	call154_var->setTailCall();
	call154_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block30);
	PHINode* phi155_var = builder.CreatePHI(types[0], 4);
	Value* binop156_var = BinaryOperator::Create(Instruction::Add, phi155_var, phi119_var, "", builder.GetInsertBlock());
	builder.CreateBr(block31);
	
	builder.SetInsertPoint(block31);
	PHINode* phi157_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep158_array { gep4_val4_int, gep9_val9_int, gep4_val4_int, gep57_val57_int, };
	Value* gep158_var = builder.CreateInBoundsGEP(arg3, gep158_array);
	llvm::LoadInst* load159_var = builder.CreateLoad(gep158_var, false);
	load159_var->setAlignment(1);
	Value* cast160_var = builder.CreateCast(Instruction::ZExt, load159_var, types[0]);
	CallInst* call161_var = builder.CreateCall3(globals[14], phi157_var, cast160_var, cast8_var);
	call161_var->setTailCall();
	builder.CreateBr(block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep163_array { gep4_val4_int, gep4_val4_int, };
	Value* gep163_var = builder.CreateInBoundsGEP(globals[15], gep163_array);
	CallInst* call163_var = builder.CreateCall(globals[6], gep163_var);
	call163_var->setTailCall();
	call163_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block33);
	phi77_var->addIncoming(gep4_val4_int, block2);
	phi77_var->addIncoming(load47_var, block4);
	phi77_var->addIncoming(cast56_var, block6);
	phi77_var->addIncoming(cast66_var, block8);
	phi77_var->addIncoming(cast72_var, block9);
	
	phi113_var->addIncoming(load90_var, block13);
	phi113_var->addIncoming(cast98_var, block15);
	phi113_var->addIncoming(cast105_var, block17);
	phi113_var->addIncoming(cast111_var, block18);
	
	phi119_var->addIncoming(binop118_var, block20);
	phi119_var->addIncoming(phi77_var, block11);
	
	phi155_var->addIncoming(load132_var, block23);
	phi155_var->addIncoming(cast140_var, block25);
	phi155_var->addIncoming(cast147_var, block27);
	phi155_var->addIncoming(cast153_var, block28);
	
	phi157_var->addIncoming(binop156_var, block30);
	phi157_var->addIncoming(phi119_var, block21);
	
	return;
}

void x86::x86_sfence(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[594], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sgdt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[595], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sha1msg1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[596], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sha1msg2(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[597], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sha1nexte(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[598], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sha1rnds4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[599], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sha256msg1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[600], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sha256msg2(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[601], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sha256rnds2(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[602], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_shl(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[603], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_shld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[604], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_shlx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[605], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_shr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block39, 2);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block9);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep11_var = builder.CreateGEP(arg3, gep11_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep11_var, false);
	load12_var->setAlignment(4);
	Value* cast13_var = builder.CreateCast(Instruction::ZExt, load12_var, types[0]);
	ArrayRef<Value*> gep14_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(globals[5], gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast13_var, switch9_val9_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep18_var, false);
	load19_var->setAlignment(16);
	Constant* cmp20_val20_int = ConstantInt::get(types[0], 8u);
	Value* cmp20_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp20_val20_int);
	builder.CreateCondBr(cmp20_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep22_array { load16_var, };
	Value* gep22_var = builder.CreateInBoundsGEP(cast17_var, gep22_array);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, gep22_var, types[27]);
	llvm::LoadInst* load24_var = builder.CreateLoad(cast23_var, false);
	load24_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(8);
	Value* binop27_var = BinaryOperator::Create(Instruction::Add, load26_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 4u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { binop27_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast17_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[28]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(4);
	Value* cast33_var = builder.CreateCast(Instruction::ZExt, load32_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block5);
	Constant* gep34_val34_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep34_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop27_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load19_var, block8, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block6);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load45_var = builder.CreateLoad(gep44_var, false);
	load45_var->setAlignment(8);
	Value* binop46_var = BinaryOperator::Create(Instruction::Add, load45_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep47_array { binop46_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast17_var, gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(1);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep51_array { gep4_val4_int, gep4_val4_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[7], gep51_array);
	CallInst* call50_var = builder.CreateCall(globals[6], gep51_var);
	call50_var->setTailCall();
	call50_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val6_int);
	builder.CreateCondBr(cmp56_var, block18, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, switch9_val9_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp20_val20_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch38_val38_int), block15);
	switch78_var->addCase(cast<ConstantInt>(switch38_val39_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep51_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, gep4_val6_int);
	builder.CreateCondBr(cmp92_var, block28, block19);
	
	builder.SetInsertPoint(block19);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast93_var, switch9_val9_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp20_val20_int);
	builder.CreateCondBr(cmp99_var, block20, block21);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep100_array { load95_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast96_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[27]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(8);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(8);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, load95_var, "", builder.GetInsertBlock());
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { binop105_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast96_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[28]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(4);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop105_var, "", builder.GetInsertBlock());
	SwitchInst* switch114_var = builder.CreateSwitch(load98_var, block26, 2);
	switch114_var->addCase(cast<ConstantInt>(switch38_val38_int), block24);
	switch114_var->addCase(cast<ConstantInt>(switch38_val39_int), block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast96_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[30]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(2);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(8);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop113_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast96_var, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(1);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block26);
	CallInst* call124_var = builder.CreateCall(globals[6], gep51_var);
	call124_var->setTailCall();
	call124_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block27);
	PHINode* phi125_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep126_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(arg3, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(4);
	Value* cast128_var = builder.CreateCast(Instruction::SExt, load127_var, types[0]);
	Value* binop129_var = BinaryOperator::Create(Instruction::Mul, cast128_var, phi125_var, "", builder.GetInsertBlock());
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, binop129_var, phi89_var, "", builder.GetInsertBlock());
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep132_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, gep4_val6_int);
	builder.CreateCondBr(cmp134_var, block38, block29);
	
	builder.SetInsertPoint(block29);
	Value* cast135_var = builder.CreateCast(Instruction::ZExt, load133_var, types[0]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast135_var, switch9_val9_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp20_val20_int);
	builder.CreateCondBr(cmp141_var, block30, block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep142_array { load137_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast138_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[27]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(8);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(8);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, load137_var, "", builder.GetInsertBlock());
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { binop147_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast138_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[28]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(4);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop147_var, "", builder.GetInsertBlock());
	SwitchInst* switch156_var = builder.CreateSwitch(load140_var, block36, 2);
	switch156_var->addCase(cast<ConstantInt>(switch38_val38_int), block34);
	switch156_var->addCase(cast<ConstantInt>(switch38_val39_int), block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast138_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[30]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(2);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(8);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop155_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast138_var, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block36);
	CallInst* call166_var = builder.CreateCall(globals[6], gep51_var);
	call166_var->setTailCall();
	call166_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block37);
	PHINode* phi167_var = builder.CreatePHI(types[0], 4);
	Value* binop168_var = BinaryOperator::Create(Instruction::Add, phi167_var, phi131_var, "", builder.GetInsertBlock());
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block38);
	PHINode* phi169_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep170_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(arg3, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	CallInst* call173_var = builder.CreateCall2(globals[8], phi169_var, cast172_var);
	call173_var->setTailCall();
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val4_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[9], gep175_array);
	CallInst* call175_var = builder.CreateCall(globals[6], gep175_var);
	call175_var->setTailCall();
	call175_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi178_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep179_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep4_val6_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(arg3, gep179_array);
	llvm::LoadInst* load180_var = builder.CreateLoad(gep179_var, false);
	load180_var->setAlignment(4);
	SwitchInst* switch181_var = builder.CreateSwitch(load180_var, block80, 3);
	switch181_var->addCase(cast<ConstantInt>(gep34_val34_int), block41);
	switch181_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch181_var->addCase(cast<ConstantInt>(switch9_val10_int), block50);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep181_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(arg3, gep181_array);
	Value* cast182_var = builder.CreateCast(Instruction::BitCast, gep181_var, types[27]);
	llvm::LoadInst* load183_var = builder.CreateLoad(cast182_var, false);
	load183_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Value* cast189_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast186_var, switch9_val9_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp20_val20_int);
	builder.CreateCondBr(cmp192_var, block43, block44);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep193_array { load188_var, };
	Value* gep193_var = builder.CreateInBoundsGEP(cast189_var, gep193_array);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, gep193_var, types[27]);
	llvm::LoadInst* load195_var = builder.CreateLoad(cast194_var, false);
	load195_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(8);
	Value* binop198_var = BinaryOperator::Create(Instruction::Add, load197_var, load188_var, "", builder.GetInsertBlock());
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp28_val28_int);
	builder.CreateCondBr(cmp199_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep200_array { binop198_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast189_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[28]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(4);
	Value* cast203_var = builder.CreateCast(Instruction::ZExt, load202_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep204_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep204_var = builder.CreateInBoundsGEP(globals[5], gep204_array);
	llvm::LoadInst* load205_var = builder.CreateLoad(gep204_var, false);
	load205_var->setAlignment(16);
	Value* binop206_var = BinaryOperator::Create(Instruction::Add, load205_var, binop198_var, "", builder.GetInsertBlock());
	SwitchInst* switch207_var = builder.CreateSwitch(load191_var, block49, 2);
	switch207_var->addCase(cast<ConstantInt>(switch38_val38_int), block47);
	switch207_var->addCase(cast<ConstantInt>(switch38_val39_int), block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { binop206_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast189_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[30]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(2);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(8);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop206_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast189_var, gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(1);
	Value* cast216_var = builder.CreateCast(Instruction::ZExt, load215_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block49);
	CallInst* call217_var = builder.CreateCall(globals[6], gep51_var);
	call217_var->setTailCall();
	call217_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep218_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(arg3, gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(4);
	Value* cmp220_var = builder.CreateICmp(CmpInst::ICMP_EQ, load219_var, gep4_val6_int);
	builder.CreateCondBr(cmp220_var, block59, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load219_var, types[0]);
	ArrayRef<Value*> gep222_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep222_var = builder.CreateInBoundsGEP(globals[5], gep222_array);
	llvm::LoadInst* load223_var = builder.CreateLoad(gep222_var, false);
	load223_var->setAlignment(16);
	Value* cast224_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast221_var, switch9_val9_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cmp227_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp20_val20_int);
	builder.CreateCondBr(cmp227_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep228_array { load223_var, };
	Value* gep228_var = builder.CreateInBoundsGEP(cast224_var, gep228_array);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, gep228_var, types[27]);
	llvm::LoadInst* load230_var = builder.CreateLoad(cast229_var, false);
	load230_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep231_var = builder.CreateInBoundsGEP(globals[5], gep231_array);
	llvm::LoadInst* load232_var = builder.CreateLoad(gep231_var, false);
	load232_var->setAlignment(8);
	Value* binop233_var = BinaryOperator::Create(Instruction::Add, load232_var, load223_var, "", builder.GetInsertBlock());
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp28_val28_int);
	builder.CreateCondBr(cmp234_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep235_array { binop233_var, };
	Value* gep235_var = builder.CreateInBoundsGEP(cast224_var, gep235_array);
	Value* cast236_var = builder.CreateCast(Instruction::BitCast, gep235_var, types[28]);
	llvm::LoadInst* load237_var = builder.CreateLoad(cast236_var, false);
	load237_var->setAlignment(4);
	Value* cast238_var = builder.CreateCast(Instruction::ZExt, load237_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* binop241_var = BinaryOperator::Create(Instruction::Add, load240_var, binop233_var, "", builder.GetInsertBlock());
	SwitchInst* switch242_var = builder.CreateSwitch(load226_var, block58, 2);
	switch242_var->addCase(cast<ConstantInt>(switch38_val38_int), block56);
	switch242_var->addCase(cast<ConstantInt>(switch38_val39_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { binop241_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast224_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[30]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(2);
	Value* cast245_var = builder.CreateCast(Instruction::ZExt, load244_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep246_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep246_var = builder.CreateInBoundsGEP(globals[5], gep246_array);
	llvm::LoadInst* load247_var = builder.CreateLoad(gep246_var, false);
	load247_var->setAlignment(8);
	Value* binop248_var = BinaryOperator::Create(Instruction::Add, load247_var, binop241_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep249_array { binop248_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast224_var, gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(1);
	Value* cast251_var = builder.CreateCast(Instruction::ZExt, load250_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call252_var = builder.CreateCall(globals[6], gep51_var);
	call252_var->setTailCall();
	call252_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi253_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep254_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep254_var = builder.CreateInBoundsGEP(arg3, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(4);
	Value* cmp256_var = builder.CreateICmp(CmpInst::ICMP_EQ, load255_var, gep4_val6_int);
	builder.CreateCondBr(cmp256_var, block69, block60);
	
	builder.SetInsertPoint(block60);
	Value* cast257_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	ArrayRef<Value*> gep258_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep258_var = builder.CreateInBoundsGEP(globals[5], gep258_array);
	llvm::LoadInst* load259_var = builder.CreateLoad(gep258_var, false);
	load259_var->setAlignment(16);
	Value* cast260_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast257_var, switch9_val9_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cmp263_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp20_val20_int);
	builder.CreateCondBr(cmp263_var, block61, block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep264_array { load259_var, };
	Value* gep264_var = builder.CreateInBoundsGEP(cast260_var, gep264_array);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, gep264_var, types[27]);
	llvm::LoadInst* load266_var = builder.CreateLoad(cast265_var, false);
	load266_var->setAlignment(8);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep267_var = builder.CreateInBoundsGEP(globals[5], gep267_array);
	llvm::LoadInst* load268_var = builder.CreateLoad(gep267_var, false);
	load268_var->setAlignment(8);
	Value* binop269_var = BinaryOperator::Create(Instruction::Add, load268_var, load259_var, "", builder.GetInsertBlock());
	Value* cmp270_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp28_val28_int);
	builder.CreateCondBr(cmp270_var, block63, block64);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep271_array { binop269_var, };
	Value* gep271_var = builder.CreateInBoundsGEP(cast260_var, gep271_array);
	Value* cast272_var = builder.CreateCast(Instruction::BitCast, gep271_var, types[28]);
	llvm::LoadInst* load273_var = builder.CreateLoad(cast272_var, false);
	load273_var->setAlignment(4);
	Value* cast274_var = builder.CreateCast(Instruction::ZExt, load273_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep275_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[5], gep275_array);
	llvm::LoadInst* load276_var = builder.CreateLoad(gep275_var, false);
	load276_var->setAlignment(16);
	Value* binop277_var = BinaryOperator::Create(Instruction::Add, load276_var, binop269_var, "", builder.GetInsertBlock());
	SwitchInst* switch278_var = builder.CreateSwitch(load262_var, block67, 2);
	switch278_var->addCase(cast<ConstantInt>(switch38_val38_int), block65);
	switch278_var->addCase(cast<ConstantInt>(switch38_val39_int), block66);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { binop277_var, };
	Value* gep278_var = builder.CreateInBoundsGEP(cast260_var, gep278_array);
	Value* cast279_var = builder.CreateCast(Instruction::BitCast, gep278_var, types[30]);
	llvm::LoadInst* load280_var = builder.CreateLoad(cast279_var, false);
	load280_var->setAlignment(2);
	Value* cast281_var = builder.CreateCast(Instruction::ZExt, load280_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep282_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep282_var = builder.CreateInBoundsGEP(globals[5], gep282_array);
	llvm::LoadInst* load283_var = builder.CreateLoad(gep282_var, false);
	load283_var->setAlignment(8);
	Value* binop284_var = BinaryOperator::Create(Instruction::Add, load283_var, binop277_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep285_array { binop284_var, };
	Value* gep285_var = builder.CreateInBoundsGEP(cast260_var, gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(1);
	Value* cast287_var = builder.CreateCast(Instruction::ZExt, load286_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block67);
	CallInst* call288_var = builder.CreateCall(globals[6], gep51_var);
	call288_var->setTailCall();
	call288_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block68);
	PHINode* phi289_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep290_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep290_var = builder.CreateInBoundsGEP(arg3, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(4);
	Value* cast292_var = builder.CreateCast(Instruction::SExt, load291_var, types[0]);
	Value* binop293_var = BinaryOperator::Create(Instruction::Mul, cast292_var, phi289_var, "", builder.GetInsertBlock());
	Value* binop294_var = BinaryOperator::Create(Instruction::Add, binop293_var, phi253_var, "", builder.GetInsertBlock());
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block69);
	PHINode* phi295_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep296_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep296_var = builder.CreateInBoundsGEP(arg3, gep296_array);
	llvm::LoadInst* load297_var = builder.CreateLoad(gep296_var, false);
	load297_var->setAlignment(4);
	Value* cmp298_var = builder.CreateICmp(CmpInst::ICMP_EQ, load297_var, gep4_val6_int);
	builder.CreateCondBr(cmp298_var, block79, block70);
	
	builder.SetInsertPoint(block70);
	Value* cast299_var = builder.CreateCast(Instruction::ZExt, load297_var, types[0]);
	ArrayRef<Value*> gep300_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep300_var = builder.CreateInBoundsGEP(globals[5], gep300_array);
	llvm::LoadInst* load301_var = builder.CreateLoad(gep300_var, false);
	load301_var->setAlignment(16);
	Value* cast302_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast299_var, switch9_val9_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cmp305_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp20_val20_int);
	builder.CreateCondBr(cmp305_var, block71, block72);
	
	builder.SetInsertPoint(block71);
	ArrayRef<Value*> gep306_array { load301_var, };
	Value* gep306_var = builder.CreateInBoundsGEP(cast302_var, gep306_array);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, gep306_var, types[27]);
	llvm::LoadInst* load308_var = builder.CreateLoad(cast307_var, false);
	load308_var->setAlignment(8);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep309_var = builder.CreateInBoundsGEP(globals[5], gep309_array);
	llvm::LoadInst* load310_var = builder.CreateLoad(gep309_var, false);
	load310_var->setAlignment(8);
	Value* binop311_var = BinaryOperator::Create(Instruction::Add, load310_var, load301_var, "", builder.GetInsertBlock());
	Value* cmp312_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp28_val28_int);
	builder.CreateCondBr(cmp312_var, block73, block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep313_array { binop311_var, };
	Value* gep313_var = builder.CreateInBoundsGEP(cast302_var, gep313_array);
	Value* cast314_var = builder.CreateCast(Instruction::BitCast, gep313_var, types[28]);
	llvm::LoadInst* load315_var = builder.CreateLoad(cast314_var, false);
	load315_var->setAlignment(4);
	Value* cast316_var = builder.CreateCast(Instruction::ZExt, load315_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep317_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep317_var = builder.CreateInBoundsGEP(globals[5], gep317_array);
	llvm::LoadInst* load318_var = builder.CreateLoad(gep317_var, false);
	load318_var->setAlignment(16);
	Value* binop319_var = BinaryOperator::Create(Instruction::Add, load318_var, binop311_var, "", builder.GetInsertBlock());
	SwitchInst* switch320_var = builder.CreateSwitch(load304_var, block77, 2);
	switch320_var->addCase(cast<ConstantInt>(switch38_val38_int), block75);
	switch320_var->addCase(cast<ConstantInt>(switch38_val39_int), block76);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { binop319_var, };
	Value* gep320_var = builder.CreateInBoundsGEP(cast302_var, gep320_array);
	Value* cast321_var = builder.CreateCast(Instruction::BitCast, gep320_var, types[30]);
	llvm::LoadInst* load322_var = builder.CreateLoad(cast321_var, false);
	load322_var->setAlignment(2);
	Value* cast323_var = builder.CreateCast(Instruction::ZExt, load322_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep324_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep324_var = builder.CreateInBoundsGEP(globals[5], gep324_array);
	llvm::LoadInst* load325_var = builder.CreateLoad(gep324_var, false);
	load325_var->setAlignment(8);
	Value* binop326_var = BinaryOperator::Create(Instruction::Add, load325_var, binop319_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep327_array { binop326_var, };
	Value* gep327_var = builder.CreateInBoundsGEP(cast302_var, gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(1);
	Value* cast329_var = builder.CreateCast(Instruction::ZExt, load328_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block77);
	CallInst* call330_var = builder.CreateCall(globals[6], gep51_var);
	call330_var->setTailCall();
	call330_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block78);
	PHINode* phi331_var = builder.CreatePHI(types[0], 4);
	Value* binop332_var = BinaryOperator::Create(Instruction::Add, phi331_var, phi295_var, "", builder.GetInsertBlock());
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block79);
	PHINode* phi333_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep334_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep34_val34_int, };
	Value* gep334_var = builder.CreateInBoundsGEP(arg3, gep334_array);
	llvm::LoadInst* load335_var = builder.CreateLoad(gep334_var, false);
	load335_var->setAlignment(1);
	Value* cast336_var = builder.CreateCast(Instruction::ZExt, load335_var, types[0]);
	CallInst* call337_var = builder.CreateCall2(globals[8], phi333_var, cast336_var);
	call337_var->setTailCall();
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block80);
	ArrayRef<Value*> gep338_array { gep4_val4_int, gep4_val4_int, };
	Value* gep338_var = builder.CreateInBoundsGEP(globals[10], gep338_array);
	CallInst* call338_var = builder.CreateCall(globals[6], gep338_var);
	call338_var->setTailCall();
	call338_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block81);
	PHINode* phi341_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep342_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep342_var = builder.CreateInBoundsGEP(arg3, gep342_array);
	llvm::LoadInst* load343_var = builder.CreateLoad(gep342_var, false);
	load343_var->setAlignment(1);
	Constant* cmp344_val344_int = ConstantInt::get(types[11], 8u);
	Value* cmp344_var = builder.CreateICmp(CmpInst::ICMP_EQ, load343_var, cmp344_val344_int);
	Constant* select346_val346_int = ConstantInt::get(types[0], 63u);
	Constant* select346_val347_int = ConstantInt::get(types[0], 31u);
	Value* var = builder.CreateSelect(cmp344_var, select346_val346_int, select346_val347_int);
	Value* binop349_var = BinaryOperator::Create(Instruction::And, var, phi341_var, "", builder.GetInsertBlock());
	Value* binop350_var = BinaryOperator::Create(Instruction::LShr, phi178_var, binop349_var, "", builder.GetInsertBlock());
	Constant* binop351_val351_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop351_var = BinaryOperator::CreateNSW(Instruction::Add, binop349_var, binop351_val351_int, "", builder.GetInsertBlock());
	Value* binop353_var = BinaryOperator::Create(Instruction::Shl, switch38_val39_int, binop351_var, "", builder.GetInsertBlock());
	Value* binop354_var = BinaryOperator::Create(Instruction::And, binop353_var, phi178_var, "", builder.GetInsertBlock());
	Value* cmp355_var = builder.CreateICmp(CmpInst::ICMP_NE, binop354_var, gep4_val4_int);
	ArrayRef<Value*> gep356_array { gep4_val4_int, gep4_val6_int, };
	Value* gep356_var = builder.CreateInBoundsGEP(arg2, gep356_array);
	Value* cast357_var = builder.CreateCast(Instruction::ZExt, cmp355_var, types[11]);
	llvm::StoreInst* store358_var = builder.CreateStore(cast357_var, gep356_var, false);
	store358_var->setAlignment(1);
	Value* cmp359_var = builder.CreateICmp(CmpInst::ICMP_EQ, binop349_var, switch38_val39_int);
	Value* cast360_var = builder.CreateCast(Instruction::ZExt, load343_var, types[0]);
	Constant* binop361_val361_int = ConstantInt::get(types[0], 3u);
	Value* binop361_var = BinaryOperator::CreateNSW(Instruction::Shl, cast360_var, binop361_val361_int, "", builder.GetInsertBlock());
	Constant* binop363_val363_int = ConstantInt::get(types[0], 4294967295u);
	Value* binop363_var = BinaryOperator::CreateNSW(Instruction::Add, binop361_var, binop363_val363_int, "", builder.GetInsertBlock());
	Value* binop365_var = BinaryOperator::Create(Instruction::And, binop363_var, binop363_val363_int, "", builder.GetInsertBlock());
	Value* binop366_var = BinaryOperator::Create(Instruction::Shl, switch38_val39_int, binop365_var, "", builder.GetInsertBlock());
	Value* binop367_var = BinaryOperator::Create(Instruction::And, binop366_var, phi178_var, "", builder.GetInsertBlock());
	Value* cmp368_var = builder.CreateICmp(CmpInst::ICMP_NE, binop367_var, gep4_val4_int);
	Value* binop369_var = BinaryOperator::Create(Instruction::And, cmp359_var, cmp368_var, "", builder.GetInsertBlock());
	Constant* gep370_val370_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep370_array { gep4_val4_int, gep370_val370_int, };
	Value* gep370_var = builder.CreateInBoundsGEP(arg2, gep370_array);
	Value* cast372_var = builder.CreateCast(Instruction::ZExt, binop369_var, types[11]);
	llvm::StoreInst* store373_var = builder.CreateStore(cast372_var, gep370_var, false);
	store373_var->setAlignment(1);
	Value* binop374_var = BinaryOperator::Create(Instruction::And, binop366_var, binop350_var, "", builder.GetInsertBlock());
	Value* cmp375_var = builder.CreateICmp(CmpInst::ICMP_NE, binop374_var, gep4_val4_int);
	Constant* gep376_val376_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep376_array { gep4_val4_int, gep376_val376_int, };
	Value* gep376_var = builder.CreateInBoundsGEP(arg2, gep376_array);
	Value* cast378_var = builder.CreateCast(Instruction::ZExt, cmp375_var, types[11]);
	llvm::StoreInst* store379_var = builder.CreateStore(cast378_var, gep376_var, false);
	store379_var->setAlignment(1);
	CallInst* call380_var = builder.CreateCall(globals[13], binop350_var);
	call380_var->setTailCall();
	call380_var->setDoesNotThrow();
	call380_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep382_array { gep4_val4_int, switch9_val9_int, };
	Value* gep382_var = builder.CreateInBoundsGEP(arg2, gep382_array);
	Value* cast383_var = builder.CreateCast(Instruction::Trunc, call380_var, types[11]);
	Constant* binop384_val384_int = ConstantInt::get(types[11], 1u);
	Value* binop384_var = BinaryOperator::Create(Instruction::And, cast383_var, binop384_val384_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store386_var = builder.CreateStore(binop384_var, gep382_var, false);
	store386_var->setAlignment(1);
	Value* cmp387_var = builder.CreateICmp(CmpInst::ICMP_EQ, binop350_var, gep4_val4_int);
	ArrayRef<Value*> gep388_array { gep4_val4_int, switch9_val10_int, };
	Value* gep388_var = builder.CreateInBoundsGEP(arg2, gep388_array);
	Value* cast389_var = builder.CreateCast(Instruction::ZExt, cmp387_var, types[11]);
	llvm::StoreInst* store390_var = builder.CreateStore(cast389_var, gep388_var, false);
	store390_var->setAlignment(1);
	Value* cmp391_var = builder.CreateICmp(CmpInst::ICMP_EQ, binop349_var, gep4_val4_int);
	builder.CreateCondBr(cmp391_var, block83, block82);
	
	builder.SetInsertPoint(block82);
	ArrayRef<Value*> gep392_array { gep4_val4_int, gep34_val34_int, };
	Value* gep392_var = builder.CreateInBoundsGEP(arg2, gep392_array);
	Constant* store393_val393_int = ConstantInt::get(types[11], 0u);
	llvm::StoreInst* store393_var = builder.CreateStore(store393_val393_int, gep392_var, false);
	store393_var->setAlignment(1);
	builder.CreateBr(block83);
	
	builder.SetInsertPoint(block83);
	phi89_var->addIncoming(gep4_val4_int, block9);
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi125_var->addIncoming(load102_var, block20);
	phi125_var->addIncoming(cast110_var, block22);
	phi125_var->addIncoming(cast117_var, block24);
	phi125_var->addIncoming(cast123_var, block25);
	
	phi131_var->addIncoming(binop130_var, block27);
	phi131_var->addIncoming(phi89_var, block18);
	
	phi167_var->addIncoming(load144_var, block30);
	phi167_var->addIncoming(cast152_var, block32);
	phi167_var->addIncoming(cast159_var, block34);
	phi167_var->addIncoming(cast165_var, block35);
	
	phi169_var->addIncoming(binop168_var, block37);
	phi169_var->addIncoming(phi131_var, block28);
	
	phi178_var->addIncoming(call173_var, block38);
	phi178_var->addIncoming(load24_var, block2);
	phi178_var->addIncoming(cast33_var, block4);
	phi178_var->addIncoming(cast43_var, block6);
	phi178_var->addIncoming(cast49_var, block7);
	
	phi253_var->addIncoming(gep4_val4_int, block50);
	phi253_var->addIncoming(load230_var, block52);
	phi253_var->addIncoming(cast238_var, block54);
	phi253_var->addIncoming(cast245_var, block56);
	phi253_var->addIncoming(cast251_var, block57);
	
	phi289_var->addIncoming(load266_var, block61);
	phi289_var->addIncoming(cast274_var, block63);
	phi289_var->addIncoming(cast281_var, block65);
	phi289_var->addIncoming(cast287_var, block66);
	
	phi295_var->addIncoming(binop294_var, block68);
	phi295_var->addIncoming(phi253_var, block59);
	
	phi331_var->addIncoming(load308_var, block71);
	phi331_var->addIncoming(cast316_var, block73);
	phi331_var->addIncoming(cast323_var, block75);
	phi331_var->addIncoming(cast329_var, block76);
	
	phi333_var->addIncoming(binop332_var, block78);
	phi333_var->addIncoming(phi295_var, block69);
	
	phi341_var->addIncoming(call337_var, block79);
	phi341_var->addIncoming(load183_var, block41);
	phi341_var->addIncoming(load195_var, block43);
	phi341_var->addIncoming(cast203_var, block45);
	phi341_var->addIncoming(cast210_var, block47);
	phi341_var->addIncoming(cast216_var, block48);
	
	return;
}

void x86::x86_shrd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[606], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_shrx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[607], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_shufpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[608], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_shufps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[609], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sidt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[610], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_skinit(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[611], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sldt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[612], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_smsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[613], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sqrtpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[614], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sqrtps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[615], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sqrtsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[616], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sqrtss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[617], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_stac(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[618], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_stc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[619], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_std(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[620], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_stgi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[621], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sti(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[622], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_stmxcsr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[623], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_stosb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[624], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_stosd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[625], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_stosq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[626], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_stosw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[627], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_str(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[628], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	BasicBlock* block84 = BasicBlock::Create(context, "", function);
	BasicBlock* block85 = BasicBlock::Create(context, "", function);
	BasicBlock* block86 = BasicBlock::Create(context, "", function);
	BasicBlock* block87 = BasicBlock::Create(context, "", function);
	BasicBlock* block88 = BasicBlock::Create(context, "", function);
	BasicBlock* block89 = BasicBlock::Create(context, "", function);
	BasicBlock* block90 = BasicBlock::Create(context, "", function);
	BasicBlock* block91 = BasicBlock::Create(context, "", function);
	BasicBlock* block92 = BasicBlock::Create(context, "", function);
	BasicBlock* block93 = BasicBlock::Create(context, "", function);
	BasicBlock* block94 = BasicBlock::Create(context, "", function);
	BasicBlock* block95 = BasicBlock::Create(context, "", function);
	BasicBlock* block96 = BasicBlock::Create(context, "", function);
	BasicBlock* block97 = BasicBlock::Create(context, "", function);
	BasicBlock* block98 = BasicBlock::Create(context, "", function);
	BasicBlock* block99 = BasicBlock::Create(context, "", function);
	BasicBlock* block100 = BasicBlock::Create(context, "", function);
	BasicBlock* block101 = BasicBlock::Create(context, "", function);
	BasicBlock* block102 = BasicBlock::Create(context, "", function);
	BasicBlock* block103 = BasicBlock::Create(context, "", function);
	BasicBlock* block104 = BasicBlock::Create(context, "", function);
	BasicBlock* block105 = BasicBlock::Create(context, "", function);
	BasicBlock* block106 = BasicBlock::Create(context, "", function);
	BasicBlock* block107 = BasicBlock::Create(context, "", function);
	BasicBlock* block108 = BasicBlock::Create(context, "", function);
	BasicBlock* block109 = BasicBlock::Create(context, "", function);
	BasicBlock* block110 = BasicBlock::Create(context, "", function);
	BasicBlock* block111 = BasicBlock::Create(context, "", function);
	BasicBlock* block112 = BasicBlock::Create(context, "", function);
	BasicBlock* block113 = BasicBlock::Create(context, "", function);
	BasicBlock* block114 = BasicBlock::Create(context, "", function);
	BasicBlock* block115 = BasicBlock::Create(context, "", function);
	BasicBlock* block116 = BasicBlock::Create(context, "", function);
	BasicBlock* block117 = BasicBlock::Create(context, "", function);
	BasicBlock* block118 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block39, 2);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block9);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep11_var = builder.CreateGEP(arg3, gep11_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep11_var, false);
	load12_var->setAlignment(4);
	Value* cast13_var = builder.CreateCast(Instruction::ZExt, load12_var, types[0]);
	ArrayRef<Value*> gep14_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(globals[5], gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast13_var, switch9_val9_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep18_var, false);
	load19_var->setAlignment(16);
	Constant* cmp20_val20_int = ConstantInt::get(types[0], 8u);
	Value* cmp20_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp20_val20_int);
	builder.CreateCondBr(cmp20_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep22_array { load16_var, };
	Value* gep22_var = builder.CreateInBoundsGEP(cast17_var, gep22_array);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, gep22_var, types[27]);
	llvm::LoadInst* load24_var = builder.CreateLoad(cast23_var, false);
	load24_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(8);
	Value* binop27_var = BinaryOperator::Create(Instruction::Add, load26_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 4u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { binop27_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast17_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[28]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(4);
	Value* cast33_var = builder.CreateCast(Instruction::ZExt, load32_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block5);
	Constant* gep34_val34_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep34_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop27_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load19_var, block8, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block6);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load45_var = builder.CreateLoad(gep44_var, false);
	load45_var->setAlignment(8);
	Value* binop46_var = BinaryOperator::Create(Instruction::Add, load45_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep47_array { binop46_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast17_var, gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(1);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep51_array { gep4_val4_int, gep4_val4_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[7], gep51_array);
	CallInst* call50_var = builder.CreateCall(globals[6], gep51_var);
	call50_var->setTailCall();
	call50_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val6_int);
	builder.CreateCondBr(cmp56_var, block18, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, switch9_val9_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp20_val20_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch38_val38_int), block15);
	switch78_var->addCase(cast<ConstantInt>(switch38_val39_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep51_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, gep4_val6_int);
	builder.CreateCondBr(cmp92_var, block28, block19);
	
	builder.SetInsertPoint(block19);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast93_var, switch9_val9_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp20_val20_int);
	builder.CreateCondBr(cmp99_var, block20, block21);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep100_array { load95_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast96_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[27]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(8);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(8);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, load95_var, "", builder.GetInsertBlock());
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { binop105_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast96_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[28]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(4);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop105_var, "", builder.GetInsertBlock());
	SwitchInst* switch114_var = builder.CreateSwitch(load98_var, block26, 2);
	switch114_var->addCase(cast<ConstantInt>(switch38_val38_int), block24);
	switch114_var->addCase(cast<ConstantInt>(switch38_val39_int), block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast96_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[30]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(2);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(8);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop113_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast96_var, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(1);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block26);
	CallInst* call124_var = builder.CreateCall(globals[6], gep51_var);
	call124_var->setTailCall();
	call124_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block27);
	PHINode* phi125_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep126_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(arg3, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(4);
	Value* cast128_var = builder.CreateCast(Instruction::SExt, load127_var, types[0]);
	Value* binop129_var = BinaryOperator::Create(Instruction::Mul, cast128_var, phi125_var, "", builder.GetInsertBlock());
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, binop129_var, phi89_var, "", builder.GetInsertBlock());
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep132_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, gep4_val6_int);
	builder.CreateCondBr(cmp134_var, block38, block29);
	
	builder.SetInsertPoint(block29);
	Value* cast135_var = builder.CreateCast(Instruction::ZExt, load133_var, types[0]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast135_var, switch9_val9_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp20_val20_int);
	builder.CreateCondBr(cmp141_var, block30, block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep142_array { load137_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast138_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[27]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(8);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(8);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, load137_var, "", builder.GetInsertBlock());
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { binop147_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast138_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[28]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(4);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop147_var, "", builder.GetInsertBlock());
	SwitchInst* switch156_var = builder.CreateSwitch(load140_var, block36, 2);
	switch156_var->addCase(cast<ConstantInt>(switch38_val38_int), block34);
	switch156_var->addCase(cast<ConstantInt>(switch38_val39_int), block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast138_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[30]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(2);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(8);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop155_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast138_var, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block36);
	CallInst* call166_var = builder.CreateCall(globals[6], gep51_var);
	call166_var->setTailCall();
	call166_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block37);
	PHINode* phi167_var = builder.CreatePHI(types[0], 4);
	Value* binop168_var = BinaryOperator::Create(Instruction::Add, phi167_var, phi131_var, "", builder.GetInsertBlock());
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block38);
	PHINode* phi169_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep170_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(arg3, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	CallInst* call173_var = builder.CreateCall2(globals[8], phi169_var, cast172_var);
	call173_var->setTailCall();
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val4_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[9], gep175_array);
	CallInst* call175_var = builder.CreateCall(globals[6], gep175_var);
	call175_var->setTailCall();
	call175_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi178_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep179_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep4_val6_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(arg3, gep179_array);
	llvm::LoadInst* load180_var = builder.CreateLoad(gep179_var, false);
	load180_var->setAlignment(4);
	SwitchInst* switch181_var = builder.CreateSwitch(load180_var, block80, 3);
	switch181_var->addCase(cast<ConstantInt>(gep34_val34_int), block41);
	switch181_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch181_var->addCase(cast<ConstantInt>(switch9_val10_int), block50);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep181_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(arg3, gep181_array);
	Value* cast182_var = builder.CreateCast(Instruction::BitCast, gep181_var, types[27]);
	llvm::LoadInst* load183_var = builder.CreateLoad(cast182_var, false);
	load183_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Value* cast189_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast186_var, switch9_val9_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp20_val20_int);
	builder.CreateCondBr(cmp192_var, block43, block44);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep193_array { load188_var, };
	Value* gep193_var = builder.CreateInBoundsGEP(cast189_var, gep193_array);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, gep193_var, types[27]);
	llvm::LoadInst* load195_var = builder.CreateLoad(cast194_var, false);
	load195_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(8);
	Value* binop198_var = BinaryOperator::Create(Instruction::Add, load197_var, load188_var, "", builder.GetInsertBlock());
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp28_val28_int);
	builder.CreateCondBr(cmp199_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep200_array { binop198_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast189_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[28]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(4);
	Value* cast203_var = builder.CreateCast(Instruction::ZExt, load202_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep204_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep204_var = builder.CreateInBoundsGEP(globals[5], gep204_array);
	llvm::LoadInst* load205_var = builder.CreateLoad(gep204_var, false);
	load205_var->setAlignment(16);
	Value* binop206_var = BinaryOperator::Create(Instruction::Add, load205_var, binop198_var, "", builder.GetInsertBlock());
	SwitchInst* switch207_var = builder.CreateSwitch(load191_var, block49, 2);
	switch207_var->addCase(cast<ConstantInt>(switch38_val38_int), block47);
	switch207_var->addCase(cast<ConstantInt>(switch38_val39_int), block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { binop206_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast189_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[30]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(2);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(8);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop206_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast189_var, gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(1);
	Value* cast216_var = builder.CreateCast(Instruction::ZExt, load215_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block49);
	CallInst* call217_var = builder.CreateCall(globals[6], gep51_var);
	call217_var->setTailCall();
	call217_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep218_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(arg3, gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(4);
	Value* cmp220_var = builder.CreateICmp(CmpInst::ICMP_EQ, load219_var, gep4_val6_int);
	builder.CreateCondBr(cmp220_var, block59, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load219_var, types[0]);
	ArrayRef<Value*> gep222_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep222_var = builder.CreateInBoundsGEP(globals[5], gep222_array);
	llvm::LoadInst* load223_var = builder.CreateLoad(gep222_var, false);
	load223_var->setAlignment(16);
	Value* cast224_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast221_var, switch9_val9_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cmp227_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp20_val20_int);
	builder.CreateCondBr(cmp227_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep228_array { load223_var, };
	Value* gep228_var = builder.CreateInBoundsGEP(cast224_var, gep228_array);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, gep228_var, types[27]);
	llvm::LoadInst* load230_var = builder.CreateLoad(cast229_var, false);
	load230_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep231_var = builder.CreateInBoundsGEP(globals[5], gep231_array);
	llvm::LoadInst* load232_var = builder.CreateLoad(gep231_var, false);
	load232_var->setAlignment(8);
	Value* binop233_var = BinaryOperator::Create(Instruction::Add, load232_var, load223_var, "", builder.GetInsertBlock());
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp28_val28_int);
	builder.CreateCondBr(cmp234_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep235_array { binop233_var, };
	Value* gep235_var = builder.CreateInBoundsGEP(cast224_var, gep235_array);
	Value* cast236_var = builder.CreateCast(Instruction::BitCast, gep235_var, types[28]);
	llvm::LoadInst* load237_var = builder.CreateLoad(cast236_var, false);
	load237_var->setAlignment(4);
	Value* cast238_var = builder.CreateCast(Instruction::ZExt, load237_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* binop241_var = BinaryOperator::Create(Instruction::Add, load240_var, binop233_var, "", builder.GetInsertBlock());
	SwitchInst* switch242_var = builder.CreateSwitch(load226_var, block58, 2);
	switch242_var->addCase(cast<ConstantInt>(switch38_val38_int), block56);
	switch242_var->addCase(cast<ConstantInt>(switch38_val39_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { binop241_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast224_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[30]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(2);
	Value* cast245_var = builder.CreateCast(Instruction::ZExt, load244_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep246_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep246_var = builder.CreateInBoundsGEP(globals[5], gep246_array);
	llvm::LoadInst* load247_var = builder.CreateLoad(gep246_var, false);
	load247_var->setAlignment(8);
	Value* binop248_var = BinaryOperator::Create(Instruction::Add, load247_var, binop241_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep249_array { binop248_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast224_var, gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(1);
	Value* cast251_var = builder.CreateCast(Instruction::ZExt, load250_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call252_var = builder.CreateCall(globals[6], gep51_var);
	call252_var->setTailCall();
	call252_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi253_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep254_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep254_var = builder.CreateInBoundsGEP(arg3, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(4);
	Value* cmp256_var = builder.CreateICmp(CmpInst::ICMP_EQ, load255_var, gep4_val6_int);
	builder.CreateCondBr(cmp256_var, block69, block60);
	
	builder.SetInsertPoint(block60);
	Value* cast257_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	ArrayRef<Value*> gep258_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep258_var = builder.CreateInBoundsGEP(globals[5], gep258_array);
	llvm::LoadInst* load259_var = builder.CreateLoad(gep258_var, false);
	load259_var->setAlignment(16);
	Value* cast260_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast257_var, switch9_val9_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cmp263_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp20_val20_int);
	builder.CreateCondBr(cmp263_var, block61, block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep264_array { load259_var, };
	Value* gep264_var = builder.CreateInBoundsGEP(cast260_var, gep264_array);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, gep264_var, types[27]);
	llvm::LoadInst* load266_var = builder.CreateLoad(cast265_var, false);
	load266_var->setAlignment(8);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep267_var = builder.CreateInBoundsGEP(globals[5], gep267_array);
	llvm::LoadInst* load268_var = builder.CreateLoad(gep267_var, false);
	load268_var->setAlignment(8);
	Value* binop269_var = BinaryOperator::Create(Instruction::Add, load268_var, load259_var, "", builder.GetInsertBlock());
	Value* cmp270_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp28_val28_int);
	builder.CreateCondBr(cmp270_var, block63, block64);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep271_array { binop269_var, };
	Value* gep271_var = builder.CreateInBoundsGEP(cast260_var, gep271_array);
	Value* cast272_var = builder.CreateCast(Instruction::BitCast, gep271_var, types[28]);
	llvm::LoadInst* load273_var = builder.CreateLoad(cast272_var, false);
	load273_var->setAlignment(4);
	Value* cast274_var = builder.CreateCast(Instruction::ZExt, load273_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep275_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[5], gep275_array);
	llvm::LoadInst* load276_var = builder.CreateLoad(gep275_var, false);
	load276_var->setAlignment(16);
	Value* binop277_var = BinaryOperator::Create(Instruction::Add, load276_var, binop269_var, "", builder.GetInsertBlock());
	SwitchInst* switch278_var = builder.CreateSwitch(load262_var, block67, 2);
	switch278_var->addCase(cast<ConstantInt>(switch38_val38_int), block65);
	switch278_var->addCase(cast<ConstantInt>(switch38_val39_int), block66);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { binop277_var, };
	Value* gep278_var = builder.CreateInBoundsGEP(cast260_var, gep278_array);
	Value* cast279_var = builder.CreateCast(Instruction::BitCast, gep278_var, types[30]);
	llvm::LoadInst* load280_var = builder.CreateLoad(cast279_var, false);
	load280_var->setAlignment(2);
	Value* cast281_var = builder.CreateCast(Instruction::ZExt, load280_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep282_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep282_var = builder.CreateInBoundsGEP(globals[5], gep282_array);
	llvm::LoadInst* load283_var = builder.CreateLoad(gep282_var, false);
	load283_var->setAlignment(8);
	Value* binop284_var = BinaryOperator::Create(Instruction::Add, load283_var, binop277_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep285_array { binop284_var, };
	Value* gep285_var = builder.CreateInBoundsGEP(cast260_var, gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(1);
	Value* cast287_var = builder.CreateCast(Instruction::ZExt, load286_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block67);
	CallInst* call288_var = builder.CreateCall(globals[6], gep51_var);
	call288_var->setTailCall();
	call288_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block68);
	PHINode* phi289_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep290_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep290_var = builder.CreateInBoundsGEP(arg3, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(4);
	Value* cast292_var = builder.CreateCast(Instruction::SExt, load291_var, types[0]);
	Value* binop293_var = BinaryOperator::Create(Instruction::Mul, cast292_var, phi289_var, "", builder.GetInsertBlock());
	Value* binop294_var = BinaryOperator::Create(Instruction::Add, binop293_var, phi253_var, "", builder.GetInsertBlock());
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block69);
	PHINode* phi295_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep296_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep296_var = builder.CreateInBoundsGEP(arg3, gep296_array);
	llvm::LoadInst* load297_var = builder.CreateLoad(gep296_var, false);
	load297_var->setAlignment(4);
	Value* cmp298_var = builder.CreateICmp(CmpInst::ICMP_EQ, load297_var, gep4_val6_int);
	builder.CreateCondBr(cmp298_var, block79, block70);
	
	builder.SetInsertPoint(block70);
	Value* cast299_var = builder.CreateCast(Instruction::ZExt, load297_var, types[0]);
	ArrayRef<Value*> gep300_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep300_var = builder.CreateInBoundsGEP(globals[5], gep300_array);
	llvm::LoadInst* load301_var = builder.CreateLoad(gep300_var, false);
	load301_var->setAlignment(16);
	Value* cast302_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast299_var, switch9_val9_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cmp305_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp20_val20_int);
	builder.CreateCondBr(cmp305_var, block71, block72);
	
	builder.SetInsertPoint(block71);
	ArrayRef<Value*> gep306_array { load301_var, };
	Value* gep306_var = builder.CreateInBoundsGEP(cast302_var, gep306_array);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, gep306_var, types[27]);
	llvm::LoadInst* load308_var = builder.CreateLoad(cast307_var, false);
	load308_var->setAlignment(8);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep309_var = builder.CreateInBoundsGEP(globals[5], gep309_array);
	llvm::LoadInst* load310_var = builder.CreateLoad(gep309_var, false);
	load310_var->setAlignment(8);
	Value* binop311_var = BinaryOperator::Create(Instruction::Add, load310_var, load301_var, "", builder.GetInsertBlock());
	Value* cmp312_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp28_val28_int);
	builder.CreateCondBr(cmp312_var, block73, block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep313_array { binop311_var, };
	Value* gep313_var = builder.CreateInBoundsGEP(cast302_var, gep313_array);
	Value* cast314_var = builder.CreateCast(Instruction::BitCast, gep313_var, types[28]);
	llvm::LoadInst* load315_var = builder.CreateLoad(cast314_var, false);
	load315_var->setAlignment(4);
	Value* cast316_var = builder.CreateCast(Instruction::ZExt, load315_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep317_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep317_var = builder.CreateInBoundsGEP(globals[5], gep317_array);
	llvm::LoadInst* load318_var = builder.CreateLoad(gep317_var, false);
	load318_var->setAlignment(16);
	Value* binop319_var = BinaryOperator::Create(Instruction::Add, load318_var, binop311_var, "", builder.GetInsertBlock());
	SwitchInst* switch320_var = builder.CreateSwitch(load304_var, block77, 2);
	switch320_var->addCase(cast<ConstantInt>(switch38_val38_int), block75);
	switch320_var->addCase(cast<ConstantInt>(switch38_val39_int), block76);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { binop319_var, };
	Value* gep320_var = builder.CreateInBoundsGEP(cast302_var, gep320_array);
	Value* cast321_var = builder.CreateCast(Instruction::BitCast, gep320_var, types[30]);
	llvm::LoadInst* load322_var = builder.CreateLoad(cast321_var, false);
	load322_var->setAlignment(2);
	Value* cast323_var = builder.CreateCast(Instruction::ZExt, load322_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep324_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep324_var = builder.CreateInBoundsGEP(globals[5], gep324_array);
	llvm::LoadInst* load325_var = builder.CreateLoad(gep324_var, false);
	load325_var->setAlignment(8);
	Value* binop326_var = BinaryOperator::Create(Instruction::Add, load325_var, binop319_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep327_array { binop326_var, };
	Value* gep327_var = builder.CreateInBoundsGEP(cast302_var, gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(1);
	Value* cast329_var = builder.CreateCast(Instruction::ZExt, load328_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block77);
	CallInst* call330_var = builder.CreateCall(globals[6], gep51_var);
	call330_var->setTailCall();
	call330_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block78);
	PHINode* phi331_var = builder.CreatePHI(types[0], 4);
	Value* binop332_var = BinaryOperator::Create(Instruction::Add, phi331_var, phi295_var, "", builder.GetInsertBlock());
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block79);
	PHINode* phi333_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep334_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep34_val34_int, };
	Value* gep334_var = builder.CreateInBoundsGEP(arg3, gep334_array);
	llvm::LoadInst* load335_var = builder.CreateLoad(gep334_var, false);
	load335_var->setAlignment(1);
	Value* cast336_var = builder.CreateCast(Instruction::ZExt, load335_var, types[0]);
	CallInst* call337_var = builder.CreateCall2(globals[8], phi333_var, cast336_var);
	call337_var->setTailCall();
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block80);
	ArrayRef<Value*> gep338_array { gep4_val4_int, gep4_val4_int, };
	Value* gep338_var = builder.CreateInBoundsGEP(globals[10], gep338_array);
	CallInst* call338_var = builder.CreateCall(globals[6], gep338_var);
	call338_var->setTailCall();
	call338_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block81);
	PHINode* phi341_var = builder.CreatePHI(types[0], 6);
	ArrayRef<Value*> gep342_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep342_var = builder.CreateInBoundsGEP(arg3, gep342_array);
	llvm::LoadInst* load343_var = builder.CreateLoad(gep342_var, false);
	load343_var->setAlignment(1);
	Value* cast344_var = builder.CreateCast(Instruction::ZExt, load343_var, types[0]);
	Value* binop345_var = BinaryOperator::Create(Instruction::Sub, gep4_val4_int, phi341_var, "", builder.GetInsertBlock());
	CallInst* call346_var = builder.CreateCall2(globals[11], phi178_var, binop345_var);
	call346_var->setTailCall();
	call346_var->setDoesNotThrow();
	call346_var->setDoesNotAccessMemory();
	ArrayRef<unsigned> extr348_array { 0, };
	Value* extr348_var = builder.CreateExtractValue(call346_var, extr348_array);
	SwitchInst* switch349_var = builder.CreateSwitch(cast344_var, block84, 4);
	switch349_var->addCase(cast<ConstantInt>(cmp28_val28_int), block82);
	switch349_var->addCase(cast<ConstantInt>(switch38_val38_int), block82);
	switch349_var->addCase(cast<ConstantInt>(switch38_val39_int), block82);
	switch349_var->addCase(cast<ConstantInt>(cmp20_val20_int), block83);
	
	builder.SetInsertPoint(block82);
	Constant* binop349_val349_int = ConstantInt::get(types[0], 3u);
	Value* binop349_var = BinaryOperator::CreateNSW(Instruction::Shl, cast344_var, binop349_val349_int, "", builder.GetInsertBlock());
	Value* binop351_var = BinaryOperator::Create(Instruction::Shl, switch38_val39_int, binop349_var, "", builder.GetInsertBlock());
	Value* binop352_var = BinaryOperator::Create(Instruction::And, binop351_var, extr348_var, "", builder.GetInsertBlock());
	Value* cmp353_var = builder.CreateICmp(CmpInst::ICMP_NE, binop352_var, gep4_val4_int);
	Value* cast354_var = builder.CreateCast(Instruction::ZExt, cmp353_var, types[11]);
	Constant* binop355_val355_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop355_var = BinaryOperator::CreateNSW(Instruction::Add, binop349_var, binop355_val355_int, "", builder.GetInsertBlock());
	Value* binop357_var = BinaryOperator::Create(Instruction::Shl, switch38_val39_int, binop355_var, "", builder.GetInsertBlock());
	Value* binop358_var = BinaryOperator::Create(Instruction::And, binop357_var, extr348_var, "", builder.GetInsertBlock());
	Value* cmp359_var = builder.CreateICmp(CmpInst::ICMP_NE, binop358_var, gep4_val4_int);
	Value* cast360_var = builder.CreateCast(Instruction::ZExt, cmp359_var, types[11]);
	builder.CreateBr(block85);
	
	builder.SetInsertPoint(block83);
	ArrayRef<unsigned> extr361_array { 1, };
	Value* extr361_var = builder.CreateExtractValue(call346_var, extr361_array);
	Value* cast362_var = builder.CreateCast(Instruction::ZExt, extr361_var, types[11]);
	Constant* binop363_val363_int = ConstantInt::get(types[0], 63u);
	Value* binop363_var = BinaryOperator::Create(Instruction::LShr, extr348_var, binop363_val363_int, "", builder.GetInsertBlock());
	Value* cast365_var = builder.CreateCast(Instruction::Trunc, binop363_var, types[11]);
	builder.CreateBr(block85);
	
	builder.SetInsertPoint(block84);
	ArrayRef<Value*> gep366_array { gep4_val4_int, gep4_val4_int, };
	Value* gep366_var = builder.CreateInBoundsGEP(globals[12], gep366_array);
	CallInst* call366_var = builder.CreateCall(globals[6], gep366_var);
	call366_var->setTailCall();
	call366_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block85);
	PHINode* phi369_var = builder.CreatePHI(types[11], 2);
	PHINode* phi370_var = builder.CreatePHI(types[11], 2);
	ArrayRef<Value*> gep371_array { gep4_val4_int, gep4_val6_int, };
	Value* gep371_var = builder.CreateInBoundsGEP(arg2, gep371_array);
	Constant* binop372_val372_int = ConstantInt::get(types[11], 1u);
	Value* binop372_var = BinaryOperator::Create(Instruction::And, phi370_var, binop372_val372_int, "", builder.GetInsertBlock());
	Constant* gep374_val374_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep374_array { gep4_val4_int, gep374_val374_int, };
	Value* gep374_var = builder.CreateInBoundsGEP(arg2, gep374_array);
	llvm::StoreInst* store376_var = builder.CreateStore(binop372_var, gep374_var, false);
	store376_var->setAlignment(1);
	CallInst* call377_var = builder.CreateCall(globals[13], extr348_var);
	call377_var->setTailCall();
	call377_var->setDoesNotThrow();
	call377_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep379_array { gep4_val4_int, switch9_val9_int, };
	Value* gep379_var = builder.CreateInBoundsGEP(arg2, gep379_array);
	Value* cast380_var = builder.CreateCast(Instruction::Trunc, call377_var, types[11]);
	Value* binop381_var = BinaryOperator::Create(Instruction::And, cast380_var, binop372_val372_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store382_var = builder.CreateStore(binop381_var, gep379_var, false);
	store382_var->setAlignment(1);
	Constant* binop383_val383_int = ConstantInt::get(types[0], 15u);
	Value* binop383_var = BinaryOperator::Create(Instruction::And, phi178_var, binop383_val383_int, "", builder.GetInsertBlock());
	Value* binop385_var = BinaryOperator::Create(Instruction::And, binop345_var, binop383_val383_int, "", builder.GetInsertBlock());
	Value* binop386_var = BinaryOperator::CreateNSW(Instruction::Add, binop385_var, binop383_var, "", builder.GetInsertBlock());
	Constant* cmp387_val387_int = ConstantInt::get(types[0], 16u);
	Value* cmp387_var = builder.CreateICmp(CmpInst::ICMP_ULT, binop386_var, cmp387_val387_int);
	ArrayRef<Value*> gep389_array { gep4_val4_int, gep34_val34_int, };
	Value* gep389_var = builder.CreateInBoundsGEP(arg2, gep389_array);
	Value* cmp390_var = builder.CreateICmp(CmpInst::ICMP_EQ, extr348_var, gep4_val4_int);
	ArrayRef<Value*> gep391_array { gep4_val4_int, switch9_val10_int, };
	Value* gep391_var = builder.CreateInBoundsGEP(arg2, gep391_array);
	Value* cast392_var = builder.CreateCast(Instruction::ZExt, cmp390_var, types[11]);
	llvm::StoreInst* store393_var = builder.CreateStore(cast392_var, gep391_var, false);
	store393_var->setAlignment(1);
	Constant* gep394_val394_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep394_array { gep4_val4_int, gep394_val394_int, };
	Value* gep394_var = builder.CreateInBoundsGEP(arg2, gep394_array);
	Value* binop396_var = BinaryOperator::Create(Instruction::Xor, binop372_var, phi369_var, "", builder.GetInsertBlock());
	llvm::StoreInst* store397_var = builder.CreateStore(binop396_var, gep394_var, false);
	store397_var->setAlignment(1);
	Value* binop398_var = BinaryOperator::Create(Instruction::Xor, phi369_var, binop372_val372_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store399_var = builder.CreateStore(binop398_var, gep371_var, false);
	store399_var->setAlignment(1);
	Value* cast400_var = builder.CreateCast(Instruction::ZExt, cmp387_var, types[11]);
	llvm::StoreInst* store401_var = builder.CreateStore(cast400_var, gep389_var, false);
	store401_var->setAlignment(1);
	llvm::LoadInst* load402_var = builder.CreateLoad(gep4_var, false);
	load402_var->setAlignment(4);
	SwitchInst* switch403_var = builder.CreateSwitch(load402_var, block117, 2);
	switch403_var->addCase(cast<ConstantInt>(switch9_val9_int), block86);
	switch403_var->addCase(cast<ConstantInt>(switch9_val10_int), block87);
	
	builder.SetInsertPoint(block86);
	ArrayRef<Value*> gep403_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep403_var = builder.CreateGEP(arg3, gep403_array);
	llvm::LoadInst* load404_var = builder.CreateLoad(gep403_var, false);
	load404_var->setAlignment(4);
	Value* cast405_var = builder.CreateCast(Instruction::ZExt, load404_var, types[0]);
	ArrayRef<Value*> gep406_array { gep4_val4_int, cast405_var, switch9_val9_int, };
	Value* gep406_var = builder.CreateInBoundsGEP(globals[5], gep406_array);
	llvm::LoadInst* load407_var = builder.CreateLoad(gep406_var, false);
	load407_var->setAlignment(16);
	Value* binop408_var = BinaryOperator::Create(Instruction::Shl, load407_var, binop349_val349_int, "", builder.GetInsertBlock());
	Constant* binop409_val409_int = ConstantInt::get(types[0], 64u);
	Value* binop409_var = BinaryOperator::Create(Instruction::Sub, binop409_val409_int, binop408_var, "", builder.GetInsertBlock());
	Value* binop411_var = BinaryOperator::Create(Instruction::LShr, binop355_val355_int, binop409_var, "", builder.GetInsertBlock());
	Value* binop412_var = BinaryOperator::Create(Instruction::And, binop411_var, extr348_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep413_array { gep4_val4_int, cast405_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep413_var = builder.CreateInBoundsGEP(globals[5], gep413_array);
	llvm::LoadInst* load414_var = builder.CreateLoad(gep413_var, false);
	load414_var->setAlignment(16);
	Value* cast415_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep416_array { load414_var, };
	Value* gep416_var = builder.CreateInBoundsGEP(cast415_var, gep416_array);
	Value* cast417_var = builder.CreateCast(Instruction::BitCast, gep416_var, types[27]);
	llvm::StoreInst* store418_var = builder.CreateStore(binop412_var, cast417_var, false);
	store418_var->setAlignment(8);
	builder.CreateBr(block118);
	
	builder.SetInsertPoint(block87);
	ArrayRef<Value*> gep419_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep419_var = builder.CreateInBoundsGEP(arg3, gep419_array);
	llvm::LoadInst* load420_var = builder.CreateLoad(gep419_var, false);
	load420_var->setAlignment(4);
	Value* cmp421_var = builder.CreateICmp(CmpInst::ICMP_EQ, load420_var, gep4_val6_int);
	builder.CreateCondBr(cmp421_var, block96, block88);
	
	builder.SetInsertPoint(block88);
	Value* cast422_var = builder.CreateCast(Instruction::ZExt, load420_var, types[0]);
	ArrayRef<Value*> gep423_array { gep4_val4_int, cast422_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep423_var = builder.CreateInBoundsGEP(globals[5], gep423_array);
	llvm::LoadInst* load424_var = builder.CreateLoad(gep423_var, false);
	load424_var->setAlignment(16);
	Value* cast425_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep426_array { gep4_val4_int, cast422_var, switch9_val9_int, };
	Value* gep426_var = builder.CreateInBoundsGEP(globals[5], gep426_array);
	llvm::LoadInst* load427_var = builder.CreateLoad(gep426_var, false);
	load427_var->setAlignment(16);
	Value* cmp428_var = builder.CreateICmp(CmpInst::ICMP_EQ, load427_var, cmp20_val20_int);
	builder.CreateCondBr(cmp428_var, block89, block90);
	
	builder.SetInsertPoint(block89);
	ArrayRef<Value*> gep429_array { load424_var, };
	Value* gep429_var = builder.CreateInBoundsGEP(cast425_var, gep429_array);
	Value* cast430_var = builder.CreateCast(Instruction::BitCast, gep429_var, types[27]);
	llvm::LoadInst* load431_var = builder.CreateLoad(cast430_var, false);
	load431_var->setAlignment(8);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block90);
	ArrayRef<Value*> gep432_array { gep4_val4_int, cast422_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep432_var = builder.CreateInBoundsGEP(globals[5], gep432_array);
	llvm::LoadInst* load433_var = builder.CreateLoad(gep432_var, false);
	load433_var->setAlignment(8);
	Value* binop434_var = BinaryOperator::Create(Instruction::Add, load433_var, load424_var, "", builder.GetInsertBlock());
	Value* cmp435_var = builder.CreateICmp(CmpInst::ICMP_EQ, load427_var, cmp28_val28_int);
	builder.CreateCondBr(cmp435_var, block91, block92);
	
	builder.SetInsertPoint(block91);
	ArrayRef<Value*> gep436_array { binop434_var, };
	Value* gep436_var = builder.CreateInBoundsGEP(cast425_var, gep436_array);
	Value* cast437_var = builder.CreateCast(Instruction::BitCast, gep436_var, types[28]);
	llvm::LoadInst* load438_var = builder.CreateLoad(cast437_var, false);
	load438_var->setAlignment(4);
	Value* cast439_var = builder.CreateCast(Instruction::ZExt, load438_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block92);
	ArrayRef<Value*> gep440_array { gep4_val4_int, cast422_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep440_var = builder.CreateInBoundsGEP(globals[5], gep440_array);
	llvm::LoadInst* load441_var = builder.CreateLoad(gep440_var, false);
	load441_var->setAlignment(16);
	Value* binop442_var = BinaryOperator::Create(Instruction::Add, load441_var, binop434_var, "", builder.GetInsertBlock());
	SwitchInst* switch443_var = builder.CreateSwitch(load427_var, block95, 2);
	switch443_var->addCase(cast<ConstantInt>(switch38_val38_int), block93);
	switch443_var->addCase(cast<ConstantInt>(switch38_val39_int), block94);
	
	builder.SetInsertPoint(block93);
	ArrayRef<Value*> gep443_array { binop442_var, };
	Value* gep443_var = builder.CreateInBoundsGEP(cast425_var, gep443_array);
	Value* cast444_var = builder.CreateCast(Instruction::BitCast, gep443_var, types[30]);
	llvm::LoadInst* load445_var = builder.CreateLoad(cast444_var, false);
	load445_var->setAlignment(2);
	Value* cast446_var = builder.CreateCast(Instruction::ZExt, load445_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block94);
	ArrayRef<Value*> gep447_array { gep4_val4_int, cast422_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep447_var = builder.CreateInBoundsGEP(globals[5], gep447_array);
	llvm::LoadInst* load448_var = builder.CreateLoad(gep447_var, false);
	load448_var->setAlignment(8);
	Value* binop449_var = BinaryOperator::Create(Instruction::Add, load448_var, binop442_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep450_array { binop449_var, };
	Value* gep450_var = builder.CreateInBoundsGEP(cast425_var, gep450_array);
	llvm::LoadInst* load451_var = builder.CreateLoad(gep450_var, false);
	load451_var->setAlignment(1);
	Value* cast452_var = builder.CreateCast(Instruction::ZExt, load451_var, types[0]);
	builder.CreateBr(block96);
	
	builder.SetInsertPoint(block95);
	CallInst* call453_var = builder.CreateCall(globals[6], gep51_var);
	call453_var->setTailCall();
	call453_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block96);
	PHINode* phi454_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep455_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep455_var = builder.CreateInBoundsGEP(arg3, gep455_array);
	llvm::LoadInst* load456_var = builder.CreateLoad(gep455_var, false);
	load456_var->setAlignment(4);
	Value* cmp457_var = builder.CreateICmp(CmpInst::ICMP_EQ, load456_var, gep4_val6_int);
	builder.CreateCondBr(cmp457_var, block106, block97);
	
	builder.SetInsertPoint(block97);
	Value* cast458_var = builder.CreateCast(Instruction::ZExt, load456_var, types[0]);
	ArrayRef<Value*> gep459_array { gep4_val4_int, cast458_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep459_var = builder.CreateInBoundsGEP(globals[5], gep459_array);
	llvm::LoadInst* load460_var = builder.CreateLoad(gep459_var, false);
	load460_var->setAlignment(16);
	Value* cast461_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep462_array { gep4_val4_int, cast458_var, switch9_val9_int, };
	Value* gep462_var = builder.CreateInBoundsGEP(globals[5], gep462_array);
	llvm::LoadInst* load463_var = builder.CreateLoad(gep462_var, false);
	load463_var->setAlignment(16);
	Value* cmp464_var = builder.CreateICmp(CmpInst::ICMP_EQ, load463_var, cmp20_val20_int);
	builder.CreateCondBr(cmp464_var, block98, block99);
	
	builder.SetInsertPoint(block98);
	ArrayRef<Value*> gep465_array { load460_var, };
	Value* gep465_var = builder.CreateInBoundsGEP(cast461_var, gep465_array);
	Value* cast466_var = builder.CreateCast(Instruction::BitCast, gep465_var, types[27]);
	llvm::LoadInst* load467_var = builder.CreateLoad(cast466_var, false);
	load467_var->setAlignment(8);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block99);
	ArrayRef<Value*> gep468_array { gep4_val4_int, cast458_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep468_var = builder.CreateInBoundsGEP(globals[5], gep468_array);
	llvm::LoadInst* load469_var = builder.CreateLoad(gep468_var, false);
	load469_var->setAlignment(8);
	Value* binop470_var = BinaryOperator::Create(Instruction::Add, load469_var, load460_var, "", builder.GetInsertBlock());
	Value* cmp471_var = builder.CreateICmp(CmpInst::ICMP_EQ, load463_var, cmp28_val28_int);
	builder.CreateCondBr(cmp471_var, block100, block101);
	
	builder.SetInsertPoint(block100);
	ArrayRef<Value*> gep472_array { binop470_var, };
	Value* gep472_var = builder.CreateInBoundsGEP(cast461_var, gep472_array);
	Value* cast473_var = builder.CreateCast(Instruction::BitCast, gep472_var, types[28]);
	llvm::LoadInst* load474_var = builder.CreateLoad(cast473_var, false);
	load474_var->setAlignment(4);
	Value* cast475_var = builder.CreateCast(Instruction::ZExt, load474_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block101);
	ArrayRef<Value*> gep476_array { gep4_val4_int, cast458_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep476_var = builder.CreateInBoundsGEP(globals[5], gep476_array);
	llvm::LoadInst* load477_var = builder.CreateLoad(gep476_var, false);
	load477_var->setAlignment(16);
	Value* binop478_var = BinaryOperator::Create(Instruction::Add, load477_var, binop470_var, "", builder.GetInsertBlock());
	SwitchInst* switch479_var = builder.CreateSwitch(load463_var, block104, 2);
	switch479_var->addCase(cast<ConstantInt>(switch38_val38_int), block102);
	switch479_var->addCase(cast<ConstantInt>(switch38_val39_int), block103);
	
	builder.SetInsertPoint(block102);
	ArrayRef<Value*> gep479_array { binop478_var, };
	Value* gep479_var = builder.CreateInBoundsGEP(cast461_var, gep479_array);
	Value* cast480_var = builder.CreateCast(Instruction::BitCast, gep479_var, types[30]);
	llvm::LoadInst* load481_var = builder.CreateLoad(cast480_var, false);
	load481_var->setAlignment(2);
	Value* cast482_var = builder.CreateCast(Instruction::ZExt, load481_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block103);
	ArrayRef<Value*> gep483_array { gep4_val4_int, cast458_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep483_var = builder.CreateInBoundsGEP(globals[5], gep483_array);
	llvm::LoadInst* load484_var = builder.CreateLoad(gep483_var, false);
	load484_var->setAlignment(8);
	Value* binop485_var = BinaryOperator::Create(Instruction::Add, load484_var, binop478_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep486_array { binop485_var, };
	Value* gep486_var = builder.CreateInBoundsGEP(cast461_var, gep486_array);
	llvm::LoadInst* load487_var = builder.CreateLoad(gep486_var, false);
	load487_var->setAlignment(1);
	Value* cast488_var = builder.CreateCast(Instruction::ZExt, load487_var, types[0]);
	builder.CreateBr(block105);
	
	builder.SetInsertPoint(block104);
	CallInst* call489_var = builder.CreateCall(globals[6], gep51_var);
	call489_var->setTailCall();
	call489_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block105);
	PHINode* phi490_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep491_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep491_var = builder.CreateInBoundsGEP(arg3, gep491_array);
	llvm::LoadInst* load492_var = builder.CreateLoad(gep491_var, false);
	load492_var->setAlignment(4);
	Value* cast493_var = builder.CreateCast(Instruction::SExt, load492_var, types[0]);
	Value* binop494_var = BinaryOperator::Create(Instruction::Mul, cast493_var, phi490_var, "", builder.GetInsertBlock());
	Value* binop495_var = BinaryOperator::Create(Instruction::Add, binop494_var, phi454_var, "", builder.GetInsertBlock());
	builder.CreateBr(block106);
	
	builder.SetInsertPoint(block106);
	PHINode* phi496_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep497_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep497_var = builder.CreateInBoundsGEP(arg3, gep497_array);
	llvm::LoadInst* load498_var = builder.CreateLoad(gep497_var, false);
	load498_var->setAlignment(4);
	Value* cmp499_var = builder.CreateICmp(CmpInst::ICMP_EQ, load498_var, gep4_val6_int);
	builder.CreateCondBr(cmp499_var, block116, block107);
	
	builder.SetInsertPoint(block107);
	Value* cast500_var = builder.CreateCast(Instruction::ZExt, load498_var, types[0]);
	ArrayRef<Value*> gep501_array { gep4_val4_int, cast500_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep501_var = builder.CreateInBoundsGEP(globals[5], gep501_array);
	llvm::LoadInst* load502_var = builder.CreateLoad(gep501_var, false);
	load502_var->setAlignment(16);
	Value* cast503_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep504_array { gep4_val4_int, cast500_var, switch9_val9_int, };
	Value* gep504_var = builder.CreateInBoundsGEP(globals[5], gep504_array);
	llvm::LoadInst* load505_var = builder.CreateLoad(gep504_var, false);
	load505_var->setAlignment(16);
	Value* cmp506_var = builder.CreateICmp(CmpInst::ICMP_EQ, load505_var, cmp20_val20_int);
	builder.CreateCondBr(cmp506_var, block108, block109);
	
	builder.SetInsertPoint(block108);
	ArrayRef<Value*> gep507_array { load502_var, };
	Value* gep507_var = builder.CreateInBoundsGEP(cast503_var, gep507_array);
	Value* cast508_var = builder.CreateCast(Instruction::BitCast, gep507_var, types[27]);
	llvm::LoadInst* load509_var = builder.CreateLoad(cast508_var, false);
	load509_var->setAlignment(8);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block109);
	ArrayRef<Value*> gep510_array { gep4_val4_int, cast500_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep510_var = builder.CreateInBoundsGEP(globals[5], gep510_array);
	llvm::LoadInst* load511_var = builder.CreateLoad(gep510_var, false);
	load511_var->setAlignment(8);
	Value* binop512_var = BinaryOperator::Create(Instruction::Add, load511_var, load502_var, "", builder.GetInsertBlock());
	Value* cmp513_var = builder.CreateICmp(CmpInst::ICMP_EQ, load505_var, cmp28_val28_int);
	builder.CreateCondBr(cmp513_var, block110, block111);
	
	builder.SetInsertPoint(block110);
	ArrayRef<Value*> gep514_array { binop512_var, };
	Value* gep514_var = builder.CreateInBoundsGEP(cast503_var, gep514_array);
	Value* cast515_var = builder.CreateCast(Instruction::BitCast, gep514_var, types[28]);
	llvm::LoadInst* load516_var = builder.CreateLoad(cast515_var, false);
	load516_var->setAlignment(4);
	Value* cast517_var = builder.CreateCast(Instruction::ZExt, load516_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block111);
	ArrayRef<Value*> gep518_array { gep4_val4_int, cast500_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep518_var = builder.CreateInBoundsGEP(globals[5], gep518_array);
	llvm::LoadInst* load519_var = builder.CreateLoad(gep518_var, false);
	load519_var->setAlignment(16);
	Value* binop520_var = BinaryOperator::Create(Instruction::Add, load519_var, binop512_var, "", builder.GetInsertBlock());
	SwitchInst* switch521_var = builder.CreateSwitch(load505_var, block114, 2);
	switch521_var->addCase(cast<ConstantInt>(switch38_val38_int), block112);
	switch521_var->addCase(cast<ConstantInt>(switch38_val39_int), block113);
	
	builder.SetInsertPoint(block112);
	ArrayRef<Value*> gep521_array { binop520_var, };
	Value* gep521_var = builder.CreateInBoundsGEP(cast503_var, gep521_array);
	Value* cast522_var = builder.CreateCast(Instruction::BitCast, gep521_var, types[30]);
	llvm::LoadInst* load523_var = builder.CreateLoad(cast522_var, false);
	load523_var->setAlignment(2);
	Value* cast524_var = builder.CreateCast(Instruction::ZExt, load523_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block113);
	ArrayRef<Value*> gep525_array { gep4_val4_int, cast500_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep525_var = builder.CreateInBoundsGEP(globals[5], gep525_array);
	llvm::LoadInst* load526_var = builder.CreateLoad(gep525_var, false);
	load526_var->setAlignment(8);
	Value* binop527_var = BinaryOperator::Create(Instruction::Add, load526_var, binop520_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep528_array { binop527_var, };
	Value* gep528_var = builder.CreateInBoundsGEP(cast503_var, gep528_array);
	llvm::LoadInst* load529_var = builder.CreateLoad(gep528_var, false);
	load529_var->setAlignment(1);
	Value* cast530_var = builder.CreateCast(Instruction::ZExt, load529_var, types[0]);
	builder.CreateBr(block115);
	
	builder.SetInsertPoint(block114);
	CallInst* call531_var = builder.CreateCall(globals[6], gep51_var);
	call531_var->setTailCall();
	call531_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block115);
	PHINode* phi532_var = builder.CreatePHI(types[0], 4);
	Value* binop533_var = BinaryOperator::Create(Instruction::Add, phi532_var, phi496_var, "", builder.GetInsertBlock());
	builder.CreateBr(block116);
	
	builder.SetInsertPoint(block116);
	PHINode* phi534_var = builder.CreatePHI(types[0], 2);
	CallInst* call535_var = builder.CreateCall3(globals[14], phi534_var, cast344_var, extr348_var);
	call535_var->setTailCall();
	builder.CreateBr(block118);
	
	builder.SetInsertPoint(block117);
	ArrayRef<Value*> gep537_array { gep4_val4_int, gep4_val4_int, };
	Value* gep537_var = builder.CreateInBoundsGEP(globals[15], gep537_array);
	CallInst* call537_var = builder.CreateCall(globals[6], gep537_var);
	call537_var->setTailCall();
	call537_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block118);
	phi89_var->addIncoming(gep4_val4_int, block9);
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi125_var->addIncoming(load102_var, block20);
	phi125_var->addIncoming(cast110_var, block22);
	phi125_var->addIncoming(cast117_var, block24);
	phi125_var->addIncoming(cast123_var, block25);
	
	phi131_var->addIncoming(binop130_var, block27);
	phi131_var->addIncoming(phi89_var, block18);
	
	phi167_var->addIncoming(load144_var, block30);
	phi167_var->addIncoming(cast152_var, block32);
	phi167_var->addIncoming(cast159_var, block34);
	phi167_var->addIncoming(cast165_var, block35);
	
	phi169_var->addIncoming(binop168_var, block37);
	phi169_var->addIncoming(phi131_var, block28);
	
	phi178_var->addIncoming(call173_var, block38);
	phi178_var->addIncoming(load24_var, block2);
	phi178_var->addIncoming(cast33_var, block4);
	phi178_var->addIncoming(cast43_var, block6);
	phi178_var->addIncoming(cast49_var, block7);
	
	phi253_var->addIncoming(gep4_val4_int, block50);
	phi253_var->addIncoming(load230_var, block52);
	phi253_var->addIncoming(cast238_var, block54);
	phi253_var->addIncoming(cast245_var, block56);
	phi253_var->addIncoming(cast251_var, block57);
	
	phi289_var->addIncoming(load266_var, block61);
	phi289_var->addIncoming(cast274_var, block63);
	phi289_var->addIncoming(cast281_var, block65);
	phi289_var->addIncoming(cast287_var, block66);
	
	phi295_var->addIncoming(binop294_var, block68);
	phi295_var->addIncoming(phi253_var, block59);
	
	phi331_var->addIncoming(load308_var, block71);
	phi331_var->addIncoming(cast316_var, block73);
	phi331_var->addIncoming(cast323_var, block75);
	phi331_var->addIncoming(cast329_var, block76);
	
	phi333_var->addIncoming(binop332_var, block78);
	phi333_var->addIncoming(phi295_var, block69);
	
	phi341_var->addIncoming(call337_var, block79);
	phi341_var->addIncoming(load183_var, block41);
	phi341_var->addIncoming(load195_var, block43);
	phi341_var->addIncoming(cast203_var, block45);
	phi341_var->addIncoming(cast210_var, block47);
	phi341_var->addIncoming(cast216_var, block48);
	
	phi369_var->addIncoming(cast354_var, block82);
	phi369_var->addIncoming(cast362_var, block83);
	
	phi370_var->addIncoming(cast360_var, block82);
	phi370_var->addIncoming(cast365_var, block83);
	
	phi454_var->addIncoming(gep4_val4_int, block87);
	phi454_var->addIncoming(load431_var, block89);
	phi454_var->addIncoming(cast439_var, block91);
	phi454_var->addIncoming(cast446_var, block93);
	phi454_var->addIncoming(cast452_var, block94);
	
	phi490_var->addIncoming(load467_var, block98);
	phi490_var->addIncoming(cast475_var, block100);
	phi490_var->addIncoming(cast482_var, block102);
	phi490_var->addIncoming(cast488_var, block103);
	
	phi496_var->addIncoming(binop495_var, block105);
	phi496_var->addIncoming(phi454_var, block96);
	
	phi532_var->addIncoming(load509_var, block108);
	phi532_var->addIncoming(cast517_var, block110);
	phi532_var->addIncoming(cast524_var, block112);
	phi532_var->addIncoming(cast530_var, block113);
	
	phi534_var->addIncoming(binop533_var, block115);
	phi534_var->addIncoming(phi496_var, block106);
	
	return;
}

void x86::x86_subpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[629], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_subps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[630], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_subsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[631], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_subss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[632], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_swapgs(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[633], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_syscall(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[634], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sysenter(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[635], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sysexit(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[636], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_sysret(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[637], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_t1mskc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[638], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_test(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block39, 2);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block9);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep11_var = builder.CreateGEP(arg3, gep11_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep11_var, false);
	load12_var->setAlignment(4);
	Value* cast13_var = builder.CreateCast(Instruction::ZExt, load12_var, types[0]);
	ArrayRef<Value*> gep14_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(globals[5], gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast13_var, switch9_val9_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep18_var, false);
	load19_var->setAlignment(16);
	Constant* cmp20_val20_int = ConstantInt::get(types[0], 8u);
	Value* cmp20_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp20_val20_int);
	builder.CreateCondBr(cmp20_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep22_array { load16_var, };
	Value* gep22_var = builder.CreateInBoundsGEP(cast17_var, gep22_array);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, gep22_var, types[27]);
	llvm::LoadInst* load24_var = builder.CreateLoad(cast23_var, false);
	load24_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(8);
	Value* binop27_var = BinaryOperator::Create(Instruction::Add, load26_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 4u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { binop27_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast17_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[28]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(4);
	Value* cast33_var = builder.CreateCast(Instruction::ZExt, load32_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block5);
	Constant* gep34_val34_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep34_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop27_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load19_var, block8, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block6);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load45_var = builder.CreateLoad(gep44_var, false);
	load45_var->setAlignment(8);
	Value* binop46_var = BinaryOperator::Create(Instruction::Add, load45_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep47_array { binop46_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast17_var, gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(1);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep51_array { gep4_val4_int, gep4_val4_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[7], gep51_array);
	CallInst* call50_var = builder.CreateCall(globals[6], gep51_var);
	call50_var->setTailCall();
	call50_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val6_int);
	builder.CreateCondBr(cmp56_var, block18, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, switch9_val9_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp20_val20_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch38_val38_int), block15);
	switch78_var->addCase(cast<ConstantInt>(switch38_val39_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep51_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, gep4_val6_int);
	builder.CreateCondBr(cmp92_var, block28, block19);
	
	builder.SetInsertPoint(block19);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast93_var, switch9_val9_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp20_val20_int);
	builder.CreateCondBr(cmp99_var, block20, block21);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep100_array { load95_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast96_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[27]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(8);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(8);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, load95_var, "", builder.GetInsertBlock());
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { binop105_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast96_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[28]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(4);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop105_var, "", builder.GetInsertBlock());
	SwitchInst* switch114_var = builder.CreateSwitch(load98_var, block26, 2);
	switch114_var->addCase(cast<ConstantInt>(switch38_val38_int), block24);
	switch114_var->addCase(cast<ConstantInt>(switch38_val39_int), block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast96_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[30]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(2);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(8);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop113_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast96_var, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(1);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block26);
	CallInst* call124_var = builder.CreateCall(globals[6], gep51_var);
	call124_var->setTailCall();
	call124_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block27);
	PHINode* phi125_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep126_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(arg3, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(4);
	Value* cast128_var = builder.CreateCast(Instruction::SExt, load127_var, types[0]);
	Value* binop129_var = BinaryOperator::Create(Instruction::Mul, cast128_var, phi125_var, "", builder.GetInsertBlock());
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, binop129_var, phi89_var, "", builder.GetInsertBlock());
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep132_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, gep4_val6_int);
	builder.CreateCondBr(cmp134_var, block38, block29);
	
	builder.SetInsertPoint(block29);
	Value* cast135_var = builder.CreateCast(Instruction::ZExt, load133_var, types[0]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast135_var, switch9_val9_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp20_val20_int);
	builder.CreateCondBr(cmp141_var, block30, block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep142_array { load137_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast138_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[27]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(8);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(8);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, load137_var, "", builder.GetInsertBlock());
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { binop147_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast138_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[28]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(4);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop147_var, "", builder.GetInsertBlock());
	SwitchInst* switch156_var = builder.CreateSwitch(load140_var, block36, 2);
	switch156_var->addCase(cast<ConstantInt>(switch38_val38_int), block34);
	switch156_var->addCase(cast<ConstantInt>(switch38_val39_int), block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast138_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[30]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(2);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(8);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop155_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast138_var, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block36);
	CallInst* call166_var = builder.CreateCall(globals[6], gep51_var);
	call166_var->setTailCall();
	call166_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block37);
	PHINode* phi167_var = builder.CreatePHI(types[0], 4);
	Value* binop168_var = BinaryOperator::Create(Instruction::Add, phi167_var, phi131_var, "", builder.GetInsertBlock());
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block38);
	PHINode* phi169_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep170_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(arg3, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	CallInst* call173_var = builder.CreateCall2(globals[8], phi169_var, cast172_var);
	call173_var->setTailCall();
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val4_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[9], gep175_array);
	CallInst* call175_var = builder.CreateCall(globals[6], gep175_var);
	call175_var->setTailCall();
	call175_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi178_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep179_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep4_val6_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(arg3, gep179_array);
	llvm::LoadInst* load180_var = builder.CreateLoad(gep179_var, false);
	load180_var->setAlignment(4);
	SwitchInst* switch181_var = builder.CreateSwitch(load180_var, block80, 3);
	switch181_var->addCase(cast<ConstantInt>(gep34_val34_int), block41);
	switch181_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch181_var->addCase(cast<ConstantInt>(switch9_val10_int), block50);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep181_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(arg3, gep181_array);
	Value* cast182_var = builder.CreateCast(Instruction::BitCast, gep181_var, types[27]);
	llvm::LoadInst* load183_var = builder.CreateLoad(cast182_var, false);
	load183_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Value* cast189_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast186_var, switch9_val9_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp20_val20_int);
	builder.CreateCondBr(cmp192_var, block43, block44);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep193_array { load188_var, };
	Value* gep193_var = builder.CreateInBoundsGEP(cast189_var, gep193_array);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, gep193_var, types[27]);
	llvm::LoadInst* load195_var = builder.CreateLoad(cast194_var, false);
	load195_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(8);
	Value* binop198_var = BinaryOperator::Create(Instruction::Add, load197_var, load188_var, "", builder.GetInsertBlock());
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp28_val28_int);
	builder.CreateCondBr(cmp199_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep200_array { binop198_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast189_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[28]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(4);
	Value* cast203_var = builder.CreateCast(Instruction::ZExt, load202_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep204_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep204_var = builder.CreateInBoundsGEP(globals[5], gep204_array);
	llvm::LoadInst* load205_var = builder.CreateLoad(gep204_var, false);
	load205_var->setAlignment(16);
	Value* binop206_var = BinaryOperator::Create(Instruction::Add, load205_var, binop198_var, "", builder.GetInsertBlock());
	SwitchInst* switch207_var = builder.CreateSwitch(load191_var, block49, 2);
	switch207_var->addCase(cast<ConstantInt>(switch38_val38_int), block47);
	switch207_var->addCase(cast<ConstantInt>(switch38_val39_int), block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { binop206_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast189_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[30]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(2);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(8);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop206_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast189_var, gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(1);
	Value* cast216_var = builder.CreateCast(Instruction::ZExt, load215_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block49);
	CallInst* call217_var = builder.CreateCall(globals[6], gep51_var);
	call217_var->setTailCall();
	call217_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep218_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(arg3, gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(4);
	Value* cmp220_var = builder.CreateICmp(CmpInst::ICMP_EQ, load219_var, gep4_val6_int);
	builder.CreateCondBr(cmp220_var, block59, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load219_var, types[0]);
	ArrayRef<Value*> gep222_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep222_var = builder.CreateInBoundsGEP(globals[5], gep222_array);
	llvm::LoadInst* load223_var = builder.CreateLoad(gep222_var, false);
	load223_var->setAlignment(16);
	Value* cast224_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast221_var, switch9_val9_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cmp227_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp20_val20_int);
	builder.CreateCondBr(cmp227_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep228_array { load223_var, };
	Value* gep228_var = builder.CreateInBoundsGEP(cast224_var, gep228_array);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, gep228_var, types[27]);
	llvm::LoadInst* load230_var = builder.CreateLoad(cast229_var, false);
	load230_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep231_var = builder.CreateInBoundsGEP(globals[5], gep231_array);
	llvm::LoadInst* load232_var = builder.CreateLoad(gep231_var, false);
	load232_var->setAlignment(8);
	Value* binop233_var = BinaryOperator::Create(Instruction::Add, load232_var, load223_var, "", builder.GetInsertBlock());
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp28_val28_int);
	builder.CreateCondBr(cmp234_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep235_array { binop233_var, };
	Value* gep235_var = builder.CreateInBoundsGEP(cast224_var, gep235_array);
	Value* cast236_var = builder.CreateCast(Instruction::BitCast, gep235_var, types[28]);
	llvm::LoadInst* load237_var = builder.CreateLoad(cast236_var, false);
	load237_var->setAlignment(4);
	Value* cast238_var = builder.CreateCast(Instruction::ZExt, load237_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* binop241_var = BinaryOperator::Create(Instruction::Add, load240_var, binop233_var, "", builder.GetInsertBlock());
	SwitchInst* switch242_var = builder.CreateSwitch(load226_var, block58, 2);
	switch242_var->addCase(cast<ConstantInt>(switch38_val38_int), block56);
	switch242_var->addCase(cast<ConstantInt>(switch38_val39_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { binop241_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast224_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[30]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(2);
	Value* cast245_var = builder.CreateCast(Instruction::ZExt, load244_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep246_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep246_var = builder.CreateInBoundsGEP(globals[5], gep246_array);
	llvm::LoadInst* load247_var = builder.CreateLoad(gep246_var, false);
	load247_var->setAlignment(8);
	Value* binop248_var = BinaryOperator::Create(Instruction::Add, load247_var, binop241_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep249_array { binop248_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast224_var, gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(1);
	Value* cast251_var = builder.CreateCast(Instruction::ZExt, load250_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call252_var = builder.CreateCall(globals[6], gep51_var);
	call252_var->setTailCall();
	call252_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi253_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep254_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep254_var = builder.CreateInBoundsGEP(arg3, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(4);
	Value* cmp256_var = builder.CreateICmp(CmpInst::ICMP_EQ, load255_var, gep4_val6_int);
	builder.CreateCondBr(cmp256_var, block69, block60);
	
	builder.SetInsertPoint(block60);
	Value* cast257_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	ArrayRef<Value*> gep258_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep258_var = builder.CreateInBoundsGEP(globals[5], gep258_array);
	llvm::LoadInst* load259_var = builder.CreateLoad(gep258_var, false);
	load259_var->setAlignment(16);
	Value* cast260_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast257_var, switch9_val9_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cmp263_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp20_val20_int);
	builder.CreateCondBr(cmp263_var, block61, block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep264_array { load259_var, };
	Value* gep264_var = builder.CreateInBoundsGEP(cast260_var, gep264_array);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, gep264_var, types[27]);
	llvm::LoadInst* load266_var = builder.CreateLoad(cast265_var, false);
	load266_var->setAlignment(8);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep267_var = builder.CreateInBoundsGEP(globals[5], gep267_array);
	llvm::LoadInst* load268_var = builder.CreateLoad(gep267_var, false);
	load268_var->setAlignment(8);
	Value* binop269_var = BinaryOperator::Create(Instruction::Add, load268_var, load259_var, "", builder.GetInsertBlock());
	Value* cmp270_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp28_val28_int);
	builder.CreateCondBr(cmp270_var, block63, block64);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep271_array { binop269_var, };
	Value* gep271_var = builder.CreateInBoundsGEP(cast260_var, gep271_array);
	Value* cast272_var = builder.CreateCast(Instruction::BitCast, gep271_var, types[28]);
	llvm::LoadInst* load273_var = builder.CreateLoad(cast272_var, false);
	load273_var->setAlignment(4);
	Value* cast274_var = builder.CreateCast(Instruction::ZExt, load273_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep275_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[5], gep275_array);
	llvm::LoadInst* load276_var = builder.CreateLoad(gep275_var, false);
	load276_var->setAlignment(16);
	Value* binop277_var = BinaryOperator::Create(Instruction::Add, load276_var, binop269_var, "", builder.GetInsertBlock());
	SwitchInst* switch278_var = builder.CreateSwitch(load262_var, block67, 2);
	switch278_var->addCase(cast<ConstantInt>(switch38_val38_int), block65);
	switch278_var->addCase(cast<ConstantInt>(switch38_val39_int), block66);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { binop277_var, };
	Value* gep278_var = builder.CreateInBoundsGEP(cast260_var, gep278_array);
	Value* cast279_var = builder.CreateCast(Instruction::BitCast, gep278_var, types[30]);
	llvm::LoadInst* load280_var = builder.CreateLoad(cast279_var, false);
	load280_var->setAlignment(2);
	Value* cast281_var = builder.CreateCast(Instruction::ZExt, load280_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep282_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep282_var = builder.CreateInBoundsGEP(globals[5], gep282_array);
	llvm::LoadInst* load283_var = builder.CreateLoad(gep282_var, false);
	load283_var->setAlignment(8);
	Value* binop284_var = BinaryOperator::Create(Instruction::Add, load283_var, binop277_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep285_array { binop284_var, };
	Value* gep285_var = builder.CreateInBoundsGEP(cast260_var, gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(1);
	Value* cast287_var = builder.CreateCast(Instruction::ZExt, load286_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block67);
	CallInst* call288_var = builder.CreateCall(globals[6], gep51_var);
	call288_var->setTailCall();
	call288_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block68);
	PHINode* phi289_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep290_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep290_var = builder.CreateInBoundsGEP(arg3, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(4);
	Value* cast292_var = builder.CreateCast(Instruction::SExt, load291_var, types[0]);
	Value* binop293_var = BinaryOperator::Create(Instruction::Mul, cast292_var, phi289_var, "", builder.GetInsertBlock());
	Value* binop294_var = BinaryOperator::Create(Instruction::Add, binop293_var, phi253_var, "", builder.GetInsertBlock());
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block69);
	PHINode* phi295_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep296_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep296_var = builder.CreateInBoundsGEP(arg3, gep296_array);
	llvm::LoadInst* load297_var = builder.CreateLoad(gep296_var, false);
	load297_var->setAlignment(4);
	Value* cmp298_var = builder.CreateICmp(CmpInst::ICMP_EQ, load297_var, gep4_val6_int);
	builder.CreateCondBr(cmp298_var, block79, block70);
	
	builder.SetInsertPoint(block70);
	Value* cast299_var = builder.CreateCast(Instruction::ZExt, load297_var, types[0]);
	ArrayRef<Value*> gep300_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep300_var = builder.CreateInBoundsGEP(globals[5], gep300_array);
	llvm::LoadInst* load301_var = builder.CreateLoad(gep300_var, false);
	load301_var->setAlignment(16);
	Value* cast302_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast299_var, switch9_val9_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cmp305_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp20_val20_int);
	builder.CreateCondBr(cmp305_var, block71, block72);
	
	builder.SetInsertPoint(block71);
	ArrayRef<Value*> gep306_array { load301_var, };
	Value* gep306_var = builder.CreateInBoundsGEP(cast302_var, gep306_array);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, gep306_var, types[27]);
	llvm::LoadInst* load308_var = builder.CreateLoad(cast307_var, false);
	load308_var->setAlignment(8);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep309_var = builder.CreateInBoundsGEP(globals[5], gep309_array);
	llvm::LoadInst* load310_var = builder.CreateLoad(gep309_var, false);
	load310_var->setAlignment(8);
	Value* binop311_var = BinaryOperator::Create(Instruction::Add, load310_var, load301_var, "", builder.GetInsertBlock());
	Value* cmp312_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp28_val28_int);
	builder.CreateCondBr(cmp312_var, block73, block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep313_array { binop311_var, };
	Value* gep313_var = builder.CreateInBoundsGEP(cast302_var, gep313_array);
	Value* cast314_var = builder.CreateCast(Instruction::BitCast, gep313_var, types[28]);
	llvm::LoadInst* load315_var = builder.CreateLoad(cast314_var, false);
	load315_var->setAlignment(4);
	Value* cast316_var = builder.CreateCast(Instruction::ZExt, load315_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep317_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep317_var = builder.CreateInBoundsGEP(globals[5], gep317_array);
	llvm::LoadInst* load318_var = builder.CreateLoad(gep317_var, false);
	load318_var->setAlignment(16);
	Value* binop319_var = BinaryOperator::Create(Instruction::Add, load318_var, binop311_var, "", builder.GetInsertBlock());
	SwitchInst* switch320_var = builder.CreateSwitch(load304_var, block77, 2);
	switch320_var->addCase(cast<ConstantInt>(switch38_val38_int), block75);
	switch320_var->addCase(cast<ConstantInt>(switch38_val39_int), block76);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { binop319_var, };
	Value* gep320_var = builder.CreateInBoundsGEP(cast302_var, gep320_array);
	Value* cast321_var = builder.CreateCast(Instruction::BitCast, gep320_var, types[30]);
	llvm::LoadInst* load322_var = builder.CreateLoad(cast321_var, false);
	load322_var->setAlignment(2);
	Value* cast323_var = builder.CreateCast(Instruction::ZExt, load322_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep324_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep324_var = builder.CreateInBoundsGEP(globals[5], gep324_array);
	llvm::LoadInst* load325_var = builder.CreateLoad(gep324_var, false);
	load325_var->setAlignment(8);
	Value* binop326_var = BinaryOperator::Create(Instruction::Add, load325_var, binop319_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep327_array { binop326_var, };
	Value* gep327_var = builder.CreateInBoundsGEP(cast302_var, gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(1);
	Value* cast329_var = builder.CreateCast(Instruction::ZExt, load328_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block77);
	CallInst* call330_var = builder.CreateCall(globals[6], gep51_var);
	call330_var->setTailCall();
	call330_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block78);
	PHINode* phi331_var = builder.CreatePHI(types[0], 4);
	Value* binop332_var = BinaryOperator::Create(Instruction::Add, phi331_var, phi295_var, "", builder.GetInsertBlock());
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block79);
	PHINode* phi333_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep334_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep34_val34_int, };
	Value* gep334_var = builder.CreateInBoundsGEP(arg3, gep334_array);
	llvm::LoadInst* load335_var = builder.CreateLoad(gep334_var, false);
	load335_var->setAlignment(1);
	Value* cast336_var = builder.CreateCast(Instruction::ZExt, load335_var, types[0]);
	CallInst* call337_var = builder.CreateCall2(globals[8], phi333_var, cast336_var);
	call337_var->setTailCall();
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block80);
	ArrayRef<Value*> gep338_array { gep4_val4_int, gep4_val4_int, };
	Value* gep338_var = builder.CreateInBoundsGEP(globals[10], gep338_array);
	CallInst* call338_var = builder.CreateCall(globals[6], gep338_var);
	call338_var->setTailCall();
	call338_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block81);
	PHINode* phi341_var = builder.CreatePHI(types[0], 6);
	Value* binop342_var = BinaryOperator::Create(Instruction::And, phi341_var, phi178_var, "", builder.GetInsertBlock());
	Constant* gep343_val343_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep343_array { gep4_val4_int, gep343_val343_int, };
	Value* gep343_var = builder.CreateInBoundsGEP(arg2, gep343_array);
	Constant* store345_val345_int = ConstantInt::get(types[11], 0u);
	llvm::StoreInst* store345_var = builder.CreateStore(store345_val345_int, gep343_var, false);
	store345_var->setAlignment(1);
	ArrayRef<Value*> gep347_array { gep4_val4_int, gep4_val6_int, };
	Value* gep347_var = builder.CreateInBoundsGEP(arg2, gep347_array);
	llvm::StoreInst* store348_var = builder.CreateStore(store345_val345_int, gep347_var, false);
	store348_var->setAlignment(1);
	ArrayRef<Value*> gep349_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep349_var = builder.CreateInBoundsGEP(arg3, gep349_array);
	llvm::LoadInst* load350_var = builder.CreateLoad(gep349_var, false);
	load350_var->setAlignment(1);
	Value* cast351_var = builder.CreateCast(Instruction::ZExt, load350_var, types[0]);
	Constant* binop352_val352_int = ConstantInt::get(types[0], 3u);
	Value* binop352_var = BinaryOperator::CreateNSW(Instruction::Shl, cast351_var, binop352_val352_int, "", builder.GetInsertBlock());
	Constant* binop354_val354_int = ConstantInt::get(types[0], 4294967295u);
	Value* binop354_var = BinaryOperator::CreateNSW(Instruction::Add, binop352_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop356_var = BinaryOperator::Create(Instruction::And, binop354_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop357_var = BinaryOperator::Create(Instruction::LShr, binop342_var, binop356_var, "", builder.GetInsertBlock());
	Value* cmp358_var = builder.CreateICmp(CmpInst::ICMP_NE, binop357_var, gep4_val4_int);
	Constant* gep359_val359_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep359_array { gep4_val4_int, gep359_val359_int, };
	Value* gep359_var = builder.CreateInBoundsGEP(arg2, gep359_array);
	Value* cast361_var = builder.CreateCast(Instruction::ZExt, cmp358_var, types[11]);
	llvm::StoreInst* store362_var = builder.CreateStore(cast361_var, gep359_var, false);
	store362_var->setAlignment(1);
	CallInst* call363_var = builder.CreateCall(globals[13], binop342_var);
	call363_var->setTailCall();
	call363_var->setDoesNotThrow();
	call363_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep365_array { gep4_val4_int, switch9_val9_int, };
	Value* gep365_var = builder.CreateInBoundsGEP(arg2, gep365_array);
	Value* cast366_var = builder.CreateCast(Instruction::Trunc, call363_var, types[11]);
	Constant* binop367_val367_int = ConstantInt::get(types[11], 1u);
	Value* binop367_var = BinaryOperator::Create(Instruction::And, cast366_var, binop367_val367_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store369_var = builder.CreateStore(binop367_var, gep365_var, false);
	store369_var->setAlignment(1);
	Value* cmp370_var = builder.CreateICmp(CmpInst::ICMP_EQ, binop342_var, gep4_val4_int);
	ArrayRef<Value*> gep371_array { gep4_val4_int, switch9_val10_int, };
	Value* gep371_var = builder.CreateInBoundsGEP(arg2, gep371_array);
	Value* cast372_var = builder.CreateCast(Instruction::ZExt, cmp370_var, types[11]);
	llvm::StoreInst* store373_var = builder.CreateStore(cast372_var, gep371_var, false);
	store373_var->setAlignment(1);
	ArrayRef<Value*> gep374_array { gep4_val4_int, gep34_val34_int, };
	Value* gep374_var = builder.CreateInBoundsGEP(arg2, gep374_array);
	llvm::StoreInst* store375_var = builder.CreateStore(store345_val345_int, gep374_var, false);
	store375_var->setAlignment(1);
	phi89_var->addIncoming(gep4_val4_int, block9);
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi125_var->addIncoming(load102_var, block20);
	phi125_var->addIncoming(cast110_var, block22);
	phi125_var->addIncoming(cast117_var, block24);
	phi125_var->addIncoming(cast123_var, block25);
	
	phi131_var->addIncoming(binop130_var, block27);
	phi131_var->addIncoming(phi89_var, block18);
	
	phi167_var->addIncoming(load144_var, block30);
	phi167_var->addIncoming(cast152_var, block32);
	phi167_var->addIncoming(cast159_var, block34);
	phi167_var->addIncoming(cast165_var, block35);
	
	phi169_var->addIncoming(binop168_var, block37);
	phi169_var->addIncoming(phi131_var, block28);
	
	phi178_var->addIncoming(call173_var, block38);
	phi178_var->addIncoming(load24_var, block2);
	phi178_var->addIncoming(cast33_var, block4);
	phi178_var->addIncoming(cast43_var, block6);
	phi178_var->addIncoming(cast49_var, block7);
	
	phi253_var->addIncoming(gep4_val4_int, block50);
	phi253_var->addIncoming(load230_var, block52);
	phi253_var->addIncoming(cast238_var, block54);
	phi253_var->addIncoming(cast245_var, block56);
	phi253_var->addIncoming(cast251_var, block57);
	
	phi289_var->addIncoming(load266_var, block61);
	phi289_var->addIncoming(cast274_var, block63);
	phi289_var->addIncoming(cast281_var, block65);
	phi289_var->addIncoming(cast287_var, block66);
	
	phi295_var->addIncoming(binop294_var, block68);
	phi295_var->addIncoming(phi253_var, block59);
	
	phi331_var->addIncoming(load308_var, block71);
	phi331_var->addIncoming(cast316_var, block73);
	phi331_var->addIncoming(cast323_var, block75);
	phi331_var->addIncoming(cast329_var, block76);
	
	phi333_var->addIncoming(binop332_var, block78);
	phi333_var->addIncoming(phi295_var, block69);
	
	phi341_var->addIncoming(call337_var, block79);
	phi341_var->addIncoming(load183_var, block41);
	phi341_var->addIncoming(load195_var, block43);
	phi341_var->addIncoming(cast203_var, block45);
	phi341_var->addIncoming(cast210_var, block47);
	phi341_var->addIncoming(cast216_var, block48);
	
	return;
}

void x86::x86_tzcnt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[639], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_tzmsk(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[640], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ucomisd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[641], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ucomiss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[642], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ud2(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[643], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_ud2b(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[644], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_unpckhpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[645], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_unpckhps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[646], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_unpcklpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[647], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_unpcklps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[648], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaddpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[649], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaddps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[650], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaddsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[651], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaddss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[652], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaddsubpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[653], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaddsubps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[654], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaesdec(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[655], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaesdeclast(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[656], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaesenc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[657], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaesenclast(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[658], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaesimc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[659], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vaeskeygenassist(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[660], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_valignd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[661], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_valignq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[662], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vandnpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[663], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vandnps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[664], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vandpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[665], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vandps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[666], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vblendmpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[667], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vblendmps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[668], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vblendpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[669], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vblendps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[670], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vblendvpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[671], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vblendvps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[672], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vbroadcastf128(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[673], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vbroadcasti128(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[674], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vbroadcasti32x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[675], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vbroadcasti64x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[676], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vbroadcastsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[677], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vbroadcastss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[678], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcmp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[679], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcmppd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[680], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcmpps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[681], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcmpsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[682], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcmpss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[683], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcomisd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[684], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcomiss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[685], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtdq2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[686], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtdq2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[687], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtpd2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[688], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtpd2dqx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[689], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtpd2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[690], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtpd2psx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[691], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtpd2udq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[692], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtph2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[693], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtps2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[694], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtps2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[695], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtps2ph(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[696], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtps2udq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[697], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtsd2si(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[698], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtsd2ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[699], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtsd2usi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[700], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtsi2sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[701], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtsi2ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[702], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtss2sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[703], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtss2si(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[704], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtss2usi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[705], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttpd2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[706], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttpd2dqx(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[707], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttpd2udq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[708], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttps2dq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[709], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttps2udq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[710], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttsd2si(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[711], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttsd2usi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[712], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttss2si(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[713], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvttss2usi(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[714], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtudq2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[715], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtudq2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[716], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtusi2sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[717], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vcvtusi2ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[718], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vdivpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[719], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vdivps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[720], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vdivsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[721], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vdivss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[722], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vdppd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[723], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vdpps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[724], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_verr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[725], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_verw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[726], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vextractf128(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[727], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vextractf32x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[728], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vextractf64x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[729], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vextracti128(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[730], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vextracti32x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[731], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vextracti64x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[732], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vextractps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[733], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd132pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[734], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd132ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[735], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd132sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[736], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd132ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[737], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd213pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[738], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd213ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[739], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd213sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[740], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd213ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[741], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd231pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[742], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd231ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[743], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd231sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[744], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmadd231ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[745], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[746], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[747], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[748], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[749], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsub132pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[750], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsub132ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[751], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsub213pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[752], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsub213ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[753], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsub231pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[754], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsub231ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[755], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsubpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[756], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmaddsubps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[757], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub132pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[758], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub132ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[759], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub132sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[760], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub132ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[761], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub213pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[762], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub213ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[763], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub213sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[764], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub213ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[765], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub231pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[766], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub231ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[767], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub231sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[768], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsub231ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[769], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubadd132pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[770], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubadd132ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[771], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubadd213pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[772], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubadd213ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[773], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubadd231pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[774], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubadd231ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[775], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubaddpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[776], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubaddps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[777], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[778], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[779], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[780], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfmsubss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[781], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd132pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[782], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd132ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[783], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd132sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[784], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd132ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[785], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd213pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[786], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd213ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[787], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd213sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[788], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd213ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[789], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd231pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[790], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd231ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[791], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd231sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[792], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmadd231ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[793], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmaddpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[794], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmaddps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[795], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmaddsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[796], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmaddss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[797], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub132pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[798], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub132ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[799], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub132sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[800], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub132ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[801], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub213pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[802], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub213ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[803], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub213sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[804], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub213ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[805], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub231pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[806], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub231ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[807], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub231sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[808], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsub231ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[809], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsubpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[810], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsubps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[811], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsubsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[812], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfnmsubss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[813], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfrczpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[814], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfrczps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[815], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfrczsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[816], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vfrczss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[817], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherdpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[818], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherdps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[819], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherpf0dpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[820], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherpf0dps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[821], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherpf0qpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[822], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherpf0qps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[823], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherpf1dpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[824], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherpf1dps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[825], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherpf1qpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[826], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherpf1qps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[827], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherqpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[828], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vgatherqps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[829], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vhaddpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[830], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vhaddps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[831], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vhsubpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[832], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vhsubps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[833], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vinsertf128(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[834], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vinsertf32x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[835], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vinsertf64x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[836], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vinserti128(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[837], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vinserti32x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[838], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vinserti64x4(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[839], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vinsertps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[840], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vlddqu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[841], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vldmxcsr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[842], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmaskmovdqu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[843], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmaskmovpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[844], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmaskmovps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[845], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmaxpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[846], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmaxps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[847], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmaxsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[848], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmaxss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[849], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmcall(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[850], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmclear(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[851], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmfunc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[852], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vminpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[853], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vminps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[854], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vminsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[855], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vminss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[856], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmlaunch(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[857], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmload(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[858], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmmcall(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[859], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovapd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[860], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovaps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[861], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[862], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovddup(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[863], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovdqa(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[864], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovdqa32(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[865], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovdqa64(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[866], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovdqu(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[867], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovdqu16(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[868], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovdqu32(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[869], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovdqu64(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[870], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovdqu8(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[871], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovhlps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[872], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovhpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[873], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovhps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[874], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovlhps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[875], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovlpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[876], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovlps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[877], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovmskpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[878], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovmskps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[879], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovntdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[880], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovntdqa(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[881], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovntpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[882], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovntps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[883], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[884], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[885], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovshdup(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[886], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovsldup(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[887], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[888], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovupd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[889], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmovups(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[890], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmpsadbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[891], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmptrld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[892], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmptrst(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[893], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmread(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[894], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmresume(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[895], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmrun(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[896], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmsave(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[897], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmulpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[898], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmulps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[899], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmulsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[900], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmulss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[901], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmwrite(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[902], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmxoff(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[903], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vmxon(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[904], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vorpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[905], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vorps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[906], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpabsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[907], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpabsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[908], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpabsq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[909], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpabsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[910], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpackssdw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[911], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpacksswb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[912], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpackusdw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[913], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpackuswb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[914], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpaddb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[915], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpaddd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[916], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpaddq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[917], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpaddsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[918], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpaddsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[919], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpaddusb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[920], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpaddusw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[921], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpaddw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[922], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpalignr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[923], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpand(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[924], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpandd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[925], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpandn(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[926], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpandnd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[927], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpandnq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[928], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpandq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[929], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpavgb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[930], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpavgw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[931], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpblendd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[932], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpblendmd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[933], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpblendmq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[934], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpblendvb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[935], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpblendw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[936], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpbroadcastb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[937], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpbroadcastd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[938], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpbroadcastmb2q(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[939], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpbroadcastmw2d(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[940], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpbroadcastq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[941], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpbroadcastw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[942], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpclmulqdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[943], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmov(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[944], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmp(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[945], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[946], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpeqb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[947], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpeqd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[948], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpeqq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[949], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpeqw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[950], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpestri(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[951], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpestrm(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[952], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpgtb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[953], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpgtd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[954], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpgtq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[955], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpgtw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[956], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpistri(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[957], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpistrm(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[958], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[959], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpud(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[960], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcmpuq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[961], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcomb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[962], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcomd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[963], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcomq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[964], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcomub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[965], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcomud(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[966], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcomuq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[967], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcomuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[968], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpcomw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[969], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpconflictd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[970], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpconflictq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[971], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vperm2f128(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[972], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vperm2i128(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[973], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[974], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermi2d(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[975], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermi2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[976], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermi2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[977], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermi2q(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[978], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermil2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[979], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermil2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[980], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermilpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[981], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermilps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[982], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[983], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[984], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[985], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermt2d(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[986], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermt2pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[987], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermt2ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[988], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpermt2q(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[989], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpextrb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[990], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpextrd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[991], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpextrq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[992], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpextrw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[993], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpgatherdd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[994], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpgatherdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[995], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpgatherqd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[996], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpgatherqq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[997], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddbd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[998], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddbq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[999], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1000], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1001], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphadddq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1002], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1003], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddubd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1004], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddubq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1005], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddubw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1006], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddudq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1007], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphadduwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1008], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphadduwq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1009], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1010], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1011], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphaddwq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1012], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphminposuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1013], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphsubbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1014], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphsubd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1015], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphsubdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1016], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphsubsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1017], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphsubw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1018], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vphsubwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1019], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpinsrb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1020], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpinsrd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1021], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpinsrq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1022], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpinsrw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1023], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vplzcntd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1024], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vplzcntq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1025], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacsdd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1026], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacsdqh(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1027], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacsdql(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1028], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacssdd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1029], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacssdqh(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1030], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacssdql(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1031], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacsswd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1032], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacssww(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1033], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacswd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1034], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmacsww(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1035], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmadcsswd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1036], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmadcswd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1037], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaddubsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1038], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaddwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1039], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaskmovd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1040], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaskmovq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1041], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaxsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1042], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaxsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1043], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaxsq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1044], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaxsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1045], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaxub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1046], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaxud(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1047], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaxuq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1048], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmaxuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1049], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpminsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1050], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpminsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1051], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpminsq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1052], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpminsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1053], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpminub(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1054], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpminud(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1055], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpminuq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1056], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpminuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1057], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovdb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1058], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovdw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1059], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovmskb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1060], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovqb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1061], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovqd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1062], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovqw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1063], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsdb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1064], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsdw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1065], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsqb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1066], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsqd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1067], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsqw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1068], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsxbd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1069], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsxbq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1070], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsxbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1071], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsxdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1072], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsxwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1073], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovsxwq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1074], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovusdb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1075], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovusdw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1076], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovusqb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1077], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovusqd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1078], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovusqw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1079], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovzxbd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1080], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovzxbq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1081], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovzxbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1082], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovzxdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1083], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovzxwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1084], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmovzxwq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1085], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmuldq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1086], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmulhrsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1087], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmulhuw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1088], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmulhw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1089], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmulld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1090], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmullw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1091], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpmuludq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1092], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpor(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1093], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpord(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1094], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vporq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1095], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpperm(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1096], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vprotb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1097], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vprotd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1098], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vprotq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1099], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vprotw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1100], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsadbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1101], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpscatterdd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1102], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpscatterdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1103], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpscatterqd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1104], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpscatterqq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1105], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshab(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1106], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshad(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1107], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshaq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1108], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshaw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1109], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshlb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1110], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1111], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshlq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1112], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshlw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1113], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshufb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1114], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshufd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1115], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshufhw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1116], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpshuflw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1117], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsignb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1118], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsignd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1119], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsignw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1120], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpslld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1121], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpslldq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1122], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsllq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1123], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsllvd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1124], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsllvq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1125], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsllw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1126], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsrad(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1127], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsraq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1128], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsravd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1129], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsravq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1130], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsraw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1131], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsrld(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1132], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsrldq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1133], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsrlq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1134], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsrlvd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1135], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsrlvq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1136], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsrlw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1137], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsubb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1138], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsubd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1139], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsubq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1140], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsubsb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1141], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsubsw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1142], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsubusb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1143], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsubusw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1144], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpsubw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1145], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vptest(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1146], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vptestmd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1147], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vptestmq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1148], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vptestnmd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1149], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vptestnmq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1150], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpunpckhbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1151], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpunpckhdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1152], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpunpckhqdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1153], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpunpckhwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1154], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpunpcklbw(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1155], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpunpckldq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1156], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpunpcklqdq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1157], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpunpcklwd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1158], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpxor(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1159], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpxord(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1160], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vpxorq(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1161], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcp14pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1162], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcp14ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1163], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcp14sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1164], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcp14ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1165], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcp28pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1166], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcp28ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1167], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcp28sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1168], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcp28ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1169], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcpps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1170], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrcpss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1171], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrndscalepd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1172], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrndscaleps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1173], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrndscalesd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1174], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrndscaless(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1175], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vroundpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1176], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vroundps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1177], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vroundsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1178], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vroundss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1179], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrt14pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1180], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrt14ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1181], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrt14sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1182], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrt14ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1183], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrt28pd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1184], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrt28ps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1185], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrt28sd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1186], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrt28ss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1187], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrtps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1188], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vrsqrtss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1189], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterdpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1190], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterdps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1191], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterpf0dpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1192], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterpf0dps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1193], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterpf0qpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1194], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterpf0qps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1195], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterpf1dpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1196], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterpf1dps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1197], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterpf1qpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1198], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterpf1qps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1199], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterqpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1200], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vscatterqps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1201], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vshufpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1202], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vshufps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1203], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vsqrtpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1204], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vsqrtps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1205], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vsqrtsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1206], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vsqrtss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1207], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vstmxcsr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1208], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vsubpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1209], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vsubps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1210], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vsubsd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1211], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vsubss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1212], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vtestpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1213], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vtestps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1214], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vucomisd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1215], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vucomiss(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1216], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vunpckhpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1217], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vunpckhps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1218], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vunpcklpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1219], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vunpcklps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1220], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vxorpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1221], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vxorps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1222], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vzeroall(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1223], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_vzeroupper(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1224], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_wait(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1225], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_wbinvd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1226], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_wrfsbase(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1227], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_wrgsbase(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1228], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_wrmsr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1229], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xabort(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1230], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xacquire(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1231], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xadd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1232], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xbegin(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1233], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xchg(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1234], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xcryptcbc(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1235], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xcryptcfb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1236], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xcryptctr(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1237], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xcryptecb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1238], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xcryptofb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1239], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xend(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1240], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xgetbv(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1241], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xlatb(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1242], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xor(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	BasicBlock* block1 = BasicBlock::Create(context, "", function);
	BasicBlock* block2 = BasicBlock::Create(context, "", function);
	BasicBlock* block3 = BasicBlock::Create(context, "", function);
	BasicBlock* block4 = BasicBlock::Create(context, "", function);
	BasicBlock* block5 = BasicBlock::Create(context, "", function);
	BasicBlock* block6 = BasicBlock::Create(context, "", function);
	BasicBlock* block7 = BasicBlock::Create(context, "", function);
	BasicBlock* block8 = BasicBlock::Create(context, "", function);
	BasicBlock* block9 = BasicBlock::Create(context, "", function);
	BasicBlock* block10 = BasicBlock::Create(context, "", function);
	BasicBlock* block11 = BasicBlock::Create(context, "", function);
	BasicBlock* block12 = BasicBlock::Create(context, "", function);
	BasicBlock* block13 = BasicBlock::Create(context, "", function);
	BasicBlock* block14 = BasicBlock::Create(context, "", function);
	BasicBlock* block15 = BasicBlock::Create(context, "", function);
	BasicBlock* block16 = BasicBlock::Create(context, "", function);
	BasicBlock* block17 = BasicBlock::Create(context, "", function);
	BasicBlock* block18 = BasicBlock::Create(context, "", function);
	BasicBlock* block19 = BasicBlock::Create(context, "", function);
	BasicBlock* block20 = BasicBlock::Create(context, "", function);
	BasicBlock* block21 = BasicBlock::Create(context, "", function);
	BasicBlock* block22 = BasicBlock::Create(context, "", function);
	BasicBlock* block23 = BasicBlock::Create(context, "", function);
	BasicBlock* block24 = BasicBlock::Create(context, "", function);
	BasicBlock* block25 = BasicBlock::Create(context, "", function);
	BasicBlock* block26 = BasicBlock::Create(context, "", function);
	BasicBlock* block27 = BasicBlock::Create(context, "", function);
	BasicBlock* block28 = BasicBlock::Create(context, "", function);
	BasicBlock* block29 = BasicBlock::Create(context, "", function);
	BasicBlock* block30 = BasicBlock::Create(context, "", function);
	BasicBlock* block31 = BasicBlock::Create(context, "", function);
	BasicBlock* block32 = BasicBlock::Create(context, "", function);
	BasicBlock* block33 = BasicBlock::Create(context, "", function);
	BasicBlock* block34 = BasicBlock::Create(context, "", function);
	BasicBlock* block35 = BasicBlock::Create(context, "", function);
	BasicBlock* block36 = BasicBlock::Create(context, "", function);
	BasicBlock* block37 = BasicBlock::Create(context, "", function);
	BasicBlock* block38 = BasicBlock::Create(context, "", function);
	BasicBlock* block39 = BasicBlock::Create(context, "", function);
	BasicBlock* block40 = BasicBlock::Create(context, "", function);
	BasicBlock* block41 = BasicBlock::Create(context, "", function);
	BasicBlock* block42 = BasicBlock::Create(context, "", function);
	BasicBlock* block43 = BasicBlock::Create(context, "", function);
	BasicBlock* block44 = BasicBlock::Create(context, "", function);
	BasicBlock* block45 = BasicBlock::Create(context, "", function);
	BasicBlock* block46 = BasicBlock::Create(context, "", function);
	BasicBlock* block47 = BasicBlock::Create(context, "", function);
	BasicBlock* block48 = BasicBlock::Create(context, "", function);
	BasicBlock* block49 = BasicBlock::Create(context, "", function);
	BasicBlock* block50 = BasicBlock::Create(context, "", function);
	BasicBlock* block51 = BasicBlock::Create(context, "", function);
	BasicBlock* block52 = BasicBlock::Create(context, "", function);
	BasicBlock* block53 = BasicBlock::Create(context, "", function);
	BasicBlock* block54 = BasicBlock::Create(context, "", function);
	BasicBlock* block55 = BasicBlock::Create(context, "", function);
	BasicBlock* block56 = BasicBlock::Create(context, "", function);
	BasicBlock* block57 = BasicBlock::Create(context, "", function);
	BasicBlock* block58 = BasicBlock::Create(context, "", function);
	BasicBlock* block59 = BasicBlock::Create(context, "", function);
	BasicBlock* block60 = BasicBlock::Create(context, "", function);
	BasicBlock* block61 = BasicBlock::Create(context, "", function);
	BasicBlock* block62 = BasicBlock::Create(context, "", function);
	BasicBlock* block63 = BasicBlock::Create(context, "", function);
	BasicBlock* block64 = BasicBlock::Create(context, "", function);
	BasicBlock* block65 = BasicBlock::Create(context, "", function);
	BasicBlock* block66 = BasicBlock::Create(context, "", function);
	BasicBlock* block67 = BasicBlock::Create(context, "", function);
	BasicBlock* block68 = BasicBlock::Create(context, "", function);
	BasicBlock* block69 = BasicBlock::Create(context, "", function);
	BasicBlock* block70 = BasicBlock::Create(context, "", function);
	BasicBlock* block71 = BasicBlock::Create(context, "", function);
	BasicBlock* block72 = BasicBlock::Create(context, "", function);
	BasicBlock* block73 = BasicBlock::Create(context, "", function);
	BasicBlock* block74 = BasicBlock::Create(context, "", function);
	BasicBlock* block75 = BasicBlock::Create(context, "", function);
	BasicBlock* block76 = BasicBlock::Create(context, "", function);
	BasicBlock* block77 = BasicBlock::Create(context, "", function);
	BasicBlock* block78 = BasicBlock::Create(context, "", function);
	BasicBlock* block79 = BasicBlock::Create(context, "", function);
	BasicBlock* block80 = BasicBlock::Create(context, "", function);
	BasicBlock* block81 = BasicBlock::Create(context, "", function);
	BasicBlock* block82 = BasicBlock::Create(context, "", function);
	BasicBlock* block83 = BasicBlock::Create(context, "", function);
	BasicBlock* block84 = BasicBlock::Create(context, "", function);
	BasicBlock* block85 = BasicBlock::Create(context, "", function);
	BasicBlock* block86 = BasicBlock::Create(context, "", function);
	BasicBlock* block87 = BasicBlock::Create(context, "", function);
	BasicBlock* block88 = BasicBlock::Create(context, "", function);
	BasicBlock* block89 = BasicBlock::Create(context, "", function);
	BasicBlock* block90 = BasicBlock::Create(context, "", function);
	BasicBlock* block91 = BasicBlock::Create(context, "", function);
	BasicBlock* block92 = BasicBlock::Create(context, "", function);
	BasicBlock* block93 = BasicBlock::Create(context, "", function);
	BasicBlock* block94 = BasicBlock::Create(context, "", function);
	BasicBlock* block95 = BasicBlock::Create(context, "", function);
	BasicBlock* block96 = BasicBlock::Create(context, "", function);
	BasicBlock* block97 = BasicBlock::Create(context, "", function);
	BasicBlock* block98 = BasicBlock::Create(context, "", function);
	BasicBlock* block99 = BasicBlock::Create(context, "", function);
	BasicBlock* block100 = BasicBlock::Create(context, "", function);
	BasicBlock* block101 = BasicBlock::Create(context, "", function);
	BasicBlock* block102 = BasicBlock::Create(context, "", function);
	BasicBlock* block103 = BasicBlock::Create(context, "", function);
	BasicBlock* block104 = BasicBlock::Create(context, "", function);
	BasicBlock* block105 = BasicBlock::Create(context, "", function);
	BasicBlock* block106 = BasicBlock::Create(context, "", function);
	BasicBlock* block107 = BasicBlock::Create(context, "", function);
	BasicBlock* block108 = BasicBlock::Create(context, "", function);
	BasicBlock* block109 = BasicBlock::Create(context, "", function);
	BasicBlock* block110 = BasicBlock::Create(context, "", function);
	BasicBlock* block111 = BasicBlock::Create(context, "", function);
	BasicBlock* block112 = BasicBlock::Create(context, "", function);
	BasicBlock* block113 = BasicBlock::Create(context, "", function);
	BasicBlock* block114 = BasicBlock::Create(context, "", function);
	Constant* gep4_val4_int = ConstantInt::get(types[0], 0u);
	Constant* gep4_val5_int = ConstantInt::get(types[2], 15u);
	Constant* gep4_val6_int = ConstantInt::get(types[2], 0u);
	ArrayRef<Value*> gep4_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep4_val6_int, };
	Value* gep4_var = builder.CreateInBoundsGEP(arg3, gep4_array);
	llvm::LoadInst* load8_var = builder.CreateLoad(gep4_var, false);
	load8_var->setAlignment(4);
	SwitchInst* switch9_var = builder.CreateSwitch(load8_var, block39, 2);
	Constant* switch9_val9_int = ConstantInt::get(types[2], 1u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val9_int), block1);
	Constant* switch9_val10_int = ConstantInt::get(types[2], 3u);
	switch9_var->addCase(cast<ConstantInt>(switch9_val10_int), block9);
	
	builder.SetInsertPoint(block1);
	ArrayRef<Value*> gep11_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep11_var = builder.CreateGEP(arg3, gep11_array);
	llvm::LoadInst* load12_var = builder.CreateLoad(gep11_var, false);
	load12_var->setAlignment(4);
	Value* cast13_var = builder.CreateCast(Instruction::ZExt, load12_var, types[0]);
	ArrayRef<Value*> gep14_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep14_var = builder.CreateInBoundsGEP(globals[5], gep14_array);
	llvm::LoadInst* load16_var = builder.CreateLoad(gep14_var, false);
	load16_var->setAlignment(16);
	Value* cast17_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep18_array { gep4_val4_int, cast13_var, switch9_val9_int, };
	Value* gep18_var = builder.CreateInBoundsGEP(globals[5], gep18_array);
	llvm::LoadInst* load19_var = builder.CreateLoad(gep18_var, false);
	load19_var->setAlignment(16);
	Constant* cmp20_val20_int = ConstantInt::get(types[0], 8u);
	Value* cmp20_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp20_val20_int);
	builder.CreateCondBr(cmp20_var, block2, block3);
	
	builder.SetInsertPoint(block2);
	ArrayRef<Value*> gep22_array { load16_var, };
	Value* gep22_var = builder.CreateInBoundsGEP(cast17_var, gep22_array);
	Value* cast23_var = builder.CreateCast(Instruction::BitCast, gep22_var, types[27]);
	llvm::LoadInst* load24_var = builder.CreateLoad(cast23_var, false);
	load24_var->setAlignment(8);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block3);
	ArrayRef<Value*> gep25_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep25_var = builder.CreateInBoundsGEP(globals[5], gep25_array);
	llvm::LoadInst* load26_var = builder.CreateLoad(gep25_var, false);
	load26_var->setAlignment(8);
	Value* binop27_var = BinaryOperator::Create(Instruction::Add, load26_var, load16_var, "", builder.GetInsertBlock());
	Constant* cmp28_val28_int = ConstantInt::get(types[0], 4u);
	Value* cmp28_var = builder.CreateICmp(CmpInst::ICMP_EQ, load19_var, cmp28_val28_int);
	builder.CreateCondBr(cmp28_var, block4, block5);
	
	builder.SetInsertPoint(block4);
	ArrayRef<Value*> gep30_array { binop27_var, };
	Value* gep30_var = builder.CreateInBoundsGEP(cast17_var, gep30_array);
	Value* cast31_var = builder.CreateCast(Instruction::BitCast, gep30_var, types[28]);
	llvm::LoadInst* load32_var = builder.CreateLoad(cast31_var, false);
	load32_var->setAlignment(4);
	Value* cast33_var = builder.CreateCast(Instruction::ZExt, load32_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block5);
	Constant* gep34_val34_int = ConstantInt::get(types[2], 2u);
	ArrayRef<Value*> gep34_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep34_var = builder.CreateInBoundsGEP(globals[5], gep34_array);
	llvm::LoadInst* load36_var = builder.CreateLoad(gep34_var, false);
	load36_var->setAlignment(16);
	Value* binop37_var = BinaryOperator::Create(Instruction::Add, load36_var, binop27_var, "", builder.GetInsertBlock());
	SwitchInst* switch38_var = builder.CreateSwitch(load19_var, block8, 2);
	Constant* switch38_val38_int = ConstantInt::get(types[0], 2u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val38_int), block6);
	Constant* switch38_val39_int = ConstantInt::get(types[0], 1u);
	switch38_var->addCase(cast<ConstantInt>(switch38_val39_int), block7);
	
	builder.SetInsertPoint(block6);
	ArrayRef<Value*> gep40_array { binop37_var, };
	Value* gep40_var = builder.CreateInBoundsGEP(cast17_var, gep40_array);
	Value* cast41_var = builder.CreateCast(Instruction::BitCast, gep40_var, types[30]);
	llvm::LoadInst* load42_var = builder.CreateLoad(cast41_var, false);
	load42_var->setAlignment(2);
	Value* cast43_var = builder.CreateCast(Instruction::ZExt, load42_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block7);
	ArrayRef<Value*> gep44_array { gep4_val4_int, cast13_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep44_var = builder.CreateInBoundsGEP(globals[5], gep44_array);
	llvm::LoadInst* load45_var = builder.CreateLoad(gep44_var, false);
	load45_var->setAlignment(8);
	Value* binop46_var = BinaryOperator::Create(Instruction::Add, load45_var, binop37_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep47_array { binop46_var, };
	Value* gep47_var = builder.CreateInBoundsGEP(cast17_var, gep47_array);
	llvm::LoadInst* load48_var = builder.CreateLoad(gep47_var, false);
	load48_var->setAlignment(1);
	Value* cast49_var = builder.CreateCast(Instruction::ZExt, load48_var, types[0]);
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block8);
	ArrayRef<Value*> gep51_array { gep4_val4_int, gep4_val4_int, };
	Value* gep51_var = builder.CreateInBoundsGEP(globals[7], gep51_array);
	CallInst* call50_var = builder.CreateCall(globals[6], gep51_var);
	call50_var->setTailCall();
	call50_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block9);
	ArrayRef<Value*> gep54_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep54_var = builder.CreateInBoundsGEP(arg3, gep54_array);
	llvm::LoadInst* load55_var = builder.CreateLoad(gep54_var, false);
	load55_var->setAlignment(4);
	Value* cmp56_var = builder.CreateICmp(CmpInst::ICMP_EQ, load55_var, gep4_val6_int);
	builder.CreateCondBr(cmp56_var, block18, block10);
	
	builder.SetInsertPoint(block10);
	Value* cast57_var = builder.CreateCast(Instruction::ZExt, load55_var, types[0]);
	ArrayRef<Value*> gep58_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep58_var = builder.CreateInBoundsGEP(globals[5], gep58_array);
	llvm::LoadInst* load59_var = builder.CreateLoad(gep58_var, false);
	load59_var->setAlignment(16);
	Value* cast60_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep61_array { gep4_val4_int, cast57_var, switch9_val9_int, };
	Value* gep61_var = builder.CreateInBoundsGEP(globals[5], gep61_array);
	llvm::LoadInst* load62_var = builder.CreateLoad(gep61_var, false);
	load62_var->setAlignment(16);
	Value* cmp63_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp20_val20_int);
	builder.CreateCondBr(cmp63_var, block11, block12);
	
	builder.SetInsertPoint(block11);
	ArrayRef<Value*> gep64_array { load59_var, };
	Value* gep64_var = builder.CreateInBoundsGEP(cast60_var, gep64_array);
	Value* cast65_var = builder.CreateCast(Instruction::BitCast, gep64_var, types[27]);
	llvm::LoadInst* load66_var = builder.CreateLoad(cast65_var, false);
	load66_var->setAlignment(8);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block12);
	ArrayRef<Value*> gep67_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep67_var = builder.CreateInBoundsGEP(globals[5], gep67_array);
	llvm::LoadInst* load68_var = builder.CreateLoad(gep67_var, false);
	load68_var->setAlignment(8);
	Value* binop69_var = BinaryOperator::Create(Instruction::Add, load68_var, load59_var, "", builder.GetInsertBlock());
	Value* cmp70_var = builder.CreateICmp(CmpInst::ICMP_EQ, load62_var, cmp28_val28_int);
	builder.CreateCondBr(cmp70_var, block13, block14);
	
	builder.SetInsertPoint(block13);
	ArrayRef<Value*> gep71_array { binop69_var, };
	Value* gep71_var = builder.CreateInBoundsGEP(cast60_var, gep71_array);
	Value* cast72_var = builder.CreateCast(Instruction::BitCast, gep71_var, types[28]);
	llvm::LoadInst* load73_var = builder.CreateLoad(cast72_var, false);
	load73_var->setAlignment(4);
	Value* cast74_var = builder.CreateCast(Instruction::ZExt, load73_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block14);
	ArrayRef<Value*> gep75_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep75_var = builder.CreateInBoundsGEP(globals[5], gep75_array);
	llvm::LoadInst* load76_var = builder.CreateLoad(gep75_var, false);
	load76_var->setAlignment(16);
	Value* binop77_var = BinaryOperator::Create(Instruction::Add, load76_var, binop69_var, "", builder.GetInsertBlock());
	SwitchInst* switch78_var = builder.CreateSwitch(load62_var, block17, 2);
	switch78_var->addCase(cast<ConstantInt>(switch38_val38_int), block15);
	switch78_var->addCase(cast<ConstantInt>(switch38_val39_int), block16);
	
	builder.SetInsertPoint(block15);
	ArrayRef<Value*> gep78_array { binop77_var, };
	Value* gep78_var = builder.CreateInBoundsGEP(cast60_var, gep78_array);
	Value* cast79_var = builder.CreateCast(Instruction::BitCast, gep78_var, types[30]);
	llvm::LoadInst* load80_var = builder.CreateLoad(cast79_var, false);
	load80_var->setAlignment(2);
	Value* cast81_var = builder.CreateCast(Instruction::ZExt, load80_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block16);
	ArrayRef<Value*> gep82_array { gep4_val4_int, cast57_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep82_var = builder.CreateInBoundsGEP(globals[5], gep82_array);
	llvm::LoadInst* load83_var = builder.CreateLoad(gep82_var, false);
	load83_var->setAlignment(8);
	Value* binop84_var = BinaryOperator::Create(Instruction::Add, load83_var, binop77_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep85_array { binop84_var, };
	Value* gep85_var = builder.CreateInBoundsGEP(cast60_var, gep85_array);
	llvm::LoadInst* load86_var = builder.CreateLoad(gep85_var, false);
	load86_var->setAlignment(1);
	Value* cast87_var = builder.CreateCast(Instruction::ZExt, load86_var, types[0]);
	builder.CreateBr(block18);
	
	builder.SetInsertPoint(block17);
	CallInst* call88_var = builder.CreateCall(globals[6], gep51_var);
	call88_var->setTailCall();
	call88_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block18);
	PHINode* phi89_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep90_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep90_var = builder.CreateInBoundsGEP(arg3, gep90_array);
	llvm::LoadInst* load91_var = builder.CreateLoad(gep90_var, false);
	load91_var->setAlignment(4);
	Value* cmp92_var = builder.CreateICmp(CmpInst::ICMP_EQ, load91_var, gep4_val6_int);
	builder.CreateCondBr(cmp92_var, block28, block19);
	
	builder.SetInsertPoint(block19);
	Value* cast93_var = builder.CreateCast(Instruction::ZExt, load91_var, types[0]);
	ArrayRef<Value*> gep94_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep94_var = builder.CreateInBoundsGEP(globals[5], gep94_array);
	llvm::LoadInst* load95_var = builder.CreateLoad(gep94_var, false);
	load95_var->setAlignment(16);
	Value* cast96_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep97_array { gep4_val4_int, cast93_var, switch9_val9_int, };
	Value* gep97_var = builder.CreateInBoundsGEP(globals[5], gep97_array);
	llvm::LoadInst* load98_var = builder.CreateLoad(gep97_var, false);
	load98_var->setAlignment(16);
	Value* cmp99_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp20_val20_int);
	builder.CreateCondBr(cmp99_var, block20, block21);
	
	builder.SetInsertPoint(block20);
	ArrayRef<Value*> gep100_array { load95_var, };
	Value* gep100_var = builder.CreateInBoundsGEP(cast96_var, gep100_array);
	Value* cast101_var = builder.CreateCast(Instruction::BitCast, gep100_var, types[27]);
	llvm::LoadInst* load102_var = builder.CreateLoad(cast101_var, false);
	load102_var->setAlignment(8);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block21);
	ArrayRef<Value*> gep103_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep103_var = builder.CreateInBoundsGEP(globals[5], gep103_array);
	llvm::LoadInst* load104_var = builder.CreateLoad(gep103_var, false);
	load104_var->setAlignment(8);
	Value* binop105_var = BinaryOperator::Create(Instruction::Add, load104_var, load95_var, "", builder.GetInsertBlock());
	Value* cmp106_var = builder.CreateICmp(CmpInst::ICMP_EQ, load98_var, cmp28_val28_int);
	builder.CreateCondBr(cmp106_var, block22, block23);
	
	builder.SetInsertPoint(block22);
	ArrayRef<Value*> gep107_array { binop105_var, };
	Value* gep107_var = builder.CreateInBoundsGEP(cast96_var, gep107_array);
	Value* cast108_var = builder.CreateCast(Instruction::BitCast, gep107_var, types[28]);
	llvm::LoadInst* load109_var = builder.CreateLoad(cast108_var, false);
	load109_var->setAlignment(4);
	Value* cast110_var = builder.CreateCast(Instruction::ZExt, load109_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block23);
	ArrayRef<Value*> gep111_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep111_var = builder.CreateInBoundsGEP(globals[5], gep111_array);
	llvm::LoadInst* load112_var = builder.CreateLoad(gep111_var, false);
	load112_var->setAlignment(16);
	Value* binop113_var = BinaryOperator::Create(Instruction::Add, load112_var, binop105_var, "", builder.GetInsertBlock());
	SwitchInst* switch114_var = builder.CreateSwitch(load98_var, block26, 2);
	switch114_var->addCase(cast<ConstantInt>(switch38_val38_int), block24);
	switch114_var->addCase(cast<ConstantInt>(switch38_val39_int), block25);
	
	builder.SetInsertPoint(block24);
	ArrayRef<Value*> gep114_array { binop113_var, };
	Value* gep114_var = builder.CreateInBoundsGEP(cast96_var, gep114_array);
	Value* cast115_var = builder.CreateCast(Instruction::BitCast, gep114_var, types[30]);
	llvm::LoadInst* load116_var = builder.CreateLoad(cast115_var, false);
	load116_var->setAlignment(2);
	Value* cast117_var = builder.CreateCast(Instruction::ZExt, load116_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block25);
	ArrayRef<Value*> gep118_array { gep4_val4_int, cast93_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep118_var = builder.CreateInBoundsGEP(globals[5], gep118_array);
	llvm::LoadInst* load119_var = builder.CreateLoad(gep118_var, false);
	load119_var->setAlignment(8);
	Value* binop120_var = BinaryOperator::Create(Instruction::Add, load119_var, binop113_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep121_array { binop120_var, };
	Value* gep121_var = builder.CreateInBoundsGEP(cast96_var, gep121_array);
	llvm::LoadInst* load122_var = builder.CreateLoad(gep121_var, false);
	load122_var->setAlignment(1);
	Value* cast123_var = builder.CreateCast(Instruction::ZExt, load122_var, types[0]);
	builder.CreateBr(block27);
	
	builder.SetInsertPoint(block26);
	CallInst* call124_var = builder.CreateCall(globals[6], gep51_var);
	call124_var->setTailCall();
	call124_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block27);
	PHINode* phi125_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep126_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep126_var = builder.CreateInBoundsGEP(arg3, gep126_array);
	llvm::LoadInst* load127_var = builder.CreateLoad(gep126_var, false);
	load127_var->setAlignment(4);
	Value* cast128_var = builder.CreateCast(Instruction::SExt, load127_var, types[0]);
	Value* binop129_var = BinaryOperator::Create(Instruction::Mul, cast128_var, phi125_var, "", builder.GetInsertBlock());
	Value* binop130_var = BinaryOperator::Create(Instruction::Add, binop129_var, phi89_var, "", builder.GetInsertBlock());
	builder.CreateBr(block28);
	
	builder.SetInsertPoint(block28);
	PHINode* phi131_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep132_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep132_var = builder.CreateInBoundsGEP(arg3, gep132_array);
	llvm::LoadInst* load133_var = builder.CreateLoad(gep132_var, false);
	load133_var->setAlignment(4);
	Value* cmp134_var = builder.CreateICmp(CmpInst::ICMP_EQ, load133_var, gep4_val6_int);
	builder.CreateCondBr(cmp134_var, block38, block29);
	
	builder.SetInsertPoint(block29);
	Value* cast135_var = builder.CreateCast(Instruction::ZExt, load133_var, types[0]);
	ArrayRef<Value*> gep136_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep136_var = builder.CreateInBoundsGEP(globals[5], gep136_array);
	llvm::LoadInst* load137_var = builder.CreateLoad(gep136_var, false);
	load137_var->setAlignment(16);
	Value* cast138_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep139_array { gep4_val4_int, cast135_var, switch9_val9_int, };
	Value* gep139_var = builder.CreateInBoundsGEP(globals[5], gep139_array);
	llvm::LoadInst* load140_var = builder.CreateLoad(gep139_var, false);
	load140_var->setAlignment(16);
	Value* cmp141_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp20_val20_int);
	builder.CreateCondBr(cmp141_var, block30, block31);
	
	builder.SetInsertPoint(block30);
	ArrayRef<Value*> gep142_array { load137_var, };
	Value* gep142_var = builder.CreateInBoundsGEP(cast138_var, gep142_array);
	Value* cast143_var = builder.CreateCast(Instruction::BitCast, gep142_var, types[27]);
	llvm::LoadInst* load144_var = builder.CreateLoad(cast143_var, false);
	load144_var->setAlignment(8);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block31);
	ArrayRef<Value*> gep145_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep145_var = builder.CreateInBoundsGEP(globals[5], gep145_array);
	llvm::LoadInst* load146_var = builder.CreateLoad(gep145_var, false);
	load146_var->setAlignment(8);
	Value* binop147_var = BinaryOperator::Create(Instruction::Add, load146_var, load137_var, "", builder.GetInsertBlock());
	Value* cmp148_var = builder.CreateICmp(CmpInst::ICMP_EQ, load140_var, cmp28_val28_int);
	builder.CreateCondBr(cmp148_var, block32, block33);
	
	builder.SetInsertPoint(block32);
	ArrayRef<Value*> gep149_array { binop147_var, };
	Value* gep149_var = builder.CreateInBoundsGEP(cast138_var, gep149_array);
	Value* cast150_var = builder.CreateCast(Instruction::BitCast, gep149_var, types[28]);
	llvm::LoadInst* load151_var = builder.CreateLoad(cast150_var, false);
	load151_var->setAlignment(4);
	Value* cast152_var = builder.CreateCast(Instruction::ZExt, load151_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block33);
	ArrayRef<Value*> gep153_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep153_var = builder.CreateInBoundsGEP(globals[5], gep153_array);
	llvm::LoadInst* load154_var = builder.CreateLoad(gep153_var, false);
	load154_var->setAlignment(16);
	Value* binop155_var = BinaryOperator::Create(Instruction::Add, load154_var, binop147_var, "", builder.GetInsertBlock());
	SwitchInst* switch156_var = builder.CreateSwitch(load140_var, block36, 2);
	switch156_var->addCase(cast<ConstantInt>(switch38_val38_int), block34);
	switch156_var->addCase(cast<ConstantInt>(switch38_val39_int), block35);
	
	builder.SetInsertPoint(block34);
	ArrayRef<Value*> gep156_array { binop155_var, };
	Value* gep156_var = builder.CreateInBoundsGEP(cast138_var, gep156_array);
	Value* cast157_var = builder.CreateCast(Instruction::BitCast, gep156_var, types[30]);
	llvm::LoadInst* load158_var = builder.CreateLoad(cast157_var, false);
	load158_var->setAlignment(2);
	Value* cast159_var = builder.CreateCast(Instruction::ZExt, load158_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block35);
	ArrayRef<Value*> gep160_array { gep4_val4_int, cast135_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep160_var = builder.CreateInBoundsGEP(globals[5], gep160_array);
	llvm::LoadInst* load161_var = builder.CreateLoad(gep160_var, false);
	load161_var->setAlignment(8);
	Value* binop162_var = BinaryOperator::Create(Instruction::Add, load161_var, binop155_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep163_array { binop162_var, };
	Value* gep163_var = builder.CreateInBoundsGEP(cast138_var, gep163_array);
	llvm::LoadInst* load164_var = builder.CreateLoad(gep163_var, false);
	load164_var->setAlignment(1);
	Value* cast165_var = builder.CreateCast(Instruction::ZExt, load164_var, types[0]);
	builder.CreateBr(block37);
	
	builder.SetInsertPoint(block36);
	CallInst* call166_var = builder.CreateCall(globals[6], gep51_var);
	call166_var->setTailCall();
	call166_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block37);
	PHINode* phi167_var = builder.CreatePHI(types[0], 4);
	Value* binop168_var = BinaryOperator::Create(Instruction::Add, phi167_var, phi131_var, "", builder.GetInsertBlock());
	builder.CreateBr(block38);
	
	builder.SetInsertPoint(block38);
	PHINode* phi169_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep170_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep170_var = builder.CreateInBoundsGEP(arg3, gep170_array);
	llvm::LoadInst* load171_var = builder.CreateLoad(gep170_var, false);
	load171_var->setAlignment(1);
	Value* cast172_var = builder.CreateCast(Instruction::ZExt, load171_var, types[0]);
	CallInst* call173_var = builder.CreateCall2(globals[8], phi169_var, cast172_var);
	call173_var->setTailCall();
	builder.CreateBr(block40);
	
	builder.SetInsertPoint(block39);
	ArrayRef<Value*> gep175_array { gep4_val4_int, gep4_val4_int, };
	Value* gep175_var = builder.CreateInBoundsGEP(globals[9], gep175_array);
	CallInst* call175_var = builder.CreateCall(globals[6], gep175_var);
	call175_var->setTailCall();
	call175_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block40);
	PHINode* phi178_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep179_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep4_val6_int, };
	Value* gep179_var = builder.CreateInBoundsGEP(arg3, gep179_array);
	llvm::LoadInst* load180_var = builder.CreateLoad(gep179_var, false);
	load180_var->setAlignment(4);
	SwitchInst* switch181_var = builder.CreateSwitch(load180_var, block80, 3);
	switch181_var->addCase(cast<ConstantInt>(gep34_val34_int), block41);
	switch181_var->addCase(cast<ConstantInt>(switch9_val9_int), block42);
	switch181_var->addCase(cast<ConstantInt>(switch9_val10_int), block50);
	
	builder.SetInsertPoint(block41);
	ArrayRef<Value*> gep181_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, };
	Value* gep181_var = builder.CreateInBoundsGEP(arg3, gep181_array);
	Value* cast182_var = builder.CreateCast(Instruction::BitCast, gep181_var, types[27]);
	llvm::LoadInst* load183_var = builder.CreateLoad(cast182_var, false);
	load183_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block42);
	ArrayRef<Value*> gep184_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep184_var = builder.CreateGEP(arg3, gep184_array);
	llvm::LoadInst* load185_var = builder.CreateLoad(gep184_var, false);
	load185_var->setAlignment(4);
	Value* cast186_var = builder.CreateCast(Instruction::ZExt, load185_var, types[0]);
	ArrayRef<Value*> gep187_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep187_var = builder.CreateInBoundsGEP(globals[5], gep187_array);
	llvm::LoadInst* load188_var = builder.CreateLoad(gep187_var, false);
	load188_var->setAlignment(16);
	Value* cast189_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep190_array { gep4_val4_int, cast186_var, switch9_val9_int, };
	Value* gep190_var = builder.CreateInBoundsGEP(globals[5], gep190_array);
	llvm::LoadInst* load191_var = builder.CreateLoad(gep190_var, false);
	load191_var->setAlignment(16);
	Value* cmp192_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp20_val20_int);
	builder.CreateCondBr(cmp192_var, block43, block44);
	
	builder.SetInsertPoint(block43);
	ArrayRef<Value*> gep193_array { load188_var, };
	Value* gep193_var = builder.CreateInBoundsGEP(cast189_var, gep193_array);
	Value* cast194_var = builder.CreateCast(Instruction::BitCast, gep193_var, types[27]);
	llvm::LoadInst* load195_var = builder.CreateLoad(cast194_var, false);
	load195_var->setAlignment(8);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block44);
	ArrayRef<Value*> gep196_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep196_var = builder.CreateInBoundsGEP(globals[5], gep196_array);
	llvm::LoadInst* load197_var = builder.CreateLoad(gep196_var, false);
	load197_var->setAlignment(8);
	Value* binop198_var = BinaryOperator::Create(Instruction::Add, load197_var, load188_var, "", builder.GetInsertBlock());
	Value* cmp199_var = builder.CreateICmp(CmpInst::ICMP_EQ, load191_var, cmp28_val28_int);
	builder.CreateCondBr(cmp199_var, block45, block46);
	
	builder.SetInsertPoint(block45);
	ArrayRef<Value*> gep200_array { binop198_var, };
	Value* gep200_var = builder.CreateInBoundsGEP(cast189_var, gep200_array);
	Value* cast201_var = builder.CreateCast(Instruction::BitCast, gep200_var, types[28]);
	llvm::LoadInst* load202_var = builder.CreateLoad(cast201_var, false);
	load202_var->setAlignment(4);
	Value* cast203_var = builder.CreateCast(Instruction::ZExt, load202_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block46);
	ArrayRef<Value*> gep204_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep204_var = builder.CreateInBoundsGEP(globals[5], gep204_array);
	llvm::LoadInst* load205_var = builder.CreateLoad(gep204_var, false);
	load205_var->setAlignment(16);
	Value* binop206_var = BinaryOperator::Create(Instruction::Add, load205_var, binop198_var, "", builder.GetInsertBlock());
	SwitchInst* switch207_var = builder.CreateSwitch(load191_var, block49, 2);
	switch207_var->addCase(cast<ConstantInt>(switch38_val38_int), block47);
	switch207_var->addCase(cast<ConstantInt>(switch38_val39_int), block48);
	
	builder.SetInsertPoint(block47);
	ArrayRef<Value*> gep207_array { binop206_var, };
	Value* gep207_var = builder.CreateInBoundsGEP(cast189_var, gep207_array);
	Value* cast208_var = builder.CreateCast(Instruction::BitCast, gep207_var, types[30]);
	llvm::LoadInst* load209_var = builder.CreateLoad(cast208_var, false);
	load209_var->setAlignment(2);
	Value* cast210_var = builder.CreateCast(Instruction::ZExt, load209_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block48);
	ArrayRef<Value*> gep211_array { gep4_val4_int, cast186_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep211_var = builder.CreateInBoundsGEP(globals[5], gep211_array);
	llvm::LoadInst* load212_var = builder.CreateLoad(gep211_var, false);
	load212_var->setAlignment(8);
	Value* binop213_var = BinaryOperator::Create(Instruction::Add, load212_var, binop206_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep214_array { binop213_var, };
	Value* gep214_var = builder.CreateInBoundsGEP(cast189_var, gep214_array);
	llvm::LoadInst* load215_var = builder.CreateLoad(gep214_var, false);
	load215_var->setAlignment(1);
	Value* cast216_var = builder.CreateCast(Instruction::ZExt, load215_var, types[0]);
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block49);
	CallInst* call217_var = builder.CreateCall(globals[6], gep51_var);
	call217_var->setTailCall();
	call217_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block50);
	ArrayRef<Value*> gep218_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep218_var = builder.CreateInBoundsGEP(arg3, gep218_array);
	llvm::LoadInst* load219_var = builder.CreateLoad(gep218_var, false);
	load219_var->setAlignment(4);
	Value* cmp220_var = builder.CreateICmp(CmpInst::ICMP_EQ, load219_var, gep4_val6_int);
	builder.CreateCondBr(cmp220_var, block59, block51);
	
	builder.SetInsertPoint(block51);
	Value* cast221_var = builder.CreateCast(Instruction::ZExt, load219_var, types[0]);
	ArrayRef<Value*> gep222_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep222_var = builder.CreateInBoundsGEP(globals[5], gep222_array);
	llvm::LoadInst* load223_var = builder.CreateLoad(gep222_var, false);
	load223_var->setAlignment(16);
	Value* cast224_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep225_array { gep4_val4_int, cast221_var, switch9_val9_int, };
	Value* gep225_var = builder.CreateInBoundsGEP(globals[5], gep225_array);
	llvm::LoadInst* load226_var = builder.CreateLoad(gep225_var, false);
	load226_var->setAlignment(16);
	Value* cmp227_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp20_val20_int);
	builder.CreateCondBr(cmp227_var, block52, block53);
	
	builder.SetInsertPoint(block52);
	ArrayRef<Value*> gep228_array { load223_var, };
	Value* gep228_var = builder.CreateInBoundsGEP(cast224_var, gep228_array);
	Value* cast229_var = builder.CreateCast(Instruction::BitCast, gep228_var, types[27]);
	llvm::LoadInst* load230_var = builder.CreateLoad(cast229_var, false);
	load230_var->setAlignment(8);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block53);
	ArrayRef<Value*> gep231_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep231_var = builder.CreateInBoundsGEP(globals[5], gep231_array);
	llvm::LoadInst* load232_var = builder.CreateLoad(gep231_var, false);
	load232_var->setAlignment(8);
	Value* binop233_var = BinaryOperator::Create(Instruction::Add, load232_var, load223_var, "", builder.GetInsertBlock());
	Value* cmp234_var = builder.CreateICmp(CmpInst::ICMP_EQ, load226_var, cmp28_val28_int);
	builder.CreateCondBr(cmp234_var, block54, block55);
	
	builder.SetInsertPoint(block54);
	ArrayRef<Value*> gep235_array { binop233_var, };
	Value* gep235_var = builder.CreateInBoundsGEP(cast224_var, gep235_array);
	Value* cast236_var = builder.CreateCast(Instruction::BitCast, gep235_var, types[28]);
	llvm::LoadInst* load237_var = builder.CreateLoad(cast236_var, false);
	load237_var->setAlignment(4);
	Value* cast238_var = builder.CreateCast(Instruction::ZExt, load237_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block55);
	ArrayRef<Value*> gep239_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep239_var = builder.CreateInBoundsGEP(globals[5], gep239_array);
	llvm::LoadInst* load240_var = builder.CreateLoad(gep239_var, false);
	load240_var->setAlignment(16);
	Value* binop241_var = BinaryOperator::Create(Instruction::Add, load240_var, binop233_var, "", builder.GetInsertBlock());
	SwitchInst* switch242_var = builder.CreateSwitch(load226_var, block58, 2);
	switch242_var->addCase(cast<ConstantInt>(switch38_val38_int), block56);
	switch242_var->addCase(cast<ConstantInt>(switch38_val39_int), block57);
	
	builder.SetInsertPoint(block56);
	ArrayRef<Value*> gep242_array { binop241_var, };
	Value* gep242_var = builder.CreateInBoundsGEP(cast224_var, gep242_array);
	Value* cast243_var = builder.CreateCast(Instruction::BitCast, gep242_var, types[30]);
	llvm::LoadInst* load244_var = builder.CreateLoad(cast243_var, false);
	load244_var->setAlignment(2);
	Value* cast245_var = builder.CreateCast(Instruction::ZExt, load244_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block57);
	ArrayRef<Value*> gep246_array { gep4_val4_int, cast221_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep246_var = builder.CreateInBoundsGEP(globals[5], gep246_array);
	llvm::LoadInst* load247_var = builder.CreateLoad(gep246_var, false);
	load247_var->setAlignment(8);
	Value* binop248_var = BinaryOperator::Create(Instruction::Add, load247_var, binop241_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep249_array { binop248_var, };
	Value* gep249_var = builder.CreateInBoundsGEP(cast224_var, gep249_array);
	llvm::LoadInst* load250_var = builder.CreateLoad(gep249_var, false);
	load250_var->setAlignment(1);
	Value* cast251_var = builder.CreateCast(Instruction::ZExt, load250_var, types[0]);
	builder.CreateBr(block59);
	
	builder.SetInsertPoint(block58);
	CallInst* call252_var = builder.CreateCall(globals[6], gep51_var);
	call252_var->setTailCall();
	call252_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block59);
	PHINode* phi253_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep254_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep254_var = builder.CreateInBoundsGEP(arg3, gep254_array);
	llvm::LoadInst* load255_var = builder.CreateLoad(gep254_var, false);
	load255_var->setAlignment(4);
	Value* cmp256_var = builder.CreateICmp(CmpInst::ICMP_EQ, load255_var, gep4_val6_int);
	builder.CreateCondBr(cmp256_var, block69, block60);
	
	builder.SetInsertPoint(block60);
	Value* cast257_var = builder.CreateCast(Instruction::ZExt, load255_var, types[0]);
	ArrayRef<Value*> gep258_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep258_var = builder.CreateInBoundsGEP(globals[5], gep258_array);
	llvm::LoadInst* load259_var = builder.CreateLoad(gep258_var, false);
	load259_var->setAlignment(16);
	Value* cast260_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep261_array { gep4_val4_int, cast257_var, switch9_val9_int, };
	Value* gep261_var = builder.CreateInBoundsGEP(globals[5], gep261_array);
	llvm::LoadInst* load262_var = builder.CreateLoad(gep261_var, false);
	load262_var->setAlignment(16);
	Value* cmp263_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp20_val20_int);
	builder.CreateCondBr(cmp263_var, block61, block62);
	
	builder.SetInsertPoint(block61);
	ArrayRef<Value*> gep264_array { load259_var, };
	Value* gep264_var = builder.CreateInBoundsGEP(cast260_var, gep264_array);
	Value* cast265_var = builder.CreateCast(Instruction::BitCast, gep264_var, types[27]);
	llvm::LoadInst* load266_var = builder.CreateLoad(cast265_var, false);
	load266_var->setAlignment(8);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block62);
	ArrayRef<Value*> gep267_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep267_var = builder.CreateInBoundsGEP(globals[5], gep267_array);
	llvm::LoadInst* load268_var = builder.CreateLoad(gep267_var, false);
	load268_var->setAlignment(8);
	Value* binop269_var = BinaryOperator::Create(Instruction::Add, load268_var, load259_var, "", builder.GetInsertBlock());
	Value* cmp270_var = builder.CreateICmp(CmpInst::ICMP_EQ, load262_var, cmp28_val28_int);
	builder.CreateCondBr(cmp270_var, block63, block64);
	
	builder.SetInsertPoint(block63);
	ArrayRef<Value*> gep271_array { binop269_var, };
	Value* gep271_var = builder.CreateInBoundsGEP(cast260_var, gep271_array);
	Value* cast272_var = builder.CreateCast(Instruction::BitCast, gep271_var, types[28]);
	llvm::LoadInst* load273_var = builder.CreateLoad(cast272_var, false);
	load273_var->setAlignment(4);
	Value* cast274_var = builder.CreateCast(Instruction::ZExt, load273_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block64);
	ArrayRef<Value*> gep275_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep275_var = builder.CreateInBoundsGEP(globals[5], gep275_array);
	llvm::LoadInst* load276_var = builder.CreateLoad(gep275_var, false);
	load276_var->setAlignment(16);
	Value* binop277_var = BinaryOperator::Create(Instruction::Add, load276_var, binop269_var, "", builder.GetInsertBlock());
	SwitchInst* switch278_var = builder.CreateSwitch(load262_var, block67, 2);
	switch278_var->addCase(cast<ConstantInt>(switch38_val38_int), block65);
	switch278_var->addCase(cast<ConstantInt>(switch38_val39_int), block66);
	
	builder.SetInsertPoint(block65);
	ArrayRef<Value*> gep278_array { binop277_var, };
	Value* gep278_var = builder.CreateInBoundsGEP(cast260_var, gep278_array);
	Value* cast279_var = builder.CreateCast(Instruction::BitCast, gep278_var, types[30]);
	llvm::LoadInst* load280_var = builder.CreateLoad(cast279_var, false);
	load280_var->setAlignment(2);
	Value* cast281_var = builder.CreateCast(Instruction::ZExt, load280_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block66);
	ArrayRef<Value*> gep282_array { gep4_val4_int, cast257_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep282_var = builder.CreateInBoundsGEP(globals[5], gep282_array);
	llvm::LoadInst* load283_var = builder.CreateLoad(gep282_var, false);
	load283_var->setAlignment(8);
	Value* binop284_var = BinaryOperator::Create(Instruction::Add, load283_var, binop277_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep285_array { binop284_var, };
	Value* gep285_var = builder.CreateInBoundsGEP(cast260_var, gep285_array);
	llvm::LoadInst* load286_var = builder.CreateLoad(gep285_var, false);
	load286_var->setAlignment(1);
	Value* cast287_var = builder.CreateCast(Instruction::ZExt, load286_var, types[0]);
	builder.CreateBr(block68);
	
	builder.SetInsertPoint(block67);
	CallInst* call288_var = builder.CreateCall(globals[6], gep51_var);
	call288_var->setTailCall();
	call288_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block68);
	PHINode* phi289_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep290_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep290_var = builder.CreateInBoundsGEP(arg3, gep290_array);
	llvm::LoadInst* load291_var = builder.CreateLoad(gep290_var, false);
	load291_var->setAlignment(4);
	Value* cast292_var = builder.CreateCast(Instruction::SExt, load291_var, types[0]);
	Value* binop293_var = BinaryOperator::Create(Instruction::Mul, cast292_var, phi289_var, "", builder.GetInsertBlock());
	Value* binop294_var = BinaryOperator::Create(Instruction::Add, binop293_var, phi253_var, "", builder.GetInsertBlock());
	builder.CreateBr(block69);
	
	builder.SetInsertPoint(block69);
	PHINode* phi295_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep296_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep296_var = builder.CreateInBoundsGEP(arg3, gep296_array);
	llvm::LoadInst* load297_var = builder.CreateLoad(gep296_var, false);
	load297_var->setAlignment(4);
	Value* cmp298_var = builder.CreateICmp(CmpInst::ICMP_EQ, load297_var, gep4_val6_int);
	builder.CreateCondBr(cmp298_var, block79, block70);
	
	builder.SetInsertPoint(block70);
	Value* cast299_var = builder.CreateCast(Instruction::ZExt, load297_var, types[0]);
	ArrayRef<Value*> gep300_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep300_var = builder.CreateInBoundsGEP(globals[5], gep300_array);
	llvm::LoadInst* load301_var = builder.CreateLoad(gep300_var, false);
	load301_var->setAlignment(16);
	Value* cast302_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep303_array { gep4_val4_int, cast299_var, switch9_val9_int, };
	Value* gep303_var = builder.CreateInBoundsGEP(globals[5], gep303_array);
	llvm::LoadInst* load304_var = builder.CreateLoad(gep303_var, false);
	load304_var->setAlignment(16);
	Value* cmp305_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp20_val20_int);
	builder.CreateCondBr(cmp305_var, block71, block72);
	
	builder.SetInsertPoint(block71);
	ArrayRef<Value*> gep306_array { load301_var, };
	Value* gep306_var = builder.CreateInBoundsGEP(cast302_var, gep306_array);
	Value* cast307_var = builder.CreateCast(Instruction::BitCast, gep306_var, types[27]);
	llvm::LoadInst* load308_var = builder.CreateLoad(cast307_var, false);
	load308_var->setAlignment(8);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block72);
	ArrayRef<Value*> gep309_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep309_var = builder.CreateInBoundsGEP(globals[5], gep309_array);
	llvm::LoadInst* load310_var = builder.CreateLoad(gep309_var, false);
	load310_var->setAlignment(8);
	Value* binop311_var = BinaryOperator::Create(Instruction::Add, load310_var, load301_var, "", builder.GetInsertBlock());
	Value* cmp312_var = builder.CreateICmp(CmpInst::ICMP_EQ, load304_var, cmp28_val28_int);
	builder.CreateCondBr(cmp312_var, block73, block74);
	
	builder.SetInsertPoint(block73);
	ArrayRef<Value*> gep313_array { binop311_var, };
	Value* gep313_var = builder.CreateInBoundsGEP(cast302_var, gep313_array);
	Value* cast314_var = builder.CreateCast(Instruction::BitCast, gep313_var, types[28]);
	llvm::LoadInst* load315_var = builder.CreateLoad(cast314_var, false);
	load315_var->setAlignment(4);
	Value* cast316_var = builder.CreateCast(Instruction::ZExt, load315_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block74);
	ArrayRef<Value*> gep317_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep317_var = builder.CreateInBoundsGEP(globals[5], gep317_array);
	llvm::LoadInst* load318_var = builder.CreateLoad(gep317_var, false);
	load318_var->setAlignment(16);
	Value* binop319_var = BinaryOperator::Create(Instruction::Add, load318_var, binop311_var, "", builder.GetInsertBlock());
	SwitchInst* switch320_var = builder.CreateSwitch(load304_var, block77, 2);
	switch320_var->addCase(cast<ConstantInt>(switch38_val38_int), block75);
	switch320_var->addCase(cast<ConstantInt>(switch38_val39_int), block76);
	
	builder.SetInsertPoint(block75);
	ArrayRef<Value*> gep320_array { binop319_var, };
	Value* gep320_var = builder.CreateInBoundsGEP(cast302_var, gep320_array);
	Value* cast321_var = builder.CreateCast(Instruction::BitCast, gep320_var, types[30]);
	llvm::LoadInst* load322_var = builder.CreateLoad(cast321_var, false);
	load322_var->setAlignment(2);
	Value* cast323_var = builder.CreateCast(Instruction::ZExt, load322_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block76);
	ArrayRef<Value*> gep324_array { gep4_val4_int, cast299_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep324_var = builder.CreateInBoundsGEP(globals[5], gep324_array);
	llvm::LoadInst* load325_var = builder.CreateLoad(gep324_var, false);
	load325_var->setAlignment(8);
	Value* binop326_var = BinaryOperator::Create(Instruction::Add, load325_var, binop319_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep327_array { binop326_var, };
	Value* gep327_var = builder.CreateInBoundsGEP(cast302_var, gep327_array);
	llvm::LoadInst* load328_var = builder.CreateLoad(gep327_var, false);
	load328_var->setAlignment(1);
	Value* cast329_var = builder.CreateCast(Instruction::ZExt, load328_var, types[0]);
	builder.CreateBr(block78);
	
	builder.SetInsertPoint(block77);
	CallInst* call330_var = builder.CreateCall(globals[6], gep51_var);
	call330_var->setTailCall();
	call330_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block78);
	PHINode* phi331_var = builder.CreatePHI(types[0], 4);
	Value* binop332_var = BinaryOperator::Create(Instruction::Add, phi331_var, phi295_var, "", builder.GetInsertBlock());
	builder.CreateBr(block79);
	
	builder.SetInsertPoint(block79);
	PHINode* phi333_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep334_array { gep4_val4_int, gep4_val5_int, switch38_val39_int, gep34_val34_int, };
	Value* gep334_var = builder.CreateInBoundsGEP(arg3, gep334_array);
	llvm::LoadInst* load335_var = builder.CreateLoad(gep334_var, false);
	load335_var->setAlignment(1);
	Value* cast336_var = builder.CreateCast(Instruction::ZExt, load335_var, types[0]);
	CallInst* call337_var = builder.CreateCall2(globals[8], phi333_var, cast336_var);
	call337_var->setTailCall();
	builder.CreateBr(block81);
	
	builder.SetInsertPoint(block80);
	ArrayRef<Value*> gep338_array { gep4_val4_int, gep4_val4_int, };
	Value* gep338_var = builder.CreateInBoundsGEP(globals[10], gep338_array);
	CallInst* call338_var = builder.CreateCall(globals[6], gep338_var);
	call338_var->setTailCall();
	call338_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block81);
	PHINode* phi341_var = builder.CreatePHI(types[0], 6);
	Value* binop342_var = BinaryOperator::Create(Instruction::Xor, phi341_var, phi178_var, "", builder.GetInsertBlock());
	Constant* gep343_val343_int = ConstantInt::get(types[2], 5u);
	ArrayRef<Value*> gep343_array { gep4_val4_int, gep343_val343_int, };
	Value* gep343_var = builder.CreateInBoundsGEP(arg2, gep343_array);
	Constant* store345_val345_int = ConstantInt::get(types[11], 0u);
	llvm::StoreInst* store345_var = builder.CreateStore(store345_val345_int, gep343_var, false);
	store345_var->setAlignment(1);
	ArrayRef<Value*> gep347_array { gep4_val4_int, gep4_val6_int, };
	Value* gep347_var = builder.CreateInBoundsGEP(arg2, gep347_array);
	llvm::StoreInst* store348_var = builder.CreateStore(store345_val345_int, gep347_var, false);
	store348_var->setAlignment(1);
	ArrayRef<Value*> gep349_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, gep34_val34_int, };
	Value* gep349_var = builder.CreateInBoundsGEP(arg3, gep349_array);
	llvm::LoadInst* load350_var = builder.CreateLoad(gep349_var, false);
	load350_var->setAlignment(1);
	Value* cast351_var = builder.CreateCast(Instruction::ZExt, load350_var, types[0]);
	Constant* binop352_val352_int = ConstantInt::get(types[0], 3u);
	Value* binop352_var = BinaryOperator::CreateNSW(Instruction::Shl, cast351_var, binop352_val352_int, "", builder.GetInsertBlock());
	Constant* binop354_val354_int = ConstantInt::get(types[0], 4294967295u);
	Value* binop354_var = BinaryOperator::CreateNSW(Instruction::Add, binop352_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop356_var = BinaryOperator::Create(Instruction::And, binop354_var, binop354_val354_int, "", builder.GetInsertBlock());
	Value* binop357_var = BinaryOperator::Create(Instruction::LShr, binop342_var, binop356_var, "", builder.GetInsertBlock());
	Value* cmp358_var = builder.CreateICmp(CmpInst::ICMP_NE, binop357_var, gep4_val4_int);
	Constant* gep359_val359_int = ConstantInt::get(types[2], 4u);
	ArrayRef<Value*> gep359_array { gep4_val4_int, gep359_val359_int, };
	Value* gep359_var = builder.CreateInBoundsGEP(arg2, gep359_array);
	Value* cast361_var = builder.CreateCast(Instruction::ZExt, cmp358_var, types[11]);
	llvm::StoreInst* store362_var = builder.CreateStore(cast361_var, gep359_var, false);
	store362_var->setAlignment(1);
	CallInst* call363_var = builder.CreateCall(globals[13], binop342_var);
	call363_var->setTailCall();
	call363_var->setDoesNotThrow();
	call363_var->setDoesNotAccessMemory();
	ArrayRef<Value*> gep365_array { gep4_val4_int, switch9_val9_int, };
	Value* gep365_var = builder.CreateInBoundsGEP(arg2, gep365_array);
	Value* cast366_var = builder.CreateCast(Instruction::Trunc, call363_var, types[11]);
	Constant* binop367_val367_int = ConstantInt::get(types[11], 1u);
	Value* binop367_var = BinaryOperator::Create(Instruction::And, cast366_var, binop367_val367_int, "", builder.GetInsertBlock());
	llvm::StoreInst* store369_var = builder.CreateStore(binop367_var, gep365_var, false);
	store369_var->setAlignment(1);
	Value* cmp370_var = builder.CreateICmp(CmpInst::ICMP_EQ, phi341_var, phi178_var);
	ArrayRef<Value*> gep371_array { gep4_val4_int, switch9_val10_int, };
	Value* gep371_var = builder.CreateInBoundsGEP(arg2, gep371_array);
	Value* cast372_var = builder.CreateCast(Instruction::ZExt, cmp370_var, types[11]);
	llvm::StoreInst* store373_var = builder.CreateStore(cast372_var, gep371_var, false);
	store373_var->setAlignment(1);
	ArrayRef<Value*> gep374_array { gep4_val4_int, gep34_val34_int, };
	Value* gep374_var = builder.CreateInBoundsGEP(arg2, gep374_array);
	llvm::StoreInst* store375_var = builder.CreateStore(store345_val345_int, gep374_var, false);
	store375_var->setAlignment(1);
	llvm::LoadInst* load376_var = builder.CreateLoad(gep4_var, false);
	load376_var->setAlignment(4);
	SwitchInst* switch377_var = builder.CreateSwitch(load376_var, block113, 2);
	switch377_var->addCase(cast<ConstantInt>(switch9_val9_int), block82);
	switch377_var->addCase(cast<ConstantInt>(switch9_val10_int), block83);
	
	builder.SetInsertPoint(block82);
	ArrayRef<Value*> gep377_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep377_var = builder.CreateGEP(arg3, gep377_array);
	llvm::LoadInst* load378_var = builder.CreateLoad(gep377_var, false);
	load378_var->setAlignment(4);
	Value* cast379_var = builder.CreateCast(Instruction::ZExt, load378_var, types[0]);
	ArrayRef<Value*> gep380_array { gep4_val4_int, cast379_var, switch9_val9_int, };
	Value* gep380_var = builder.CreateInBoundsGEP(globals[5], gep380_array);
	llvm::LoadInst* load381_var = builder.CreateLoad(gep380_var, false);
	load381_var->setAlignment(16);
	Value* binop382_var = BinaryOperator::Create(Instruction::Shl, load381_var, binop352_val352_int, "", builder.GetInsertBlock());
	Constant* binop383_val383_int = ConstantInt::get(types[0], 64u);
	Value* binop383_var = BinaryOperator::Create(Instruction::Sub, binop383_val383_int, binop382_var, "", builder.GetInsertBlock());
	Constant* binop385_val385_int = ConstantInt::get(types[0], 18446744073709551615u);
	Value* binop385_var = BinaryOperator::Create(Instruction::LShr, binop385_val385_int, binop383_var, "", builder.GetInsertBlock());
	Value* binop387_var = BinaryOperator::Create(Instruction::And, binop385_var, binop342_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep388_array { gep4_val4_int, cast379_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep388_var = builder.CreateInBoundsGEP(globals[5], gep388_array);
	llvm::LoadInst* load389_var = builder.CreateLoad(gep388_var, false);
	load389_var->setAlignment(16);
	Value* cast390_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep391_array { load389_var, };
	Value* gep391_var = builder.CreateInBoundsGEP(cast390_var, gep391_array);
	Value* cast392_var = builder.CreateCast(Instruction::BitCast, gep391_var, types[27]);
	llvm::StoreInst* store393_var = builder.CreateStore(binop387_var, cast392_var, false);
	store393_var->setAlignment(8);
	builder.CreateBr(block114);
	
	builder.SetInsertPoint(block83);
	ArrayRef<Value*> gep394_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep4_val6_int, };
	Value* gep394_var = builder.CreateInBoundsGEP(arg3, gep394_array);
	llvm::LoadInst* load395_var = builder.CreateLoad(gep394_var, false);
	load395_var->setAlignment(4);
	Value* cmp396_var = builder.CreateICmp(CmpInst::ICMP_EQ, load395_var, gep4_val6_int);
	builder.CreateCondBr(cmp396_var, block92, block84);
	
	builder.SetInsertPoint(block84);
	Value* cast397_var = builder.CreateCast(Instruction::ZExt, load395_var, types[0]);
	ArrayRef<Value*> gep398_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep398_var = builder.CreateInBoundsGEP(globals[5], gep398_array);
	llvm::LoadInst* load399_var = builder.CreateLoad(gep398_var, false);
	load399_var->setAlignment(16);
	Value* cast400_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep401_array { gep4_val4_int, cast397_var, switch9_val9_int, };
	Value* gep401_var = builder.CreateInBoundsGEP(globals[5], gep401_array);
	llvm::LoadInst* load402_var = builder.CreateLoad(gep401_var, false);
	load402_var->setAlignment(16);
	Value* cmp403_var = builder.CreateICmp(CmpInst::ICMP_EQ, load402_var, cmp20_val20_int);
	builder.CreateCondBr(cmp403_var, block85, block86);
	
	builder.SetInsertPoint(block85);
	ArrayRef<Value*> gep404_array { load399_var, };
	Value* gep404_var = builder.CreateInBoundsGEP(cast400_var, gep404_array);
	Value* cast405_var = builder.CreateCast(Instruction::BitCast, gep404_var, types[27]);
	llvm::LoadInst* load406_var = builder.CreateLoad(cast405_var, false);
	load406_var->setAlignment(8);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block86);
	ArrayRef<Value*> gep407_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep407_var = builder.CreateInBoundsGEP(globals[5], gep407_array);
	llvm::LoadInst* load408_var = builder.CreateLoad(gep407_var, false);
	load408_var->setAlignment(8);
	Value* binop409_var = BinaryOperator::Create(Instruction::Add, load408_var, load399_var, "", builder.GetInsertBlock());
	Value* cmp410_var = builder.CreateICmp(CmpInst::ICMP_EQ, load402_var, cmp28_val28_int);
	builder.CreateCondBr(cmp410_var, block87, block88);
	
	builder.SetInsertPoint(block87);
	ArrayRef<Value*> gep411_array { binop409_var, };
	Value* gep411_var = builder.CreateInBoundsGEP(cast400_var, gep411_array);
	Value* cast412_var = builder.CreateCast(Instruction::BitCast, gep411_var, types[28]);
	llvm::LoadInst* load413_var = builder.CreateLoad(cast412_var, false);
	load413_var->setAlignment(4);
	Value* cast414_var = builder.CreateCast(Instruction::ZExt, load413_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block88);
	ArrayRef<Value*> gep415_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep415_var = builder.CreateInBoundsGEP(globals[5], gep415_array);
	llvm::LoadInst* load416_var = builder.CreateLoad(gep415_var, false);
	load416_var->setAlignment(16);
	Value* binop417_var = BinaryOperator::Create(Instruction::Add, load416_var, binop409_var, "", builder.GetInsertBlock());
	SwitchInst* switch418_var = builder.CreateSwitch(load402_var, block91, 2);
	switch418_var->addCase(cast<ConstantInt>(switch38_val38_int), block89);
	switch418_var->addCase(cast<ConstantInt>(switch38_val39_int), block90);
	
	builder.SetInsertPoint(block89);
	ArrayRef<Value*> gep418_array { binop417_var, };
	Value* gep418_var = builder.CreateInBoundsGEP(cast400_var, gep418_array);
	Value* cast419_var = builder.CreateCast(Instruction::BitCast, gep418_var, types[30]);
	llvm::LoadInst* load420_var = builder.CreateLoad(cast419_var, false);
	load420_var->setAlignment(2);
	Value* cast421_var = builder.CreateCast(Instruction::ZExt, load420_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block90);
	ArrayRef<Value*> gep422_array { gep4_val4_int, cast397_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep422_var = builder.CreateInBoundsGEP(globals[5], gep422_array);
	llvm::LoadInst* load423_var = builder.CreateLoad(gep422_var, false);
	load423_var->setAlignment(8);
	Value* binop424_var = BinaryOperator::Create(Instruction::Add, load423_var, binop417_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep425_array { binop424_var, };
	Value* gep425_var = builder.CreateInBoundsGEP(cast400_var, gep425_array);
	llvm::LoadInst* load426_var = builder.CreateLoad(gep425_var, false);
	load426_var->setAlignment(1);
	Value* cast427_var = builder.CreateCast(Instruction::ZExt, load426_var, types[0]);
	builder.CreateBr(block92);
	
	builder.SetInsertPoint(block91);
	CallInst* call428_var = builder.CreateCall(globals[6], gep51_var);
	call428_var->setTailCall();
	call428_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block92);
	PHINode* phi429_var = builder.CreatePHI(types[0], 5);
	ArrayRef<Value*> gep430_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, gep34_val34_int, };
	Value* gep430_var = builder.CreateInBoundsGEP(arg3, gep430_array);
	llvm::LoadInst* load431_var = builder.CreateLoad(gep430_var, false);
	load431_var->setAlignment(4);
	Value* cmp432_var = builder.CreateICmp(CmpInst::ICMP_EQ, load431_var, gep4_val6_int);
	builder.CreateCondBr(cmp432_var, block102, block93);
	
	builder.SetInsertPoint(block93);
	Value* cast433_var = builder.CreateCast(Instruction::ZExt, load431_var, types[0]);
	ArrayRef<Value*> gep434_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep434_var = builder.CreateInBoundsGEP(globals[5], gep434_array);
	llvm::LoadInst* load435_var = builder.CreateLoad(gep434_var, false);
	load435_var->setAlignment(16);
	Value* cast436_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep437_array { gep4_val4_int, cast433_var, switch9_val9_int, };
	Value* gep437_var = builder.CreateInBoundsGEP(globals[5], gep437_array);
	llvm::LoadInst* load438_var = builder.CreateLoad(gep437_var, false);
	load438_var->setAlignment(16);
	Value* cmp439_var = builder.CreateICmp(CmpInst::ICMP_EQ, load438_var, cmp20_val20_int);
	builder.CreateCondBr(cmp439_var, block94, block95);
	
	builder.SetInsertPoint(block94);
	ArrayRef<Value*> gep440_array { load435_var, };
	Value* gep440_var = builder.CreateInBoundsGEP(cast436_var, gep440_array);
	Value* cast441_var = builder.CreateCast(Instruction::BitCast, gep440_var, types[27]);
	llvm::LoadInst* load442_var = builder.CreateLoad(cast441_var, false);
	load442_var->setAlignment(8);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block95);
	ArrayRef<Value*> gep443_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep443_var = builder.CreateInBoundsGEP(globals[5], gep443_array);
	llvm::LoadInst* load444_var = builder.CreateLoad(gep443_var, false);
	load444_var->setAlignment(8);
	Value* binop445_var = BinaryOperator::Create(Instruction::Add, load444_var, load435_var, "", builder.GetInsertBlock());
	Value* cmp446_var = builder.CreateICmp(CmpInst::ICMP_EQ, load438_var, cmp28_val28_int);
	builder.CreateCondBr(cmp446_var, block96, block97);
	
	builder.SetInsertPoint(block96);
	ArrayRef<Value*> gep447_array { binop445_var, };
	Value* gep447_var = builder.CreateInBoundsGEP(cast436_var, gep447_array);
	Value* cast448_var = builder.CreateCast(Instruction::BitCast, gep447_var, types[28]);
	llvm::LoadInst* load449_var = builder.CreateLoad(cast448_var, false);
	load449_var->setAlignment(4);
	Value* cast450_var = builder.CreateCast(Instruction::ZExt, load449_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block97);
	ArrayRef<Value*> gep451_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep451_var = builder.CreateInBoundsGEP(globals[5], gep451_array);
	llvm::LoadInst* load452_var = builder.CreateLoad(gep451_var, false);
	load452_var->setAlignment(16);
	Value* binop453_var = BinaryOperator::Create(Instruction::Add, load452_var, binop445_var, "", builder.GetInsertBlock());
	SwitchInst* switch454_var = builder.CreateSwitch(load438_var, block100, 2);
	switch454_var->addCase(cast<ConstantInt>(switch38_val38_int), block98);
	switch454_var->addCase(cast<ConstantInt>(switch38_val39_int), block99);
	
	builder.SetInsertPoint(block98);
	ArrayRef<Value*> gep454_array { binop453_var, };
	Value* gep454_var = builder.CreateInBoundsGEP(cast436_var, gep454_array);
	Value* cast455_var = builder.CreateCast(Instruction::BitCast, gep454_var, types[30]);
	llvm::LoadInst* load456_var = builder.CreateLoad(cast455_var, false);
	load456_var->setAlignment(2);
	Value* cast457_var = builder.CreateCast(Instruction::ZExt, load456_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block99);
	ArrayRef<Value*> gep458_array { gep4_val4_int, cast433_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep458_var = builder.CreateInBoundsGEP(globals[5], gep458_array);
	llvm::LoadInst* load459_var = builder.CreateLoad(gep458_var, false);
	load459_var->setAlignment(8);
	Value* binop460_var = BinaryOperator::Create(Instruction::Add, load459_var, binop453_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep461_array { binop460_var, };
	Value* gep461_var = builder.CreateInBoundsGEP(cast436_var, gep461_array);
	llvm::LoadInst* load462_var = builder.CreateLoad(gep461_var, false);
	load462_var->setAlignment(1);
	Value* cast463_var = builder.CreateCast(Instruction::ZExt, load462_var, types[0]);
	builder.CreateBr(block101);
	
	builder.SetInsertPoint(block100);
	CallInst* call464_var = builder.CreateCall(globals[6], gep51_var);
	call464_var->setTailCall();
	call464_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block101);
	PHINode* phi465_var = builder.CreatePHI(types[0], 4);
	ArrayRef<Value*> gep466_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val10_int, };
	Value* gep466_var = builder.CreateInBoundsGEP(arg3, gep466_array);
	llvm::LoadInst* load467_var = builder.CreateLoad(gep466_var, false);
	load467_var->setAlignment(4);
	Value* cast468_var = builder.CreateCast(Instruction::SExt, load467_var, types[0]);
	Value* binop469_var = BinaryOperator::Create(Instruction::Mul, cast468_var, phi465_var, "", builder.GetInsertBlock());
	Value* binop470_var = BinaryOperator::Create(Instruction::Add, binop469_var, phi429_var, "", builder.GetInsertBlock());
	builder.CreateBr(block102);
	
	builder.SetInsertPoint(block102);
	PHINode* phi471_var = builder.CreatePHI(types[0], 2);
	ArrayRef<Value*> gep472_array { gep4_val4_int, gep4_val5_int, gep4_val4_int, switch9_val9_int, gep4_val6_int, switch9_val9_int, };
	Value* gep472_var = builder.CreateInBoundsGEP(arg3, gep472_array);
	llvm::LoadInst* load473_var = builder.CreateLoad(gep472_var, false);
	load473_var->setAlignment(4);
	Value* cmp474_var = builder.CreateICmp(CmpInst::ICMP_EQ, load473_var, gep4_val6_int);
	builder.CreateCondBr(cmp474_var, block112, block103);
	
	builder.SetInsertPoint(block103);
	Value* cast475_var = builder.CreateCast(Instruction::ZExt, load473_var, types[0]);
	ArrayRef<Value*> gep476_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, gep4_val6_int, };
	Value* gep476_var = builder.CreateInBoundsGEP(globals[5], gep476_array);
	llvm::LoadInst* load477_var = builder.CreateLoad(gep476_var, false);
	load477_var->setAlignment(16);
	Value* cast478_var = builder.CreateCast(Instruction::BitCast, arg1, types[20]);
	ArrayRef<Value*> gep479_array { gep4_val4_int, cast475_var, switch9_val9_int, };
	Value* gep479_var = builder.CreateInBoundsGEP(globals[5], gep479_array);
	llvm::LoadInst* load480_var = builder.CreateLoad(gep479_var, false);
	load480_var->setAlignment(16);
	Value* cmp481_var = builder.CreateICmp(CmpInst::ICMP_EQ, load480_var, cmp20_val20_int);
	builder.CreateCondBr(cmp481_var, block104, block105);
	
	builder.SetInsertPoint(block104);
	ArrayRef<Value*> gep482_array { load477_var, };
	Value* gep482_var = builder.CreateInBoundsGEP(cast478_var, gep482_array);
	Value* cast483_var = builder.CreateCast(Instruction::BitCast, gep482_var, types[27]);
	llvm::LoadInst* load484_var = builder.CreateLoad(cast483_var, false);
	load484_var->setAlignment(8);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block105);
	ArrayRef<Value*> gep485_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, switch9_val9_int, };
	Value* gep485_var = builder.CreateInBoundsGEP(globals[5], gep485_array);
	llvm::LoadInst* load486_var = builder.CreateLoad(gep485_var, false);
	load486_var->setAlignment(8);
	Value* binop487_var = BinaryOperator::Create(Instruction::Add, load486_var, load477_var, "", builder.GetInsertBlock());
	Value* cmp488_var = builder.CreateICmp(CmpInst::ICMP_EQ, load480_var, cmp28_val28_int);
	builder.CreateCondBr(cmp488_var, block106, block107);
	
	builder.SetInsertPoint(block106);
	ArrayRef<Value*> gep489_array { binop487_var, };
	Value* gep489_var = builder.CreateInBoundsGEP(cast478_var, gep489_array);
	Value* cast490_var = builder.CreateCast(Instruction::BitCast, gep489_var, types[28]);
	llvm::LoadInst* load491_var = builder.CreateLoad(cast490_var, false);
	load491_var->setAlignment(4);
	Value* cast492_var = builder.CreateCast(Instruction::ZExt, load491_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block107);
	ArrayRef<Value*> gep493_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, gep34_val34_int, };
	Value* gep493_var = builder.CreateInBoundsGEP(globals[5], gep493_array);
	llvm::LoadInst* load494_var = builder.CreateLoad(gep493_var, false);
	load494_var->setAlignment(16);
	Value* binop495_var = BinaryOperator::Create(Instruction::Add, load494_var, binop487_var, "", builder.GetInsertBlock());
	SwitchInst* switch496_var = builder.CreateSwitch(load480_var, block110, 2);
	switch496_var->addCase(cast<ConstantInt>(switch38_val38_int), block108);
	switch496_var->addCase(cast<ConstantInt>(switch38_val39_int), block109);
	
	builder.SetInsertPoint(block108);
	ArrayRef<Value*> gep496_array { binop495_var, };
	Value* gep496_var = builder.CreateInBoundsGEP(cast478_var, gep496_array);
	Value* cast497_var = builder.CreateCast(Instruction::BitCast, gep496_var, types[30]);
	llvm::LoadInst* load498_var = builder.CreateLoad(cast497_var, false);
	load498_var->setAlignment(2);
	Value* cast499_var = builder.CreateCast(Instruction::ZExt, load498_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block109);
	ArrayRef<Value*> gep500_array { gep4_val4_int, cast475_var, gep4_val6_int, gep4_val6_int, switch9_val10_int, };
	Value* gep500_var = builder.CreateInBoundsGEP(globals[5], gep500_array);
	llvm::LoadInst* load501_var = builder.CreateLoad(gep500_var, false);
	load501_var->setAlignment(8);
	Value* binop502_var = BinaryOperator::Create(Instruction::Add, load501_var, binop495_var, "", builder.GetInsertBlock());
	ArrayRef<Value*> gep503_array { binop502_var, };
	Value* gep503_var = builder.CreateInBoundsGEP(cast478_var, gep503_array);
	llvm::LoadInst* load504_var = builder.CreateLoad(gep503_var, false);
	load504_var->setAlignment(1);
	Value* cast505_var = builder.CreateCast(Instruction::ZExt, load504_var, types[0]);
	builder.CreateBr(block111);
	
	builder.SetInsertPoint(block110);
	CallInst* call506_var = builder.CreateCall(globals[6], gep51_var);
	call506_var->setTailCall();
	call506_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block111);
	PHINode* phi507_var = builder.CreatePHI(types[0], 4);
	Value* binop508_var = BinaryOperator::Create(Instruction::Add, phi507_var, phi471_var, "", builder.GetInsertBlock());
	builder.CreateBr(block112);
	
	builder.SetInsertPoint(block112);
	PHINode* phi509_var = builder.CreatePHI(types[0], 2);
	CallInst* call510_var = builder.CreateCall3(globals[14], phi509_var, cast351_var, binop342_var);
	call510_var->setTailCall();
	builder.CreateBr(block114);
	
	builder.SetInsertPoint(block113);
	ArrayRef<Value*> gep512_array { gep4_val4_int, gep4_val4_int, };
	Value* gep512_var = builder.CreateInBoundsGEP(globals[15], gep512_array);
	CallInst* call512_var = builder.CreateCall(globals[6], gep512_var);
	call512_var->setTailCall();
	call512_var->setDoesNotReturn();
	builder.CreateUnreachable();
	
	builder.SetInsertPoint(block114);
	phi89_var->addIncoming(gep4_val4_int, block9);
	phi89_var->addIncoming(load66_var, block11);
	phi89_var->addIncoming(cast74_var, block13);
	phi89_var->addIncoming(cast81_var, block15);
	phi89_var->addIncoming(cast87_var, block16);
	
	phi125_var->addIncoming(load102_var, block20);
	phi125_var->addIncoming(cast110_var, block22);
	phi125_var->addIncoming(cast117_var, block24);
	phi125_var->addIncoming(cast123_var, block25);
	
	phi131_var->addIncoming(binop130_var, block27);
	phi131_var->addIncoming(phi89_var, block18);
	
	phi167_var->addIncoming(load144_var, block30);
	phi167_var->addIncoming(cast152_var, block32);
	phi167_var->addIncoming(cast159_var, block34);
	phi167_var->addIncoming(cast165_var, block35);
	
	phi169_var->addIncoming(binop168_var, block37);
	phi169_var->addIncoming(phi131_var, block28);
	
	phi178_var->addIncoming(call173_var, block38);
	phi178_var->addIncoming(load24_var, block2);
	phi178_var->addIncoming(cast33_var, block4);
	phi178_var->addIncoming(cast43_var, block6);
	phi178_var->addIncoming(cast49_var, block7);
	
	phi253_var->addIncoming(gep4_val4_int, block50);
	phi253_var->addIncoming(load230_var, block52);
	phi253_var->addIncoming(cast238_var, block54);
	phi253_var->addIncoming(cast245_var, block56);
	phi253_var->addIncoming(cast251_var, block57);
	
	phi289_var->addIncoming(load266_var, block61);
	phi289_var->addIncoming(cast274_var, block63);
	phi289_var->addIncoming(cast281_var, block65);
	phi289_var->addIncoming(cast287_var, block66);
	
	phi295_var->addIncoming(binop294_var, block68);
	phi295_var->addIncoming(phi253_var, block59);
	
	phi331_var->addIncoming(load308_var, block71);
	phi331_var->addIncoming(cast316_var, block73);
	phi331_var->addIncoming(cast323_var, block75);
	phi331_var->addIncoming(cast329_var, block76);
	
	phi333_var->addIncoming(binop332_var, block78);
	phi333_var->addIncoming(phi295_var, block69);
	
	phi341_var->addIncoming(call337_var, block79);
	phi341_var->addIncoming(load183_var, block41);
	phi341_var->addIncoming(load195_var, block43);
	phi341_var->addIncoming(cast203_var, block45);
	phi341_var->addIncoming(cast210_var, block47);
	phi341_var->addIncoming(cast216_var, block48);
	
	phi429_var->addIncoming(gep4_val4_int, block83);
	phi429_var->addIncoming(load406_var, block85);
	phi429_var->addIncoming(cast414_var, block87);
	phi429_var->addIncoming(cast421_var, block89);
	phi429_var->addIncoming(cast427_var, block90);
	
	phi465_var->addIncoming(load442_var, block94);
	phi465_var->addIncoming(cast450_var, block96);
	phi465_var->addIncoming(cast457_var, block98);
	phi465_var->addIncoming(cast463_var, block99);
	
	phi471_var->addIncoming(binop470_var, block101);
	phi471_var->addIncoming(phi429_var, block92);
	
	phi507_var->addIncoming(load484_var, block104);
	phi507_var->addIncoming(cast492_var, block106);
	phi507_var->addIncoming(cast499_var, block108);
	phi507_var->addIncoming(cast505_var, block109);
	
	phi509_var->addIncoming(binop508_var, block111);
	phi509_var->addIncoming(phi471_var, block102);
	
	return;
}

void x86::x86_xorpd(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1243], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xorps(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1244], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xrelease(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1245], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xrstor(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1246], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xrstor64(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1247], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xsave(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1248], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xsave64(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1249], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xsaveopt(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1250], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xsaveopt64(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1251], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xsetbv(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1252], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xsha1(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1253], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xsha256(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1254], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xstore(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1255], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

void x86::x86_xtest(llvm::Value* arg0, llvm::Value* arg1, llvm::Value* arg2, llvm::Value* arg3)
{
	using namespace llvm;
	BasicBlock* block0 = builder.GetInsertBlock();
	Constant* gep5_val6_int = ConstantInt::get(types[0], 0u);
	ArrayRef<Value*> gep5_array { gep5_val6_int, gep5_val6_int, };
	Value* gep5_var = builder.CreateInBoundsGEP(globals[1256], gep5_array);
	CallInst* call4_var = builder.CreateCall2(globals[0], arg1, gep5_var);
	call4_var->setTailCall();
	call4_var->setDoesNotReturn();
	builder.CreateUnreachable();
}

#pragma clang diagnostic pop
